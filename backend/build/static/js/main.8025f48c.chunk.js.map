{"version":3,"sources":["img/logo.png","components/layout/ModalNotification.js","actions/types.js","services/users.js","actions/userActions.js","services/login.js","services/artists.js","services/albums.js","services/programs.js","services/reports.js","services/search.js","services/tracks.js","actions/loginActions.js","reducers/notificationReducer.js","components/user/LoggedInUserInfo.js","components/report/CurrentReport.js","components/layout/Navbar.js","components/layout/Footer.js","actions/reportActions.js","components/layout/Togglable.js","components/report/CreateNewReportForm.js","actions/reportsListActions.js","components/report/InProgressReportListItem.js","components/report/InProgressReportsList.js","components/layout/Notification.js","components/layout/Home.js","components/user/AddUserModal.js","components/user/EditUserModal.js","components/user/UserListItem.js","components/user/UserList.js","components/report/ReportFilterForm.js","components/report/FilterReportList.js","components/report/ReportListItem.js","components/report/ReportList.js","components/program/EditProgramModal.js","actions/programActions.js","components/program/MergePrograms.js","components/program/ProgramListItem.js","components/program/AddProgramModal.js","components/program/ProgramList.js","actions/albumActions.js","components/artist/MergeAlbumsModal.js","components/artist/AlbumsByArtistItem.js","components/artist/AlbumsByArtist.js","components/artist/ArtistDetailsForm.js","actions/artistActions.js","components/artist/ArtistDetails.js","components/album/AlbumDetailsForm.js","actions/trackActions.js","components/album/MergeAlbumTracksModal.js","components/album/TracksInAnAlbumItem.js","components/album/TracksInAnAlbum.js","components/album/AlbumDetails.js","components/track/ChangeAlbumModal.js","hooks/changeAlbumOptionsHook.js","components/track/ChangeArtistModal.js","hooks/changeArtistOptionsHook.js","components/track/TrackDetailsForm.js","components/track/PlayHistoryItem.js","components/track/PlayHistory.js","components/track/TrackDetails.js","components/login/LoginForm.js","components/report/ReportTransferOptions.js","actions/reportTransferActions.js","components/report/ReportTransferListItem.js","components/report/ReportTransferList.js","actions/searchActions.js","components/search/AddTrackBtn.js","components/search/SearchForm.js","components/search/MergeArtists.js","components/search/MergeAlbums.js","components/search/MergeTracks.js","components/track/AddToCurrentReport.js","components/search/SearchResultItem.js","components/search/SortResults.js","components/search/SearchResults.js","components/search/Search.js","components/top100/Top100SearchForm.js","components/top100/Top100List.js","components/track/EditTrackModal.js","components/report/ReportWithTracksItem.js","components/track/AddTrackModal.js","components/track/SearchTrack.js","hooks/searchTracksHook.js","components/track/GetDjOnlineTracks.js","components/report/ReportDetails.js","components/report/ReportWithTracks.js","App.js","reducers/artistReducer.js","reducers/albumReducer.js","reducers/trackReducer.js","reducers/loginReducer.js","reducers/reportReducer.js","reducers/userReducer.js","reducers/reportsListReducer.js","reducers/programReducer.js","reducers/searchReducer.js","store.js","index.js"],"names":["module","exports","connectedModalNotification","connect","state","notification","message","type","style","color","SET_LOADING","token","getAll","a","config","headers","Authorization","axios","get","req","data","setToken","newToken","createUser","userToAdd","post","request","updateUser","userToUpdate","put","id","response","deleteUser","delete","dispatch","userService","updated","users","console","log","login","credentials","res","getOneArtist","getAlbumsByArtist","updateArtist","artistToUpdate","getOneAlbum","getTracklistOfAlbum","updateAlbum","albumToUpdate","getAllActive","getOne","createProgram","newProgram","updateProgram","updatedProgram","mergePrograms","mergeParams","download","require","getAllByDate","date","getAllByDateByUser","user","getAllInProgress","getAllTransfers","addTrackToReport","trackToAdd","deleteTrackFromReport","deleteReport","updateSortableRank","remainingTracks","forEach","track","index","trackToUpdate","sortable_rank","report_track_id","getReportDetails","createReport","newReport","updateReport","updatedReport","generateReportDownload","params","responseType","downloadReport","filename","getTracksForSearch","query","getCatIdFromDiscogs","artist","album","process","getTop100","list","start_date","end_date","advancedSearch","searchParams","kind","merge","changeArtistOptions","changeAlbumOptions","checkDjonlineTracks","studioId","prop","tracks","arr","push","reverse","newArr","hours","charAt","parseInt","length","split","seconds","startTime","endTime","album_name","artist_name","cat_id","matrix","disc_no","side","track_no","tracknumber","isrc","record_country","recording_country","country","play_time","djonline_id","label","track_title","song","year","report_id","newerArr","sortable_rank_start","returnArr","addNewTrack","addTrackToDb","updateTrack","updateAlbumId","updateArtistId","getOneTrack","getOneTrackHistory","logout","window","localStorage","removeItem","initialState","setNotification","content","setTimeout","notificationReducer","action","connectedLoggedInUserModal","updateCurrentUser","error","props","useState","modalOpen","setModalOpen","password","setPassword","confirmPassword","setConfirmPassword","first_name","firstName","setFirstName","last_name","lastName","setLastName","email","setEmail","handleClose","Modal","trigger","onClick","closeIcon","open","onClose","Header","Content","Form","onSubmit","Field","Input","focus","placeholder","onChange","e","target","value","defaultValue","Button","disabled","connectedCurrentReport","report","reportDetails","display","float","marginTop","marginRight","marginBottom","to","program_name","moment","program_date","format","program_start_time","slice","program_end_time","Icon","name","size","options","key","text","LoggedInUserInfo","icon","level","Menu","pointing","stackable","inverted","Item","link","Image","alt","src","logo","position","Dropdown","Footer","textAlign","Date","getFullYear","href","rel","getOneReport","reportService","Togglable","visible","setVisible","hideWhenVisible","showWhenVisible","toggleVisibility","buttonLabel","children","connectedCreateNewReportForm","reportsList","programs","program_id","new_program_name","user_id","programService","program","newReportWithNewProgram","programId","setProgramId","programNumber","setProgramNumber","dj","setDj","newProgramName","setNewProgramName","programDate","setProgramDate","programStartTime","setProgramStartTime","programEndTime","setProgramEndTime","redirect","setRedirect","programOptions","activePrograms","map","borderRadius","opacity","padding","Fragment","Grid","Column","Container","Popup","openOnFocus","selection","search","event","preventDefault","Group","widths","locale","fi","selected","dateFormat","program_no","program_dj","status","rerun","getAllReportsByDate","reports","getAllReportsByDateByUser","filterByUserId","filterByStatus","filterByText","connectedInProgressReportListItem","deleteInProgressReport","deletedReport","setOpen","loading","Dimmer","active","Loader","Table","Row","Cell","Confirm","onCancel","onConfirm","cancelButton","confirmButton","connectedInProgressReportsList","useEffect","inProgress","striped","Body","r","className","Message","floating","success","header","negative","connectedHome","divided","columns","connectedAddUserModal","newUser","username","setUsername","setLevel","setStatus","floated","Checkbox","checked","connectedEditUserModal","mapDispatchToProps","setCurrent","payload","deleted","connectedUser","userLevelOutPrint","userStatusOutPrint","last_seen","connectedUserList","connectedReportFilterForm","reportMonth","setReportMonth","reportYear","setReportYear","years","i","yearOptions","option","getReportsByMonth","connectedFilterReportList","userId","setUserId","filterText","setFilterText","userOptions","addAllToUserOptions","getUser","connectedReportListItem","reportStatusOutPrint","connectedReportList","reportListDate","reportListTimeDate","reportsToShow","filter","toLowerCase","includes","filterUserValue","filterStatusValue","connectedEditProgramModal","setName","identifier","setIdentifier","setDisplay","site","setSite","connectedMergePrograms","mergeAction","programToMerge","setProgramToMerge","handleOpen","mergeOptions","allPrograms","mergeTo","connectedProgramListItem","connectedAddProgramModal","createNewProgram","programToAdd","connectedProgramList","getAllPrograms","mergeAlbumFunction","searchService","albumService","tracklist","connectedMergeAlbumsModal","albumToMerge","setAlbumToMerge","albumList","album_id","AlbumsByArtistItem","track_count","report_occurrence","AlbumsByArtist","connectedArtistDetailsForm","artistService","updatedArtist","currentArtist","setArtist","spotify_id","spotifyId","setSpotifyId","connectedArtistDetails","connectedAlbumDetailsForm","updatedAlbum","currentAlbum","setLabel","catId","setCatId","setYear","artist_id","trackService","updatedTrack","mergeTrackFunction","history","connectedMergeAlbumTracksModal","trackToMerge","setTrackToMerge","track_id","TracksInAnAlbumItem","TracksInAnAlbum","connectedAlbumDetails","connectedChangeAlbumModal","changeAlbumId","inputText","setInputText","debouncedSearchTrack","useConstant","AwesomeDebouncePromise","useAsync","useChangeAlbumOptionsHook","albumToChange","setAlbumToChange","results","undefined","result","title","description","handleResultSelect","currentTrack","onResultSelect","onSearchChange","onSelectionChange","changedAlbum","connectedChangeArtistModal","changeArtistId","useChangeArtistOptionsHook","artistToChange","setArtistToChange","changedArtist","connectedTrackDetailsForm","setAlbum","setTrack","Math","floor","min","setMin","sec","setSec","setCountry","recordCountry","setRecordCountry","people","setPeople","discNo","setDiscNo","trackNo","setTrackNo","setIsrc","comment","setComment","replace","addToReport","trackToSave","required","cursor","fontSize","maxLength","TextArea","PlayHistoryItem","pgm","PlayHistory","playhistory","connectedTrackDetails","newLogin","loginService","setItem","JSON","stringify","handleLogin","trim","connectedReportTransferOptions","generateReportTransfer","transferredReport","pickerDate","setPickerDate","showMonthYearPicker","period","connectedReportTransferListItem","item","created_at","connectedReportTransferList","lastReport","reportTransferList","catno","clearDiscogsCatId","connectedAddTrackBtn","discogsCatId","saveAndAddToReport","getDiscogs","connectedSearchForm","searchString","setSearchString","searchTarget","setSearchTarget","connectedMergeArtists","mergeArtistFunction","updateArtistState","artistToMerge","setArtistToMerge","Array","from","Set","advancedResults","find","mergeInto","newName","connectedMergeAlbums","updateAlbumState","connectedMergeTracks","updateTrackState","connectedAddToCurrentReport","basic","SearchResultItem","connectedSortResult","sortAdvancedResults","sortBy","setSortBy","connectedSearchResults","resultsToShow","sort","b","connectedSearch","connectedTop100SearchForm","now","startDate","setStartDate","endDate","setEndDate","setList","disabledKeyboardNavigation","connectedTop100List","top100Query","top100","t","count","connectedEditTrackModal","removeCurrentTrack","trackToEdit","connectedReportWithTracksItem","deletedTrack","checkForDelete","unCheckForDelete","setChecked","minutes","toString","marginLeft","connectedAddTrackModal","connectedSearchTrack","getAutocompleteResults","setTrackToSave","useSearchTracksHook","connectedGetDjOnlineTracks","getDjonlineTracks","parseISO","setDate","setStudioId","setStartTime","setEndTime","connectedReportDetails","copyReport","reportDetailsToCopy","reportTracksToCopy","newTrack","setRerun","Segment","getRerun","horizontal","updatedReportDetails","connectedReportWithTracks","deleteChecked","idsToDelete","newOrder","dragState","setDragState","djonline","array","dragProps","onDragEnd","fromIndex","toIndex","splice","nodeSelector","handleSelector","this","indexOf","checkedForDelete","initializeUser","loggedUserJSON","getItem","parse","err","statusText","initializePrograms","initializeUsers","exact","path","component","Home","ReportList","ReportTransferList","render","match","ProgramList","Search","Top100List","UserList","artistReducer","albumReducer","trackReducer","loginReducer","editTrackId","reportReducer","current","userReducer","lastTransfer","reportListReducer","programReducer","searchResults","searchReducer","mergeAlbumTo","newAlbumName","filteredAlbums","renamedAlbums","removeMergedAlbums","newAlbumResults","mergeArtistTo","newArtistName","filteredArtists","renamedArtists","removeMergedArtists","newArtistResults","reducer","combineReducers","reportsListReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"6FAAAA,EAAOC,QAAU,IAA0B,kC,6MC0B5BC,EALoBC,aANX,SAAAC,GACtB,MAAO,CACLC,aAAcD,EAAMC,gBAMtB,KAFiCF,EAlBT,SAAC,GAAsB,IAApBE,EAAmB,EAAnBA,aAC3B,OAA6B,OAAzBA,EAAaC,QACR,KAEiB,YAAtBD,EAAaE,KACR,0BAAMC,MAAO,CAAEC,MAAO,UAAYJ,EAAaC,SAE9B,SAAtBD,EAAaE,KACR,0BAAMC,MAAO,CAAEC,MAAO,QAAUJ,EAAaC,cADtD,K,uBC2EWI,EAAc,c,iBClFvBC,EAAQ,KA0CG,GAAEC,OApCL,uCAAG,8BAAAC,EAAA,6DACPC,EAAS,CACbC,QAAS,CAAEC,cAAeL,IAFf,SAIKM,IAAMC,IAZV,aAYuBJ,GAJxB,cAIPK,EAJO,yBAKNA,EAAIC,MALE,2CAAH,qDAoCaC,SAxCR,SAAAC,GACfX,EAAK,iBAAaW,IAuCeC,WA5BnB,uCAAG,WAAMC,GAAN,iBAAAX,EAAA,6DACXC,EAAS,CACbC,QAAS,CAAEC,cAAeL,IAFX,SAIKM,IAAMQ,KApBd,aAoB4BD,EAAWV,GAJpC,cAIXY,EAJW,yBAKVA,EAAQN,MALE,2CAAH,sDA4B+BO,WApB/B,uCAAG,WAAMC,GAAN,iBAAAf,EAAA,6DACXC,EAAS,CACbC,QAAS,CAAEC,cAAeL,IAFX,SAIMM,IAAMY,IAAN,UA5BT,aA4BS,YACPD,EAAaE,IAC3BF,EACAd,GAPe,cAIXiB,EAJW,yBASVA,EAASX,MATC,2CAAH,sDAoB2CY,WAR3C,uCAAG,WAAMF,GAAN,iBAAAjB,EAAA,6DACXC,EAAS,CACbC,QAAS,CAAEC,cAAeL,IAFX,SAIMM,IAAMgB,OAAN,UAxCT,aAwCS,YAA2BH,GAAMhB,GAJvC,cAIXiB,EAJW,yBAKVA,EAASX,MALC,2CAAH,uDCWHO,EAAa,SAAAC,GAAY,8CAAI,WAAMM,GAAN,iBAAArB,EAAA,sEAEtCqB,EAAS,CACP3B,KAAMG,IAH8B,SAKhByB,EAAYR,WAAWC,GALP,cAKhCQ,EALgC,gBAMlBD,EAAYvB,SANM,OAMhCyB,EANgC,OAOtCC,QAAQC,IAAIH,GACZF,EAAS,CACP3B,KF9CqB,cE+CrBa,KAAMiB,IAV8B,kDAatCC,QAAQC,IAAR,MAbsC,0DAAJ,uDCxCvB,GAAEC,MALN,uCAAG,WAAMC,GAAN,eAAA5B,EAAA,sEACMI,IAAMQ,KAHV,aAGwBgB,GAD1B,cACNC,EADM,yBAELA,EAAItB,MAFC,2CAAH,uDCAPT,EAAQ,KAONgC,EAAY,uCAAG,WAAMb,GAAN,iBAAAjB,EAAA,6DACbC,EAAS,CACbC,QAAS,CAAEC,cAAeL,IAFT,SAIIM,IAAMC,IAAN,UAbT,eAaS,oBAAgCY,GAAMhB,GAJ1C,cAIbiB,EAJa,yBAKZA,EAASX,MALG,2CAAH,sDAQZwB,EAAiB,uCAAG,WAAMd,GAAN,iBAAAjB,EAAA,6DAClBC,EAAS,CACbC,QAAS,CAAEC,cAAeL,IAFJ,SAIDM,IAAMC,IAAN,UArBT,eAqBS,qBAAiCY,GAAMhB,GAJtC,cAIlBiB,EAJkB,yBAKjBA,EAASX,MALQ,2CAAH,sDAsBR,GACbC,SApCe,SAAAC,GACfX,EAAK,iBAAaW,IAoClBuB,aAhBgB,uCAAG,WAAMC,GAAN,iBAAAjC,EAAA,6DACbC,EAAS,CACbC,QAAS,CAAEC,cAAeL,IAE5B2B,QAAQC,IAAI,8BAA+BO,GAJxB,SAKI7B,IAAMY,IAAN,UA9BT,eA8BS,oBACCiB,EAAehB,IACrCgB,EACAhC,GARiB,cAKbiB,EALa,OAUnBO,QAAQC,IAAIR,EAASX,MAVF,kBAWZW,EAASX,MAXG,2CAAH,sDAiBhBuB,eACAC,qBCzCEjC,EAAQ,KAMNoC,EAAW,uCAAG,WAAMjB,GAAN,iBAAAjB,EAAA,6DACZC,EAAS,CACbC,QAAS,CAAEC,cAAeL,IAFV,SAIKM,IAAMC,IAAN,UAZT,cAYS,yBAAqCY,GAAMhB,GAJhD,cAIZiB,EAJY,yBAKXA,EAASX,MALE,2CAAH,sDAQX4B,EAAmB,uCAAG,WAAMlB,GAAN,iBAAAjB,EAAA,6DACpBC,EAAS,CACbC,QAAS,CAAEC,cAAeL,IAFF,SAIHM,IAAMC,IAAN,UApBT,cAoBS,sBAAkCY,GAAMhB,GAJrC,cAIpBiB,EAJoB,yBAKnBA,EAASX,MALU,2CAAH,sDAuBV,GACbC,SApCe,SAAAC,GACfX,EAAK,iBAAaW,IAoClB2B,YAjBe,uCAAG,WAAMC,GAAN,iBAAArC,EAAA,6DACZC,EAAS,CACbC,QAAS,CAAEC,cAAeL,IAE5B2B,QAAQC,IAAI,6BAA8BW,GAC1CZ,QAAQC,IAAI,kBAAmBW,GALb,SAMKjC,IAAMY,IAAN,UA9BT,cA8BS,yBACMqB,EAAcpB,IACzCoB,EACApC,GATgB,cAMZiB,EANY,OAWlBO,QAAQC,IAAIR,EAASX,MAXH,kBAYXW,EAASX,MAZE,2CAAH,sDAkBf2B,cACAC,uBCzCErC,EAAQ,KA4DG,GACbwC,aAtDgB,uCAAG,8BAAAtC,EAAA,6DACbC,EAAS,CACbC,QAAS,CAAEC,cAAeL,IAFT,SAIDM,IAAMC,IAAN,UAbJ,gBAaI,WAA+BJ,GAJ9B,cAIbK,EAJa,yBAKZA,EAAIC,MALQ,2CAAH,qDAuDhBR,OA9CU,uCAAG,8BAAAC,EAAA,6DACPC,EAAS,CACbC,QAAS,CAAEC,cAAeL,IAFf,SAIKM,IAAMC,IAAN,UAtBJ,gBAsBI,QAA4BJ,GAJjC,cAIPK,EAJO,yBAKNA,EAAIC,MALE,2CAAH,qDA+CVgC,OAtCU,uCAAG,WAAMtB,GAAN,iBAAAjB,EAAA,6DACPC,EAAS,CACbC,QAAS,CAAEC,cAAeL,IAE5B2B,QAAQC,IAAI,iBAAkBT,GAJjB,SAKSb,IAAMC,IAAN,UAhCR,gBAgCQ,mBAA+BY,GAAMhB,GAL9C,cAKPY,EALO,OAMbY,QAAQC,IAAI,sCAAuCb,EAAQN,MAN9C,kBAONM,EAAQN,MAPF,2CAAH,sDAuCViC,cA7BiB,uCAAG,WAAMC,GAAN,iBAAAzC,EAAA,6DACdC,EAAS,CACbC,QAAS,CAAEC,cAAeL,IAFR,SAIEM,IAAMQ,KAzCd,gBAyC4B6B,EAAYxC,GAJlC,cAIdY,EAJc,yBAKbA,EAAQN,MALK,2CAAH,sDA8BjBmC,cAtBiB,uCAAG,WAAMC,GAAN,iBAAA3C,EAAA,6DACdC,EAAS,CACbC,QAAS,CAAEC,cAAeL,IAFR,SAIEM,IAAMY,IAAN,UAjDR,gBAiDQ,WAA+B2B,EAAgB1C,GAJjD,cAIdY,EAJc,yBAKbA,EAAQN,MALK,2CAAH,sDAuBjBqC,cAfiB,uCAAG,WAAMC,GAAN,iBAAA7C,EAAA,6DACdC,EAAS,CACbC,QAAS,CAAEC,cAAeL,IAE5B2B,QAAQC,IAAImB,GAJQ,SAKEzC,IAAMY,IAAN,UA1DR,gBA0DQ,UAA8B6B,EAAa5C,GAL7C,cAKdY,EALc,yBAMbA,EAAQN,MANK,2CAAH,sDAgBjBC,SAjEe,SAAAC,GACfX,EAAK,iBAAaW,KCJdqC,EAAWC,EAAQ,KAErBjD,EAAQ,KAONkD,EAAY,uCAAG,WAAMC,GAAN,iBAAAjD,EAAA,6DACbC,EAAS,CACbC,QAAS,CAAEC,cAAeL,IAG5B2B,QAAQC,IAAI,uBAAwBuB,GALjB,SAOG7C,IAAMC,IAAN,gCAAmC4C,GAAQhD,GAP9C,cAObY,EAPa,OAQnBY,QAAQC,IAAI,0CAA2Cb,EAAQN,MAR5C,kBASZM,EAAQN,MATI,2CAAH,sDAaZ2C,EAAkB,uCAAG,WAAOD,EAAME,GAAb,iBAAAnD,EAAA,6DACnBC,EAAS,CACbC,QAAS,CAAEC,cAAeL,IAG5B2B,QAAQC,IAAI,uBAAwBuB,EAAM,WAAYE,GAL7B,SAOH/C,IAAMC,IAAN,oCACS4C,EADT,iBACsBE,GAC1ClD,GATuB,cAOnBY,EAPmB,OAWzBY,QAAQC,IAAI,0CAA2Cb,EAAQN,MAXtC,kBAYlBM,EAAQN,MAZU,2CAAH,wDAgBlB6C,EAAgB,uCAAG,WAAMnC,GAAN,iBAAAjB,EAAA,6DACjBC,EAAS,CACbC,QAAS,CAAEC,cAAeL,IAG5B2B,QAAQC,IAAI,0BAA2BT,GALhB,SAODb,IAAMC,IAAN,gCAAmCY,GAAMhB,GAPxC,cAOjBY,EAPiB,OAQvBY,QAAQC,IAAI,+CAAgDb,EAAQN,MAR7C,kBAShBM,EAAQN,MATQ,2CAAH,sDAchBgC,EAAM,uCAAG,WAAMtB,GAAN,iBAAAjB,EAAA,6DACPC,EAAS,CACbC,QAAS,CAAEC,cAAeL,IAE5B2B,QAAQC,IAAI,gBAAiBT,GAJhB,SAKSb,IAAMC,IAAN,UA1DR,eA0DQ,YAAwBY,GAAMhB,GALvC,cAKPY,EALO,OAMbY,QAAQC,IAAI,0CAA2Cb,EAAQN,MANlD,kBAONM,EAAQN,MAPF,2CAAH,sDAUN8C,EAAe,uCAAG,8BAAArD,EAAA,6DAChBC,EAAS,CACbC,QAAS,CAAEC,cAAeL,IAFN,SAIAM,IAAMC,IAAI,sBAAuBJ,GAJjC,cAIhBY,EAJgB,OAKtBY,QAAQC,IAAI,uCAAwCb,EAAQN,MALtC,kBAMfM,EAAQN,MANO,2CAAH,qDASf+C,EAAgB,uCAAG,WAAMC,GAAN,iBAAAvD,EAAA,6DACjBC,EAAS,CACbC,QAAS,CAAEC,cAAeL,IAFL,SAIDM,IAAMQ,KAAN,UA5ER,gBA4EiC2C,EAAYtD,GAJpC,cAIjBY,EAJiB,OAKvBY,QAAQC,IAAI,oCAAqCb,EAAQN,MALlC,kBAMhBM,EAAQN,MANQ,2CAAH,sDAShBiD,EAAqB,uCAAG,WAAMvC,GAAN,iBAAAjB,EAAA,6DACtBC,EAAS,CACbC,QAAS,CAAEC,cAAeL,IAFA,SAINM,IAAMgB,OAAN,UArFR,eAqFQ,YAA2BH,GAAMhB,GAJ3B,cAItBY,EAJsB,yBAKrBA,EAAQN,MALa,2CAAH,sDAQrBkD,EAAY,uCAAG,WAAMxC,GAAN,iBAAAjB,EAAA,6DACbC,EAAS,CACbC,QAAS,CAAEC,cAAeL,IAFT,SAKGM,IAAMgB,OAAN,2BAAiCH,GAAMhB,GAL1C,cAKbY,EALa,yBAMZA,EAAQN,MANI,2CAAH,sDASZmD,EAAkB,uCAAG,WAAMC,GAAN,eAAA3D,EAAA,sDACnBC,EAAS,CACbC,QAAS,CAAEC,cAAeL,IAE5B6D,EAAgBC,QAAhB,uCAAwB,WAAOC,EAAOC,GAAd,iBAAA9D,EAAA,6DAChB+D,EAAgB,CACpBC,cAAeF,EAAQ,GAFH,SAIA1D,IAAMY,IAAN,UA1GV,eA0GU,YACN6C,EAAMI,iBACpBF,EACA9D,GAPoB,cAIhBY,EAJgB,yBASfA,EAAQN,MATO,2CAAxB,yDAJyB,2CAAH,sDAiBlB2D,EAAgB,uCAAG,WAAMjD,GAAN,iBAAAjB,EAAA,6DACjBC,EAAS,CACbC,QAAS,CAAEC,cAAeL,IAE5B2B,QAAQC,IAAI,wBAAyBT,GAJd,SAKDb,IAAMC,IAAN,qCAAwCY,GAAMhB,GAL7C,cAKjBY,EALiB,OAMvBY,QAAQC,IAAI,4CAA6Cb,EAAQN,MAN1C,kBAOhBM,EAAQN,MAPQ,2CAAH,sDAWhB4D,EAAY,uCAAG,WAAMC,GAAN,iBAAApE,EAAA,6DACbC,EAAS,CACbC,QAAS,CAAEC,cAAeL,IAFT,SAKIM,IAAMQ,KAAK,qBAAsBwD,EAAWnE,GALhD,cAKbiB,EALa,OAMnBO,QAAQC,IAAIR,EAASX,MANF,kBAOZW,EAASX,MAPG,2CAAH,sDAWZ8D,EAAY,uCAAG,WAAMC,GAAN,iBAAAtE,EAAA,6DACbC,EAAS,CACbC,QAAS,CAAEC,cAAeL,IAG5B2B,QAAQC,IAAI,iCAAkC4C,GACxCzD,EAAUT,IAAMY,IAAN,oCACesD,EAAcrD,IAC3CqD,EACArE,GAEFwB,QAAQC,IAAIb,EAAQN,MAXD,kBAYZ+D,GAZY,2CAAH,sDAgBLC,EAAsB,uCAAG,WAAMC,GAAN,iBAAAxE,EAAA,sEAE5BC,EAAS,CACbC,QAAS,CAAEC,cAAeL,EAAO2E,aAAc,SAHf,SAKZrE,IAAMQ,KAAK,sBAAuB4D,EAAQvE,GAL9B,cAK5BY,EAL4B,yBAM3BA,EAAQN,MANmB,gCAQlCkB,QAAQC,IAAR,MARkC,yDAAH,sDAatBgD,EAAc,uCAAG,WAAMC,GAAN,iBAAA3E,EAAA,sEAEpBC,EAAS,CACbC,QAAS,CAAEC,cAAeL,EAAO2E,aAAc,SAHvB,SAKHrE,IAAMC,IAAN,8BAAiCsE,GAAY1E,GAL1C,OAKpBiB,EALoB,OAM1B4B,EAAS5B,EAASX,KAAMoE,GANE,gDAQ1BlD,QAAQC,IAAR,MAR0B,yDAAH,sDAYZ,GACblB,SA9Ke,SAAAC,GACfX,EAAK,iBAAaW,IA8KlB6C,mBACAE,wBACAC,eACAC,qBACAnB,SACAS,eACAE,qBACAE,mBACAC,kBACAa,mBACAC,eACAE,eACAE,yBACAG,kBC/LE5E,EAAQ,KAMN8E,EAAkB,uCAAG,WAAMC,GAAN,iBAAA7E,EAAA,6DACnBC,EAAS,CACbC,QAAS,CAAEC,cAAeL,IAG5B2B,QAAQC,IAAI,4BAA6BmD,GALhB,SAMHzE,IAAMC,IAAN,UAdR,cAcQ,yBAAqCwE,GAAS5E,GAN3C,cAMnBY,EANmB,OAOzBY,QAAQC,IAAI,kDAAmDb,EAAQN,MAP9C,kBAQlBM,EAAQN,MARU,2CAAH,sDAWlBuE,EAAmB,uCAAG,WAAMD,GAAN,eAAA7E,EAAA,sEACJI,IAAMC,IAAN,yDAC8BwE,EAAME,OADpC,0BAC4DF,EAAMG,MADlE,kBACiFC,6CAF7E,cACpBpE,EADoB,yBAInBA,EAAQN,MAJW,2CAAH,sDAOnB2E,EAAS,uCAAG,WAAML,GAAN,iBAAA7E,EAAA,6DACVC,EAAS,CACbC,QAAS,CAAEC,cAAeL,IAFZ,SAIMM,IAAMC,IAAN,2BACAwE,EAAMM,KADN,uBACyBN,EAAMO,WAD/B,qBACsDP,EAAMQ,UAChFpF,GANc,cAIVY,EAJU,yBAQTA,EAAQN,MARC,2CAAH,sDA+CA,GACbC,SAtEe,SAAAC,GACfX,EAAK,iBAAaW,IAsElBmE,qBACAU,eAvCkB,uCAAG,WAAMC,GAAN,iBAAAvF,EAAA,6DACfC,EAAS,CACbC,QAAS,CAAEC,cAAeL,IAFP,SAICM,IAAMC,IAAN,UAzCR,cAyCQ,0BACQkF,EAAaC,KADrB,kBACmCD,EAAaV,OACpE5E,GANmB,cAIfY,EAJe,yBAQdA,EAAQN,MARM,2CAAH,sDAwClBuE,sBACAI,YACAO,MA/BS,uCAAG,WAAM5C,GAAN,iBAAA7C,EAAA,6DACNC,EAAS,CACbC,QAAS,CAAEC,cAAeL,IAE5B2B,QAAQC,IAAImB,GAJA,SAKUzC,IAAMY,IAAN,UArDR,cAqDQ,aAAiC6B,EAAa5C,GALxD,cAKNY,EALM,yBAMLA,EAAQN,MANH,2CAAH,sDAgCTmF,oBAvBuB,uCAAG,WAAMb,GAAN,iBAAA7E,EAAA,6DACpBC,EAAS,CACbC,QAAS,CAAEC,cAAeL,IAFF,SAIJM,IAAMC,IAAN,UA7DR,cA6DQ,yBAAqCwE,GAAS5E,GAJ1C,cAIpBY,EAJoB,yBAKnBA,EAAQN,MALW,2CAAH,sDAwBvBoF,mBAhBsB,uCAAG,WAAMd,GAAN,iBAAA7E,EAAA,6DACnBC,EAAS,CACbC,QAAS,CAAEC,cAAeL,IAFH,SAIHM,IAAMC,IAAN,UArER,cAqEQ,wBAAoCwE,GAAS5E,GAJ1C,cAInBY,EAJmB,yBAKlBA,EAAQN,MALU,2CAAH,uD,ukBCjExB,IAEIT,GAAQ,KAMN8F,GAAmB,uCAAG,WAAML,GAAN,2BAAAvF,EAAA,sEAELI,IAAMC,IAAN,UAChB4E,8CADgB,eACwBM,EAAaM,SADrC,iBACsDN,EAAatC,OAH9D,OAM1B,IAAW6C,KAJLC,EAFoB,OAKtBC,EAAM,GACSD,EAAOxF,KACxByF,EAAIC,KAAKF,EAAOxF,KAAKuF,IAPG,OAS1BE,EAAMA,EAAIE,UACNC,EAAS,GACbH,EAAIpC,SAAQ,SAACC,EAAOC,GAClB,IAAIsC,EAAQvC,EAAMZ,KAAKoD,OAAO,IAAMxC,EAAMZ,KAAKoD,OAAO,IACtDD,EAAQE,SAASF,GACjB,IAAIpG,EAAI6D,EAAM0C,OAAOC,MAAM,KAC3B/E,QAAQC,IAAI,sCAAuC1B,GACnD,IAAIyG,EAA2B,GAAjBH,SAAStG,EAAE,IAAWsG,SAAStG,EAAE,IAC/CyB,QAAQC,IAAI,iCAAkC+E,GAG5CL,EAAQE,SAASf,EAAamB,YAC9BN,GAASE,SAASf,EAAaoB,UAIjCR,EAAOF,KAAK,CACVW,WAAY/C,EAAMmB,MAClB6B,YAAahD,EAAMkB,OACnB+B,OAAQjD,EAAMkD,OACdC,QAASnD,EAAMoD,KACfC,SAAUrD,EAAMsD,YAChBC,KAAMvD,EAAMuD,KACZC,eAAgBxD,EAAMyD,kBACtBC,QAAS,KACTC,UAAW3D,EAAMZ,KACjBwE,YAAa5D,EAAM5C,GACnByG,MAAO7D,EAAM6D,MACbnB,OAAQE,EACRkB,YAAa9D,EAAM+D,KACnBC,KAAMhE,EAAMgE,KAEZC,UAAWvC,EAAauC,eAGtB7H,EAAS,CACbC,QAAS,CAAEC,cAAeL,KAE5B2B,QAAQC,IAAI,mCAAoCyE,GAC1C4B,EAAW,GACjB5B,EAAOvC,SAAQ,SAACC,EAAOC,GACrBiE,EAAS9B,KAAT,MACKpC,EADL,CAEEG,cAAeuB,EAAayC,oBAAsBlE,EAAQ,QAG1DmE,EAAY,GAChBxG,QAAQC,IAAI,yCAA0CqG,GACtDA,EAASnE,QAAT,uCAAiB,WAAMC,GAAN,eAAA7D,EAAA,sEACOI,IAAMQ,KAAN,UAlEV,cAkEU,aAAkCiD,EAAO5D,GADhD,OACTY,EADS,OAEfoH,EAAUhC,KAAKpF,EAAQN,MAFR,2CAAjB,uDAIAkB,QAAQC,IAAI,8BAA+BuG,GA7DjB,kBA8DnBA,GA9DmB,4CAAH,sDAkEnBC,GAAW,uCAAG,WAAM3E,GAAN,iBAAAvD,EAAA,6DACZC,EAAS,CACbC,QAAS,CAAEC,cAAeL,KAFV,SAIKM,IAAMQ,KAAN,UA9ET,cA8ES,iBAErB2C,EACAtD,GAPgB,cAIZiB,EAJY,OASlBO,QAAQC,IAAIR,EAASX,MATH,kBAUXW,EAASX,MAVE,2CAAH,sDAcX4H,GAAY,uCAAG,WAAM5E,GAAN,iBAAAvD,EAAA,6DACbC,EAAS,CACbC,QAAS,CAAEC,cAAeL,KAFT,SAIIM,IAAMQ,KAAN,UA5FT,cA4FS,YAAiC2C,EAAYtD,GAJjD,cAIbiB,EAJa,OAKnBO,QAAQC,IAAIR,EAASX,MALF,kBAMZW,EAASX,MANG,2CAAH,sDASZ6H,GAAW,uCAAG,WAAMrE,GAAN,iBAAA/D,EAAA,6DACZC,EAAS,CACbC,QAAS,CAAEC,cAAeL,KAE5B2B,QAAQC,IAAI,8BAA+BqC,GAJzB,SAKK3D,IAAMY,IAtGf,cAsG4B+C,EAAe9D,GALvC,cAKZiB,EALY,OAMlBO,QAAQC,IAAIR,EAASX,MANH,kBAOXW,EAASX,MAPE,2CAAH,sDAUX8H,GAAa,uCAAG,WAAMhG,GAAN,iBAAArC,EAAA,6DACdC,EAAS,CACbC,QAAS,CAAEC,cAAeL,KAFR,SAIGM,IAAMY,IAAN,0BAErBqB,EACApC,GAPkB,cAIdiB,EAJc,yBASbA,EAASX,MATI,2CAAH,sDAYb+H,GAAc,uCAAG,WAAMrG,GAAN,iBAAAjC,EAAA,6DACfC,EAAS,CACbC,QAAS,CAAEC,cAAeL,KAFP,SAIEM,IAAMY,IAAN,2BAErBiB,EACAhC,GAPmB,cAIfiB,EAJe,yBASdA,EAASX,MATK,2CAAH,sDA4BL,IACbC,SAhJe,SAAAC,GACfX,GAAK,iBAAaW,IAgJlBmF,uBACAsC,eACAE,eACAG,YArBe,uCAAG,WAAMtH,GAAN,iBAAAjB,EAAA,6DACZC,EAAS,CACbC,QAAS,CAAEC,cAAeL,KAFV,SAIKM,IAAMC,IAAN,UAvIT,cAuIS,oBAAgCY,GAAMhB,GAJ3C,cAIZiB,EAJY,yBAKXA,EAASX,MALE,2CAAH,sDAsBfiI,mBAdsB,uCAAG,WAAMvH,GAAN,iBAAAjB,EAAA,6DACnBC,EAAS,CACbC,QAAS,CAAEC,cAAeL,KAFH,SAIFM,IAAMC,IAAN,UA/IT,cA+IS,oBAAgCY,GAAMhB,GAJpC,cAInBiB,EAJmB,yBAKlBA,EAASX,MALS,2CAAH,sDAetB8H,iBACAC,kBACAH,iBCrEWM,GAAS,yDAAM,WAAMpH,GAAN,SAAArB,EAAA,sDAC1B0I,OAAOC,aAAaC,WAAW,cAC/BvH,EAAS,CACP3B,KVxFkB,WUqFM,2CAAN,uDCxFhBmJ,GAAe,CACnBpJ,QAAS,KACTC,KAAM,MAkBKoJ,GAAkB,SAACrJ,EAASC,GACvC+B,QAAQC,IAAIjC,GACZgC,QAAQC,IAAIhC,GACZ,IAAMqJ,EAAU,CACdtJ,UACAC,QAEF,8CAAO,WAAM2B,GAAN,SAAArB,EAAA,sDACLqB,EAAS,CACP3B,KAAM,mBACNa,KAAMwI,IAERC,YAAW,WACT3H,EAAS,CACP3B,KAAM,yBAEP,KATE,2CAAP,mDAAM,IA4COuJ,GAlEa,WAAmC,IAAlC1J,EAAiC,uDAAzBsJ,GAAcK,EAAW,uCAG5D,OAFAzH,QAAQC,IAAI,SAAUwH,GACtBzH,QAAQC,IAAInC,GACJ2J,EAAOxJ,MACb,IAAK,mBACH,OAAOwJ,EAAO3I,KAEhB,IAAK,qBACH,OAAOsI,GAET,QACE,OAAOtJ,I,kDC4HE4J,GALoB7J,aAPX,SAAAC,GAEtB,OADAkC,QAAQC,IAAI,YAAanC,GAClB,CACLoC,MAAOpC,EAAMoC,SAMf,CAAEmH,mBAAiBhI,aAAYsI,kBF5DA,SAAArI,GAAY,8CAAI,WAAMM,GAAN,SAAArB,EAAA,sDAC/C,IACEqB,EAAS,CACP3B,KVpE6B,sBUqE7Ba,KAAMQ,IAER,MAAOsI,GACP5H,QAAQC,IAAI2H,GAPiC,2CAAJ,wDE0DV/J,EA/HT,SAAAgK,GAAU,IAAD,EACCC,oBAAS,GADV,mBAC1BC,EAD0B,KACfC,EADe,OAEDF,mBAAS,IAFR,mBAE1BG,EAF0B,KAEhBC,EAFgB,OAGaJ,mBAAS,IAHtB,mBAG1BK,EAH0B,KAGTC,EAHS,OAICN,mBAASD,EAAM3H,MAAMmI,YAJtB,mBAI1BC,EAJ0B,KAIfC,EAJe,OAKDT,mBAASD,EAAM3H,MAAMsI,WALpB,mBAK1BC,EAL0B,KAKhBC,EALgB,OAMPZ,mBAASD,EAAM3H,MAAMyI,OANd,mBAM1BA,EAN0B,KAMnBC,EANmB,KAW3BC,EAAc,WAClBb,GAAa,IAkCf,OACE,kBAACc,GAAA,EAAD,CACEC,QAAS,0BAAMC,QAxCA,WACjBhB,GAAa,KAuCF,eACTiB,WAAS,EACTC,KAAMnB,EACNoB,QAASN,GAET,kBAACO,GAAA,EAAD,CAAQ9B,QAAQ,oBAChB,kBAACwB,GAAA,EAAMO,QAAP,KACE,kBAACC,GAAA,EAAD,CAAMC,SAxCY,WACtB,GAAwB,IAApBtB,EAASnD,QAA2C,IAA3BqD,EAAgBrD,OAAc,CACzD,IAAMxF,EAAe,CACnBE,GAAIqI,EAAM3H,MAAMV,GAChB6I,WAAYC,EACZE,UAAWC,EACXE,SAEF3I,QAAQC,IAAI,eAAgBX,GAC5BuI,EAAMF,kBAAkBrI,GACxBuI,EAAMxI,WAAWC,GACjBuI,EAAMR,gBAAgB,6BAA2B,WACjDwB,SACK,GAAIZ,IAAaE,GAAmBF,EAASnD,QAAU,EAC5D+C,EAAMR,gBAAgB,sBAAuB,YACxC,CACL,IAAM/H,EAAe,CACnBE,GAAIqI,EAAM3H,MAAMV,GAChByI,WACAI,WAAYC,EACZE,UAAWC,EACXE,SAEF3I,QAAQC,IAAI,eAAgBX,GAC5BuJ,IACAhB,EAAMF,kBAAkBrI,GACxBuI,EAAMxI,WAAWC,GACjBuI,EAAMR,gBAAgB,6BAA2B,cAc7C,kBAACiC,GAAA,EAAKE,MAAN,KACE,kBAAC,EAAD,MACA,sEACA,kBAACC,GAAA,EAAD,CACEC,OAAK,EACLzL,KAAK,WACL0L,YAAY,cACZC,SAAU,SAAAC,GAAC,OAAI3B,EAAY2B,EAAEC,OAAOC,WAGxC,kBAACT,GAAA,EAAKE,MAAN,KACE,qDACA,kBAACC,GAAA,EAAD,CACEC,OAAK,EACLzL,KAAK,WACL0L,YAAY,uBACZC,SAAU,SAAAC,GAAC,OAAIzB,EAAmByB,EAAEC,OAAOC,WAG/C,kBAACT,GAAA,EAAKE,MAAN,KACE,kBAAC,EAAD,MACA,0CACA,kBAACC,GAAA,EAAD,CACEC,OAAK,EACLM,aAAc1B,EACdrK,KAAK,OACL0L,YAAY,aACZC,SAAU,SAAAC,GAAC,OAAItB,EAAasB,EAAEC,OAAOC,WAGzC,kBAACT,GAAA,EAAKE,MAAN,KACE,2CACA,kBAACC,GAAA,EAAD,CACEC,OAAK,EACLM,aAAcvB,EACdxK,KAAK,OACL0L,YAAY,cACZC,SAAU,SAAAC,GAAC,OAAInB,EAAYmB,EAAEC,OAAOC,WAGxC,kBAACT,GAAA,EAAKE,MAAN,KACE,wCACA,kBAACC,GAAA,EAAD,CACEC,OAAK,EACLM,aAAcrB,EACd1K,KAAK,QACL0L,YAAY,WACZC,SAAU,SAAAC,GAAC,OAAIjB,EAASiB,EAAEC,OAAOC,WAGrC,kBAACE,GAAA,EAAD,CACE9L,MAAM,QACNF,KAAK,SACLiM,UAAWvB,IAAUL,IAAcG,GAHrC,YAOA,kBAAC,EAAD,Y,oBC/EK0B,GAFgBtM,aANP,SAAAC,GACtB,MAAO,CACLsM,OAAQtM,EAAMsM,UAIsC,KAAzBvM,EAnCT,SAAAgK,GACpB,OAAKA,EAAMuC,OAAOC,cAId,yBACEnM,MAAO,CACLoM,QAAS,SACTnM,MAAO,QACPoM,MAAO,QACPC,UAAW,OAEXC,YAAa,SACbC,aAAc,WAGhB,kBAAC,IAAD,CAAMC,GAAE,mBAAc9C,EAAMuC,OAAOC,cAAc7K,KAC9CqI,EAAMuC,OAAOC,cAAcO,aAD9B,IAC4C,6BACzCC,KAAOhD,EAAMuC,OAAOC,cAAcS,cAAcC,OAC/C,cACC,IACFlD,EAAMuC,OAAOC,cAAcW,mBAAmBC,MAAM,GAAI,GAL3D,KAKiE,IAC9DpD,EAAMuC,OAAOC,cAAca,iBAAiBD,MAAM,GAAI,KApBtD,Q,4DCgLIpN,gBANS,SAAAC,GACtB,MAAO,CACLoC,MAAOpC,EAAMoC,SAIuB,CAAE8G,WAA3BnJ,EA9KA,SAAAgK,GACb,IAOMkB,EACJ,8BACE,kBAACoC,GAAA,EAAD,CAAMhN,MAAM,OAAOiN,KAAK,OAAOC,KAAK,UADtC,IACkDxD,EAAMQ,WAAY,IACjER,EAAMW,WAGL8C,EAAU,CACd,CACEC,IAAK,OACLC,KAAM,kBAACC,GAAD,MACNC,KAAM,OACN1C,QAlBwB,WAC1B,OAAO,kBAACyC,GAAD,QAmBP,CACEF,IAAK,WACLC,KAAM,gBACNE,KAAM,WACN1C,QArBsB,WACxBhJ,QAAQC,IAAI,gBACZ4H,EAAMb,YAsBR,OAA0B,IAAtBa,EAAM3H,MAAMyL,MAEZ,yBAAKzN,MAAO,CAAEwM,aAAc,WAC1B,kBAACkB,GAAA,EAAD,CAAMC,UAAQ,EAACC,WAAS,EAACC,UAAQ,GAC/B,kBAACH,GAAA,EAAKI,KAAN,CAAWC,MAAI,GACb,kBAAC,IAAD,CAAMtB,GAAG,KACP,kBAACuB,GAAA,EAAD,CAAOC,IAAI,OAAOC,IAAKC,KAAMhB,KAAK,YAGtC,kBAACO,GAAA,EAAKI,KAAN,CAAWC,MAAI,GACb,kBAAC,IAAD,CAAMtB,GAAG,YACP,0CAGJ,kBAACiB,GAAA,EAAKI,KAAN,CAAWC,MAAI,GACb,kBAAC,IAAD,CAAMtB,GAAG,WACP,yCAGJ,kBAACiB,GAAA,EAAKI,KAAN,CAAWC,MAAI,GACb,kBAAC,IAAD,CAAMtB,GAAG,WACP,sCAGJ,kBAACiB,GAAA,EAAKI,KAAN,CAAWM,SAAS,SAClB,kBAACC,GAAA,EAAD,CACExD,QAASA,EACTuC,QAASA,EACTO,SAAS,WACTH,KAAM,QAGV,kBAACE,GAAA,EAAKI,KAAN,KACE,kBAAC,GAAD,SAKuB,IAAtBnE,EAAM3H,MAAMyL,MAEnB,yBAAKzN,MAAO,CAAEwM,aAAc,WAC1B,kBAACkB,GAAA,EAAD,CAAMC,UAAQ,EAACC,WAAS,EAACC,UAAQ,GAC/B,kBAACH,GAAA,EAAKI,KAAN,CAAWC,MAAI,GACb,kBAAC,IAAD,CAAMtB,GAAG,KACP,kBAACuB,GAAA,EAAD,CAAOC,IAAI,OAAOC,IAAKC,KAAMhB,KAAK,YAItC,kBAACO,GAAA,EAAKI,KAAN,CAAWC,MAAI,GACb,kBAAC,IAAD,CAAMtB,GAAG,YACP,0CAGJ,kBAACiB,GAAA,EAAKI,KAAN,CAAWC,MAAI,GACb,kBAAC,IAAD,CAAMtB,GAAG,WACP,yCAGJ,kBAACiB,GAAA,EAAKI,KAAN,CAAWC,MAAI,GACb,kBAAC,IAAD,CAAMtB,GAAG,WACP,sCAGJ,kBAACiB,GAAA,EAAKI,KAAN,CAAWC,MAAI,GACb,kBAAC,IAAD,CAAMtB,GAAG,aACP,0CAGJ,kBAACiB,GAAA,EAAKI,KAAN,CAAWM,SAAS,SAClB,kBAACC,GAAA,EAAD,CACExD,QAASA,EACTuC,QAASA,EACTO,SAAS,WACTH,KAAM,QAGV,kBAACE,GAAA,EAAKI,KAAN,KACE,kBAAC,GAAD,SAKuB,IAAtBnE,EAAM3H,MAAMyL,MAEnB,yBAAKzN,MAAO,CAAEwM,aAAc,WAC1B,kBAACkB,GAAA,EAAD,CAAMC,UAAQ,EAACC,WAAS,EAACC,UAAQ,GAC/B,kBAACH,GAAA,EAAKI,KAAN,CAAWC,MAAI,GACb,kBAAC,IAAD,CAAMtB,GAAG,KACP,kBAACuB,GAAA,EAAD,CAAOC,IAAI,OAAOC,IAAKC,KAAMhB,KAAK,YAGtC,kBAACO,GAAA,EAAKI,KAAN,CAAWC,MAAI,GACb,kBAAC,IAAD,CAAMtB,GAAG,YACP,0CAGJ,kBAACiB,GAAA,EAAKI,KAAN,CAAWC,MAAI,GACb,kBAAC,IAAD,CAAMtB,GAAG,WACP,yCAGJ,kBAACiB,GAAA,EAAKI,KAAN,CAAWC,MAAI,GACb,kBAAC,IAAD,CAAMtB,GAAG,WACP,sCAGJ,kBAACiB,GAAA,EAAKI,KAAN,CAAWC,MAAI,GACb,kBAAC,IAAD,CAAMtB,GAAG,aACP,iDAGJ,kBAACiB,GAAA,EAAKI,KAAN,CAAWC,MAAI,GACb,kBAAC,IAAD,CAAMtB,GAAG,UACP,oDAGJ,kBAACiB,GAAA,EAAKI,KAAN,CAAWC,MAAI,GACb,kBAAC,IAAD,CAAMtB,GAAG,aACP,0CAGJ,kBAACiB,GAAA,EAAKI,KAAN,CAAWM,SAAS,SAClB,kBAACC,GAAA,EAAD,CACExD,QAASA,EACTuC,QAASA,EACTO,SAAS,WACTH,KAAM,QAGV,kBAACE,GAAA,EAAKI,KAAN,KACE,kBAAC,GAAD,SAMD,QCrJIQ,GAtBA,WACb,OACE,yBACEtO,MAAO,CAAEsM,UAAW,OAAQE,aAAc,OAAQ+B,UAAW,WAE7D,6BACA,4BACG,IADH,SAEU,IAAIC,MAAOC,cAAe,IAClC,uBACEC,KAAK,+BACL9C,OAAO,SACP+C,IAAI,uBAEH,IALH,iBAMiB,KACZ,O,smBCHN,IAAMC,GAAe,SAAAtN,GAAE,8CAAI,WAAMI,GAAN,eAAArB,EAAA,sEAE9BqB,EAAS,CACP3B,KAAMG,IAHsB,SAKT2O,EAAcjM,OAAOtB,GALZ,OAKxB4K,EALwB,OAO9BxK,EAAS,CACP3B,KhBPwB,iBgBQxBa,KAAMsL,EACN5K,OAV4B,gDAa9BQ,QAAQC,IAAR,MAb8B,yDAAJ,uDA6BjB4B,GAAmB,SAAAC,GAAU,8CAAI,WAAMlC,GAAN,iBAAArB,EAAA,sEAE1CqB,EAAS,CACP3B,KAAMG,IAHkC,SAKxB2O,EAAclL,iBAAiBC,GALP,cAKtCM,EALsC,OAM1CpC,QAAQC,IAAI,4BAA6BmC,GANC,SAOrB2K,EAAcjM,OAAOsB,EAAMiE,WAPN,OAOpC+D,EAPoC,OAQ1CpK,QAAQC,IAAI,gBAAiBmK,GAC7BxK,EAAS,CACP3B,KhBtCwB,iBgBuCxBa,KAAMsL,IAXkC,kDAc1CpK,QAAQC,IAAR,MAd0C,0DAAJ,uDCC3B+M,GAzCG,SAAAnF,GAAU,IAAD,EACKC,oBAAS,GADd,mBAClBmF,EADkB,KACTC,EADS,KAGnBC,EAAkB,CAAE7C,QAAS2C,EAAU,OAAS,IAChDG,EAAkB,CAAE9C,QAAS2C,EAAU,GAAK,QAE5CI,EAAmB,WACvBH,GAAYD,IAGd,OACE,6BACE,yBAAK/O,MAAOiP,GACV,kBAAClD,GAAA,EAAD,CACEoB,KAAMxD,EAAMwD,KACZnN,MAAO2J,EAAM3J,MACbC,MAAO0J,EAAM1J,MACb6K,QAASqE,GAERxF,EAAMyF,cAGX,yBAAKpP,MAAOkP,GACTvF,EAAM0F,SACP,kBAACtD,GAAA,EAAD,CACEoB,KAAMxD,EAAMwD,KACZnN,MAAO2J,EAAM3J,MACbC,MAAO0J,EAAM1J,MACb6K,QAASqE,GAJX,c,uCCodOG,GALsB3P,aAZb,SAAAC,GAEtB,OADAkC,QAAQC,IAAI,gCAAiCnC,GACtC,CACLsM,OAAQtM,EAAMsM,OACdqD,YAAa3P,EAAM2P,YACnBC,SAAU5P,EAAM4P,SAChB3P,aAAcD,EAAMC,aACpBgC,MAAOjC,EAAMiC,MACbG,MAAOpC,EAAMoC,SAI6C,CAC5DwC,aF7X0B,SAAAC,GAAS,8CAAI,WAAM/C,GAAN,uBAAArB,EAAA,kEAErCqB,EAAS,CACP3B,KAAMG,IAEqB,KAAzBuE,EAAUgL,YAAoD,KAA/BhL,EAAUiL,iBALR,wBAM7B5M,EAAa,CACjBoK,KAAMzI,EAAUiL,iBAChBC,QAASlL,EAAUkL,SARc,SAUbC,EAAe/M,cAAcC,GAVhB,cAU7B+M,EAV6B,OAWnCnO,EAAS,CACP3B,KhB/EN,mCgBgFMa,KAAMiP,IAEFC,EAf6B,MAgB9BrL,EAhB8B,CAiBjCgL,WAAYI,EAAQvO,GACpB8K,QAAS,IAEXtK,QAAQC,IAAI,8BAA+B+N,GApBR,UAqBdjB,EAAcrK,aAAasL,GArBb,QAqB7B5D,EArB6B,OAsBnCxK,EAAS,CACP3B,KhBhHqB,gBgBiHrBa,KAAMsL,IAxB2B,yCA2Bd2C,EAAcrK,aAAaC,GA3Bb,QA2B7ByH,EA3B6B,OA4BnCxK,EAAS,CACP3B,KhBtHqB,gBgBuHrBa,KAAMsL,IA9B2B,0DAkCrCpK,QAAQC,IAAR,MAlCqC,0DAAJ,uDE8XnCoH,oBAFmCxJ,EAvdT,SAAAgK,GAAU,IAAD,EACDC,mBAAS,IADR,mBAC5BmG,EAD4B,KACjBC,EADiB,OAEOpG,mBAAS,MAFhB,mBAE5BqG,EAF4B,KAEbC,EAFa,OAGftG,mBAAS,GAAD,OACvBD,EAAM3H,MAAMmI,WADW,YACGR,EAAM3H,MAAMsI,YAJR,mBAG5B6F,EAH4B,KAGxBC,EAHwB,OAMSxG,mBAAS,IANlB,mBAM5ByG,EAN4B,KAMZC,EANY,OAOG1G,mBAAS,IAAI4E,MAPhB,mBAO5B+B,EAP4B,KAOfC,EAPe,OAQa5G,mBAAS,IARtB,mBAQ5B6G,EAR4B,KAQVC,EARU,OASS9G,mBAAS,IATlB,mBAS5B+G,EAT4B,KASZC,EATY,OAUHhH,oBAAS,GAVN,mBAU5BiH,EAV4B,KAUlBC,EAVkB,KAgBnChP,QAAQC,IAAI,+BAAgC4H,GAG5C,IAwTIqC,EAxTA+E,EAAiBpH,EAAM6F,SAASwB,eAAeC,KAAI,SAAApB,GAAO,MAAK,CACjExC,IAAKwC,EAAQvO,GACbgM,KAAMuC,EAAQ3C,KACdrB,MAAOgE,EAAQvO,OAwSXtB,EAAQ,CACZkR,aAAc,EACd9E,QAAS,QACT+E,QAAS,GACTC,QAAS,OAGX,OAAIP,GAAuC,OAA3BlH,EAAMuC,OAAOzH,WAC3B3C,QAAQC,IAAI,2CAA4C4H,GACxD7H,QAAQC,IAAI,oBAAqB4H,EAAMuC,OAAOzH,UAAUnD,IACjD,kBAAC,IAAD,CAAUmL,GAAE,kBAAa9C,EAAMuC,OAAOzH,UAAUnD,QASvD0K,IALGuE,GAAgBE,GAAqBE,GAAmBR,KAEjDJ,GAAgC,KAAnBM,EAOvB,kBAAC,IAAMgB,SAAP,KACE,kBAACC,GAAA,EAAKC,OAAN,KACE,kBAACC,GAAA,EAAD,KACE,iDACA,kBAACpG,GAAA,EAAD,KACE,kBAACA,GAAA,EAAKE,MAAN,KACE,yCACU,IACR,kBAACmG,GAAA,EAAD,CACE5G,QACE,kBAACoC,GAAA,EAAD,CACEjN,MAAO,CAAEoM,QAAS,UAClBc,KAAK,oBAGT9D,QAAQ,gIACRpJ,MAAOA,EACP6N,UAAQ,KAGZ,kBAACQ,GAAA,EAAD,CACE5C,YAAY,kBACZiG,aAAW,EACXC,WAAS,EACTC,QAAM,EACNxE,QAAS2D,EACTrF,SAvVK,SAACmG,EAAD,GAAuB,IAAbhG,EAAY,EAAZA,MAC3BgG,EAAMC,iBACN9B,EAAanE,GACb/J,QAAQC,IAAIgO,MAqVC,IACH,kBAAC,GAAD,CACE/P,MAAO,CAAEsM,UAAW,SAAUD,MAAO,SACrCc,KAAK,OACLiC,YAAY,oBAEZ,kBAAChE,GAAA,EAAKE,MAAN,KACE,+CACA,kBAACC,GAAA,EAAD,CACExL,KAAK,OACL8L,MAAOwE,EACP3E,SAAU,SAAAC,GAAC,OAAI2E,EAAkB3E,EAAEC,OAAOC,UACzC,OAIT,kBAACT,GAAA,EAAKE,MAAN,KACE,+CACgB,IACd,kBAACmG,GAAA,EAAD,CACE5G,QACE,kBAACoC,GAAA,EAAD,CACEjN,MAAO,CAAEoM,QAAS,UAClBc,KAAK,oBAGT9D,QAAQ,mDACRpJ,MAAOA,EACP6N,UAAQ,KAGZ,kBAACtC,GAAA,EAAD,CACExL,KAAK,SACL8L,MAAOoE,EACPvE,SAAU,SAAAC,GAAC,OAAIuE,EAAiBvE,EAAEC,OAAOC,UACxC,KAEL,kBAACT,GAAA,EAAKE,MAAN,KACE,qCACA,kBAACC,GAAA,EAAD,CACExL,KAAK,OACL8L,MAAOsE,EACPzE,SAAU,SAAAC,GAAC,OAAIyE,EAAMzE,EAAEC,OAAOC,UAC7B,KAGL,kBAACT,GAAA,EAAK2G,MAAN,CAAYC,OAAO,SACjB,kBAAC5G,GAAA,EAAKE,MAAN,KACE,uDACA,kBAAC,KAAD,CACE2G,OAAQC,KACRC,SAAU5B,EACV6B,WAAW,aACX1G,SAAU,SAAApI,GAAI,OAAIkN,EAAelN,OAGrC,kBAAC8H,GAAA,EAAKE,MAAN,KACE,8CACA,kBAAC+C,GAAA,EAAD,CACE5C,YAAY,QACZiG,aAAW,EACXC,WAAS,EACTC,QAAM,EACNxE,QAhZS,CACvB,CACEC,IAAK,EACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,EACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,EACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,EACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,EACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,EACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,EACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,EACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,EACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,EACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,GACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,GACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,GACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,GACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,GACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,GACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,GACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,GACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,GACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,GACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,GACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,GACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,GACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,GACLC,KAAM,QACNzB,MAAO,aA0RKH,SAvRK,SAACmG,EAAD,GAAuB,IAAbhG,EAAY,EAAZA,MAC7BgG,EAAMC,iBACNpB,EAAoB7E,GACpB/J,QAAQC,IAAI0O,MAqRG,KAEL,kBAACrF,GAAA,EAAKE,MAAN,KACE,sDACA,kBAAC+C,GAAA,EAAD,CACE5C,YAAY,QACZiG,aAAW,EACXC,WAAS,EACTC,QAAM,EACNxE,QA1RO,CACrB,CACEC,IAAK,EACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,EACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,EACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,EACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,EACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,EACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,EACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,EACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,EACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,EACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,GACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,GACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,GACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,GACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,GACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,GACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,GACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,GACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,GACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,GACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,GACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,GACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,GACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,GACLC,KAAM,QACNzB,MAAO,aAoKKH,SAjKG,SAACmG,EAAD,GAAuB,IAAbhG,EAAY,EAAZA,MAC3BgG,EAAMC,iBACNlB,EAAkB/E,GAClB/J,QAAQC,IAAI4O,MA+JG,MAGP,kBAACvF,GAAA,EAAK2G,MAAN,CAAYC,OAAO,SACjB,kBAACjG,GAAA,EAAD,CAAQC,SAAUA,EAAU/L,MAAM,QAAQ6K,QAhKjC,WACnB,IAAMrG,EAAY,CAChBkL,QAAShG,EAAM3H,MAAMV,GACrBmO,WAAYM,EACZL,iBAAkBW,EAClBzD,aAAcD,KAAO4D,GAAa1D,OAAO,cACzCC,mBAAoB2D,EACpBzD,iBAAkB2D,EAClB0B,WAAYpC,EACZqC,WAAYnC,EACZoC,OAAQ,EACRC,MAAO,MAET1Q,QAAQC,IAAI4E,SAASgK,IAEnBhK,SAASlC,EAAUuI,mBACnBrG,SAASlC,EAAUqI,oBAEnBnD,EAAMR,gBAAgB,wCAAyC,SAE/DQ,EAAMnF,aAAaC,GACnB3C,QAAQC,IACN,kCACA4H,EAAMuC,OAAOC,eAEfrK,QAAQC,IAAI,mBAAoB0C,GAChCqM,GAAY,MAsIJ,kBCtcD2B,GAAsB,SAAAnP,GAAI,8CAAI,WAAM5B,GAAN,eAAArB,EAAA,sEAEvCqB,EAAS,CACP3B,KAAMG,IAERwB,EAAS,CACP3B,KnBQ8B,yBmBdO,SAQjB8O,EAAcxL,aAAaC,GARV,OAQjCoP,EARiC,OAUvChR,EAAS,CACP3B,KnBPiC,0BmBQjCa,KAAM8R,EACNpP,SAbqC,gDAgBvCxB,QAAQC,IAAR,MAhBuC,yDAAJ,uDAqB1B4Q,GAA4B,SAACrP,EAAME,GAAP,8CAAgB,WAAM9B,GAAN,eAAArB,EAAA,sEAErDqB,EAAS,CACP3B,KAAMG,IAERwB,EAAS,CACP3B,KnBb8B,yBmBOqB,SAQ/B8O,EAActL,mBAAmBD,EAAME,GARR,OAQ/CkP,EAR+C,OAUrDhR,EAAS,CACP3B,KnB5BiC,0BmB6BjCa,KAAM8R,EACNpP,KAAMA,IAb6C,gDAgBrDxB,QAAQC,IAAR,MAhBqD,yDAAhB,uDAqB5B0B,GAAmB,SAAAnC,GAAE,8CAAI,WAAMI,GAAN,eAAArB,EAAA,sEAElCqB,EAAS,CACP3B,KAAMG,IAERwB,EAAS,CACP3B,KnBlC8B,yBmB4BE,SAQZ8O,EAAcpL,iBAAiBnC,GARnB,OAQ5BoR,EAR4B,OAUlChR,EAAS,CACP3B,KnBhD6B,sBmBiD7Ba,KAAM8R,IAZ0B,gDAelC5Q,QAAQC,IAAR,MAfkC,yDAAJ,uDAoDrB6Q,GAAiB,SAAAtR,GAAE,OAAI,SAAAI,GAClCI,QAAQC,IAAI,eAAgBT,GAC5BI,EAAS,CACP3B,KnB9E6B,oBmB+E7Ba,KAAMU,MAIGuR,GAAiB,SAAAN,GAAM,OAAI,SAAA7Q,GACtCI,QAAQC,IAAI,mBAAoBwQ,GAChC7Q,EAAS,CACP3B,KnBrF4B,mBmBsF5Ba,KAAM2R,MAIGO,GAAe,SAAAxF,GAAI,8CAAI,WAAM5L,GAAN,SAAArB,EAAA,sDAClCyB,QAAQC,IAAI,iBAAkBuL,GAC9B5L,EAAS,CACP3B,KnB5F0B,iBmB6F1Ba,KAAM0M,IAJ0B,2CAAJ,uD,oBC1CjByF,GAL2BpT,aAPlB,SAAAC,GACtB,MAAO,CACL2P,YAAa3P,EAAM2P,YACnBvN,MAAOpC,EAAMoC,SAIkD,CACjEgR,uBDHoC,SAAAnO,GAAM,8CAAI,WAAMnD,GAAN,iBAAArB,EAAA,sEAE5CqB,EAAS,CACP3B,KAAMG,IAHoC,SAKhB2O,EAAc/K,aAAae,EAAOsD,WALlB,cAKtC8K,EALsC,OAM5CnR,QAAQC,IAAIkR,GANgC,SAOtBpE,EAAcpL,iBAAiBoB,EAAO8K,SAPhB,OAOtC+C,EAPsC,OAQ5ChR,EAAS,CACP3B,KnBjE6B,sBmBkE7Ba,KAAM8R,IAVoC,kDAa5C5Q,QAAQC,IAAR,MAb4C,0DAAJ,uDCI1CoH,oBAFwCxJ,EArET,SAAC,GAM3B,IALLuM,EAKI,EALJA,OACAqD,EAII,EAJJA,YACAvN,EAGI,EAHJA,MACAgR,EAEI,EAFJA,uBACA7J,EACI,EADJA,gBACI,EACoBS,oBAAS,GAD7B,mBACGoB,EADH,KACSkI,EADT,KAEJ,IAA4B,IAAxB3D,EAAY4D,QACd,OACE,kBAACC,GAAA,EAAD,CAAQC,QAAM,EAACxF,UAAQ,GACrB,kBAACyF,GAAA,EAAD,CAAQzF,UAAQ,EAACzE,QAAQ,iBAwB/B,OADAtH,QAAQC,IAAImK,EAAQlK,EAAOuN,GAEzB,kBAAC,IAAM8B,SAAP,KACE,kBAACkC,GAAA,EAAMC,IAAP,KACE,kBAACD,GAAA,EAAME,KAAP,KACE,kBAAC,IAAD,CAAMhH,GAAE,kBAAaP,EAAO5K,KAAO4K,EAAOgB,OAE5C,kBAACqG,GAAA,EAAME,KAAP,KACG9G,KAAOT,EAAOU,cAAcC,OAAO,eAEtC,kBAAC0G,GAAA,EAAME,KAAP,KAAavH,EAAOmG,YACpB,kBAACkB,GAAA,EAAME,KAAP,KACG,IACD,kBAACxG,GAAA,EAAD,CAAMhN,MAAM,MAAM6K,QAAS,kBAAMoI,GAAQ,IAAOhG,KAAK,WACrD,kBAACwG,GAAA,EAAD,CACEtK,QAAO,6CAAwC8C,EAAOgB,KAA/C,YAAuDhB,EAAOU,cACrE5B,KAAMA,EACN2I,SAnCW,WACnBT,GAAQ,IAmCAU,UAjCY,WACpBV,GAAQ,GACR,IAAMrO,EAAS,CACbsD,UAAW+D,EAAO5K,GAClBqO,QAAS3N,EAAMV,IAEjBQ,QAAQC,IAAR,yBAAsC8C,GACtCmO,EAAuBnO,GACvB/C,QAAQC,IAAI,yBAA0BmK,EAAO5K,IAC7C6H,EAAgB,GAAD,OACV+C,EAAOgB,KADG,YACKhB,EAAOU,aADZ,eAEb,YAuBMiH,aAAa,sBACbC,cAAc,kBCCXC,GAJwBpU,aAPf,SAAAC,GACtB,MAAO,CACL2P,YAAa3P,EAAM2P,YACnBvN,MAAOpC,EAAMoC,SAI+C,CAC9DyB,qBADqC9D,EArDT,SAAAgK,GAO5B,OANA7H,QAAQC,IAAI4H,GACZqK,qBAAU,WACRrK,EAAMlG,iBAAiBkG,EAAM3H,MAAMV,MAElC,IAEkC,OAAjCqI,EAAM4F,YAAY0E,WACb,KAEmC,IAAxCtK,EAAM4F,YAAY0E,WAAWrN,OAE7B,kBAAC0K,GAAA,EAAKC,OAAN,KACE,kBAACC,GAAA,EAAD,KACE,8DADF,sCAQJ,kBAAC,IAAMH,SAAP,KACE,kBAACC,GAAA,EAAKC,OAAN,KACE,kBAACC,GAAA,EAAD,KACE,kBAACtG,GAAA,EAAD,uCACA,kBAACqI,GAAA,EAAD,CAAOW,SAAO,GACZ,kBAACX,GAAA,EAAMrI,OAAP,KACE,kBAACqI,GAAA,EAAMC,IAAP,KACE,kBAACD,GAAA,EAAME,KAAP,gBACA,kBAACF,GAAA,EAAME,KAAP,aACA,kBAACF,GAAA,EAAME,KAAP,YACA,kBAACF,GAAA,EAAME,KAAP,QAGJ,kBAACF,GAAA,EAAMY,KAAP,KACGxK,EAAM4F,YAAY0E,WAAWhD,KAAI,SAAAmD,GAAC,OACjC,kBAAC,GAAD,CAA0B/G,IAAK+G,EAAE9S,GAAI4K,OAAQkI,e,UCE9CzU,gBANS,SAAAC,GACtB,MAAO,CACLC,aAAcD,EAAMC,gBAITF,EAxCM,SAAC,GAAsB,IAApBE,EAAmB,EAAnBA,aACtB,OAA6B,OAAzBA,EAAaC,QACR,KAGiB,YAAtBD,EAAaE,KAEb,yBAAKsU,UAAU,YACb,kBAACC,GAAA,EAAD,CACEC,UAAQ,EACRC,SAAO,EACPC,OAAQ5U,EAAaC,WAOH,SAAtBD,EAAaE,KAEb,yBAAKsU,UAAU,YACb,kBAACC,GAAA,EAAD,CACEC,UAAQ,EACRG,UAAQ,EACRD,OAAQ5U,EAAaC,WAOtB,QCwBM6U,GALOhV,aAZE,SAAAC,GAEtB,OADAkC,QAAQC,IAAI,gCAAiCnC,GACtC,CACLsM,OAAQtM,EAAMsM,OACdqD,YAAa3P,EAAM2P,YACnBC,SAAU5P,EAAM4P,SAChB3P,aAAcD,EAAMC,aACpBgC,MAAOjC,EAAMiC,MACbG,MAAOpC,EAAMoC,SAMf,CAAEyB,qBAFkB9D,EA9CT,SAAAgK,GAOX,OANA7H,QAAQC,IAAI,aAAc4H,GAOU,OAAlCA,EAAM6F,SAASwB,eAIb,kBAACQ,GAAA,EAAD,KACE,gEACA,kBAAC4B,GAAA,EAAD,CAAQC,QAAM,GACZ,kBAACC,GAAA,EAAD,iBACQ,KAKd,kBAAC9B,GAAA,EAAD,KACE,gEACA,kBAAC,GAAD,MACA,kBAACF,GAAA,EAAD,CAAMsD,QAAQ,cACZ,kBAACtD,GAAA,EAAKkC,IAAN,CAAUqB,QAAS,GACjB,kBAAC,GAAD,MACA,kBAAC,GAAD,YCiKKC,GAJenV,YAAQ,KAAM,CAAEwJ,mBAAiBpI,WtB/JrC,SAAAC,GAAS,8CAAI,WAAMU,GAAN,eAAArB,EAAA,sEAEnCqB,EAAS,CACP3B,KAAMG,IAH2B,SAKbyB,EAAYZ,WAAWC,GALV,OAK7B+T,EAL6B,OAMnCrT,EAAS,CACP3B,KF9BqB,cE+BrBa,KAAMmU,IAR2B,gDAWnCjT,QAAQC,IAAR,MAXmC,yDAAJ,wDsB+JLpC,EAlLT,SAAAgK,GAAU,IAAD,EACMC,oBAAS,GADf,mBACrBC,EADqB,KACVC,EADU,OAEIF,mBAAS,IAFb,mBAErBoL,EAFqB,KAEXC,EAFW,OAGIrL,mBAAS,IAHb,mBAGrBG,EAHqB,KAGXC,EAHW,OAIkBJ,mBAAS,IAJ3B,mBAIrBK,EAJqB,KAIJC,EAJI,OAKMN,mBAAS,IALf,mBAKrBQ,EALqB,KAKVC,EALU,OAMIT,mBAAS,IANb,mBAMrBW,EANqB,KAMXC,EANW,OAOFZ,mBAAS,IAPP,mBAOrBa,EAPqB,KAOdC,EAPc,OAQFd,mBAAS,GARP,mBAQrB6D,EARqB,KAQdyH,EARc,OASAtL,mBAAS,MATT,mBASrB2I,EATqB,KASb4C,EATa,KActBxK,EAAc,WAClBb,GAAa,IAqDf,OACE,kBAACc,GAAA,EAAD,CACEC,QACE,kBAACkB,GAAA,EAAD,CACE/L,MAAO,CAAEwM,aAAc,UACvB1B,QA9DW,WACjBhB,GAAa,IA8DPsL,QAAQ,QACRnV,MAAM,SAEN,kBAACgN,GAAA,EAAD,CAAMC,KAAK,QANb,8BAUFnC,WAAS,EACTC,KAAMnB,EACNoB,QAASN,GAET,kBAACO,GAAA,EAAD,CAAQ9B,QAAQ,+BAChB,kBAACwB,GAAA,EAAMO,QAAP,KACE,kBAACC,GAAA,EAAD,CAAMC,SArEO,WACbtB,IAAaE,GACfN,EAAMR,gBAAN,sCAAiD,QAEnD,IAAMnI,EAAY,CAChBgU,WACAjL,WACAI,WAAYC,EACZE,UAAWC,EACXE,QACAgD,QACA8E,UAEFzQ,QAAQC,IAAI,oBAAqBf,GACjC2I,EAAM5I,WAAWC,GACjB2I,EAAMR,gBAAN,UAAyBnI,EAAUgU,SAAnC,gBAAwD,WACxDrK,MAsDM,kBAACS,GAAA,EAAKE,MAAN,KACE,0DACA,kBAACC,GAAA,EAAD,CACExL,KAAK,OACL0L,YAAY,6BACZC,SAAU,SAAAC,GAAC,OAAIsJ,EAAYtJ,EAAEC,OAAOC,WAGxC,kBAACT,GAAA,EAAKE,MAAN,KACE,2CACA,kBAACC,GAAA,EAAD,CACEC,OAAK,EACLzL,KAAK,WACL0L,YAAY,cACZC,SAAU,SAAAC,GAAC,OAAI3B,EAAY2B,EAAEC,OAAOC,WAGxC,kBAACT,GAAA,EAAKE,MAAN,KACE,qDACA,kBAACC,GAAA,EAAD,CACEC,OAAK,EACLzL,KAAK,WACL0L,YAAY,uBACZC,SAAU,SAAAC,GAAC,OAAIzB,EAAmByB,EAAEC,OAAOC,WAG/C,kBAACT,GAAA,EAAKE,MAAN,KACE,0CACA,kBAACC,GAAA,EAAD,CACEC,OAAK,EACLzL,KAAK,OACL0L,YAAY,aACZC,SAAU,SAAAC,GAAC,OAAItB,EAAasB,EAAEC,OAAOC,WAGzC,kBAACT,GAAA,EAAKE,MAAN,KACE,2CACA,kBAACC,GAAA,EAAD,CACEC,OAAK,EACLzL,KAAK,OACL0L,YAAY,cACZC,SAAU,SAAAC,GAAC,OAAInB,EAAYmB,EAAEC,OAAOC,WAGxC,kBAACT,GAAA,EAAKE,MAAN,KACE,wCACA,kBAACC,GAAA,EAAD,CACEC,OAAK,EACLzL,KAAK,QACL0L,YAAY,WACZC,SAAU,SAAAC,GAAC,OAAIjB,EAASiB,EAAEC,OAAOC,WAGrC,kBAACT,GAAA,EAAKE,MAAN,KACE,uCACA,kBAAC+C,GAAA,EAAD,CACEsD,WAAS,EACT7F,aAAc2B,EACdL,QA7GS,CACnB,CACEC,IAAK,EACLC,KAAM,KACNzB,MAAO,GAET,CACEwB,IAAK,EACLC,KAAM,WACNzB,MAAO,GAET,CACEwB,IAAK,EACLC,KAAM,QACNzB,MAAO,IAgGCH,SA7FK,SAACmG,EAAD,GAAuB,IAAbhG,EAAY,EAAZA,MACzBgG,EAAMC,iBACNoD,EAASrJ,OA8FH,kBAACT,GAAA,EAAKE,MAAN,KACE,2DACA,kBAACF,GAAA,EAAKiK,SAAN,CACEnI,KAAK,SACLxB,SA/FM,WAChB5J,QAAQC,IAAI,kBAEVoT,EADa,OAAX5C,EACQ,EAEA,OA2FF+C,UAAS/C,KAGb,kBAACxG,GAAA,EAAD,CACE9L,MAAM,QACNF,KAAK,SACLiM,UACGgJ,IACAjL,IACAE,IACAQ,IACAL,IACAG,GATL,kB,qBC2DKgL,GALgB5V,aAPP,SAAAC,GAEtB,OADAkC,QAAQC,IAAI,YAAanC,GAClB,CACLoC,MAAOpC,EAAMoC,SAIuC,CACtDmH,mBACAhI,cAF6BxB,EAnNT,SAAAgK,GAAU,IAAD,EACKC,oBAAS,GADd,mBACtBC,EADsB,KACXC,EADW,OAEGF,mBAAS,IAFZ,mBAEtBG,EAFsB,KAEZC,EAFY,OAGiBJ,mBAAS,IAH1B,mBAGtBK,EAHsB,KAGLC,EAHK,OAIKN,mBAASD,EAAMnG,KAAK2G,YAJzB,mBAItBC,EAJsB,KAIXC,EAJW,OAKGT,mBAASD,EAAMnG,KAAK8G,WALvB,mBAKtBC,EALsB,KAKZC,EALY,OAMHZ,mBAASD,EAAMnG,KAAKiH,OANjB,mBAMtBA,EANsB,KAMfC,EANe,OAOHd,mBAASD,EAAMnG,KAAKiK,OAPjB,mBAOtBA,EAPsB,KAOfyH,EAPe,OAQDtL,mBAASD,EAAMnG,KAAK+O,QARnB,mBAQtBA,EARsB,KAQd4C,EARc,KAavBxK,EAAc,WAClBb,GAAa,IA6Ef,OACE,kBAACc,GAAA,EAAD,CACEC,QACE,uBAAG6D,KAAK,KAAK5D,QApFA,WACjBhB,GAAa,KAoFNH,EAAMnG,KAAKwR,UAGhBjK,WAAS,EACTC,KAAMnB,EACNoB,QAASN,GAET,kBAACO,GAAA,EAAD,CAAQ9B,QAAQ,uCAChB,kBAACwB,GAAA,EAAMO,QAAP,KACE,kBAACC,GAAA,EAAD,CAAMC,SAvFY,WACtB,GAAwB,IAApBtB,EAASnD,QAA2C,IAA3BqD,EAAgBrD,OAAc,CACzD,IAAMxF,EAAe,CACnBE,GAAIqI,EAAMnG,KAAKlC,GACf6I,WAAYC,EACZE,UAAWC,EACXE,QACAgD,QACA8E,UAEFzQ,QAAQC,IAAI,eAAgBX,GAC5BuI,EAAMxI,WAAWC,GACjBuJ,SACK,GAAIZ,IAAaE,GAAmBF,EAASnD,QAAU,EAC5D+C,EAAMR,gBAAgB,sBAAuB,YACxC,CACL,IAAM/H,EAAe,CACnBE,GAAIqI,EAAMnG,KAAKlC,GACfyI,WACAI,WAAYC,EACZE,UAAWC,EACXE,QACAgD,QACA8E,UAEFzQ,QAAQC,IAAI,eAAgBX,GAC5BuI,EAAMxI,WAAWC,GACjBuI,EAAMR,gBAAN,6BACe/H,EAAa+I,WAD5B,YAC0C/I,EAAakJ,UADvD,0BAEE,WAEFK,OAyDI,kBAACS,GAAA,EAAKE,MAAN,KACE,0DACA,kBAACC,GAAA,EAAD,CACEO,aAAcnC,EAAMnG,KAAKwR,SACzBjV,KAAK,OACL0L,YAAY,6BACZO,UAAQ,KAGZ,kBAACZ,GAAA,EAAKE,MAAN,KACE,kBAAC,EAAD,MACA,sEACA,kBAACC,GAAA,EAAD,CACEC,OAAK,EACLzL,KAAK,WACL0L,YAAY,cACZC,SAAU,SAAAC,GAAC,OAAI3B,EAAY2B,EAAEC,OAAOC,WAGxC,kBAACT,GAAA,EAAKE,MAAN,KACE,qDACA,kBAACC,GAAA,EAAD,CACEC,OAAK,EACLzL,KAAK,WACL0L,YAAY,uBACZC,SAAU,SAAAC,GAAC,OAAIzB,EAAmByB,EAAEC,OAAOC,WAG/C,kBAACT,GAAA,EAAKE,MAAN,KACE,kBAAC,EAAD,MACA,0CACA,kBAACC,GAAA,EAAD,CACEC,OAAK,EACLM,aAAc1B,EACdrK,KAAK,OACL0L,YAAY,aACZC,SAAU,SAAAC,GAAC,OAAItB,EAAasB,EAAEC,OAAOC,WAGzC,kBAACT,GAAA,EAAKE,MAAN,KACE,2CACA,kBAACC,GAAA,EAAD,CACEC,OAAK,EACLM,aAAcvB,EACdxK,KAAK,OACL0L,YAAY,cACZC,SAAU,SAAAC,GAAC,OAAInB,EAAYmB,EAAEC,OAAOC,WAGxC,kBAACT,GAAA,EAAKE,MAAN,KACE,wCACA,kBAACC,GAAA,EAAD,CACEC,OAAK,EACLM,aAAcrB,EACd1K,KAAK,QACL0L,YAAY,WACZC,SAAU,SAAAC,GAAC,OAAIjB,EAASiB,EAAEC,OAAOC,WAGrC,kBAACT,GAAA,EAAKE,MAAN,KACE,uCACA,kBAAC+C,GAAA,EAAD,CACEsD,WAAS,EACT7F,aAAcnC,EAAMnG,KAAKiK,MACzBL,QA7GS,CACnB,CACEC,IAAK,EACLC,KAAM,KACNzB,MAAO,GAET,CACEwB,IAAK,EACLC,KAAM,WACNzB,MAAO,GAET,CACEwB,IAAK,EACLC,KAAM,QACNzB,MAAO,IAgGCH,SA7FK,SAACmG,EAAD,GAAuB,IAAbhG,EAAY,EAAZA,MACzBgG,EAAMC,iBACNoD,EAASrJ,OA8FH,kBAACT,GAAA,EAAKE,MAAN,KACE,2DACA,kBAACF,GAAA,EAAKiK,SAAN,CACEnI,KAAK,SACLxB,SA/FM,WAChB5J,QAAQC,IAAI,kBAEVoT,EADa,OAAX5C,EACQ,EAEA,OA2FF+C,UAAS/C,KAYb,kBAACxG,GAAA,EAAD,CACE9L,MAAM,QACNF,KAAK,SACLiM,UAAWvB,IAAUL,IAAcG,GAHrC,YAOA,kBAAC,EAAD,YC7IJiL,GAAqB,CACzBC,WxB9CwB,SAAAjS,GACxB,MAAO,CACLzD,KFnBuB,cEoBvB2V,QAASlS,IwB4CX2F,mBACAhI,aACAK,WxBVwB,SAAAF,GAAE,8CAAI,WAAMI,GAAN,eAAArB,EAAA,sEAE5BqB,EAAS,CACP3B,KAAMG,IAERwB,EAAS,CACP3B,KF1DqB,cE2DrBa,KAAMU,IAPoB,SASNK,EAAYH,WAAWF,GATjB,OAStBqU,EATsB,OAU5B7T,QAAQC,IAAI4T,GAVgB,gDAY5B7T,QAAQC,IAAR,MAZ4B,yDAAJ,wDwBeb6T,GAFOjW,YAAQ,KAAM6V,GAAd7V,EAtED,SAAAgK,GAAU,IAGzBkM,EASAxB,EACAyB,EAbwB,EACJlM,oBAAS,GADL,mBACrBoB,EADqB,KACfkI,EADe,KAK1B2C,EADuB,IAArBlM,EAAMnG,KAAKiK,MACO,KACU,IAArB9D,EAAMnG,KAAKiK,MACA,WAEA,QAKI,OAAtB9D,EAAMnG,KAAK+O,QACbuD,EAAqB,cACrBzB,EAAY,iBACmB,IAAtB1K,EAAMnG,KAAK+O,SACpBuD,EAAqB,oBACrBzB,EAAY,eAgBd,OACE,kBAACd,GAAA,EAAMC,IAAP,KACE,kBAACD,GAAA,EAAME,KAAP,KACE,kBAAC,GAAD,CAAejQ,KAAMmG,EAAMnG,QAE7B,kBAAC+P,GAAA,EAAME,KAAP,KACG9J,EAAMnG,KAAK2G,WADd,IAC2BR,EAAMnG,KAAK8G,WAEtC,kBAACiJ,GAAA,EAAME,KAAP,KACE,kBAAC,KAAD,CAAQ5G,OAAO,2BAA2BlD,EAAMnG,KAAKuS,YAEvD,kBAACxC,GAAA,EAAME,KAAP,CAAYY,UAAWA,GAAYyB,GACnC,kBAACvC,GAAA,EAAME,KAAP,KAAaoC,GACb,kBAACtC,GAAA,EAAME,KAAP,KACE,kBAACxG,GAAA,EAAD,CAAMhN,MAAM,MAAM6K,QAAS,kBAAMoI,GAAQ,IAAOhG,KAAK,WACrD,kBAACwG,GAAA,EAAD,CACEtK,QAAO,uDAAyCO,EAAMnG,KAAKwR,SAApD,KACPhK,KAAMA,EACN2I,SA/Ba,WACnBT,GAAQ,IA+BFU,UA7Bc,WACpBV,GAAQ,GACRvJ,EAAMnI,WAAWmI,EAAMnG,KAAKlC,IAC5BQ,QAAQC,IAAI,gBAAiB4H,EAAMnG,KAAKlC,IACxCqI,EAAMR,gBAAN,4BACcQ,EAAMnG,KAAKwR,SADzB,eAEE,YAwBInB,aAAa,sBACbC,cAAc,iBCLTkC,GAFWrW,aALF,SAAAC,GAAK,MAAK,CAChCiC,MAAOjC,EAAMiC,MACbG,MAAOpC,EAAMoC,SAGoC,KAAzBrC,EAjDT,SAAAgK,GACf,OAA0B,OAAtBA,EAAM9H,MAAMA,QAA0C,IAAxB8H,EAAM9H,MAAMsR,QAE1C,kBAAC3B,GAAA,EAAD,KACE,kBAAC4B,GAAA,EAAD,CAAQC,QAAM,EAACxF,UAAQ,GACrB,kBAACyF,GAAA,EAAD,CAAQnG,KAAK,UAAb,oCAMRrL,QAAQC,IAAI,iBAAkB4H,GACJ,IAAtBA,EAAM3H,MAAMyL,MAEZ,kBAAC+D,GAAA,EAAD,KACE,yBAAKxR,MAAO,CAAEsM,UAAW,OAAQE,aAAc,SAC7C,wBAAIxM,MAAO,CAAEoM,QAAS,WAAtB,sBACA,kBAAC,GAAD,OAEF,kBAAC,GAAD,MACA,kBAACmH,GAAA,EAAD,CAAOW,SAAO,GACZ,kBAACX,GAAA,EAAMrI,OAAP,KACE,kBAACqI,GAAA,EAAMC,IAAP,KACE,kBAACD,GAAA,EAAME,KAAP,gCACA,kBAACF,GAAA,EAAME,KAAP,aACA,kBAACF,GAAA,EAAME,KAAP,gCACA,kBAACF,GAAA,EAAME,KAAP,aACA,kBAACF,GAAA,EAAME,KAAP,eAIJ,kBAACF,GAAA,EAAMY,KAAP,KACGxK,EAAM9H,MAAMA,MAAMoP,KAAI,SAAAzN,GAAI,OACzB,kBAAC,GAAD,CAAMA,KAAMA,EAAM6J,IAAK7J,EAAKlC,WAO/B,SCkILkU,GAAqB,CACzB5G,gBACA6D,uBACAE,6BACAC,kBACAC,kBACAC,iBAQamD,GALmBtW,aApBV,SAAAC,GAEtB,OADAkC,QAAQC,IAAI,kCAAmCnC,GACxC,CACLsM,OAAQtM,EAAMsM,OACdqD,YAAa3P,EAAM2P,YACnB1P,aAAcD,EAAMC,aACpBgC,MAAOjC,EAAMiC,MACbG,MAAOpC,EAAMoC,SAefwT,GAFgC7V,EA/KT,SAAAgK,GAAU,IAAD,EACMC,mBAAS,IADf,mBACzBsM,EADyB,KACZC,EADY,OAEIvM,mBAAS,IAFb,mBAEzBwM,EAFyB,KAEbC,EAFa,KAIhC,GAA0B,OAAtB1M,EAAM9H,MAAMA,MACd,OACE,kBAACuR,GAAA,EAAD,CAAQC,QAAM,EAACxF,UAAQ,GACrB,kBAACyF,GAAA,EAAD,CAAQzF,UAAQ,EAACzE,QAAQ,iBA6E/B,IAjEA,IA+DM9F,GAAO,IAAIkL,MAAOC,cAAgB,EAClC6H,EAAQ,GACLC,EAAI,KAAMA,GAAKjT,EAAMiT,IAC5BD,EAAMhQ,KAAKiQ,GAEb,IAAIC,EAAcF,EAAMrF,KAAI,SAAAwF,GAAM,MAAK,CACrCpJ,IAAKoJ,EACLnJ,KAAMmJ,EACN5K,MAAO4K,MAETD,EAAcA,EAAYjQ,UA0B1B,OACE,kBAAC,IAAM8K,SAAP,KACE,kBAACjG,GAAA,EAAD,KACE,oDACA,kBAACA,GAAA,EAAK2G,MAAN,CAAYC,OAAO,SACjB,kBAAC5G,GAAA,EAAKE,MAAN,KACE,kBAAC+C,GAAA,EAAD,CACE5C,YAAY,WACZiG,aAAa,EACbC,WAAS,EACTvE,QA7GS,CACnB,CACEC,IAAK,KACLC,KAAM,WACNzB,MAAO,MAET,CACEwB,IAAK,KACLC,KAAM,WACNzB,MAAO,MAET,CACEwB,IAAK,KACLC,KAAM,YACNzB,MAAO,MAET,CACEwB,IAAK,KACLC,KAAM,WACNzB,MAAO,MAET,CACEwB,IAAK,KACLC,KAAM,WACNzB,MAAO,MAET,CACEwB,IAAK,KACLC,KAAM,aACNzB,MAAO,MAET,CACEwB,IAAK,KACLC,KAAM,cACNzB,MAAO,MAET,CACEwB,IAAK,KACLC,KAAM,SACNzB,MAAO,MAET,CACEwB,IAAK,KACLC,KAAM,UACNzB,MAAO,MAET,CACEwB,IAAK,KACLC,KAAM,UACNzB,MAAO,MAET,CACEwB,IAAK,KACLC,KAAM,YACNzB,MAAO,MAET,CACEwB,IAAK,KACLC,KAAM,WACNzB,MAAO,OAmDCH,SAvBK,SAACmG,EAAD,GAAuB,IAAbhG,EAAY,EAAZA,MACzBgG,EAAMC,iBACNqE,EAAetK,GACf/J,QAAQC,IAAImU,IAqBFrK,MAAOqK,KAGX,kBAAC9K,GAAA,EAAKE,MAAN,KACE,kBAAC+C,GAAA,EAAD,CACE5C,YAAY,QACZiG,aAAW,EACXC,WAAS,EACTvE,QAASoJ,EACT9K,SA1BI,SAACmG,EAAD,GAAuB,IAAbhG,EAAY,EAAZA,MACxBgG,EAAMC,iBACNuE,EAAcxK,IAyBJA,MAAOuK,IACN,KAEL,kBAAChL,GAAA,EAAKE,MAAN,KACE,kBAACS,GAAA,EAAD,CAAQ9L,MAAM,OAAO6K,QAAS,kBAlDd,WACxB,IAAMxH,EAAO8S,EAAa,IAAMF,EAChCpU,QAAQC,IAAIuB,GACZxB,QAAQC,IAAI,QACc,IAAtB4H,EAAM3H,MAAMyL,MACd9D,EAAMgJ,0BAA0BrP,EAAMqG,EAAM3H,MAAMV,IAElDqI,EAAM8I,oBAAoBnP,GA2CgBoT,KAApC,QAIF,kBAACtL,GAAA,EAAKE,MAAN,Y,SC7BJkK,GAAqB,CACzB5C,kBACAC,kBACAC,iBAQa6D,GALmBhX,aAjBV,SAAAC,GAEtB,OADAkC,QAAQC,IAAI,kCAAmCnC,GACxC,CACLsM,OAAQtM,EAAMsM,OACdqD,YAAa3P,EAAM2P,YACnB1P,aAAcD,EAAMC,aACpBgC,MAAOjC,EAAMiC,MACbG,MAAOpC,EAAMoC,SAYfwT,GAFgC7V,EAhIT,SAAAgK,GAAU,IAAD,EACJC,mBAAS,MADL,mBACzBgN,EADyB,KACjBC,EADiB,OAEJjN,mBAAS,MAFL,mBAEzB2I,EAFyB,KAEjB4C,EAFiB,OAGIvL,mBAAS,IAHb,mBAGzBkN,EAHyB,KAGbC,EAHa,KAKhC/C,qBAAU,WACRrK,EAAMiJ,eAAegE,GACrBjN,EAAMkJ,eAAeN,GACrB5I,EAAMmJ,aAAagE,GACnBhV,QAAQC,IAAI,UAAW6U,GACvB9U,QAAQC,IAAI,aAAc+U,GAC1BhV,QAAQC,IAAI,SAAUwQ,KAErB,CAACqE,EAAQrE,EAAQuE,IAEpB,IAAME,EAAcrN,EAAM9H,MAAMA,MAAMoP,KAAI,SAAAzN,GAAI,MAAK,CACjD6J,IAAK7J,EAAKlC,GACVgM,KAAK,GAAD,OAAK9J,EAAK2G,WAAV,YAAwB3G,EAAK8G,WACjCuB,MAAOrI,EAAKlC,OAGR2V,EAAmB,CACvB,CACE5J,IAAK,EACLC,KAAM,SACNzB,MAAO,OAJc,oBAMpBmL,IAqBCE,EAAU,SAACvL,EAAD,GAAmB,IAAbE,EAAY,EAAZA,MACpBF,EAAEmG,iBACF+E,EAAUhL,IAmCZ,OACE,kBAACT,GAAA,EAAD,KACE,kBAACA,GAAA,EAAK2G,MAAN,CAAYC,OAAO,SACjB,kBAAC5G,GAAA,EAAKE,MAAN,KACE,kBAACC,GAAA,EAAD,CACExL,KAAK,OACL0L,YAAY,iBACZC,SAhCgB,SAACmG,EAAD,GAAuB,IAAbhG,EAAY,EAAZA,MAClCgG,EAAMC,iBACNiF,EAAclL,GACdlC,EAAMmJ,aAAagE,OAIO,IAAtBnN,EAAM3H,MAAMyL,MACP,KAGL,kBAACrC,GAAA,EAAKE,MAAN,KACE,kBAAC+C,GAAA,EAAD,CACE5C,YAAY,oBACZiG,aAAW,EACXC,WAAS,EACTC,QAAM,EACNxE,QAAS6J,EACTvL,SAAUwL,KAkBd,kBAAC9L,GAAA,EAAKE,MAAN,KACE,kBAAC+C,GAAA,EAAD,CACE5C,YAAY,OACZiG,aAAW,EACXC,WAAS,EACTvE,QAvEY,CACpB,CACEC,IAAK,IACLC,KAAM,SACNzB,MAAO,MAET,CACEwB,IAAK,IACLC,KAAM,mBACNzB,MAAO,GAET,CACEwB,IAAK,IACLC,KAAM,SACNzB,MAAO,IA0DDH,SAhDQ,SAACmG,EAAD,GAAuB,IAAbhG,EAAY,EAAZA,MAC1BgG,EAAMC,iBACNqD,EAAUtJ,GACV/J,QAAQC,IAAI,OAAQwQ,GACpB5I,EAAMkJ,eAAeN,MA6CZ,KAEL,kBAACnH,GAAA,EAAKE,MAAN,WC3BO6L,GANiBxX,aAJR,SAAAC,GAAK,MAAK,CAChCoC,MAAOpC,EAAMoC,SAG0C,CACvD4M,gBACA9K,aXS0B,SAAAxC,GAAE,8CAAI,WAAMI,GAAN,eAAArB,EAAA,sEAE9BqB,EAAS,CACP3B,KAAMG,IAHsB,SAKF2O,EAAc/K,aAAaxC,GALzB,OAKxB2R,EALwB,OAM9BnR,QAAQC,IAAIkR,GACZvR,EAAS,CACP3B,KnB3EuB,gBmB4EvBa,KAAMU,IATsB,gDAY9BQ,QAAQC,IAAR,MAZ8B,yDAAJ,uDWR5BoH,oBAH8BxJ,EAxET,SAAAgK,GAAU,IAc3ByN,EACA/C,EAf0B,EACNzK,oBAAS,GADH,mBACvBoB,EADuB,KACjBkI,EADiB,KAiB9B,GAA4B,IAAxBvJ,EAAMuC,OAAOqG,OACf6E,EAAuB,cAClB,GAA4B,IAAxBzN,EAAMuC,OAAOqG,OACtB6E,EAAuB,wBAClB,GAA4B,IAAxBzN,EAAMuC,OAAOqG,OAEtB,OADA6E,EAAuB,YAChB,KAMT,OAJ2B,IAAvBzN,EAAMuC,OAAOsG,QACf6B,EAAY,SAGY,IAAtB1K,EAAM3H,MAAMyL,OAAsC,IAAvB9D,EAAMuC,OAAOsG,MACnC,KAIP,kBAAC,IAAMnB,SAAP,KACE,kBAACkC,GAAA,EAAMC,IAAP,CAAWa,UAAWA,GACpB,kBAACd,GAAA,EAAME,KAAP,KAAa9J,EAAMuC,OAAOmG,YAC1B,kBAACkB,GAAA,EAAME,KAAP,KACE,kBAAC,IAAD,CAAMY,UAAWA,EAAW5H,GAAE,kBAAa9C,EAAMuC,OAAO5K,KACrDqI,EAAMuC,OAAOgB,OAGlB,kBAACqG,GAAA,EAAME,KAAP,KACG9G,KAAOhD,EAAMuC,OAAOU,cAAcC,OAAO,eAE5C,kBAAC0G,GAAA,EAAME,KAAP,KACG9J,EAAMuC,OAAOY,mBAAmBC,MAAM,GAAI,GAD7C,KACmD,IAChDpD,EAAMuC,OAAOc,iBAAiBD,MAAM,GAAI,IAE3C,kBAACwG,GAAA,EAAME,KAAP,KAAa2D,GACb,kBAAC7D,GAAA,EAAME,KAAP,KACE,kBAACxG,GAAA,EAAD,CACEjN,MAAO,CAAEC,MAAO,OAChBiN,KAAK,SACLpC,QAAS,kBAAMoI,GAAQ,MAEzB,kBAACQ,GAAA,EAAD,CACEtK,QAAO,6CAAwCO,EAAMuC,OAAOgB,KAArD,YAA6DvD,EAAMuC,OAAOU,cACjF5B,KAAMA,EACN2I,SAzDW,WACnBT,GAAQ,IAyDAU,UAvDY,WACpBV,GAAQ,GACRpR,QAAQC,IAAI,yBAA0B4H,EAAMuC,OAAO5K,IACnDqI,EAAM7F,aAAa6F,EAAMuC,OAAO5K,IAChCqI,EAAMR,gBAAN,UACKQ,EAAMuC,OAAOgB,KADlB,YAC0BvD,EAAMuC,OAAOU,aADvC,eAEE,oBCNND,KAAOsF,OAAO,MACdnQ,QAAQC,IAAI4K,KAAOsF,UAEnB,IAiHMuD,GAAqB,CACzB/C,uBACAE,6BACA/D,gBACAzF,oBAGIkO,GAAsB1X,aAjBJ,SAAAC,GAEtB,OADAkC,QAAQC,IAAI,6BAA8BnC,GACnC,CACLsM,OAAQtM,EAAMsM,OACdqD,YAAa3P,EAAM2P,YACnB1P,aAAcD,EAAMC,aACpBmC,MAAOpC,EAAMoC,SAafwT,GAF0B7V,EAxHT,SAAAgK,GA2BjB,GAzBAqK,qBAAU,WACkB,IAAtBrK,EAAM3H,MAAMyL,MAC2B,OAArC9D,EAAM4F,YAAY+H,eACpB3N,EAAMgJ,0BACJhG,OAASE,OAAO,WAChBlD,EAAM3H,MAAMV,IAGdqI,EAAMgJ,0BACJhJ,EAAM4F,YAAY+H,eAClB3N,EAAM3H,MAAMV,IAIyB,OAArCqI,EAAM4F,YAAY+H,eACpB3N,EAAM8I,oBAAoB9F,OAASE,OAAO,YAE1ClD,EAAM8I,oBAAoB9I,EAAM4F,YAAY+H,kBAK/C,IACHxV,QAAQC,IAAI,mBAAoB4H,GAEM,OAAlCA,EAAM4F,YAAYA,aAAwB5F,EAAM4F,YAAY4D,QAC9D,OACE,kBAACC,GAAA,EAAD,CAAQC,QAAM,EAACxF,UAAQ,GACrB,kBAACyF,GAAA,EAAD,CAAQzF,UAAQ,EAACzE,QAAQ,iBAK/B,GAA6C,IAAzCO,EAAM4F,YAAYA,YAAY3I,OAChC,OACE,kBAAC4K,GAAA,EAAD,KACE,8FACA,kBAAC,GAAD,OAKN,IAAI+F,EAEFA,EADuC,OAArC5N,EAAM4F,YAAY+H,eACC3K,OAASE,OAAO,aAEhBF,KAAOhD,EAAM4F,YAAY+H,gBAAgBzK,OAC5D,aAIJ,IAAI2K,EAAgB7N,EAAM4F,YAAYA,YAuBtC,OArBAiI,EACqC,IAAnC7N,EAAM4F,YAAYuD,aACd0E,EACCA,EAAgBA,EAAcC,QAAO,SAAAvL,GAAM,OAC1CA,EAAOgB,KACJwK,cACAC,SAAShO,EAAM4F,YAAYuD,aAAa4E,kBAEnDF,EACwC,OAAtC7N,EAAM4F,YAAYqI,gBACdJ,EACCA,EAAgBA,EAAcC,QAC7B,SAAAvL,GAAM,OAAIA,EAAOyD,UAAYhG,EAAM4F,YAAYqI,mBAEvDJ,EAC0C,OAAxC7N,EAAM4F,YAAYsI,kBACdL,EACCA,EAAgBA,EAAcC,QAC7B,SAAAvL,GAAM,OAAIA,EAAOqG,SAAW5I,EAAM4F,YAAYsI,qBAIpD,kBAACrG,GAAA,EAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,wCAAc+F,GACd,kBAAC,GAAD,MACA,kBAAChE,GAAA,EAAD,CAAOW,SAAO,GACZ,kBAACX,GAAA,EAAMrI,OAAP,KACE,kBAACqI,GAAA,EAAMC,IAAP,KACE,kBAACD,GAAA,EAAME,KAAP,mBACA,kBAACF,GAAA,EAAME,KAAP,aACA,kBAACF,GAAA,EAAME,KAAP,aACA,kBAACF,GAAA,EAAME,KAAP,cACA,kBAACF,GAAA,EAAME,KAAP,aACA,kBAACF,GAAA,EAAME,KAAP,QAGJ,kBAACF,GAAA,EAAMY,KAAP,KACGqD,EAAcvG,KAAI,SAAAmD,GAAC,OAClB,kBAAC,GAAD,CAAgB/G,IAAK+G,EAAE9S,GAAI4K,OAAQkI,aA8BhCiD,MCJTrX,GAAQ,CACZkR,aAAc,EACd9E,QAAS,QACT+E,QAAS,GACTC,QAAS,OASL0G,GAA4BnY,aANV,SAAAC,GACtB,MAAO,CACL4P,SAAU5P,EAAM4P,YAMlB,CAAErG,mBAAiBpG,cC7EQ,SAAAC,GAAc,8CAAI,WAAMtB,GAAN,eAAArB,EAAA,sEAE3CqB,EAAS,CACP3B,KAAMG,IAHmC,SAKrB0P,EAAe7M,cAAcC,GALR,OAKrCpB,EALqC,OAM3CE,QAAQC,IAAIH,GACZF,EAAS,CACP3B,KjCvCwB,iBiCwCxBa,KAAMoC,IATmC,gDAiB3ClB,QAAQC,IAAR,MAjB2C,yDAAJ,wDD2ETpC,EAzIT,SAAAgK,GAAU,IAAD,EACEC,oBAAS,GADX,mBACzBC,EADyB,KACdC,EADc,OAERF,mBAASD,EAAMkG,QAAQ3C,MAFf,mBAEzBA,EAFyB,KAEnB6K,EAFmB,OAGInO,mBAASD,EAAMkG,QAAQmI,YAH3B,mBAGzBA,EAHyB,KAGbC,EAHa,OAIFrO,mBAASD,EAAMkG,QAAQzD,SAJrB,mBAIzBA,EAJyB,KAIhB8L,EAJgB,OAKRtO,mBAASD,EAAMkG,QAAQsI,MALf,mBAKzBA,EALyB,KAKnBC,EALmB,KAU1BzN,EAAc,WAClBb,GAAa,IAoCf,OACE,kBAACc,GAAA,EAAD,CACEC,QACE,uBAAG6D,KAAK,KAAK5D,QA3CA,WACjBhB,GAAa,KA2CNH,EAAMkG,QAAQ3C,MAGnBnC,WAAS,EACTC,KAAMnB,EACNoB,QAASN,GAET,kBAACO,GAAA,EAAD,CAAQ9B,QAAQ,6BAChB,kBAACwB,GAAA,EAAMO,QAAP,KACE,kBAACC,GAAA,EAAD,CAAMC,SA9CU,WACpB,IAAMrI,EAAiB,CACrB1B,GAAIqI,EAAMkG,QAAQvO,GAClB8K,UACA4L,aACA9K,OACAiL,OACAxI,QAAShG,EAAMkG,QAAQF,SAEzB7N,QAAQC,IAAI,uBAAwBiB,GACpC2G,EAAM5G,cAAcC,GACpB2G,EAAMR,gBAAN,UAAyBnG,EAAekK,KAAxC,mBAA4D,WAC5DvC,MAmCM,kBAACS,GAAA,EAAKE,MAAN,KACE,gDACA,kBAACC,GAAA,EAAD,CACEC,OAAK,EACLzL,KAAK,OACL+L,aAAcoB,EACdxB,SAAU,SAAAC,GAAC,OAAIoM,EAAQpM,EAAEC,OAAOC,WAGpC,kBAACT,GAAA,EAAKE,MAAN,KACE,wDACA,kBAACC,GAAA,EAAD,CACEC,OAAK,EACLzL,KAAK,OACL+L,aAAckM,EACdtM,SAAU,SAAAC,GAAC,OAAIsM,EAActM,EAAEC,OAAOC,WAG1C,kBAACT,GAAA,EAAKE,MAAN,KACE,4CACa,IACX,kBAACmG,GAAA,EAAD,CACE5G,QACE,kBAACoC,GAAA,EAAD,CAAMjN,MAAO,CAAEoM,QAAS,UAAYc,KAAK,oBAE3C9D,QAAQ,wEACRpJ,MAAOA,GACP6N,UAAQ,KAGZ,kBAACzC,GAAA,EAAKiK,SAAN,CACEnI,KAAK,SACLxB,SAhEO,WACjB5J,QAAQC,IAAI,mBAEVmW,EADc,OAAZ9L,EACS,EAEA,OA4DHkJ,UAASlJ,KAGb,kBAAChB,GAAA,EAAKE,MAAN,KACE,iEAC4B,IAC1B,kBAACmG,GAAA,EAAD,CACE5G,QACE,kBAACoC,GAAA,EAAD,CAAMjN,MAAO,CAAEoM,QAAS,UAAYc,KAAK,oBAE3C9D,QAAQ,8EACRpJ,MAAOA,GACP6N,UAAQ,KAGZ,kBAACzC,GAAA,EAAKiK,SAAN,CACEnI,KAAK,SACLxB,SAzEI,WACd5J,QAAQC,IAAI,mBAEVqW,EADW,OAATD,EACM,EAEA,OAqEA7C,UAAS6C,KAGb,kBAACpM,GAAA,EAAD,CAAQ9L,MAAM,QAAQF,KAAK,SAASiM,UAAWkB,GAA/C,kBA2BK4K,MEhEAO,GALgB1Y,aAPP,SAAAC,GAEtB,MAAO,CACL4P,SAAU5P,EAAM4P,YAIoC,CACtDvM,cDS2B,SAAAC,GAAW,8CAAI,WAAMxB,GAAN,iBAAArB,EAAA,sEAExCqB,EAAS,CACP3B,KAAMG,IAHgC,SAKd0P,EAAe3M,cAAcC,GALf,cAKlCoV,EALkC,OAMxCxW,QAAQC,IAAIuW,GAN4B,SAOjB1I,EAAexP,SAPE,OAOlCoP,EAPkC,OAQxC9N,EAAS,CACP3B,KjCnE0B,mBiCoE1Ba,KAAM4O,IAVgC,kDAaxC1N,QAAQC,IAAR,MAbwC,0DAAJ,uDCRtCoH,oBAF6BxJ,EAjFT,SAAAgK,GAAU,IAAD,EACKC,oBAAS,GADd,mBACtBC,EADsB,KACXC,EADW,OAEeF,mBAAS,MAFxB,mBAEtB2O,EAFsB,KAENC,EAFM,KAGvBC,EAAa,WACjB3O,GAAa,IAETa,EAAc,WAClBb,GAAa,IAGf,GAAKD,EAME,CACL,IAcM6O,EAAe/O,EAAM6F,SAASmJ,YAAY1H,KAAI,SAAApB,GAAO,MAAK,CAC9DvO,GAAIuO,EAAQvO,GACZgM,KAAK,GAAD,OAAKuC,EAAQvO,GAAb,cAAqBuO,EAAQ3C,MACjCrB,MAAOgE,EAAQvO,OAMjB,OACE,kBAACsJ,GAAA,EAAD,CACEI,KAAMnB,EACNkB,WAAS,EACTE,QAASN,EACTE,QACE,4BAAQwJ,UAAU,WAAWvJ,QAAS2N,GACnC9O,EAAM8F,aAIX,kBAACvE,GAAA,EAAD,4BACoBvB,EAAM8F,WAD1B,MACyC9F,EAAM+C,aAD/C,WAGA,kBAAC9B,GAAA,EAAMO,QAAP,KACE,kBAACC,GAAA,EAAD,CAAMC,SAtCK,WACf,IAAMnI,EAAc,CAClBnD,KAAM,UACN+F,MAAOyS,EACPK,QAASjP,EAAM8F,YAEjB3N,QAAQC,IAAImB,GACZyG,EAAM1G,cAAcC,GACpByG,EAAMR,gBAAN,mBACcjG,EAAY4C,MAD1B,gBAEE,WAEF6E,MA2BM,kBAACS,GAAA,EAAKE,MAAN,KACE,kBAAC+C,GAAA,EAAD,CACE3C,SAtBc,SAACC,EAAD,GAAmB,IAAbE,EAAY,EAAZA,MAC9BF,EAAEmG,iBACF0G,EAAkB3M,IAqBR8F,WAAS,EACTC,QAAM,EACNxE,QAASsL,KAGb,kBAACtN,GAAA,EAAKE,MAAN,KACE,kBAACS,GAAA,EAAD,CAAQhM,KAAK,UAAb,kBAtDV,OACE,4BAAQsU,UAAU,WAAWvJ,QAAS2N,GACnC9O,EAAM8F,eCyBAoJ,GAJkBlZ,YAAQ,KAAM,CAAEwJ,oBAAhBxJ,EAjCT,SAAAgK,GACtB,OAAsB,OAAlBA,EAAMkG,QAEN,kBAAC2B,GAAA,EAAD,KACE,kBAAC4B,GAAA,EAAD,CAAQC,QAAM,EAACxF,UAAQ,GACrB,kBAACyF,GAAA,EAAD,CAAQnG,KAAK,UAAb,0BAOsB,IAA1BxD,EAAMkG,QAAQzD,UAChBiI,EAAY,kBAIZ,kBAACd,GAAA,EAAMC,IAAP,CAAWa,UAAWA,GACpB,kBAACd,GAAA,EAAME,KAAP,KACE,kBAAC,GAAD,CACEhE,WAAY9F,EAAMkG,QAAQvO,GAC1BoL,aAAc/C,EAAMkG,QAAQ3C,QAIhC,kBAACqG,GAAA,EAAME,KAAP,KACE,kBAAC,GAAD,CAAkB5D,QAASlG,EAAMkG,WAEnC,kBAAC0D,GAAA,EAAME,KAAP,KAAa9J,EAAMkG,QAAQmI,cAjB/B,IAAI3D,KCqGArU,GAAQ,CACZkR,aAAc,EACd9E,QAAS,QACT+E,QAAS,GACTC,QAAS,OAaI0H,GALkBnZ,aALT,SAAAC,GACtB,MAAO,CACLoC,MAAOpC,EAAMoC,SAKf,CAAEmH,mBAAiB4P,iBHzEW,SAAAC,GAAY,8CAAI,WAAMtX,GAAN,eAAArB,EAAA,sEAE5CqB,EAAS,CACP3B,KAAMG,IAHoC,SAKtB0P,EAAe/M,cAAcmW,GALP,OAKtCnJ,EALsC,OAM5CnO,EAAS,CACP3B,KjCzB4B,qBiC0B5Ba,KAAMiP,IARoC,gDAW5C/N,QAAQC,IAAR,MAX4C,yDAAJ,wDGuEXpC,EArHT,SAAAgK,GAAU,IAAD,EACGC,oBAAS,GADZ,mBACxBC,EADwB,KACbC,EADa,OAEPF,mBAAS,IAFF,mBAExBsD,EAFwB,KAElB6K,EAFkB,OAGKnO,mBAAS,IAHd,mBAGxBoO,EAHwB,KAGZC,EAHY,OAIDrO,oBAAS,GAJR,mBAIxBwC,EAJwB,KAIf8L,EAJe,OAKPtO,oBAAS,GALF,mBAKxBuO,EALwB,KAKlBC,EALkB,KAUzBzN,EAAc,WAClBb,GAAa,IAiBf,OACE,kBAACc,GAAA,EAAD,CACEC,QACE,kBAACkB,GAAA,EAAD,CAAQjB,QAxBK,WACjBhB,GAAa,IAuBoBsL,QAAQ,QAAQnV,MAAM,SAAnD,oBAIF8K,WAAS,EACTC,KAAMnB,EACNoB,QAASN,GAET,kBAACO,GAAA,EAAD,CAAQ9B,QAAQ,wBAChB,kBAACwB,GAAA,EAAMO,QAAP,KACE,kBAACC,GAAA,EAAD,CAAMC,SA3BO,WACjB,IAAM2N,EAAe,CACnB5M,UACA4L,aACA9K,OACAiL,OACAxI,QAAShG,EAAM3H,MAAMV,IAEvBQ,QAAQC,IAAI,oBAAqBiX,GACjCrP,EAAMoP,iBAAiBC,GACvBrP,EAAMR,gBAAN,UAAyB6P,EAAa9L,KAAtC,gBAAuD,WACvDvC,MAiBM,kBAACS,GAAA,EAAKE,MAAN,KACE,gDACA,kBAACC,GAAA,EAAD,CACEC,OAAK,EACLzL,KAAK,OACL0L,YAAY,mBACZC,SAAU,SAAAC,GAAC,OAAIoM,EAAQpM,EAAEC,OAAOC,WAGpC,kBAACT,GAAA,EAAKE,MAAN,KACE,oDACA,kBAACC,GAAA,EAAD,CACEC,OAAK,EACLzL,KAAK,OACL0L,YAAY,uBACZC,SAAU,SAAAC,GAAC,OAAIsM,EAActM,EAAEC,OAAOC,WAG1C,kBAACT,GAAA,EAAKE,MAAN,KACE,4CACa,IACX,kBAACmG,GAAA,EAAD,CACE5G,QACE,kBAACoC,GAAA,EAAD,CAAMjN,MAAO,CAAEoM,QAAS,UAAYc,KAAK,oBAE3C9D,QAAQ,wEACRpJ,MAAOA,GACP6N,UAAQ,KAGZ,kBAACzC,GAAA,EAAKiK,SAAN,CACEnI,KAAK,SACLxB,SAAU,kBAAMwM,GAAY9L,IAC5BkJ,UAASlJ,KAGb,kBAAChB,GAAA,EAAKE,MAAN,KACE,iEAC4B,IAC1B,kBAACmG,GAAA,EAAD,CACE5G,QACE,kBAACoC,GAAA,EAAD,CAAMjN,MAAO,CAAEoM,QAAS,UAAYc,KAAK,oBAE3C9D,QAAQ,8EACRpJ,MAAOA,GACP6N,UAAQ,KAGZ,kBAACzC,GAAA,EAAKiK,SAAN,CACEnI,KAAK,OACLxB,SAAU,kBAAM0M,GAASD,IACzB7C,UAAS6C,KAGb,kBAACpM,GAAA,EAAD,CAAQ9L,MAAM,QAAQF,KAAK,SAASiM,UAAWkB,GAA/C,kBC/CK+L,GAJctZ,aALL,SAAAC,GAAK,MAAK,CAChC4P,SAAU5P,EAAM4P,SAChBxN,MAAOpC,EAAMoC,SAGuC,CAAEkX,eJhD1B,yDAAM,WAAMxX,GAAN,eAAArB,EAAA,sEAEhCqB,EAAS,CACP3B,KAAMG,IAHwB,SAKT0P,EAAexP,SALN,OAK1BoP,EAL0B,OAMhC9N,EAAS,CACP3B,KjCqB0B,mBiCpB1Ba,KAAM4O,IARwB,gDAWhC1N,QAAQC,IAAR,MAXgC,yDAAN,wDIgDDpC,EAlDT,SAAAgK,GAKlB,OAJAqK,qBAAU,WACRrK,EAAMuP,mBAEL,IACgC,OAA/BvP,EAAM6F,SAASmJ,cAAmD,IAA3BhP,EAAM6F,SAAS2D,QAEtD,kBAAC3B,GAAA,EAAD,KACE,kBAAC4B,GAAA,EAAD,CAAQC,QAAM,EAACxF,UAAQ,GACrB,kBAACyF,GAAA,EAAD,CAAQnG,KAAK,UAAb,yBAKkB,IAAtBxD,EAAM3H,MAAMyL,OAAqC,IAAtB9D,EAAM3H,MAAMyL,MAEvC,kBAAC+D,GAAA,EAAD,KACE,yBAAKxR,MAAO,CAAEsM,UAAW,OAAQE,aAAc,SAC7C,wBAAIxM,MAAO,CAAEoM,QAAS,WAAtB,YACA,kBAAC,GAAD,OAGF,kBAAC,GAAD,MACA,kBAACmH,GAAA,EAAD,KACE,kBAACA,GAAA,EAAMrI,OAAP,KACE,kBAACqI,GAAA,EAAMC,IAAP,KACE,kBAACD,GAAA,EAAME,KAAP,WACA,kBAACF,GAAA,EAAME,KAAP,aACA,kBAACF,GAAA,EAAME,KAAP,mBAIJ,kBAACF,GAAA,EAAMY,KAAP,KACGxK,EAAM6F,SAASmJ,YAAY1H,KAAI,SAAApB,GAAO,OACrC,kBAAC,GAAD,CAAiBA,QAASA,EAASxC,IAAKwC,EAAQvO,WAOnD,QCHE6X,GAAqB,SAAAjW,GAAW,8CAAI,WAAMxB,GAAN,mBAAArB,EAAA,sEAE7CqB,EAAS,CACP3B,KAAMG,IAHqC,SAKnBkZ,EAActT,MAAM5C,GALD,cAKvCoV,EALuC,OAM7CxW,QAAQC,IAAIuW,GANiC,SAOzBe,EAAa9W,YAAYW,EAAY0V,SAPZ,cAOvCvT,EAPuC,OAQ7C3D,EAAS,CACP3B,KtCuBuB,gBsCtBvBa,KAAMyE,IAVqC,UAYrBgU,EAAa7W,oBACnCU,EAAY0V,SAb+B,QAYvCU,EAZuC,OAe7C5X,EAAS,CACP3B,KtCiBgC,yBsChBhCa,KAAM0Y,IAjBqC,kDAoB7CxX,QAAQC,IAAR,MApB6C,0DAAJ,uDCwC9BwX,GALmB5Z,aAPV,SAAAC,GAEtB,OADAkC,QAAQC,IAAI,yBAA0BnC,GAC/B,CACLwF,OAAQxF,EAAMwF,UAMhB,CAAE+T,uBAF8BxZ,EA7ET,SAAAgK,GAAU,IAAD,EACEC,oBAAS,GADX,mBACzBC,EADyB,KACdC,EADc,OAEQF,mBAAS,MAFjB,mBAEzB4P,EAFyB,KAEXC,EAFW,KAG1BhB,EAAa,WACjB3O,GAAa,GACbhI,QAAQC,IAAI8H,IAKd,GAAKA,EAME,CACL,IAUM6O,EAAe/O,EAAMvE,OAAOsU,UAAUzI,KAAI,SAAA5L,GAAK,MAAK,CACxDgI,IAAKhI,EAAMsU,SACXrM,KAAK,GAAD,OAAKjI,EAAMsU,SAAX,cAAyBtU,EAAM6H,MACnCrB,MAAOxG,EAAMsU,aAMf,OACE,kBAAC/O,GAAA,EAAD,CACEI,KAAMnB,EACNkB,WAAS,EACTE,QAjCc,WAClBnB,GAAa,IAiCTe,QACE,4BAAQwJ,UAAU,WAAWvJ,QAAS2N,GACnC9O,EAAMgQ,WAIX,kBAACzO,GAAA,EAAD,4BACoBvB,EAAMgQ,SAD1B,MACuChQ,EAAM1C,WAD7C,WAGA,kBAAC2D,GAAA,EAAMO,QAAP,KACE,kBAACC,GAAA,EAAD,CAAMC,SAlCK,WACf,IAAMnI,EAAc,CAClBnD,KAAM,QACN+F,MAAO0T,EACPZ,QAASjP,EAAMgQ,UAEjB7X,QAAQC,IAAImB,GACZyG,EAAMwP,mBAAmBjW,KA4BnB,kBAACkI,GAAA,EAAKE,MAAN,KACE,kBAAC+C,GAAA,EAAD,CACE3C,SAtBY,SAACC,EAAD,GAAmB,IAAbE,EAAY,EAAZA,MAC5BF,EAAEmG,iBACF2H,EAAgB5N,IAqBN8F,WAAS,EACTC,QAAM,EACNxE,QAASsL,KAGb,kBAACtN,GAAA,EAAKE,MAAN,KACE,kBAACS,GAAA,EAAD,CAAQhM,KAAK,UAAb,kBAlDV,OACE,4BAAQsU,UAAU,WAAWvJ,QAAS2N,GACnC9O,EAAMgQ,aCOAC,GApBY,SAAAjQ,GAEzB,OADA7H,QAAQC,IAAI4H,GAEV,kBAAC4J,GAAA,EAAMC,IAAP,KACE,kBAACD,GAAA,EAAME,KAAP,KACE,kBAAC,GAAD,CACExM,WAAY0C,EAAMtE,MAAM6H,KACxByM,SAAUhQ,EAAMtE,MAAMsU,YAG1B,kBAACpG,GAAA,EAAME,KAAP,KACE,kBAAC,IAAD,CAAMhH,GAAE,iBAAY9C,EAAMtE,MAAMsU,WAAahQ,EAAMtE,MAAM6H,OAE3D,kBAACqG,GAAA,EAAME,KAAP,KAAa9J,EAAMtE,MAAM2S,YACzB,kBAACzE,GAAA,EAAME,KAAP,KAAa9J,EAAMtE,MAAMwU,aACzB,kBAACtG,GAAA,EAAME,KAAP,KAAa9J,EAAMtE,MAAMyU,qBCahBC,GA7BQ,SAAApQ,GAErB,OADA7H,QAAQC,IAAI,sBAAuB4H,GACX,OAApBA,EAAM+P,UACD,yCAGP,kBAAC,IAAMrI,SAAP,KACE,uCACA,kBAACkC,GAAA,EAAD,CAAOW,SAAO,GACZ,kBAACX,GAAA,EAAMrI,OAAP,KACE,kBAACqI,GAAA,EAAMC,IAAP,KACE,kBAACD,GAAA,EAAME,KAAP,YACA,kBAACF,GAAA,EAAME,KAAP,aACA,kBAACF,GAAA,EAAME,KAAP,kBACA,kBAACF,GAAA,EAAME,KAAP,mBACA,kBAACF,GAAA,EAAME,KAAP,iBACA,kBAACF,GAAA,EAAME,KAAP,QAGJ,kBAACF,GAAA,EAAMY,KAAP,KACGxK,EAAM+P,UAAUzI,KAAI,SAAA5L,GAAK,OACxB,kBAAC,GAAD,CAAoBgI,IAAKhI,EAAMsU,SAAUtU,MAAOA,WC8C7C2U,GALoBra,YACjC,KACA,CAAE0C,aCnCwB,SAAAC,GAAc,8CAAI,WAAMZ,GAAN,iBAAArB,EAAA,6DAC5CqB,EAAS,CACP3B,KAAMG,IAER4B,QAAQC,IAAI,mBAAoBO,GAJY,SAKjB2X,EAAc5X,aAAaC,GALV,cAKtCD,EALsC,OAM5CP,QAAQC,IAAIM,GANgC,SAOhB4X,EAAc9X,aAAaG,EAAehB,IAP1B,OAOtC4Y,EAPsC,OAQ5CxY,EAAS,CACP3B,K3C+B0B,iB2C9B1Ba,KAAMsZ,IAVoC,4CAAJ,uDDmCxB/Q,oBAFiBxJ,EA3DT,SAAAgK,GACxB7H,QAAQC,IAAI4H,GADqB,MAELC,mBAASD,EAAMwQ,cAAcjN,MAFxB,mBAE1B9H,EAF0B,KAElBgV,EAFkB,OAGCxQ,mBAASD,EAAMwQ,cAAcE,YAH9B,mBAG1BC,EAH0B,KAGfC,EAHe,KAIjC,GAA4B,OAAxB5Q,EAAMwQ,cACR,OACE,kBAAC/G,GAAA,EAAD,KACE,kBAACE,GAAA,EAAD,qBAmBN,OACE,kBAAChC,GAAA,EAAD,CAAMuD,QAAS,GACb,kBAACvD,GAAA,EAAKC,OAAN,KACE,+CACA,kBAAC,GAAD,MACA,kBAACnG,GAAA,EAAD,KACE,kBAACA,GAAA,EAAKE,MAAN,KACE,gDACA,kBAACC,GAAA,EAAD,CACExL,KAAK,OACL+L,aAAc1G,EACdsG,SAAU,SAAAC,GAAC,OAAIyO,EAAUzO,EAAEC,OAAOC,WAGtC,kBAACT,GAAA,EAAKE,MAAN,KACE,6CACA,kBAACC,GAAA,EAAD,CACExL,KAAK,OACL+L,aAAcwO,EACd5O,SAAU,SAAAC,GAAC,OAAI4O,EAAa5O,EAAEC,OAAOC,WAGzC,kBAACT,GAAA,EAAKE,MAAN,KACE,kBAACS,GAAA,EAAD,CAAQjB,QArCE,WAClBhJ,QAAQC,IAAI,qBACZ,IAAMO,EAAiB,CACrBhB,GAAIqI,EAAMwQ,cAAc7Y,GACxB4L,KAAM9H,EACNiV,WAAYC,GAEdxY,QAAQC,IAAIO,GACZqH,EAAMtH,aAAaC,GACnBqH,EAAMR,gBAAN,mBACc7G,EAAe4K,KAD7B,0BAEE,YA0BoCjN,MAAM,SAApC,6BEbGua,GAJgB7a,aANP,SAAAC,GACtB,MAAO,CACLwF,OAAQxF,EAAMwF,UAMhB,CAAEjD,aD/BwB,SAAAb,GAAE,8CAAI,WAAMI,GAAN,iBAAArB,EAAA,sEAE9BqB,EAAS,CACP3B,K3C8D8B,yB2C5DhC2B,EAAS,CACP3B,KAAMG,IANsB,SAQT+Z,EAAc9X,aAAab,GARlB,cAQxB8D,EARwB,OAS9B1D,EAAS,CACP3B,K3CqDwB,iB2CpDxBa,KAAMwE,IAXsB,SAaN6U,EAAc7X,kBAAkBd,GAb1B,OAaxBoY,EAbwB,OAc9BhY,EAAS,CACP3B,K3CiDkC,2B2ChDlCa,KAAM8Y,IAhBsB,kDAmB9B5X,QAAQC,IAAR,MAnB8B,0DAAJ,wDC6BCpC,EAhCT,SAAAgK,GAQpB,OAPA7H,QAAQC,IAAI,sBAAuB4H,GAEnCqK,qBAAU,WACRrK,EAAMxH,aAAawH,EAAMrI,MAExB,CAACqI,EAAMrI,KAEyB,OAA/BqI,EAAMvE,OAAO+U,cAEb,kBAAC3I,GAAA,EAAD,KACE,kBAAC4B,GAAA,EAAD,KACE,kBAACE,GAAA,EAAD,sBAON,kBAAC9B,GAAA,EAAD,KACE,kBAAC,GAAD,CAAmB2I,cAAexQ,EAAMvE,OAAO+U,gBAC/C,kBAAC,GAAD,CAAgBT,UAAW/P,EAAMvE,OAAOsU,gBCgG/Be,GALmB9a,YAAQ,KAAM,CAC9C8C,YPvFyB,SAAAC,GAAa,8CAAI,WAAMhB,GAAN,iBAAArB,EAAA,6DAC1CqB,EAAS,CACP3B,KAAMG,IAER4B,QAAQC,IAAI,mBAAoBW,GAJU,SAKhB2W,EAAa5W,YAAYC,GALT,cAKpCD,EALoC,OAM1CX,QAAQC,IAAIU,GAN8B,SAOf4W,EAAa9W,YAAYG,EAAcpB,IAPxB,OAOpCoZ,EAPoC,OAQ1ChZ,EAAS,CACP3B,KtCqCyB,gBsCpCzBa,KAAM8Z,IAVkC,4CAAJ,uDOwFtCvR,oBAFgCxJ,EA/GT,SAAAgK,GACvB7H,QAAQC,IAAI4H,GADoB,MAERC,mBAASD,EAAMgR,aAAa,GAAG1T,YAFvB,mBAEzBiG,EAFyB,KAEnB6K,EAFmB,OAGNnO,mBAASD,EAAMgR,aAAa,GAAG5S,OAHzB,mBAGzBA,EAHyB,KAGlB6S,EAHkB,OAINhR,mBAASD,EAAMgR,aAAa,GAAGxT,QAJzB,mBAIzB0T,EAJyB,KAIlBC,EAJkB,OAKRlR,mBAAS,MALD,mBAKzB1B,EALyB,KAKnB6S,EALmB,OAMEnR,mBAASD,EAAMgR,aAAa,GAAGN,YANjC,mBAMzBC,EANyB,KAMdC,EANc,KAehC,GARAvG,qBAAU,WAC2B,OAA/BrK,EAAMgR,aAAa,GAAGzS,KACxB6S,EAAQ,MAERA,EAAQpU,SAASgD,EAAMgR,aAAa,GAAGzS,SAGxC,CAACyB,EAAMgR,aAAa,GAAGzS,OACC,OAAvByB,EAAMgR,aACR,OACE,kBAACvH,GAAA,EAAD,KACE,kBAACE,GAAA,EAAD,qBAsBN,OACE,kBAAChC,GAAA,EAAD,CAAMuD,QAAS,GACb,kBAACvD,GAAA,EAAKC,OAAN,KACE,8CACA,kBAAC,GAAD,MACA,kBAACnG,GAAA,EAAD,KACE,kBAACA,GAAA,EAAKE,MAAN,KACE,gDACA,kBAACC,GAAA,EAAD,CACES,UAAQ,EACRjM,KAAK,OACL+L,aAAcnC,EAAMgR,aAAa,GAAGzT,cAEtC,8BACE,uBAAGwH,KAAK,MAAR,6BADF,IACqC,KACnC,kBAAC,IAAD,CAAMjC,GAAE,oBAAe9C,EAAMgR,aAAa,GAAGK,YAA7C,qCAKJ,kBAAC5P,GAAA,EAAKE,MAAN,KACE,yCACA,kBAACC,GAAA,EAAD,CACExL,KAAK,OACL+L,aAAcoB,EACdxB,SAAU,SAAAC,GAAC,OAAIoM,EAAQpM,EAAEC,OAAOC,WAGpC,kBAACT,GAAA,EAAKE,MAAN,KACE,6CACA,kBAACC,GAAA,EAAD,CACExL,KAAK,OACL+L,aAAc/D,EACd2D,SAAU,SAAAC,GAAC,OAAIiP,EAASjP,EAAEC,OAAOC,WAGrC,kBAACT,GAAA,EAAKE,MAAN,KACE,4CACA,kBAACC,GAAA,EAAD,CACExL,KAAK,OACL+L,aAAc+O,EACdnP,SAAU,SAAAC,GAAC,OAAImP,EAASnP,EAAEC,OAAOC,WAGrC,kBAACT,GAAA,EAAKE,MAAN,KACE,wCACA,kBAACC,GAAA,EAAD,CACExL,KAAK,SACL+L,aAAc5D,EACdwD,SAAU,SAAAC,GAAC,OAAIoP,EAAQpP,EAAEC,OAAOC,WAGpC,kBAACT,GAAA,EAAKE,MAAN,KACE,6CACA,kBAACC,GAAA,EAAD,CACExL,KAAK,OACL+L,aAAcwO,EACd5O,SAAU,SAAAC,GAAC,OAAI4O,EAAa5O,EAAEC,OAAOC,WAGzC,kBAACT,GAAA,EAAKE,MAAN,KACE,kBAACS,GAAA,EAAD,CAAQjB,QA9EE,WAClBhJ,QAAQC,IAAI,oBACZ,IAAMW,EAAgB,CACpBpB,GAAIqI,EAAMgQ,SACVzM,OACAnF,QACAZ,OAAQ0T,EACR3S,OACAmS,WAAYC,GAEdxY,QAAQC,IAAI,mCAAoCW,GAChDiH,EAAMlH,YAAYC,GAClBiH,EAAMR,gBAAN,kBACazG,EAAcwK,KAD3B,0BAEE,YAgEoCjN,MAAM,SAApC,6BC7ECsI,GAAc,SAAA3E,GAAU,8CAAI,WAAMlC,GAAN,eAAArB,EAAA,sEAErCqB,EAAS,CACP3B,KAAMG,IAH6B,SAKjB+a,GAAa1S,YAAY3E,GALR,OAK/BM,EAL+B,OAMrCpC,QAAQC,IAAImC,GACZxC,EAAS,CACP3B,K9CsBuB,gB8CrBvBa,KAAMsD,IAT6B,gDAYrCpC,QAAQC,IAAR,MAZqC,yDAAJ,uDA0BxB0G,GAAc,SAAArE,GAAa,8CAAI,WAAM1C,GAAN,eAAArB,EAAA,sEAExCqB,EAAS,CACP3B,KAAMG,IAHgC,SAKb+a,GAAaxS,YAAYrE,GALZ,OAKlC8W,EALkC,OAMxCpZ,QAAQC,IAAI,gBAAiBmZ,GAC7BxZ,EAAS,CACP3B,K9CHsB,e8CItBa,KAAMsa,IATgC,gDAYxCpZ,QAAQC,IAAR,MAZwC,yDAAJ,uDAgB3B6G,GAAc,SAAAtH,GAAE,8CAAI,WAAMI,GAAN,eAAArB,EAAA,sEAE7BqB,EAAS,CACP3B,KAAMG,IAHqB,SAKT+a,GAAarS,YAAYtH,GALhB,OAKvB4C,EALuB,OAM7BxC,EAAS,CACP3B,K9CjBuB,gB8CkBvBa,KAAMsD,IARqB,gDAW7BpC,QAAQC,IAAR,MAX6B,yDAAJ,uDAuChBoZ,GAAqB,SAAAjY,GAAW,8CAAI,WAAMxB,GAAN,mBAAArB,EAAA,sEAE7CqB,EAAS,CACP3B,KAAMG,IAHqC,SAKnBkZ,EAActT,MAAM5C,GALD,cAKvCoV,EALuC,OAM7CxW,QAAQC,IAAIuW,GANiC,SAOzB2C,GAAarS,YAAY1F,EAAY0V,SAPZ,cAOvC1U,EAPuC,OAQ7CxC,EAAS,CACP3B,K9C1DuB,gB8C2DvBa,KAAMsD,IAVqC,UAYvB+W,GAAapS,mBAAmB3F,EAAY0V,SAZrB,QAYvCwC,EAZuC,OAa7C1Z,EAAS,CACP3B,K9C9D+B,wB8C+D/Ba,KAAMwa,IAfqC,kDAkB7CtZ,QAAQC,IAAR,MAlB6C,0DAAJ,uDCzB9BsZ,GALwB1b,aAPf,SAAAC,GAEtB,OADAkC,QAAQC,IAAI,8BAA+BnC,GACpC,CACLyF,MAAOzF,EAAMyF,SAMf,CAAE8V,uBAFmCxb,EA9ET,SAAAgK,GAC5B7H,QAAQC,IAAI,iCAAkC4H,GADT,MAEHC,oBAAS,GAFN,mBAE9BC,EAF8B,KAEnBC,EAFmB,OAGGF,mBAAS,MAHZ,mBAG9B0R,EAH8B,KAGhBC,EAHgB,KAI/B9C,EAAa,WACjB3O,GAAa,GACbhI,QAAQC,IAAI8H,IAMd,GAAKA,EAME,CACL,IASM6O,EAAe/O,EAAMtE,MAAMiU,UAAUrI,KAAI,SAAA/M,GAAK,MAAK,CACvDmJ,IAAKnJ,EAAMsX,SACXlO,KAAK,GAAD,OAAKpJ,EAAMsX,SAAX,cAAyBtX,EAAM8D,aACnC6D,MAAO3H,EAAMsX,aAMf,OACE,kBAAC5Q,GAAA,EAAD,CACEI,KAAMnB,EACNkB,WAAS,EACTE,QAjCc,WAClBnB,GAAa,IAiCTe,QACE,4BAAQwJ,UAAU,WAAWvJ,QAAS2N,GACnC9O,EAAM6R,WAIX,kBAACtQ,GAAA,EAAD,2BACmBvB,EAAM6R,SADzB,MACsC7R,EAAM3B,YAD5C,WAGA,kBAAC4C,GAAA,EAAMO,QAAP,KACE,kBAACC,GAAA,EAAD,CAAMC,SAjCK,WACf,IAAMnI,EAAc,CAClBnD,KAAM,QACN+F,MAAOwV,EACP1C,QAASjP,EAAM6R,UAEjBL,GAAmBjY,KA4Bb,kBAACkI,GAAA,EAAKE,MAAN,KACE,kBAAC+C,GAAA,EAAD,CACE3C,SAtBY,SAACC,EAAD,GAAmB,IAAbE,EAAY,EAAZA,MAC5BF,EAAEmG,iBACFyJ,EAAgB1P,IAqBN8F,WAAS,EACTC,QAAM,EACNxE,QAASsL,KAGb,kBAACtN,GAAA,EAAKE,MAAN,KACE,kBAACS,GAAA,EAAD,CAAQhM,KAAK,UAAb,kBAjDV,OACE,4BAAQsU,UAAU,WAAWvJ,QAAS2N,GACnC9O,EAAM6R,aCUAC,GAzBa,SAAA9R,GAE1B,OADA7H,QAAQC,IAAI4H,GAEV,kBAAC4J,GAAA,EAAMC,IAAP,KACE,kBAACD,GAAA,EAAME,KAAP,KACE,kBAAC,GAAD,CACE+H,SAAU7R,EAAMzF,MAAMsX,SACtBxT,YAAa2B,EAAMzF,MAAM8D,eAG7B,kBAACuL,GAAA,EAAME,KAAP,KACE,kBAAC,IAAD,CAAMhH,GAAE,iBAAY9C,EAAMzF,MAAMsX,WAC7B7R,EAAMzF,MAAMgD,YADf,MAC+ByC,EAAMzF,MAAM8D,YAAa,MAG1D,kBAACuL,GAAA,EAAME,KAAP,KACG9J,EAAMzF,MAAMqD,SADf,MAC4BoC,EAAMzF,MAAMmD,SAExC,kBAACkM,GAAA,EAAME,KAAP,KAAa9J,EAAMzF,MAAMuD,MACzB,kBAAC8L,GAAA,EAAME,KAAP,KAAa9J,EAAMzF,MAAM4V,mBACzB,kBAACvG,GAAA,EAAME,KAAP,QCOSiI,GA5BS,SAAA/R,GAEtB,OADA7H,QAAQC,IAAI,sBAAuB4H,GACX,OAApBA,EAAM2P,UACD,yCAGP,kBAAC,IAAMjI,SAAP,KACE,sCACA,kBAACkC,GAAA,EAAD,CAAOW,SAAO,GACZ,kBAACX,GAAA,EAAMrI,OAAP,KACE,kBAACqI,GAAA,EAAMC,IAAP,KACE,kBAACD,GAAA,EAAME,KAAP,YACA,kBAACF,GAAA,EAAME,KAAP,+BACA,kBAACF,GAAA,EAAME,KAAP,uBACA,kBAACF,GAAA,EAAME,KAAP,aACA,kBAACF,GAAA,EAAME,KAAP,mBAGJ,kBAACF,GAAA,EAAMY,KAAP,KACGxK,EAAM2P,UAAUrI,KAAI,SAAA/M,GAAK,OACxB,kBAAC,GAAD,CAAqBmJ,IAAKnJ,EAAMsX,SAAUtX,MAAOA,WCsB9CyX,GAJehc,aANN,SAAAC,GACtB,MAAO,CACLyF,MAAOzF,EAAMyF,SAMf,CAAE9C,YZlCuB,SAAAjB,GAAE,8CAAI,WAAMI,GAAN,iBAAArB,EAAA,sEAE7BqB,EAAS,CACP3B,KtCoE6B,wBsClE/B2B,EAAS,CACP3B,KAAMG,IANqB,SAQTmZ,EAAa9W,YAAYjB,GARhB,cAQvB+D,EARuB,OAS7B3D,EAAS,CACP3B,KtC2DuB,gBsC1DvBa,KAAMyE,IAXqB,SAaLgU,EAAa7W,oBAAoBlB,GAb5B,OAavBgY,EAbuB,OAc7B5X,EAAS,CACP3B,KtCuDgC,yBsCtDhCa,KAAM0Y,IAhBqB,kDAmB7BxX,QAAQC,IAAR,MAnB6B,0DAAJ,wDYgCCpC,EAnCT,SAAAgK,GAQnB,OAPA7H,QAAQC,IAAI,qBAAsB4H,GAElCqK,qBAAU,WACRrK,EAAMpH,YAAYoH,EAAMrI,MAEvB,CAACqI,EAAMrI,KAEuB,OAA7BqI,EAAMtE,MAAMsV,aAEZ,kBAACnJ,GAAA,EAAD,KACE,kBAAC4B,GAAA,EAAD,KACE,kBAACE,GAAA,EAAD,sBAON,kBAAC9B,GAAA,EAAD,KACE,kBAAC,GAAD,CACEmI,SAAUhQ,EAAMrI,GAChBqZ,aAAchR,EAAMtE,MAAMsV,eAE5B,kBAAC,GAAD,CAAiBrB,UAAW3P,EAAMtE,MAAMiU,gB,kDCqF/BsC,GALmBjc,aAPV,SAAAC,GAEtB,OADAkC,QAAQC,IAAI,2BAA4BnC,GACjC,CACLgS,OAAQhS,EAAMgS,UAMhB,CAAEiK,cLsByB,SAAAnZ,GAAa,8CAAI,WAAMhB,GAAN,eAAArB,EAAA,sEAE1CqB,EAAS,CACP3B,KAAMG,IAHkC,SAKhB+a,GAAavS,cAAchG,GALX,OAKpCD,EALoC,OAM1CX,QAAQC,IAAIU,GACZf,EAAS,CACP3B,K9C3EsB,e8C4EtBa,KAAM8B,IATkC,gDAY1CZ,QAAQC,IAAR,MAZ0C,yDAAJ,uDKtBvBoH,oBAFexJ,EAxGT,SAAAgK,GACvB7H,QAAQC,IAAI,2BAA4B4H,GADR,MCDO,WAAO,IAAD,EACXC,mBAAS,IADE,mBACtCkS,EADsC,KAC3BC,EAD2B,KAIvCC,EAAuBC,cAAY,kBACvCC,aAAuB9C,EAAcpT,mBAAoB,QAErD4L,EAASuK,oBAAQ,sBACrB,sBAAA9b,EAAA,yDAC2B,IAArByb,EAAUlV,OADhB,yCAEW,IAFX,gCAIWoV,EAAqBF,IAJhC,2CAQA,CAACA,IAEH,MAAO,CACLA,YACAC,eACAnK,UDlB+BwK,GAAzBL,EAFwB,EAExBA,aAAcnK,EAFU,EAEVA,OACtB9P,QAAQC,IAAI6P,GAHoB,MAIEhI,oBAAS,GAJX,mBAIzBC,EAJyB,KAIdC,EAJc,OAKUF,mBAAS,MALnB,mBAKzByS,EALyB,KAKVC,EALU,KAM1B7D,EAAa,WACjB3O,GAAa,IAETa,EAAc,WAClBb,GAAa,IAEf,GAAKD,EAME,CACL,IAAI0S,EAAU,GAEZA,OADoBC,IAAlB5K,EAAO6K,OACC,GAEA7K,EAAO6K,OAAOxL,KAAI,SAAAwL,GAAM,MAAK,CACrCpP,IAAKoP,EAAO9C,SACZ+C,MAAM,IAAD,OAAMD,EAAO9C,SAAb,aAA0B8C,EAAOxV,YACtC0V,YAAaF,EAAOvV,YACpBN,OAAQ6V,EAAO7V,OACfiF,MAAO4Q,EAAO9C,SACd1S,WAAYwV,EAAOxV,eAGvB,IAuBM2V,EAAqB,SAACjR,EAAD,GAAoB,IAAd8Q,EAAa,EAAbA,OAC/B9Q,EAAEmG,iBACFwK,EAAiBG,IAGnB,OACE,kBAAC7R,GAAA,EAAD,CACEI,KAAMnB,EACNkB,WAAS,EACTE,QAASN,EACTE,QACE,4BAAQwJ,UAAU,WAAWvJ,QAAS2N,GAAtC,kBAKF,kBAACvN,GAAA,EAAD,sBACiBvB,EAAMkT,aAAa7U,YADpC,eAGA,kBAAC4C,GAAA,EAAMO,QAAP,KACE,kBAACC,GAAA,EAAKE,MAAN,KACE,yBAAK+I,UAAU,iBACb,kBAAC,KAAD,CACElB,QAASvB,EAAOuB,QAChB2J,eAAgBF,EAChBG,eAAgB,SAAApR,GAAC,OAAIoQ,EAAapQ,EAAEC,OAAOC,QAC3CmR,kBAAmBJ,EACnBL,QAASA,MAMf,kBAACnR,GAAA,EAAKE,MAAN,KACE,kBAACS,GAAA,EAAD,CAAQjB,QAzDC,WACfhJ,QAAQC,IAAI,6BACZD,QAAQC,IACN,2BACA4H,EAAMkT,aAAarB,SACnB,WACAa,EAAcxQ,MACdwQ,EAAcpV,YAEhB,IAAMgW,EAAe,CACnBzB,SAAU7R,EAAMkT,aAAarB,SAC7B7B,SAAU0C,EAAcxQ,MACxB5E,WAAYoV,EAAcpV,YAE5BnF,QAAQC,IAAIkb,GACZtT,EAAMkS,cAAcoB,GACpBtT,EAAMR,gBAAN,UACKQ,EAAMkT,aAAa7U,YADxB,8BAEE,WAEF2C,MAqCM,aA5ER,OACE,4BAAQ0J,UAAU,WAAWvJ,QAAS2N,GAAtC,oBE8FSyE,GALoBvd,aAPX,SAAAC,GAEtB,OADAkC,QAAQC,IAAI,2BAA4BnC,GACjC,CACLgS,OAAQhS,EAAMgS,UAMhB,CAAEuL,ePuC0B,SAAA7a,GAAc,8CAAI,WAAMZ,GAAN,eAAArB,EAAA,sEAE5CqB,EAAS,CACP3B,KAAMG,IAHoC,SAKjB+a,GAAatS,eAAerG,GALX,OAKtCD,EALsC,OAM5CP,QAAQC,IAAIM,GACZX,EAAS,CACP3B,K9C1FuB,gB8C2FvBa,KAAM0B,IAToC,gDAY5CR,QAAQC,IAAR,MAZ4C,yDAAJ,uDOvCxBoH,oBAFexJ,EAvGT,SAAAgK,GACxB7H,QAAQC,IAAI,4BAA6B4H,GADR,MCDO,WAAO,IAAD,EACZC,mBAAS,IADG,mBACvCkS,EADuC,KAC5BC,EAD4B,KAIxCC,EAAuBC,cAAY,kBACvCC,aAAuB9C,EAAcrT,oBAAqB,QAEtD6L,EAASuK,oBAAQ,sBACrB,sBAAA9b,EAAA,yDAC2B,IAArByb,EAAUlV,OADhB,yCAEW,IAFX,gCAIWoV,EAAqBF,IAJhC,2CAQA,CAACA,IAEH,MAAO,CACLA,YACAC,eACAnK,UDlB+BwL,GAAzBrB,EAFyB,EAEzBA,aAAcnK,EAFW,EAEXA,OAFW,EAGChI,oBAAS,GAHV,mBAG1BC,EAH0B,KAGfC,EAHe,OAIWF,mBAAS,MAJpB,mBAI1ByT,EAJ0B,KAIVC,EAJU,KAK3B7E,EAAa,WACjB3O,GAAa,IAETa,EAAc,WAClBb,GAAa,IAEf,GAAKD,EAME,CACL,IAAI0S,EAAU,GAEZA,OADoBC,IAAlB5K,EAAO6K,OACC,GAEA7K,EAAO6K,OAAOxL,KAAI,SAAAwL,GAAM,MAAK,CACrCpP,IAAKoP,EAAOzB,UACZ0B,MAAM,IAAD,OAAMD,EAAOzB,UAAb,aAA2ByB,EAAOvV,aACvCyV,YAAaF,EAAOvV,YACpB2E,MAAO4Q,EAAOzB,UACd9T,YAAauV,EAAOvV,gBAIxB,IAuBM0V,EAAqB,SAACjR,EAAD,GAAoB,IAAd8Q,EAAa,EAAbA,OAC/B9Q,EAAEmG,iBACFwL,EAAkBb,IAGpB,OACE,kBAAC7R,GAAA,EAAD,CACEI,KAAMnB,EACNkB,WAAS,EACTE,QAASN,EACTE,QACE,4BAAQwJ,UAAU,WAAWvJ,QAAS2N,GAAtC,mBAKF,kBAACvN,GAAA,EAAD,sBACiBvB,EAAMkT,aAAa7U,YADpC,gBAGA,kBAAC4C,GAAA,EAAMO,QAAP,KACE,kBAACC,GAAA,EAAKE,MAAN,KACE,yBAAK+I,UAAU,iBACb,kBAAC,KAAD,CACElB,QAASvB,EAAOuB,QAChB2J,eAAgBF,EAChBG,eAAgB,SAAApR,GAAC,OAAIoQ,EAAapQ,EAAEC,OAAOC,QAC3CmR,kBAAmBJ,EACnBL,QAASA,MAMf,kBAACnR,GAAA,EAAKE,MAAN,KACE,kBAACS,GAAA,EAAD,CAAQjB,QAzDC,WACfhJ,QAAQC,IAAI,8BACZD,QAAQC,IACN,2BACA4H,EAAMkT,aAAarB,SACnB,YACA6B,EAAexR,MACfwR,EAAenW,aAEjB,IAAMqW,EAAgB,CACpB/B,SAAU7R,EAAMkT,aAAarB,SAC7BR,UAAWqC,EAAexR,MAC1B3E,YAAamW,EAAenW,aAE9BpF,QAAQC,IAAIwb,GACZ5T,EAAMwT,eAAeI,GACrB5T,EAAMR,gBAAN,UACKQ,EAAMkT,aAAa7U,YADxB,+BAEE,WAEF2C,MAqCM,aA5ER,OACE,4BAAQ0J,UAAU,WAAWvJ,QAAS2N,GAAtC,qBEsmBS+E,GANmB7d,aAPV,SAAAC,GACtB,MAAO,CACLsE,MAAOtE,EAAMsE,MACbgI,OAAQtM,EAAMsM,UAIyC,CACzD/C,mBACAV,eACA9E,qBAHgChE,EAjmBT,SAAAgK,GACvB7H,QAAQC,IAAI,2BAA4B4H,GADR,MAEAC,oBAAS,GAFT,mBAEzBiH,EAFyB,KAEfC,EAFe,OAGJlH,mBAASD,EAAMkT,aAAazX,QAHxB,mBAGzBA,EAHyB,KAGjBgV,EAHiB,OAINxQ,mBAASD,EAAMkT,aAAaxX,OAJtB,mBAIzBA,EAJyB,KAIlBoY,EAJkB,OAKN7T,mBAASD,EAAMkT,aAAa7U,aALtB,mBAKzB9D,EALyB,KAKlBwZ,EALkB,OAMV9T,mBAAS+T,KAAKC,MAAMjU,EAAMkT,aAAajW,OAAS,KANtC,mBAMzBiX,EANyB,KAMpBC,EANoB,OAOVlU,mBAASD,EAAMkT,aAAajW,OAAS,IAP3B,mBAOzBmX,EAPyB,KAOpBC,EAPoB,OAQFpU,mBAASD,EAAMkT,aAAajV,SAR1B,mBAQzBA,EARyB,KAQhBqW,EARgB,OASUrU,mBACxCD,EAAMkT,aAAanV,gBAVW,mBASzBwW,EATyB,KASVC,EATU,OAYJvU,mBAAS,MAZL,mBAYzBwU,EAZyB,KAYjBC,EAZiB,OAaJzU,mBAASD,EAAMkT,aAAaxV,SAbxB,mBAazBiX,EAbyB,KAajBC,EAbiB,OAcF3U,mBAASD,EAAMkT,aAAatV,UAd1B,mBAczBiX,EAdyB,KAchBC,EAdgB,OAeR7U,mBAAS,MAfD,mBAezB1B,EAfyB,KAenB6S,EAfmB,QAgBRnR,mBAASD,EAAMkT,aAAapV,MAhBpB,qBAgBzBA,GAhByB,MAgBnBiX,GAhBmB,SAiBF9U,mBAASD,EAAMkT,aAAa8B,SAjB1B,qBAiBzBA,GAjByB,MAiBhBC,GAjBgB,MAmBhC5K,qBAAU,WACwB,OAA5BrK,EAAMkT,aAAa3U,KACrB6S,EAAQ,MAERA,EAAQpU,SAASgD,EAAMkT,aAAa3U,SAErC,CAACyB,EAAMkT,aAAa3U,OAEvB8L,qBAAU,WAC0B,OAA9BrK,EAAMkT,aAAauB,OACrBC,EAAU,MAEVA,EACE1U,EAAMkT,aAAauB,OAChBS,QAAQ,MAAO,IACfA,QAAQ,OAAQ,MAChBA,QAAQ,MAAO,OAGrB,CAAClV,EAAMkT,aAAauB,SAEvB,IAuUMU,GAAc,WAClBhd,QAAQC,IAAI,sBAAuB4H,EAAMkT,aAAarB,UACtD,IAAMuD,EAAc,CAClBvD,SAAU7R,EAAMkT,aAAarB,SAC7BrT,UAAWwB,EAAMuC,OAAOC,cAAc7K,GACtCsF,OAAQ+C,EAAMkT,aAAajW,OAC3BvC,cAAesF,EAAMuC,OAAOA,OAAOtF,OAAS,GAE9C9E,QAAQC,IAAI,gBAAiBgd,GAC7BpV,EAAMhG,iBAAiBob,GACvBpV,EAAMR,gBAAN,UACKQ,EAAMkT,aAAa7U,YADxB,kCAC0D2B,EAAMuC,OAAOC,cAAcO,cACnF,WAEFoE,GAAY,IAed,OAA2B,OAAvBnH,EAAMkT,aAEN,kBAACzJ,GAAA,EAAD,KACE,kBAACE,GAAA,EAAD,qBAIFzC,EACK,kBAAC,IAAD,CAAUpE,GAAE,mBAAc9C,EAAMuC,OAAOC,cAAc7K,MAG5D,kBAACgQ,GAAA,EAAD,CAAMuD,QAAS,GACb,kBAACvD,GAAA,EAAKC,OAAN,KACE,6CACA,kBAACnG,GAAA,EAAD,KACE,kBAACA,GAAA,EAAKE,MAAN,CAAY0T,UAAQ,GAClB,0CACA,kBAACzT,GAAA,EAAD,CACES,UAAQ,EACRH,MAAOlC,EAAMzF,MAAM2Y,aAAa,GAAGzX,OACnCrF,KAAK,OACL0L,YAAarG,EACbsG,SAAU,SAAAC,GAAC,OAAIyO,EAAUzO,EAAEC,OAAOC,UAEpC,8BACE,kBAAC,IAAD,CACE7L,MAAO,CACLif,OAAQ,UACRC,SAAU,SACVjf,MAAO,OACPsM,YAAa,QAEfE,GAAE,oBAAe9C,EAAMkT,aAAa7B,YAPtC,6BAYF,8BACE,kBAAC,GAAD,CAAmB6B,aAAclT,EAAMkT,iBAG3C,kBAACzR,GAAA,EAAKE,MAAN,CAAY0T,UAAQ,GAClB,yCACA,kBAACzT,GAAA,EAAD,CACES,UAAQ,EACRH,MAAOlC,EAAMzF,MAAM2Y,aAAa,GAAGxX,MACnCtF,KAAK,OACL0L,YAAY,YACZC,SAAU,SAAAC,GAAC,OAAI8R,EAAS9R,EAAEC,OAAOC,UAEnC,8BACE,kBAAC,IAAD,CACE7L,MAAO,CACLif,OAAQ,UACRC,SAAU,SACVjf,MAAO,OACPsM,YAAa,QAEfE,GAAE,mBAAc9C,EAAMkT,aAAalD,WAPrC,4BAYF,8BACE,kBAAC,GAAD,CAAkBkD,aAAclT,EAAMkT,iBAG1C,kBAACzR,GAAA,EAAKE,MAAN,CAAY0T,UAAQ,GAClB,wCACA,kBAACzT,GAAA,EAAD,CACEO,aAAc5H,EACdnE,KAAK,OACL0L,YAAY,WACZC,SAAU,SAAAC,GAAC,OAAI+R,EAAS/R,EAAEC,OAAOC,WAGrC,kBAACT,GAAA,EAAK2G,MAAN,CAAYC,OAAO,SACjB,kBAAC5G,GAAA,EAAKE,MAAN,CAAY0T,UAAQ,GAClB,mDACA,kBAACzT,GAAA,EAAD,CACE4T,UAAW,EACXrT,aAAc+R,EACd9d,KAAK,SACL0L,YAAY,eACZC,SAAU,SAAAC,GAAC,OAAImS,EAAOnS,EAAEC,OAAOC,WAGnC,kBAACT,GAAA,EAAKE,MAAN,CAAY0T,UAAQ,GAClB,mDACA,kBAACzT,GAAA,EAAD,CACEO,aAAciS,EACdoB,UAAW,EACXpf,KAAK,SACL0L,YAAY,cACZC,SAAU,SAAAC,GAAC,OAAIqS,EAAOrS,EAAEC,OAAOC,YAIrC,kBAACT,GAAA,EAAK2G,MAAN,CAAYC,OAAO,SACjB,kBAAC5G,GAAA,EAAKE,MAAN,CAAY0T,UAAQ,GAClB,wCACA,kBAACzT,GAAA,EAAD,CACE4T,UAAW,EACXrT,aAAcwS,EACdve,KAAK,SACL0L,YAAY,8BACZC,SAAU,SAAAC,GAAC,OAAI4S,EAAU5S,EAAEC,OAAOC,WAGtC,kBAACT,GAAA,EAAKE,MAAN,CAAY0T,UAAQ,GAClB,yCACA,kBAACzT,GAAA,EAAD,CACEO,aAAc0S,EACdW,UAAW,EACXpf,KAAK,SACL0L,YAAY,aACZC,SAAU,SAAAC,GAAC,OAAI8S,EAAW9S,EAAEC,OAAOC,YAIzC,kBAACT,GAAA,EAAKE,MAAN,KACE,yFACA,kBAAC8T,GAAA,EAAD,CACEtT,aAAcsS,EACd1S,SAAU,SAAAC,GAAC,OAAI0S,EAAU1S,EAAEC,OAAOC,QAClCJ,YAAY,2BAGhB,kBAACL,GAAA,EAAK2G,MAAN,CAAYC,OAAO,SACjB,kBAAC5G,GAAA,EAAKE,MAAN,CAAY0T,UAAQ,GAClB,8DACA,kBAAC3Q,GAAA,EAAD,CACE5C,YAAY,2BACZiG,aAAa,EACb5F,aAAclE,EACd+J,WAAS,EACTvE,QA5eS,CACrB,CACEC,IAAK,EACLC,KAAM,QACNzB,MAAO,GAET,CACEwB,IAAK,EACLC,KAAM,MACNzB,MAAO,GAET,CACEwB,IAAK,EACLC,KAAM,YACNzB,MAAO,OA+dGH,SA5dK,SAACmG,EAAD,GAAuB,IAAbhG,EAAY,EAAZA,MAC3BgG,EAAMC,iBACNmM,EAAWpS,OA6dH,kBAACT,GAAA,EAAKE,MAAN,KACE,+CACA,kBAAC+C,GAAA,EAAD,CACE5C,YAAY,0BACZiG,aAAa,EACb5F,aAAcoS,EACdvM,WAAS,EACTC,QAAM,EACNxE,QAnee,CAC3B,CAAEE,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,iBAAkBzB,MAAO,MACjC,CAAEyB,KAAM,gBAAiBzB,MAAO,MAChC,CAAEyB,KAAM,cAAezB,MAAO,MAC9B,CAAEyB,KAAM,mBAAiBzB,MAAO,MAChC,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,iBAAkBzB,MAAO,MACjC,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,sBAAuBzB,MAAO,MACtC,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,yBAA0BzB,MAAO,MACzC,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,gBAAiBzB,MAAO,MAChC,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,iCAAkCzB,MAAO,MACjD,CAAEyB,KAAM,oBAAqBzB,MAAO,MACpC,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,eAAgBzB,MAAO,MAC/B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,iBAAkBzB,MAAO,MACjC,CAAEyB,KAAM,2BAA4BzB,MAAO,MAC3C,CAAEyB,KAAM,OAAQzB,MAAO,MACvB,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,mBAAoBzB,MAAO,MACnC,CAAEyB,KAAM,0BAA2BzB,MAAO,MAC1C,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,wCAAyCzB,MAAO,MACxD,CAAEyB,KAAM,eAAgBzB,MAAO,MAC/B,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,gBAAiBzB,MAAO,MAChC,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,OAAQzB,MAAO,MACvB,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,iBAAkBzB,MAAO,MACjC,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,qBAAsBzB,MAAO,MACrC,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,cAAezB,MAAO,MAC9B,CAAEyB,KAAM,oBAAqBzB,MAAO,MACpC,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,8BAA+BzB,MAAO,MAC9C,CAAEyB,KAAM,gBAAiBzB,MAAO,MAChC,CAAEyB,KAAM,OAAQzB,MAAO,MACvB,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,gBAAiBzB,MAAO,MAChC,CAAEyB,KAAM,mBAAoBzB,MAAO,MACnC,CAAEyB,KAAM,8BAA+BzB,MAAO,MAC9C,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,OAAQzB,MAAO,MACvB,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,gBAAiBzB,MAAO,MAChC,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,oCAAqCzB,MAAO,MACpD,CAAEyB,KAAM,gCAAiCzB,MAAO,MAChD,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,4BAA6BzB,MAAO,MAC5C,CAAEyB,KAAM,OAAQzB,MAAO,MACvB,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,cAAezB,MAAO,MAC9B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,yCAA0CzB,MAAO,MACzD,CAAEyB,KAAM,qBAAsBzB,MAAO,MACrC,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,mCAAoCzB,MAAO,MACnD,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,yBAA0BzB,MAAO,MACzC,CAAEyB,KAAM,gBAAiBzB,MAAO,MAChC,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,6CAA8CzB,MAAO,MAC7D,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,OAAQzB,MAAO,MACvB,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,mBAAoBzB,MAAO,MACnC,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,kCAAmCzB,MAAO,MAClD,CAAEyB,KAAM,uBAAwBzB,MAAO,MACvC,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,cAAezB,MAAO,MAC9B,CAAEyB,KAAM,uBAAwBzB,MAAO,MACvC,CAAEyB,KAAM,gBAAiBzB,MAAO,MAChC,CAAEyB,KAAM,cAAezB,MAAO,MAC9B,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,OAAQzB,MAAO,MACvB,CAAEyB,KAAM,iBAAkBzB,MAAO,MACjC,CAAEyB,KAAM,2BAA4BzB,MAAO,MAC3C,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,OAAQzB,MAAO,MACvB,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,kCAAmCzB,MAAO,MAClD,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,mBAAoBzB,MAAO,MACnC,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,OAAQzB,MAAO,MACvB,CAAEyB,KAAM,cAAezB,MAAO,MAC9B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,cAAezB,MAAO,MAC9B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,qBAAsBzB,MAAO,MACrC,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,eAAgBzB,MAAO,MAC/B,CAAEyB,KAAM,wBAAyBzB,MAAO,MACxC,CAAEyB,KAAM,cAAezB,MAAO,MAC9B,CAAEyB,KAAM,4BAA6BzB,MAAO,MAC5C,CAAEyB,KAAM,mCAAoCzB,MAAO,MACnD,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,wBAAyBzB,MAAO,MACxC,CAAEyB,KAAM,eAAgBzB,MAAO,MAC/B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,eAAgBzB,MAAO,MAC/B,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,kBAAmBzB,MAAO,MAClC,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,eAAgBzB,MAAO,MAC/B,CAAEyB,KAAM,+CAAgDzB,MAAO,MAC/D,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,yBAA0BzB,MAAO,MACzC,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,cAAezB,MAAO,MAC9B,CAAEyB,KAAM,uBAAwBzB,MAAO,MACvC,CAAEyB,KAAM,4BAA6BzB,MAAO,MAC5C,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,+BAAgCzB,MAAO,MAC/C,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,cAAezB,MAAO,MAC9B,CAAEyB,KAAM,OAAQzB,MAAO,MACvB,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,sBAAuBzB,MAAO,MACtC,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,eAAgBzB,MAAO,MAC/B,CAAEyB,KAAM,2BAA4BzB,MAAO,MAC3C,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,uBAAwBzB,MAAO,MACvC,CAAEyB,KAAM,uCAAwCzB,MAAO,MACvD,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,0BAA2BzB,MAAO,MAC1C,CAAEyB,KAAM,uBAAwBzB,MAAO,MACvC,CAAEyB,KAAM,oBAAqBzB,MAAO,MACpC,CAAEyB,KAAM,iBAAkBzB,MAAO,MACjC,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,WAAYzB,MAAO,OAkPfH,SAhPW,SAACmG,EAAD,GAAuB,IAAbhG,EAAY,EAAZA,MACjCgG,EAAMC,iBACNqM,EAAiBtS,QAkPX,kBAACT,GAAA,EAAKE,MAAN,KACE,uCACA,kBAACC,GAAA,EAAD,CACEO,aAAcrE,GACd0X,UAAW,GACXpf,KAAK,OACL0L,YAAY,UACZC,SAAU,SAAAC,GAAC,OAAI+S,GAAQ/S,EAAEC,OAAOC,WAGpC,kBAACT,GAAA,EAAKE,MAAN,CAAY0T,UAAQ,GAClB,wCACA,kBAACzT,GAAA,EAAD,CACEO,aAAc5D,EACdiX,UAAW,EACXpf,KAAK,SACL0L,YAAY,WACZC,SAAU,SAAAC,GAAC,OAAIoP,EAAQpP,EAAEC,OAAOC,WAGpC,kBAACT,GAAA,EAAKE,MAAN,KACE,gDACA,kBAAC8T,GAAA,EAAD,CACEtT,aAAc6S,GACdjT,SAAU,SAAAC,GAAC,OAAIiT,GAAWjT,EAAEC,OAAOC,QACnCJ,YAAY,sBAGhB,kBAACM,GAAA,EAAD,CAaE9L,MAAM,QACN6K,QA1RU,WAMlB,GALAhJ,QAAQC,IAAI,sBAEG,OAAXqD,GACFuE,EAAMR,gBAAgB,8BAA+B,QAExC,OAAXiV,EAAiB,CACnB,IAAIxX,EAAyB,GAAhBD,SAASkX,GAAYlX,SAASoX,GACrC3Z,EAAgB,CACpB8C,YAAa9B,EACb6B,WAAY5B,EACZ2V,UAAWrR,EAAMkT,aAAa7B,UAC9BrB,SAAUhQ,EAAMkT,aAAalD,SAC7B6B,SAAU7R,EAAMkT,aAAarB,SAC7BxT,YAAa9D,EACb0C,SACAgB,UACAF,eAAgBwW,EAChBE,SACA/W,QAASiX,EACT/W,SAAUiX,EACVtW,OACAT,QACAkX,YAEF7c,QAAQC,IAAIqC,GACZuF,EAAMlB,YAAYrE,GAClBuF,EAAMR,gBAAN,iBACY/E,EAAc4D,YAD1B,0BAEE,eAEG,CACL,IAAIpB,EAAyB,GAAhBD,SAASkX,GAAYlX,SAASoX,GACrC3Z,EAAgB,CACpB8C,YAAa9B,EACb6B,WAAY5B,EACZ2V,UAAWrR,EAAMkT,aAAa7B,UAC9BrB,SAAUhQ,EAAMkT,aAAalD,SAC7B6B,SAAU7R,EAAMkT,aAAarB,SAC7BxT,YAAa9D,EACb0C,SACAgB,UACAF,eAAgBwW,EAChBE,OAAO,KAAD,OAAOA,EAAOS,QAAQ,MAAO,OAA7B,MACNxX,QAASiX,EACT/W,SAAUiX,EACVtW,OACAT,QACAkX,YAEF7c,QAAQC,IAAIqC,GACZuF,EAAMlB,YAAYrE,GAClBuF,EAAMR,gBAAN,iBACY/E,EAAc4D,YAD1B,0BAEE,cAsNE,sBAhM6B,OAA/B2B,EAAMuC,OAAOC,cACR,KAGL,kBAACJ,GAAA,EAAD,CAAQjB,QAASgU,GAAa7e,MAAM,QAApC,gCCtYOof,GAdS,SAAA1V,GAEtB,OADA7H,QAAQC,IAAI,wBAAyB4H,GAEnC,kBAAC4J,GAAA,EAAMC,IAAP,KACE,kBAACD,GAAA,EAAME,KAAP,KAAa9J,EAAM2V,IAAI1S,cACvB,kBAAC2G,GAAA,EAAME,KAAP,KACE,kBAAC,IAAD,CAAMhH,GAAE,mBAAc9C,EAAM2V,IAAInX,YAC7BwB,EAAM2V,IAAI5S,iBCsBN6S,GA7BK,SAAA5V,GAElB,OADA7H,QAAQC,IAAI,oBAAqB4H,GACP,OAAtBA,EAAM6V,YAEN,kBAACpM,GAAA,EAAD,KACE,kBAACE,GAAA,EAAD,qBAKJ,kBAAC,IAAMjC,SAAP,KACE,8CACA,kBAACkC,GAAA,EAAD,CAAOW,SAAO,GACZ,kBAACX,GAAA,EAAMrI,OAAP,KACE,kBAACqI,GAAA,EAAMC,IAAP,KACE,kBAACD,GAAA,EAAME,KAAP,kCACA,kBAACF,GAAA,EAAME,KAAP,kBAGJ,kBAACF,GAAA,EAAMY,KAAP,KACGxK,EAAM6V,YAAYvO,KAAI,SAAAqO,GAAG,OACxB,kBAAC,GAAD,CAAiBjS,IAAKiS,EAAInX,UAAWmX,IAAKA,WCoBvCG,GAJe9f,aANN,SAAAC,GACtB,MAAO,CACLsE,MAAOtE,EAAMsE,SAMf,CAAE0E,eAAaC,mBZ8CiB,SAAAvH,GAAE,8CAAI,WAAMI,GAAN,eAAArB,EAAA,sEAEpCqB,EAAS,CACP3B,K9C1B6B,wB8C4B/B2B,EAAS,CACP3B,KAAMG,IAN4B,SAQd+a,GAAapS,mBAAmBvH,GARlB,OAQ9B8Z,EAR8B,OASpC1Z,EAAS,CACP3B,K9ClC+B,wB8CmC/Ba,KAAMwa,IAX4B,gDAcpCtZ,QAAQC,IAAR,MAdoC,yDAAJ,wDYhDNpC,EAjCT,SAAAgK,GAQnB,OAPA7H,QAAQC,IAAI,qBAAsB4H,GAClCqK,qBAAU,WACRrK,EAAMd,mBAAmBc,EAAMrI,IAC/BqI,EAAMf,YAAYe,EAAMrI,MAEvB,IAE8B,OAA7BqI,EAAMzF,MAAM2Y,cAAqD,OAA5BlT,EAAMzF,MAAMsb,YAEjD,kBAAChO,GAAA,EAAD,KACE,kBAAC4B,GAAA,EAAD,KACE,kBAACE,GAAA,EAAD,sBAON,kBAAC9B,GAAA,EAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAkBqL,aAAclT,EAAMzF,MAAM2Y,aAAa,KACzD,kBAAC,GAAD,CAAa2C,YAAa7V,EAAMzF,MAAMsb,kBC0B7B7f,eAAQ,KAAM,CAAE+f,SjDVP,SAAAlc,GAAI,8CAAI,WAAM9B,GAAN,eAAArB,EAAA,sEAE5BqB,EAAS,CACP3B,KAAMG,IAHoB,SAKNyf,EAAa3d,MAAMwB,GALb,OAKtBuR,EALsB,OAM5BhM,OAAOC,aAAa4W,QAAQ,aAAcC,KAAKC,UAAU/K,IAGzDrT,EAAS,CACP3B,KVtDe,QUuDfa,KAAMmU,EACN5B,SAAS,IAZiB,gDAmB5BzR,EAAS,CACP3B,KAAM,mBACNa,KANc,CACdd,QAAS,6BACTC,KAAM,UAMRsJ,YAAW,WACT3H,EAAS,CACP3B,KAAM,yBAEP,KA3ByB,yDAAJ,uDiDUaoJ,oBAA1BxJ,EAhDG,SAAC,GAAkB,IAAhB+f,EAAe,EAAfA,SAAe,EACF9V,mBAAS,IADP,mBAC3BoL,EAD2B,KACjBC,EADiB,OAEFrL,mBAAS,IAFP,mBAE3BG,EAF2B,KAEjBC,EAFiB,KAK5B+V,EAAW,uCAAG,WAAMlO,GAAN,eAAAxR,EAAA,sDAClBwR,EAAMC,iBACAtO,EAAO,CACXwR,WACAjL,YAEFjI,QAAQC,IAAIyB,GACZkc,EAASlc,GAPS,2CAAH,sDASjB,OACE,6BACE,kEACA,qDACA,kBAAC,GAAD,MACA,kBAAC4H,GAAA,EAAD,CAAMC,SAAU0U,GACd,kBAAC3U,GAAA,EAAKE,MAAN,KACE,0DACA,2BACEvL,KAAK,OACL0L,YAAY,6BACZC,SAAU,SAAAC,GAAC,OAAIsJ,EAAYtJ,EAAEC,OAAOC,MAAMmU,YAG9C,kBAAC5U,GAAA,EAAKE,MAAN,KACE,2CACA,2BACEvL,KAAK,WACL0L,YAAY,cACZC,SAAU,SAAAC,GAAC,OAAI3B,EAAY2B,EAAEC,OAAOC,MAAMmU,YAG9C,kBAACjU,GAAA,EAAD,CAAQ9L,MAAM,QAAQF,KAAK,UAA3B,iBCuDOkgB,GALwBtgB,aATf,SAAAC,GAEtB,OADAkC,QAAQC,IAAI,yCAA0CnC,GAC/C,CACL2P,YAAa3P,EAAM2P,YACnB1P,aAAcD,EAAMC,aACpBmC,MAAOpC,EAAMoC,SAI+C,CAC9DyQ,uBACAyN,uBCxEoC,SAAArb,GAAM,8CAAI,WAAMnD,GAAN,iBAAArB,EAAA,sEAE5CqB,EAAS,CACP3B,KAAMG,IAHoC,SAKZ2O,EAAcjK,uBAC5CC,GAN0C,cAKtCsb,EALsC,OAQ5Cre,QAAQC,IAAIoe,GARgC,SAStBtR,EAAcnL,kBATQ,OAStCgP,EATsC,OAU5ChR,EAAS,CACP3B,K7DfkC,2B6DgBlCa,KAAM8R,IAERhR,EAAS,CACP3B,K7DlBkC,2B6DmBlCa,KAAMuf,IAhBoC,kDAmB5Cre,QAAQC,IAAR,MAnB4C,0DAAJ,wDDsELpC,EA9ET,SAAAgK,GAC5B7H,QAAQC,IAAI,gCAAiC4H,GADR,MAEDC,mBAAS,IAAI4E,MAFZ,mBAE9B4R,EAF8B,KAElBC,EAFkB,KAIrCrM,qBAAU,WACRrK,EAAM8I,oBAAoB9F,KAAOyT,GAAYvT,OAAO,cAEnD,CAACuT,IAgBJ,OAAsC,OAAlCzW,EAAM4F,YAAYA,YAElB,kBAACiC,GAAA,EAAD,KACE,kBAAC4B,GAAA,EAAD,CAAQC,QAAM,EAACxF,UAAQ,GACrB,kBAACyF,GAAA,EAAD,CAAQnG,KAAK,UAAb,kBAM0B,IAA9BxD,EAAM4F,YAAY4D,QAElB,kBAAC3B,GAAA,EAAD,KACE,kBAAC4B,GAAA,EAAD,CAAQC,QAAM,EAACxF,UAAQ,GACrB,kBAACyF,GAAA,EAAD,CAAQnG,KAAK,UAAb,iBAON,6BACE,kBAACjC,GAAA,EAAD,mCACA,kBAACE,GAAA,EAAD,KACE,kBAACA,GAAA,EAAKE,MAAN,KACE,kBAAC,KAAD,CACE6G,SAAUiO,EACVhO,WAAW,YACX1G,SAAU,SAAApI,GAAI,OAAI+c,EAAc/c,IAChCgd,qBAAmB,EACnBrO,OAAQC,QAGZ,kBAAC9G,GAAA,EAAKE,MAAN,MAGA,kBAACF,GAAA,EAAKE,MAAN,KACE,kBAACS,GAAA,EAAD,CAAQ9L,MAAM,OAAO6K,QApDL,WACtBhJ,QAAQC,IACN,0BACA4K,KAAOyT,GAAYvT,OAAO,YAE5B,IAAMhI,EAAS,CACb8K,QAAShG,EAAM3H,MAAMV,GACrBiR,OAAQ,EACRgO,OAAQ5T,KAAOyT,GAAYvT,OAAO,WAClC7H,SAAU2H,KAAO,IAAI6B,MAAQ3B,OAAO,kBAAoB,QAE1D/K,QAAQC,IAAI8C,GACZ8E,EAAMuW,uBAAuBrb,KAwCvB,aE7CK2b,GAJyB7gB,YAAQ,KAAM,CAAEoF,kBAAhBpF,EApBT,SAAAgK,GAI7B,OACE,kBAAC4J,GAAA,EAAMC,IAAP,KACE,kBAACD,GAAA,EAAME,KAAP,KAAa9J,EAAM8W,KAAKC,YACxB,kBAACnN,GAAA,EAAME,KAAP,KACG9J,EAAM8W,KAAKtW,WADd,IAC2BR,EAAM8W,KAAKnW,WAEtC,kBAACiJ,GAAA,EAAME,KAAP,KAAa9G,KAAOhD,EAAM8W,KAAKF,QAAQ1T,OAAO,YAC9C,kBAAC0G,GAAA,EAAME,KAAP,KACE,kBAAC,IAAD,CAAMhH,GAAG,IAAI3B,QAAS,kBAXH9F,EAW0B2E,EAAM8W,KAAKzb,cAV5DD,EAAeC,GADQ,IAAAA,IAYhB2E,EAAM8W,KAAKzb,eCwChBwQ,GAAqB,CACzB9R,gBFrD6B,yDAAM,WAAMhC,GAAN,eAAArB,EAAA,sEAEjCqB,EAAS,CACP3B,KAAMG,IAHyB,SAKX2O,EAAcnL,kBALH,OAK3BgP,EAL2B,OAOjChR,EAAS,CACP3B,K7DIkC,2B6DHlCa,KAAM8R,IATyB,gDAYjC5Q,QAAQC,IAAR,MAZiC,yDAAN,wDE6DhB4e,GALqBhhB,aAdZ,SAAAC,GAEtB,OADAkC,QAAQC,IAAI,6BAA8BnC,GACnC,CACLsM,OAAQtM,EAAMsM,OACdqD,YAAa3P,EAAM2P,YACnB1P,aAAcD,EAAMC,aACpBmC,MAAOpC,EAAMoC,SAUfwT,GAFkC7V,EAzDT,SAAAgK,GAOzB,OANA7H,QAAQC,IAAI,6BAA8B4H,GAC1CqK,qBAAU,WACRrK,EAAMjG,oBAEL,CAACiG,EAAM4F,YAAYqR,aAEuB,OAAzCjX,EAAM4F,YAAYsR,mBAElB,kBAACrP,GAAA,EAAD,KACE,kBAAC4B,GAAA,EAAD,CAAQC,QAAM,EAACxF,UAAQ,GACrB,kBAACyF,GAAA,EAAD,CAAQnG,KAAK,UAAb,iBAKkB,IAAtBxD,EAAM3H,MAAMyL,MAEZ,kBAAC+D,GAAA,EAAD,KACE,+CACA,kBAAC,GAAD,MACA,kBAAC+B,GAAA,EAAD,KACE,kBAACA,GAAA,EAAMrI,OAAP,KACE,kBAACqI,GAAA,EAAMC,IAAP,KACE,kBAACD,GAAA,EAAME,KAAP,wCACA,kBAACF,GAAA,EAAME,KAAP,0BACA,kBAACF,GAAA,EAAME,KAAP,2BACA,kBAACF,GAAA,EAAME,KAAP,yBAGJ,kBAACF,GAAA,EAAMY,KAAP,KACGxK,EAAM4F,YAAYsR,mBAAmB5P,KAAI,SAAAwP,GAAI,OAC5C,kBAAC,GAAD,CAAwBpT,IAAKoT,EAAKnf,GAAImf,KAAMA,UAO/C,QCaEtb,GAAsB,SAAAD,GAAK,8CAAI,WAAMxD,GAAN,iBAAArB,EAAA,+EAGlB+Y,EAAcjU,oBAAoBD,GAHhB,OAGlCqX,EAHkC,OAIxCza,QAAQC,IAAIwa,EAAQA,SAElB1B,OADsB2B,IAApBD,EAAQA,QACF,gBAC8B,SAA7BA,EAAQA,QAAQ,GAAGuE,MACpBvE,EAAQA,QAAQ,GAAGuE,MACW,SAA7BvE,EAAQA,QAAQ,GAAGuE,MACpBvE,EAAQA,QAAQ,GAAGuE,MACW,SAA7BvE,EAAQA,QAAQ,GAAGuE,MACpBvE,EAAQA,QAAQ,GAAGuE,MACW,SAA7BvE,EAAQA,QAAQ,GAAGuE,MACpBvE,EAAQA,QAAQ,GAAGuE,MACW,SAA7BvE,EAAQA,QAAQ,GAAGuE,MACpBvE,EAAQA,QAAQ,GAAGuE,MAEnB,gBAEVhf,QAAQC,IAAI8Y,GACZnZ,EAAS,CACP3B,KhE7B2B,oBgE8B3Ba,KAAMia,IAvBgC,kDA0BxC/Y,QAAQC,IAAR,MA1BwC,0DAAJ,uDA8B3Bgf,GAAoB,yDAAM,WAAMrf,GAAN,SAAArB,EAAA,sDACrC,IACEqB,EAAS,CACP3B,KhEvC6B,wBgEyC/B,MAAO2J,GACP5H,QAAQC,IAAI2H,GANuB,2CAAN,uDCimBlBsX,GARcrhB,aARL,SAAAC,GACtB,MAAO,CACLsM,OAAQtM,EAAMsM,OACdqD,YAAa3P,EAAM2P,YACnBvN,MAAOpC,EAAMoC,MACb4P,OAAQhS,EAAMgS,UAGoC,CACpDzI,mBACAX,anBnoB0B,SAAA5E,GAAU,8CAAI,WAAMlC,GAAN,eAAArB,EAAA,+EAElB4a,GAAazS,aAAa5E,GAFR,OAEhCM,EAFgC,OAGtCpC,QAAQC,IAAImC,GAH0B,gDAKtCpC,QAAQC,IAAR,MALsC,yDAAJ,uDmBooBpCwG,eACApD,uBACA4b,sBAL2BphB,EAhqBT,SAAAgK,GAClB7H,QAAQC,IAAI,+BAAgC4H,GADjB,MAEOC,oBAAS,GAFhB,mBAEpBC,EAFoB,KAETC,EAFS,OAGCF,mBAAS,IAHV,mBAGpBxE,EAHoB,KAGZgV,EAHY,OAIDxQ,mBAAS,IAJR,mBAIpBvE,EAJoB,KAIboY,EAJa,OAKD7T,mBAAS,IALR,mBAKpB1F,EALoB,KAKbwZ,EALa,OAML9T,mBAAS,IANJ,mBAMpBiU,EANoB,KAMfC,EANe,OAOLlU,mBAAS,IAPJ,mBAOpBmU,EAPoB,KAOfC,EAPe,OAQGpU,mBAAS,IARZ,mBAQpBhC,EARoB,KAQXqW,EARW,OASerU,mBAAS,IATxB,mBASpBsU,EAToB,KASLC,EATK,OAUCvU,mBAAS,IAVV,mBAUpBwU,EAVoB,KAUZC,EAVY,OAWCzU,mBAAS,IAXV,mBAWpB0U,EAXoB,KAWZC,EAXY,OAYG3U,mBAAS,IAZZ,mBAYpB4U,EAZoB,KAYXC,EAZW,OAaH7U,mBAAS,IAbN,mBAapB1B,EAboB,KAad6S,EAbc,OAcDnR,mBAAS,IAdR,mBAcpB7B,GAdoB,KAcb6S,GAda,QAeDhR,mBAAS,IAfR,qBAepBiR,GAfoB,MAebC,GAfa,SAgBHlR,mBAAS,IAhBN,qBAgBpBnC,GAhBoB,MAgBdiX,GAhBc,SAiBG9U,mBAAS,IAjBZ,qBAiBpB+U,GAjBoB,MAiBXC,GAjBW,MAkB3B5K,qBAAU,WAC0B,OAA9BrK,EAAMiI,OAAOqP,aACfnG,GAAS,IAETA,GAASnR,EAAMiI,OAAOqP,gBAEvB,CAACtX,EAAMiI,OAAOqP,eAEjB,IAsDMC,GAAqB,WACzBpf,QAAQC,IAAI,sBAEG,OAAXqD,GACFuE,EAAMR,gBAAgB,8BAA+B,QAEvD,IAAIvC,EAAyB,GAAhBD,SAASkX,GAAYlX,SAASoX,GAC3C,GAAe,OAAXK,EAAiB,CACnB,IAAMxa,EAAa,CACjBsD,YAAa9B,EACb6B,WAAY5B,EACZ2C,YAAa9D,EACb0C,SACAgB,UACAF,eAAgBwW,EAChBE,SACA/W,QAASiX,EACT/W,SAAUiX,EACVtW,OACAH,SACAZ,OAAQ0T,GACRpT,QACAkX,WACAxW,UAAWwB,EAAMuC,OAAOC,cAAc7K,GACtCqO,QAAShG,EAAM3H,MAAMV,GACrB+C,cAAesF,EAAMuC,OAAOA,OAAOtF,OAAS,GAE9C9E,QAAQC,IAAI6B,GACZ+F,EAAMpB,YAAY3E,GAClB+F,EAAMR,gBAAN,UACKvF,EAAWoE,YADhB,iDACiE2B,EAAMuC,OAAOC,cAAcO,aAD5F,KAEE,WAEF/B,SACK,CACL,IAAM/G,EAAa,CACjBsD,YAAa9B,EACb6B,WAAY5B,EACZ2C,YAAa9D,EACb0C,SACAgB,UACAF,eAAgBwW,EAChBE,OAAO,KAAD,OAAOA,EAAOS,QAAQ,MAAO,OAA7B,MACNxX,QAASiX,EACT/W,SAAUiX,EACVtW,OACAH,SACAZ,OAAQ0T,GACRpT,QACAkX,WACAxW,UAAWwB,EAAMuC,OAAOC,cAAc7K,GACtCqO,QAAShG,EAAM3H,MAAMV,GACrB+C,cAAesF,EAAMuC,OAAOA,OAAOtF,OAAS,GAE9C9E,QAAQC,IAAI6B,GACZ+F,EAAMpB,YAAY3E,GAClB+F,EAAMR,gBAAN,UACKvF,EAAWoE,YADhB,iDACiE2B,EAAMuC,OAAOC,cAAcO,aAD5F,KAEE,WAEF/B,OAgTEA,GAAc,WAClBb,GAAa,IASf,OACE,kBAACc,GAAA,EAAD,CACEI,KAAMnB,EACNkB,WAAS,EACTF,QACE,kBAACkB,GAAA,EAAD,CAAQ9L,MAAM,OAAO6K,QAlBR,WACjBhB,GAAa,KAiBT,0BAIFmB,QAASN,IAET,kBAACO,GAAA,EAAD,CAAQ9B,QAAQ,2BAChB,kBAACwB,GAAA,EAAMO,QAAP,KACE,kBAACC,GAAA,EAAD,CAAMC,SAzbQ,WAClBvJ,QAAQC,IAAI,sBAEG,OAAXqD,GACFuE,EAAMR,gBAAgB,8BAA+B,QAEvD,IAAIvC,EAAyB,GAAhBD,SAASkX,GAAYlX,SAASoX,GAC3C,GAAe,OAAXK,EAAiB,CACnB,IAAMxa,EAAa,CACjBsD,YAAa9B,EACb6B,WAAY5B,EACZ2C,YAAa9D,EACb0C,SACAgB,UACAF,eAAgBwW,EAChBE,SACA/W,QAASiX,EACT/W,SAAUiX,EACVtW,OACAH,SACAZ,OAAQ0T,GACRpT,QACAkX,WACAhP,QAAShG,EAAM3H,MAAMV,IAEvBQ,QAAQC,IAAI6B,GACZ+F,EAAMnB,aAAa5E,GACnB+F,EAAMR,gBAAN,UAAyBvF,EAAWoE,YAApC,gBAA4D,WAC5D2C,SACK,CACL,IAAM/G,EAAa,CACjBsD,YAAa9B,EACb6B,WAAY5B,EACZ2C,YAAa9D,EACb0C,SACAgB,UACAF,eAAgBwW,EAChBE,OAAO,KAAD,OAAOA,EAAOS,QAAQ,MAAO,OAA7B,MACNxX,QAASiX,EACT/W,SAAUiX,EACVtW,OACAH,SACAZ,OAAQ0T,GACRpT,QACAkX,WACAhP,QAAShG,EAAM3H,MAAMV,IAEvBQ,QAAQC,IAAI6B,GACZ+F,EAAMnB,aAAa5E,GACnB+F,EAAMR,gBAAN,UAAyBvF,EAAWoE,YAApC,gBAA4D,WAC5D2C,QAwYI,kBAACS,GAAA,EAAKE,MAAN,CAAY0T,UAAQ,GAClB,2CACA,kBAACzT,GAAA,EAAD,CACEM,MAAOzG,EACPrF,KAAK,OACL0L,YAAY,aACZC,SAAU,SAAAC,GAAC,OAAIyO,EAAUzO,EAAEC,OAAOC,WAGtC,kBAACT,GAAA,EAAKE,MAAN,CAAY0T,UAAQ,GAClB,yCACA,kBAACzT,GAAA,EAAD,CACEM,MAAOxG,EACPtF,KAAK,OACL0L,YAAY,YACZC,SAAU,SAAAC,GAAC,OAAI8R,EAAS9R,EAAEC,OAAOC,WAGrC,kBAACT,GAAA,EAAKE,MAAN,CAAY0T,UAAQ,GAClB,wCACA,kBAACzT,GAAA,EAAD,CACEM,MAAO3H,EACPnE,KAAK,OACL0L,YAAY,WACZC,SAAU,SAAAC,GAAC,OAAI+R,EAAS/R,EAAEC,OAAOC,WAGrC,kBAACT,GAAA,EAAK2G,MAAN,CAAYC,OAAO,SACjB,kBAAC5G,GAAA,EAAKE,MAAN,CAAY0T,UAAQ,GAClB,mDACA,kBAACzT,GAAA,EAAD,CACE4T,UAAW,EACXtT,MAAOgS,EACP9d,KAAK,SACL0L,YAAY,eACZC,SAAU,SAAAC,GAAC,OAAImS,EAAOnS,EAAEC,OAAOC,WAGnC,kBAACT,GAAA,EAAKE,MAAN,CAAY0T,UAAQ,GAClB,mDACA,kBAACzT,GAAA,EAAD,CACEM,MAAOkS,EACPoB,UAAW,EACXpf,KAAK,SACL0L,YAAY,cACZC,SAAU,SAAAC,GAAC,OAAIqS,EAAOrS,EAAEC,OAAOC,YAIrC,kBAACT,GAAA,EAAK2G,MAAN,CAAYC,OAAO,SACjB,kBAAC5G,GAAA,EAAKE,MAAN,CAAY0T,UAAQ,GAClB,wCACA,kBAACzT,GAAA,EAAD,CACE4T,UAAW,EACXtT,MAAOyS,EACPve,KAAK,SACL0L,YAAY,8BACZC,SAAU,SAAAC,GAAC,OAAI4S,EAAU5S,EAAEC,OAAOC,WAGtC,kBAACT,GAAA,EAAKE,MAAN,CAAY0T,UAAQ,GAClB,yCACA,kBAACzT,GAAA,EAAD,CACEM,MAAO2S,EACPW,UAAW,EACXpf,KAAK,SACL0L,YAAY,aACZC,SAAU,SAAAC,GAAC,OAAI8S,EAAW9S,EAAEC,OAAOC,YAIzC,kBAACT,GAAA,EAAKE,MAAN,KACE,yFACA,kBAAC8T,GAAA,EAAD,CACE1T,SAAU,SAAAC,GAAC,OAAI0S,EAAU1S,EAAEC,OAAOC,QAClCJ,YAAY,2BAGhB,kBAACL,GAAA,EAAK2G,MAAN,CAAYC,OAAO,SACjB,kBAAC5G,GAAA,EAAKE,MAAN,KACE,6DAEE,0BAAMtL,MAAO,CAAEC,MAAO,QACpB,uCAGJ,kBAACoO,GAAA,EAAD,CACE5C,YAAY,2BACZiG,aAAa,EACb7F,MAAOjE,EACP+J,WAAS,EACTvE,QAnYS,CACrB,CACEC,IAAK,EACLC,KAAM,QACNzB,MAAO,GAET,CACEwB,IAAK,EACLC,KAAM,MACNzB,MAAO,GAET,CACEwB,IAAK,EACLC,KAAM,YACNzB,MAAO,OAsXGH,SAnXK,SAACmG,EAAD,GAAuB,IAAbhG,EAAY,EAAZA,MAC3BgG,EAAMC,iBACNmM,EAAWpS,OAoXH,kBAACT,GAAA,EAAKE,MAAN,KACE,+CACA,kBAAC+C,GAAA,EAAD,CACE5C,YAAY,0BACZiG,aAAa,EACb7F,MAAOqS,EACPvM,WAAS,EACTC,QAAM,EACNxE,QA1Xe,CAC3B,CAAEE,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,iBAAkBzB,MAAO,MACjC,CAAEyB,KAAM,gBAAiBzB,MAAO,MAChC,CAAEyB,KAAM,cAAezB,MAAO,MAC9B,CAAEyB,KAAM,mBAAiBzB,MAAO,MAChC,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,iBAAkBzB,MAAO,MACjC,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,sBAAuBzB,MAAO,MACtC,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,yBAA0BzB,MAAO,MACzC,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,gBAAiBzB,MAAO,MAChC,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,iCAAkCzB,MAAO,MACjD,CAAEyB,KAAM,oBAAqBzB,MAAO,MACpC,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,eAAgBzB,MAAO,MAC/B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,iBAAkBzB,MAAO,MACjC,CAAEyB,KAAM,2BAA4BzB,MAAO,MAC3C,CAAEyB,KAAM,OAAQzB,MAAO,MACvB,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,mBAAoBzB,MAAO,MACnC,CAAEyB,KAAM,0BAA2BzB,MAAO,MAC1C,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,wCAAyCzB,MAAO,MACxD,CAAEyB,KAAM,eAAgBzB,MAAO,MAC/B,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,gBAAiBzB,MAAO,MAChC,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,OAAQzB,MAAO,MACvB,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,iBAAkBzB,MAAO,MACjC,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,qBAAsBzB,MAAO,MACrC,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,cAAezB,MAAO,MAC9B,CAAEyB,KAAM,oBAAqBzB,MAAO,MACpC,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,8BAA+BzB,MAAO,MAC9C,CAAEyB,KAAM,gBAAiBzB,MAAO,MAChC,CAAEyB,KAAM,OAAQzB,MAAO,MACvB,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,gBAAiBzB,MAAO,MAChC,CAAEyB,KAAM,mBAAoBzB,MAAO,MACnC,CAAEyB,KAAM,8BAA+BzB,MAAO,MAC9C,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,OAAQzB,MAAO,MACvB,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,gBAAiBzB,MAAO,MAChC,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,oCAAqCzB,MAAO,MACpD,CAAEyB,KAAM,gCAAiCzB,MAAO,MAChD,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,4BAA6BzB,MAAO,MAC5C,CAAEyB,KAAM,OAAQzB,MAAO,MACvB,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,cAAezB,MAAO,MAC9B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,yCAA0CzB,MAAO,MACzD,CAAEyB,KAAM,qBAAsBzB,MAAO,MACrC,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,mCAAoCzB,MAAO,MACnD,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,yBAA0BzB,MAAO,MACzC,CAAEyB,KAAM,gBAAiBzB,MAAO,MAChC,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,6CAA8CzB,MAAO,MAC7D,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,OAAQzB,MAAO,MACvB,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,mBAAoBzB,MAAO,MACnC,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,kCAAmCzB,MAAO,MAClD,CAAEyB,KAAM,uBAAwBzB,MAAO,MACvC,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,cAAezB,MAAO,MAC9B,CAAEyB,KAAM,uBAAwBzB,MAAO,MACvC,CAAEyB,KAAM,gBAAiBzB,MAAO,MAChC,CAAEyB,KAAM,cAAezB,MAAO,MAC9B,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,OAAQzB,MAAO,MACvB,CAAEyB,KAAM,iBAAkBzB,MAAO,MACjC,CAAEyB,KAAM,2BAA4BzB,MAAO,MAC3C,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,OAAQzB,MAAO,MACvB,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,kCAAmCzB,MAAO,MAClD,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,mBAAoBzB,MAAO,MACnC,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,OAAQzB,MAAO,MACvB,CAAEyB,KAAM,cAAezB,MAAO,MAC9B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,cAAezB,MAAO,MAC9B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,qBAAsBzB,MAAO,MACrC,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,eAAgBzB,MAAO,MAC/B,CAAEyB,KAAM,wBAAyBzB,MAAO,MACxC,CAAEyB,KAAM,cAAezB,MAAO,MAC9B,CAAEyB,KAAM,4BAA6BzB,MAAO,MAC5C,CAAEyB,KAAM,mCAAoCzB,MAAO,MACnD,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,wBAAyBzB,MAAO,MACxC,CAAEyB,KAAM,eAAgBzB,MAAO,MAC/B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,eAAgBzB,MAAO,MAC/B,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,kBAAmBzB,MAAO,MAClC,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,eAAgBzB,MAAO,MAC/B,CAAEyB,KAAM,+CAAgDzB,MAAO,MAC/D,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,yBAA0BzB,MAAO,MACzC,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,cAAezB,MAAO,MAC9B,CAAEyB,KAAM,uBAAwBzB,MAAO,MACvC,CAAEyB,KAAM,4BAA6BzB,MAAO,MAC5C,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,+BAAgCzB,MAAO,MAC/C,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,cAAezB,MAAO,MAC9B,CAAEyB,KAAM,OAAQzB,MAAO,MACvB,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,sBAAuBzB,MAAO,MACtC,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,eAAgBzB,MAAO,MAC/B,CAAEyB,KAAM,2BAA4BzB,MAAO,MAC3C,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,uBAAwBzB,MAAO,MACvC,CAAEyB,KAAM,uCAAwCzB,MAAO,MACvD,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,0BAA2BzB,MAAO,MAC1C,CAAEyB,KAAM,uBAAwBzB,MAAO,MACvC,CAAEyB,KAAM,oBAAqBzB,MAAO,MACpC,CAAEyB,KAAM,iBAAkBzB,MAAO,MACjC,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,WAAYzB,MAAO,OAyIfH,SAvIW,SAACmG,EAAD,GAAuB,IAAbhG,EAAY,EAAZA,MACjCgG,EAAMC,iBACNqM,EAAiBtS,QAyIX,kBAACT,GAAA,EAAKE,MAAN,KACE,4CAEE,0BAAMtL,MAAO,CAAEC,MAAO,QACpB,uCAGJ,kBAACsL,GAAA,EAAD,CACEM,MAAO9D,GACPhI,KAAK,OACL0L,YAAY,gBACZC,SAAU,SAAAC,GAAC,OAAIiP,GAASjP,EAAEC,OAAOC,WAGrC,kBAACT,GAAA,EAAKE,MAAN,CAAY0T,UAAQ,GAClB,2BAAOhf,MAAO,CAAEoM,QAAS,WAAzB,aACA,kBAACL,GAAA,EAAD,CACEjB,QAAS,SAAAa,GAAC,OAlJH,WACjB,IAAMzG,EAAQ,CACZE,SACAC,SAEFsE,EAAMxE,oBAAoBD,GA6IFic,CAAWxV,EAAEmG,mBAC3B3E,KAAK,OACLiI,QAAQ,QACRpV,MAAO,CAAEwM,aAAc,WAJzB,6BAQA,kBAACjB,GAAA,EAAD,CACEM,MAAOgP,GACP9a,KAAK,OACL0L,YAAY,eACZC,SAAU,SAAAC,GAAC,OAAImP,GAASnP,EAAEC,OAAOC,WAGrC,kBAACT,GAAA,EAAKE,MAAN,KACE,uCACA,kBAACC,GAAA,EAAD,CACEM,MAAOpE,GACP0X,UAAW,GACXpf,KAAK,OACL0L,YAAY,UACZC,SAAU,SAAAC,GAAC,OAAI+S,GAAQ/S,EAAEC,OAAOC,WAGpC,kBAACT,GAAA,EAAKE,MAAN,KACE,uCAEE,0BAAMtL,MAAO,CAAEC,MAAO,QACpB,uCAGJ,kBAACsL,GAAA,EAAD,CACEM,MAAO3D,EACPiX,UAAW,EACXpf,KAAK,SACL0L,YAAY,WACZC,SAAU,SAAAC,GAAC,OAAIoP,EAAQpP,EAAEC,OAAOC,WAGpC,kBAACT,GAAA,EAAKE,MAAN,KACE,gDACA,kBAAC8T,GAAA,EAAD,CACE1T,SAAU,SAAAC,GAAC,OAAIiT,GAAWjT,EAAEC,OAAOC,QACnCJ,YAAY,sBAGhB,kBAACM,GAAA,EAAD,CACEC,UACG5G,IACAC,IACAnB,IACAsa,IACAF,IACAT,IACAE,IACAhW,KACA8S,KACA3S,EAEHjI,MAAM,OACNF,KAAK,UAdP,YA7e6B,OAA/B4J,EAAMuC,OAAOC,cACR,KAGL,kBAACJ,GAAA,EAAD,CACEC,UACG5G,IACAC,IACAnB,IACAsa,IACAF,IACAT,IACAE,IACAhW,KACA8S,KACA3S,EAEH4C,QAASoW,GACTjhB,MAAM,SAdR,4CCzFOmhB,GAFazhB,YAAQ,KAAM,CAAEgG,eF9Cd,SAAAC,GAAY,8CAAI,WAAMlE,GAAN,eAAArB,EAAA,sEAE1CqB,EAAS,CACP3B,KhEiB4B,uBgEpBY,SAKpBqZ,EAAczT,eAAeC,GALT,OAKpC2W,EALoC,OAM1Cza,QAAQC,IAAIwa,GACZ7a,EAAS,CACP3B,KhEU0B,mBgET1Ba,KAAM2b,IATkC,gDAY1Cza,QAAQC,IAAR,MAZ0C,yDAAJ,wDE8CdpC,EAvET,SAAAgK,GAAU,IAAD,EACcC,mBAAS,IADvB,mBACnByX,EADmB,KACLC,EADK,OAEc1X,mBAAS,MAFvB,mBAEnB2X,EAFmB,KAELC,EAFK,KAkC1B,OACE,kBAAClQ,GAAA,EAAD,CAAMuD,QAAS,GACb,kBAACvD,GAAA,EAAKC,OAAN,KACE,kBAACnG,GAAA,EAAD,KACE,kBAACA,GAAA,EAAKE,MAAN,KACE,2CACA,kBAACC,GAAA,EAAD,CACEE,YAAY,cACZ1L,KAAK,OACL8L,MAAOwV,EACP3V,SAAU,SAAAC,GAAC,OAAI2V,EAAgB3V,EAAEC,OAAOC,WAG5C,kBAACT,GAAA,EAAKE,MAAN,KACE,8EACA,kBAAC+C,GAAA,EAAD,CACEqD,aAAW,EACXC,WAAS,EACT7F,aAAcyV,EACdnU,QAjDgB,CAC1B,CACEC,IAAK,EACLC,KAAM,QACNzB,MAAO,MAET,CACEwB,IAAK,EACLC,KAAM,UACNzB,MAAO,MAET,CACEwB,IAAK,EACLC,KAAM,QACNzB,MAAO,OAoCCH,SAjCY,SAACC,EAAD,GAAmB,IAAbE,EAAY,EAAZA,MAC5BF,EAAEmG,iBACF0P,EAAgB3V,MAgCL,KAEL,kBAACE,GAAA,EAAD,CAAQ9L,MAAM,OAAO6K,QA/BR,WACnB,IAAMlF,EAAe,CACnBV,MAAOmc,EACPxb,KAAM0b,GAERzf,QAAQC,IAAI6D,GACZ+D,EAAMhE,eAAeC,KAyBf,SAKJ,kBAAC0L,GAAA,EAAKC,OAAN,KACE,0BAAMvR,MAAO,CAAEqM,MAAO,UACpB,kBAAC,GAAD,YCwCKoV,GANe9hB,aAPN,SAAAC,GAEtB,MAAO,CACLgS,OAAQhS,EAAMgS,UAIqC,CACrD8P,oBxB1DiC,SAAAxe,GAAW,8CAAI,WAAMxB,GAAN,mBAAArB,EAAA,sEAE9CqB,EAAS,CACP3B,KAAMG,IAHsC,SAKpBkZ,EAActT,MAAM5C,GALA,cAKxCoV,EALwC,OAM9CxW,QAAQC,IAAIuW,GANkC,SAOzB2B,EAAc9X,aAAae,EAAY0V,SAPd,cAOxCxT,EAPwC,OAQ9C1D,EAAS,CACP3B,K3CiBwB,iB2ChBxBa,KAAMwE,IAVsC,UAYtB6U,EAAc7X,kBACpCc,EAAY0V,SAbgC,QAYxCc,EAZwC,OAe9ChY,EAAS,CACP3B,K3CWkC,2B2CVlCa,KAAM8Y,IAjBsC,kDAoB9C5X,QAAQC,IAAR,MApB8C,0DAAJ,uDwB2D5C4f,kBxBnC+B,SAAAze,GAAW,8CAAI,WAAMxB,GAAN,SAAArB,EAAA,sDAC9CqB,EAAS,CACP3B,K3CGyB,gB2CFzBa,KAAMsC,IAHsC,2CAAJ,uDwBoC1CiG,oBAH4BxJ,EA/FT,SAAAgK,GAAS,MAEMC,oBAAS,GAFf,mBAErBC,EAFqB,KAEVC,EAFU,OAGcF,mBAAS,MAHvB,mBAGrBgY,EAHqB,KAGNC,EAHM,KAItBpJ,EAAa,WACjB3O,GAAa,IAETa,EAAc,WAClBb,GAAa,IAEf,GAAKD,EAME,CACL,IAoBM6O,EAAeoJ,MAAMC,KACzB,IAAIC,IAAIrY,EAAMiI,OAAOqQ,gBAAgBhR,KAAI,SAAAmD,GAAC,OAAIA,EAAE4G,eAChD/J,KAAI,SAAA+J,GACJ,MAAO,CACL3N,IAAK2N,EACL1N,KAAK,GAAD,OAAK0N,EAAL,aACFrR,EAAMiI,OAAOqQ,gBAAgBC,MAAK,SAAA9N,GAAC,OAAIA,EAAE4G,YAAcA,KACpD9T,aAEL2E,MAAOmP,MAOX,OACE,kBAACpQ,GAAA,EAAD,CACEI,KAAMnB,EACNkB,WAAS,EACTE,QAASN,EACTE,QACE,4BAAQwJ,UAAU,WAAWvJ,QAAS2N,GACnC9O,EAAMqR,YAIX,kBAAC9P,GAAA,EAAD,6BACqBvB,EAAMqR,UAD3B,MACyCrR,EAAMzC,YAD/C,WAGA,kBAAC0D,GAAA,EAAMO,QAAP,KACE,kBAAC,EAAD,MACA,kBAACC,GAAA,EAAD,CAAMC,SApDK,WACf,IAAM8W,EAAYxY,EAAMqR,UACxBlZ,QAAQC,IAAI,UAAW6f,EAAe,OAAQO,GAC9C,IAAMjf,EAAc,CAClBnD,KAAM,SACN6Y,QAASjP,EAAMqR,UACflV,MAAO8b,EACPQ,QAASzY,EAAMzC,aAEbhE,EAAY4C,QAAU5C,EAAY0V,QACpCjP,EAAMR,gBAAgB,mBAAoB,SAE1CQ,EAAM+X,oBAAoBxe,GAC1ByG,EAAMgY,kBAAkBze,GACxByG,EAAMR,gBAAgB,wBAAsB,WAC5CwB,IACA7I,QAAQC,IAAImB,MAqCR,kBAACkI,GAAA,EAAKE,MAAN,KACE,kBAAC+C,GAAA,EAAD,CACE3C,SAvBa,SAACC,EAAD,GAAmB,IAAbE,EAAY,EAAZA,MAC7BF,EAAEmG,iBACF+P,EAAiBhW,IAsBP8F,WAAS,EACTC,QAAM,EACNxE,QAASsL,KAGb,kBAACtN,GAAA,EAAKE,MAAN,KACE,kBAACS,GAAA,EAAD,CAAQhM,KAAK,UAAb,kBApEV,OACE,4BAAQsU,UAAU,WAAWvJ,QAAS2N,GACnC9O,EAAMqR,cC0FAqH,GANc1iB,aAPL,SAAAC,GAEtB,MAAO,CACLgS,OAAQhS,EAAMgS,UAIoC,CACpDuH,sBACAmJ,iB9BrC8B,SAAApf,GAAW,8CAAI,WAAMxB,GAAN,SAAArB,EAAA,sDAC7CqB,EAAS,CACP3B,KtCSwB,esCRxBa,KAAMsC,IAHqC,2CAAJ,uD8BsCzCiG,oBAH2BxJ,EA/FT,SAAAgK,GAAS,MAEOC,oBAAS,GAFhB,mBAEpBC,EAFoB,KAETC,EAFS,OAGaF,mBAAS,MAHtB,mBAGpB4P,EAHoB,KAGNC,EAHM,KAIrBhB,EAAa,WACjB3O,GAAa,IAETa,EAAc,WAClBb,GAAa,IAEf,GAAKD,EAME,CACL,IAkBM6O,EAAeoJ,MAAMC,KACzB,IAAIC,IAAIrY,EAAMiI,OAAOqQ,gBAAgBhR,KAAI,SAAAmD,GAAC,OAAIA,EAAEuF,cAChD1I,KAAI,SAAA0I,GACJ,MAAO,CACLtM,IAAKsM,EACLrM,KAAK,GAAD,OAAKqM,EAAL,aACFhQ,EAAMiI,OAAOqQ,gBAAgBC,MAAK,SAAA9N,GAAC,OAAIA,EAAEuF,WAAaA,KACnD1S,YAEL4E,MAAO8N,MAQX,OACE,kBAAC/O,GAAA,EAAD,CACEI,KAAMnB,EACNkB,WAAS,EACTE,QAASN,EACTE,QACE,4BAAQwJ,UAAU,WAAWvJ,QAAS2N,GACnC9O,EAAMgQ,WAIX,kBAACzO,GAAA,EAAD,4BACoBvB,EAAMgQ,SAD1B,MACuChQ,EAAM1C,WAD7C,WAGA,kBAAC2D,GAAA,EAAMO,QAAP,KACE,kBAAC,EAAD,MAEA,kBAACC,GAAA,EAAD,CAAMC,SApDK,WACf,IAAMnI,EAAc,CAClBnD,KAAM,QACN+F,MAAO0T,EACPZ,QAASjP,EAAMgQ,SACfyI,QAASzY,EAAM1C,YAEjBnF,QAAQC,IAAImB,GACRA,EAAY4C,QAAU5C,EAAY0V,QACpCjP,EAAMR,gBAAgB,kBAAmB,SAEzCQ,EAAM2Y,iBAAiBpf,GACvByG,EAAMwP,mBAAmBjW,GACzByG,EAAMR,gBAAgB,wBAAsB,WAC5CwB,OAuCI,kBAACS,GAAA,EAAKE,MAAN,KACE,kBAAC+C,GAAA,EAAD,CACE3C,SAxBY,SAACC,EAAD,GAAmB,IAAbE,EAAY,EAAZA,MAC5BF,EAAEmG,iBACF2H,EAAgB5N,IAuBN8F,WAAS,EACTC,QAAM,EACNxE,QAASsL,KAGb,kBAACtN,GAAA,EAAKE,MAAN,KACE,kBAACS,GAAA,EAAD,CAAQhM,KAAK,UAAb,kBApEV,OACE,4BAAQsU,UAAU,WAAWvJ,QAAS2N,GACnC9O,EAAMgQ,aC+EA4I,GANc5iB,aAPL,SAAAC,GAEtB,MAAO,CACLgS,OAAQhS,EAAMgS,UAIoC,CACpDuJ,sBACAqH,iBvBoE8B,SAAAtf,GAAW,8CAAI,WAAMxB,GAAN,SAAArB,EAAA,sDAC7CqB,EAAS,CACP3B,K9CnGwB,e8CoGxBa,KAAMsC,IAHqC,2CAAJ,uDuBnEzCiG,oBAH2BxJ,EAvFT,SAAAgK,GAAS,MAEOC,oBAAS,GAFhB,mBAEpBC,EAFoB,KAETC,EAFS,OAGaF,mBAAS,MAHtB,mBAGpB0R,EAHoB,KAGNC,EAHM,KAIrB9C,EAAa,WACjB3O,GAAa,IAETa,EAAc,WAClBb,GAAa,IAEf,GAAKD,EAME,CACL,IAkBM6O,EAAe/O,EAAMiI,OAAOqQ,gBAAgBhR,KAAI,SAAA/M,GAAK,MAAK,CAC9DmJ,IAAKnJ,EAAMsX,SACXlO,KAAK,GAAD,OAAKpJ,EAAMsX,SAAX,cAAyBtX,EAAM8D,aACnC6D,MAAO3H,EAAMsX,aAMf,OACE,kBAAC5Q,GAAA,EAAD,CACEI,KAAMnB,EACNkB,WAAS,EACTE,QAASN,EACTE,QACE,4BAAQwJ,UAAU,WAAWvJ,QAAS2N,GACnC9O,EAAM6R,WAIX,kBAACtQ,GAAA,EAAD,2BACmBvB,EAAM6R,SADzB,MACsC7R,EAAM3B,YAD5C,YAGA,kBAAC4C,GAAA,EAAMO,QAAP,KACE,kBAAC,EAAD,MAEA,kBAACC,GAAA,EAAD,CAAMC,SA5CK,WACf,IAAMnI,EAAc,CAClBnD,KAAM,QACN+F,MAAOwV,EACP1C,QAASjP,EAAM6R,SACf4G,QAASzY,EAAM3B,aAEjBlG,QAAQC,IAAImB,GACRA,EAAY4C,QAAU5C,EAAY0V,QACpCjP,EAAMR,gBAAgB,iBAAkB,SAExCQ,EAAMwR,mBAAmBjY,GACzByG,EAAM6Y,iBAAiBtf,GACvByG,EAAMR,gBAAgB,wBAAsB,WAC5CwB,OA+BI,kBAACS,GAAA,EAAKE,MAAN,KACE,kBAAC+C,GAAA,EAAD,CACE3C,SAxBY,SAACC,EAAD,GAAmB,IAAbE,EAAY,EAAZA,MAC5BF,EAAEmG,iBACFyJ,EAAgB1P,IAuBN8F,WAAS,EACTC,QAAM,EACNxE,QAASsL,KAGb,kBAACtN,GAAA,EAAKE,MAAN,KACE,kBAACS,GAAA,EAAD,CAAQhM,KAAK,UAAb,kBA5DV,OACE,4BAAQsU,UAAU,WAAWvJ,QAAS2N,GACnC9O,EAAM6R,aC2BTxb,GAAQ,CACZkR,aAAc,EACd9E,QAAS,QACT+E,QAAS,GACTC,QAAS,OAaIqR,GALqB9iB,aALZ,SAAAC,GACtB,MAAO,CACLsM,OAAQtM,EAAMsM,UAG2C,CAC3D/C,mBACAxF,qBAFkChE,EAvDT,SAAAgK,GAAU,IAAD,EACFC,oBAAS,GADP,mBAC3BiH,EAD2B,KACjBC,EADiB,KAElC,IAAKnH,EAAMuC,OAAOC,cAChB,OAAO,KAkBT,OAAI0E,EACK,kBAAC,IAAD,CAAUpE,GAAE,mBAAc9C,EAAMuC,OAAOC,cAAc7K,MAG5D,kBAAC,IAAM+P,SAAP,KACE,kBAACI,GAAA,EAAD,CACE5G,QACE,kBAACoC,GAAA,EAAD,CACEjN,MAAO,CAAEif,OAAQ,WACjBhf,MAAM,QACN6K,QA1BI,WACZhJ,QAAQC,IAAI,YAAa4H,EAAM6R,UAC/B,IAAMuD,EAAc,CAClBvD,SAAU7R,EAAM6R,SAChBrT,UAAWwB,EAAMuC,OAAOC,cAAc7K,GACtCsF,OAAQ+C,EAAM/C,OACdvC,cAAesF,EAAMuC,OAAOA,OAAOtF,OAAS,GAE9C9E,QAAQC,IAAI,gBAAiBgd,GAC7BpV,EAAMhG,iBAAiBob,GACvBpV,EAAMR,gBAAN,UACKQ,EAAM3B,YADX,kCAC6C2B,EAAMuC,OAAOC,cAAcO,cACtE,WAEFoE,GAAY,IAaJ5D,KAAK,QAGTlN,MAAOA,GACP6N,UAAQ,EACR6U,OAAK,EACLtZ,QAAO,8BAAmBO,EAAM3B,YAAzB,uBAAmD2B,EAAMuC,OAAOC,cAAcO,oBCY9EiW,GAjDU,SAAAhZ,GACvB,OAAqB,OAAjBA,EAAM8S,OACD,KAGP,kBAAClJ,GAAA,EAAMC,IAAP,KACE,kBAACD,GAAA,EAAME,KAAP,KACE,kBAAC,IAAD,CAAMhH,GAAE,oBAAe9C,EAAM8S,OAAOzB,YACjCrR,EAAM8S,OAAOvV,aAEhB,kBAAC,GAAD,CACE8T,UAAWrR,EAAM8S,OAAOzB,UACxB9T,YAAayC,EAAM8S,OAAOvV,eAG9B,kBAACqM,GAAA,EAAME,KAAP,KACE,kBAAC,IAAD,CAAMhH,GAAE,mBAAc9C,EAAM8S,OAAO9C,WAChChQ,EAAM8S,OAAOxV,YAEhB,kBAAC,GAAD,CACE0S,SAAUhQ,EAAM8S,OAAO9C,SACvB1S,WAAY0C,EAAM8S,OAAOxV,cAG7B,kBAACsM,GAAA,EAAME,KAAP,KACE,kBAAC,IAAD,CAAMhH,GAAE,mBAAc9C,EAAM8S,OAAOjB,WAChC7R,EAAM8S,OAAOzU,aAEhB,kBAAC,GAAD,CACEwT,SAAU7R,EAAM8S,OAAOjB,SACvBxT,YAAa2B,EAAM8S,OAAOzU,eAG9B,kBAACuL,GAAA,EAAME,KAAP,KACE,kBAAC,IAAD,CAAMhH,GAAE,qBAAgB9C,EAAM8S,OAAOtU,YAClCwB,EAAM8S,OAAO7P,eAGlB,kBAAC2G,GAAA,EAAME,KAAP,KACE,kBAAC,GAAD,CACEzL,YAAa2B,EAAM8S,OAAOzU,YAC1BwT,SAAU7R,EAAM8S,OAAOjB,SACvB5U,OAAQ+C,EAAM8S,OAAO7V,YCWhBgc,GAJajjB,aANJ,SAAAC,GACtB,MAAO,CACLgS,OAAQhS,EAAMgS,UAImC,CAAEiR,oBRVpB,SAAAC,GAAM,8CAAI,WAAMphB,GAAN,SAAArB,EAAA,sDAC3C,IACEyB,QAAQC,IAAI,kCAAmC+gB,GAC/CphB,EAAS,CACP3B,KhED+B,wBgEE/Ba,KAAMkiB,IAER,MAAOpZ,GACP5H,QAAQC,IAAI2H,GAR6B,2CAAJ,wDQUb/J,EApDR,SAAAgK,GAClB7H,QAAQC,IAAI,aAAc4H,GADC,MAECC,mBAAS,GAFV,mBAEpBkZ,EAFoB,KAEZC,EAFY,KAI3B/O,qBAAU,WACRlS,QAAQC,IAAI+gB,GACZnZ,EAAMkZ,oBAAoBC,KAEzB,CAACA,IAmBJ,OACE,kBAACxR,GAAA,EAAD,CAAMuD,QAAS,GACb,kBAACvD,GAAA,EAAKC,OAAN,KACE,kBAACnG,GAAA,EAAD,KACE,kBAACA,GAAA,EAAKE,MAAN,KACE,0DACA,kBAAC+C,GAAA,EAAD,CACEvC,aAAcgX,EACdpR,aAAW,EACXC,WAAS,EACTvE,QA3BQ,CAClB,CACEC,IAAK,EACLC,KAAM,sBACNzB,MAAO,GAET,CACEwB,IAAK,EACLC,KAAM,wBACNzB,MAAO,IAmBCH,SAhBW,SAACC,EAAD,GAAmB,IAAbE,EAAY,EAAZA,MAC3BF,EAAEmG,iBACFhQ,QAAQC,IAAI+gB,GACZC,EAAUlX,MAcC,WCkCAmX,GAFgBrjB,aAPP,SAAAC,GAEtB,OADAkC,QAAQC,IAAI,uBAAwBnC,GAC7B,CACLgS,OAAQhS,EAAMgS,UAIsC,KAAzBjS,EAtET,SAAAgK,GAEpB,GADA7H,QAAQC,IAAI,sBAAuB4H,GACE,OAAjCA,EAAMiI,OAAOqQ,gBACf,OAAO,KAET,IAA6B,IAAzBtY,EAAMiI,OAAOuB,QACf,OACE,kBAACC,GAAA,EAAD,CAAQC,QAAM,GACZ,kBAACC,GAAA,EAAD,qBAIN,IAAI2P,EAAgBtZ,EAAMiI,OAAOqQ,gBA4BjC,OA1BAgB,EACuC,IAArCtZ,EAAMiI,OAAOiR,oBACTI,EACAA,EAAcC,MAAK,SAAC7iB,EAAG8iB,GAAJ,OACjB9iB,EAAE2H,YAAcmb,EAAEnb,YACd,EACAmb,EAAEnb,YAAc3H,EAAE2H,aACjB,EACD,KAGZib,EACuC,IAArCtZ,EAAMiI,OAAOiR,oBACTI,EACAA,EAAcC,MAAK,SAAC7iB,EAAG8iB,GAAJ,OACjB9iB,EAAE6G,YAAcic,EAAEjc,YACd,EACAic,EAAEjc,YAAc7G,EAAE6G,aACjB,EACD,KAQV,yBAAKlH,MAAO,CAAEsM,UAAW,SACvB,kBAAC,GAAD,MACA,kBAACiH,GAAA,EAAD,CAAOW,SAAO,GACZ,kBAACX,GAAA,EAAMrI,OAAP,KACE,kBAACqI,GAAA,EAAMC,IAAP,KACE,kBAACD,GAAA,EAAME,KAAP,uBACA,kBAACF,GAAA,EAAME,KAAP,eACA,kBAACF,GAAA,EAAME,KAAP,cACA,kBAACF,GAAA,EAAME,KAAP,wBACA,kBAACF,GAAA,EAAME,KAAP,QAGJ,kBAACF,GAAA,EAAMY,KAAP,KACG8O,EAAchS,KAAI,SAAAwL,GAAM,OACvB,kBAAC,GAAD,CAAkBpP,IAAKoP,EAAOjB,SAAUiB,OAAQA,aCzC7C2G,GALSzjB,YACtB,KACA,KAFsBA,EAVT,SAAAgK,GACb,OACE,kBAAC6H,GAAA,EAAD,KACE,oCACA,kBAAC,GAAD,MACA,kBAAC,GAAD,UCgGS6R,GAJmB1jB,YAAQ,KAAM,CAAE4F,UXHzB,SAAAL,GAAK,8CAAI,WAAMxD,GAAN,eAAArB,EAAA,sEAE9BqB,EAAS,CACP3B,KhEnD4B,uBgEgDA,SAKRqZ,EAAc7T,UAAUL,GALhB,OAKxBqX,EALwB,OAM9B7a,EAAS,CACP3B,KhEpDiB,UgEqDjBa,KAAM2b,EACNrX,UAT4B,gDAY9BpD,QAAQC,IAAR,MAZ8B,yDAAJ,wDWGIpC,EA9FT,SAAAgK,GAAU,IAAD,EACEC,mBAAS4E,KAAK8U,MAAQ,QADxB,mBACzBC,EADyB,KACdC,EADc,OAEF5Z,mBAAS,IAAI4E,MAFX,mBAEzBiV,EAFyB,KAEhBC,EAFgB,OAGR9Z,mBAAS,aAHD,mBAGzBpE,EAHyB,KAGnBme,EAHmB,KAgBhC7hB,QAAQC,IAAI,aAAcwhB,GAkC1B,OACE,kBAACnY,GAAA,EAAD,KACE,kBAACA,GAAA,EAAK2G,MAAN,CAAYC,OAAO,SACjB,kBAAC5G,GAAA,EAAKE,MAAN,KACE,sCACA,kBAAC+C,GAAA,EAAD,CACEqD,aAAW,EACXC,WAAS,EACT7F,aAActG,EACd4H,QA/BU,CAClB,CACEC,IAAK,EACLxB,MAAO,YACPyB,KAAM,YAER,CACED,IAAK,EACLxB,MAAO,WACPyB,KAAM,UAER,CACED,IAAK,EACLxB,MAAO,WACPyB,KAAM,YAkBA5B,SAda,SAACC,EAAD,GAAmB,IAAbE,EAAY,EAAZA,MAC3BF,EAAEmG,iBACF6R,EAAQ9X,MAaC,KAEL,kBAACT,GAAA,EAAKE,MAAN,KACE,yCACA,kBAAC,KAAD,CACE6G,SAAUoR,EACVK,4BAA4B,EAC5BxR,WAAW,aACX1G,SAAU,SAAApI,GAAI,OAAIkgB,EAAalgB,IAC/B2O,OAAQC,QAGZ,kBAAC9G,GAAA,EAAKE,MAAN,KACE,iDACA,kBAAC,KAAD,CACE6G,SAAUsR,EACVG,4BAA4B,EAC5BxR,WAAW,aACX1G,SAAU,SAAApI,GAAI,OAAIogB,EAAWpgB,IAC7B2O,OAAQC,QAGZ,kBAAC9G,GAAA,EAAKE,MAAN,MACA,kBAACF,GAAA,EAAKE,MAAN,MACA,kBAACF,GAAA,EAAKE,MAAN,OAEF,kBAACS,GAAA,EAAD,CAAQ9L,MAAM,OAAO6K,QArEJ,WACnB,IAAM5F,EAAQ,CACZM,OACAC,WAAYkH,KAAO4W,GAAW1W,OAAO,cACrCnH,SAAUiH,KAAO8W,GAAS5W,OAAO,eAEnC/K,QAAQC,IAAI,eAAgBmD,GAC5ByE,EAAMpE,UAAUL,KA8Dd,OAEU,QCsCD2e,GAFalkB,aAPJ,SAAAC,GAEtB,OADAkC,QAAQC,IAAI,SAAUnC,GACf,CACLgS,OAAQhS,EAAMgS,UAImC,KAAzBjS,EA9HT,SAAAgK,GACjB,OAAiC,OAA7BA,EAAMiI,OAAOkS,YAEb,kBAACtS,GAAA,EAAD,KACE,uCACA,kBAAC,GAAD,OAIF7H,EAAMiI,OAAOuB,QAEb,kBAAC3B,GAAA,EAAD,KACE,uCACA,kBAAC,GAAD,MACA,yCAIgC,cAAlC7H,EAAMiI,OAAOkS,YAAYte,KAEzB,kBAACgM,GAAA,EAAD,KACE,uCACA,uHAIA,kBAAC,GAAD,MACA,kBAAC+B,GAAA,EAAD,CAAOW,SAAO,GACZ,kBAACX,GAAA,EAAMrI,OAAP,KACE,kBAACqI,GAAA,EAAMC,IAAP,KACE,kBAACD,GAAA,EAAME,KAAP,gBACA,kBAACF,GAAA,EAAME,KAAP,uBAGJ,kBAACF,GAAA,EAAMY,KAAP,KACGxK,EAAMiI,OAAOmS,OAAO9S,KAAI,SAAA+S,GAAC,OACxB,kBAACzQ,GAAA,EAAMC,IAAP,CAAWnG,IAAK2W,EAAExI,UAChB,kBAACjI,GAAA,EAAME,KAAP,KACE,kBAAC,IAAD,CAAMhH,GAAE,kBAAauX,EAAEhJ,YAAcgJ,EAAE5e,SAEzC,kBAACmO,GAAA,EAAME,KAAP,KAAauQ,EAAEC,cAOS,aAAlCta,EAAMiI,OAAOkS,YAAYte,KAEzB,kBAACgM,GAAA,EAAD,KACE,uCACA,kBAAC,GAAD,MACA,kBAAC+B,GAAA,EAAD,CAAOW,SAAO,GACZ,kBAACX,GAAA,EAAMrI,OAAP,KACE,kBAACqI,GAAA,EAAMC,IAAP,KACE,kBAACD,GAAA,EAAME,KAAP,gBACA,kBAACF,GAAA,EAAME,KAAP,eACA,kBAACF,GAAA,EAAME,KAAP,uBAGJ,kBAACF,GAAA,EAAMY,KAAP,KACGxK,EAAMiI,OAAOmS,OAAO9S,KAAI,SAAA+S,GAAC,OACxB,kBAACzQ,GAAA,EAAMC,IAAP,CAAWnG,IAAK2W,EAAExI,UAChB,kBAACjI,GAAA,EAAME,KAAP,KACE,kBAAC,IAAD,CAAMhH,GAAE,kBAAauX,EAAEhJ,YAAcgJ,EAAE5e,SAEzC,kBAACmO,GAAA,EAAME,KAAP,KACE,kBAAC,IAAD,CAAMhH,GAAE,iBAAYuX,EAAErK,WAAaqK,EAAE3e,QAEvC,kBAACkO,GAAA,EAAME,KAAP,KAAauQ,EAAEC,cAOS,aAAlCta,EAAMiI,OAAOkS,YAAYte,KAEzB,kBAACgM,GAAA,EAAD,KACE,uCACA,kBAAC,GAAD,MACA,kBAAC+B,GAAA,EAAD,CAAOW,SAAO,GACZ,kBAACX,GAAA,EAAMrI,OAAP,KACE,kBAACqI,GAAA,EAAMC,IAAP,KACE,kBAACD,GAAA,EAAME,KAAP,gBACA,kBAACF,GAAA,EAAME,KAAP,eACA,kBAACF,GAAA,EAAME,KAAP,cACA,kBAACF,GAAA,EAAME,KAAP,qBACA,kBAACF,GAAA,EAAME,KAAP,QAGJ,kBAACF,GAAA,EAAMY,KAAP,KACGxK,EAAMiI,OAAOmS,OAAO9S,KAAI,SAAA+S,GAAC,OACxB,kBAACzQ,GAAA,EAAMC,IAAP,CAAWnG,IAAK2W,EAAExI,UAChB,kBAACjI,GAAA,EAAME,KAAP,KACE,kBAAC,IAAD,CAAMhH,GAAE,kBAAauX,EAAEhJ,YAAcgJ,EAAE5e,SAEzC,kBAACmO,GAAA,EAAME,KAAP,KACE,kBAAC,IAAD,CAAMhH,GAAE,iBAAYuX,EAAErK,WAAaqK,EAAE3e,QAEvC,kBAACkO,GAAA,EAAME,KAAP,KACE,kBAAC,IAAD,CAAMhH,GAAE,iBAAYuX,EAAExI,WAAawI,EAAEhc,cAEvC,kBAACuL,GAAA,EAAME,KAAP,KAAauQ,EAAEC,OACf,kBAAC1Q,GAAA,EAAME,KAAP,KACE,kBAAC,GAAD,CACEzL,YAAagc,EAAEhc,YACfwT,SAAUwI,EAAExI,SACZ5U,OAAQod,EAAEpd,sBAhC5B,K,+BC4lBasd,GATiBvkB,aARR,SAAAC,GACtB,MAAO,CACLsM,OAAQtM,EAAMsM,OACdqD,YAAa3P,EAAM2P,YACnBvN,MAAOpC,EAAMoC,MACb4P,OAAQhS,EAAMgS,UAGuC,CACvDzI,mBACAP,eACAub,mB/B9jBgC,yDAAM,WAAMziB,GAAN,SAAArB,EAAA,sDACtCqB,EAAS,CACP3B,K9C1CgC,yB8CwCI,2CAAN,uD+B+jBhC0I,eACAtD,uBACA4b,sBAN8BphB,EA/oBT,SAAAgK,GAAU,IAAD,EACIC,oBAAS,GADb,mBACvBC,EADuB,KACZC,EADY,OAEFF,mBAASD,EAAMzF,MAAMgD,aAFnB,mBAEvB9B,EAFuB,KAEfgV,EAFe,OAGJxQ,mBAASD,EAAMzF,MAAM+C,YAHjB,mBAGvB5B,EAHuB,KAGhBoY,EAHgB,OAIJ7T,mBAASD,EAAMzF,MAAM8D,aAJjB,mBAIvB9D,EAJuB,KAIhBwZ,EAJgB,OAKR9T,mBAAS+T,KAAKC,MAAMjU,EAAMzF,MAAM0C,OAAS,KALjC,mBAKvBiX,EALuB,KAKlBC,EALkB,OAMRlU,mBAASD,EAAMzF,MAAM0C,OAAS,IANtB,mBAMvBmX,EANuB,KAMlBC,EANkB,OAOApU,mBAASD,EAAMzF,MAAM0D,SAPrB,mBAOvBA,EAPuB,KAOdqW,EAPc,OAQYrU,mBACxCD,EAAMzF,MAAMwD,gBATgB,mBAQvBwW,EARuB,KAQRC,EARQ,OAWFvU,mBAASD,EAAMzF,MAAMka,QAXnB,mBAWvBA,EAXuB,KAWfC,EAXe,OAYFzU,mBAASD,EAAMzF,MAAMmD,SAZnB,mBAYvBiX,EAZuB,KAYfC,EAZe,OAaA3U,mBAASD,EAAMzF,MAAMqD,UAbrB,mBAavBiX,EAbuB,KAadC,EAbc,OAcN7U,mBAASjD,SAASgD,EAAMzF,MAAMgE,OAdxB,mBAcvBA,EAduB,KAcjB6S,EAdiB,OAeJnR,mBAASD,EAAMzF,MAAM6D,OAfjB,mBAevBA,GAfuB,KAehB6S,GAfgB,QAgBJhR,mBAASD,EAAMzF,MAAMiD,QAhBjB,qBAgBvB0T,GAhBuB,MAgBhBC,GAhBgB,SAiBNlR,mBAASD,EAAMzF,MAAMuD,MAjBf,qBAiBvBA,GAjBuB,MAiBjBiX,GAjBiB,SAkBA9U,mBAASD,EAAMzF,MAAMya,SAlBrB,qBAkBvBA,GAlBuB,MAkBdC,GAlBc,MAmB9B5K,qBAAU,WACiB,OAArBrK,EAAMzF,MAAMgE,KACd6S,EAAQ,MAERA,EAAQpU,SAASgD,EAAMzF,MAAMgE,SAE9B,CAACyB,EAAMzF,MAAMgE,OAEhB8L,qBAAU,WACmB,OAAvBrK,EAAMzF,MAAMka,OACdC,EAAU,WACsB7B,IAAvB7S,EAAMzF,MAAMka,OACrBC,EAAU,MAEVA,EACE1U,EAAMzF,MAAMka,OACTS,QAAQ,MAAO,IACfA,QAAQ,OAAQ,MAChBA,QAAQ,MAAO,OAGrB,CAAClV,EAAMzF,MAAMka,SAEhBpK,qBAAU,WAC0B,OAA9BrK,EAAMiI,OAAOqP,aACfnG,GAASnR,EAAMzF,MAAMiD,QAErB2T,GAASnR,EAAMiI,OAAOqP,gBAGvB,CAACtX,EAAMiI,OAAOqP,eAEjB,IAAMxI,GAAa,WAEjB3O,GAAa,GACbhI,QAAQC,IAAI8H,IAGRc,GAAc,WAElBhB,EAAMoX,oBACNjX,GAAa,IAcf,GAAIH,EAAMuC,OAAOiH,UAAYtJ,EAC3B,OACE,kBAACe,GAAA,EAAD,CACEI,KAAMnB,EACNkB,WAAS,EACTF,QACE,kBAACoC,GAAA,EAAD,CACEjN,MAAO,CAAEif,OAAQ,WACjBhf,MAAM,OACN6K,QAAS2N,GACTvL,KAAK,SAGTjC,QAASN,IAET,kBAACO,GAAA,EAAD,CAAQ9B,QAAQ,2BAChB,kBAACwB,GAAA,EAAMO,QAAP,kBAoWJ,OACE,kBAACP,GAAA,EAAD,CACEI,KAAMnB,EACNkB,WAAS,EACTF,QACE,kBAACoC,GAAA,EAAD,CACEjN,MAAO,CAAEif,OAAQ,WACjBhf,MAAM,OACN6K,QAAS2N,GACTvL,KAAK,SAGTjC,QAASN,IAET,kBAACO,GAAA,EAAD,CAAQ9B,QAAQ,2BAChB,kBAACwB,GAAA,EAAMO,QAAP,KACE,kBAACC,GAAA,EAAD,CAAMC,SAhXQ,WAMlB,GALAvJ,QAAQC,IAAI,sBAEG,OAAXqD,GACFuE,EAAMR,gBAAgB,8BAA+B,QAExC,OAAXiV,EAAiB,CACnB,IAAIxX,EAAyB,GAAhBD,SAASkX,GAAYlX,SAASoX,GACrCqG,EAAc,CAClBld,YAAa9B,EACb6B,WAAY5B,EACZ2C,YAAa9D,EACb0C,SACAgB,UACAF,eAAgBwW,EAChBE,SACA/W,QAASiX,EACT/W,SAAUiX,EACVtW,OACAH,SACAZ,OAAQ0T,GACRpT,QACAkX,WACAhP,QAAShG,EAAM3H,MAAMV,GACrB0Z,UAAWrR,EAAMzF,MAAM8W,UACvBrB,SAAUhQ,EAAMzF,MAAMyV,SACtB6B,SAAU7R,EAAMzF,MAAMsX,SACtBnX,cAAesF,EAAMtF,cACrBC,gBAAiBqF,EAAMrF,iBAEzBxC,QAAQC,IAAI,iBAAkBqiB,GAC9Bza,EAAMlB,YAAY2b,GAClBza,EAAMR,gBAAN,iBACYib,EAAYpc,YADxB,0BAEE,WAEF2C,SACK,CACL,IAAI/D,EAAyB,GAAhBD,SAASkX,GAAYlX,SAASoX,GACrCqG,EAAc,CAClBld,YAAa9B,EACb6B,WAAY5B,EACZ2C,YAAa9D,EACb0C,SACAgB,UACAF,eAAgBwW,EAChBE,OAAO,KAAD,OAAOA,EAAOS,QAAQ,MAAO,OAA7B,MACNxX,QAASiX,EACT/W,SAAUiX,EACVtW,OACAH,SACAZ,OAAQ0T,GACRpT,QACAkX,WACAhP,QAAShG,EAAM3H,MAAMV,GACrB0Z,UAAWrR,EAAMzF,MAAM8W,UACvBrB,SAAUhQ,EAAMzF,MAAMyV,SACtB6B,SAAU7R,EAAMzF,MAAMsX,SACtBnX,cAAesF,EAAMtF,cACrBC,gBAAiBqF,EAAMrF,iBAEzBxC,QAAQC,IAAI,iBAAkBqiB,GAC9Bza,EAAMlB,YAAY2b,GAClBza,EAAMR,gBAAN,iBACYib,EAAYpc,YADxB,0BAEE,WAEF2C,QA8SI,kBAACS,GAAA,EAAKE,MAAN,CAAY0T,UAAQ,GAClB,0CACA,kBAACzT,GAAA,EAAD,CACEO,aAAc1G,EAEdrF,KAAK,OACL0L,YAAarG,EACbsG,SAAU,SAAAC,GAAC,OAAIyO,EAAUzO,EAAEC,OAAOC,WAGtC,kBAACT,GAAA,EAAKE,MAAN,CAAY0T,UAAQ,GAClB,yCACA,kBAACzT,GAAA,EAAD,CACEO,aAAczG,EACdtF,KAAK,OACL0L,YAAY,YACZC,SAAU,SAAAC,GAAC,OAAI8R,EAAS9R,EAAEC,OAAOC,WAGrC,kBAACT,GAAA,EAAKE,MAAN,CAAY0T,UAAQ,GAClB,wCACA,kBAACzT,GAAA,EAAD,CACEO,aAAc5H,EACdnE,KAAK,OACL0L,YAAY,WACZC,SAAU,SAAAC,GAAC,OAAI+R,EAAS/R,EAAEC,OAAOC,WAGrC,kBAACT,GAAA,EAAK2G,MAAN,CAAYC,OAAO,SACjB,kBAAC5G,GAAA,EAAKE,MAAN,CAAY0T,UAAQ,GAClB,mDACA,kBAACzT,GAAA,EAAD,CACE4T,UAAW,EACXrT,aAAc+R,EACd9d,KAAK,SACL0L,YAAY,eACZC,SAAU,SAAAC,GAAC,OAAImS,EAAOnS,EAAEC,OAAOC,WAGnC,kBAACT,GAAA,EAAKE,MAAN,CAAY0T,UAAQ,GAClB,mDACA,kBAACzT,GAAA,EAAD,CACEO,aAAciS,EACdoB,UAAW,EACXpf,KAAK,SACL0L,YAAY,cACZC,SAAU,SAAAC,GAAC,OAAIqS,EAAOrS,EAAEC,OAAOC,YAIrC,kBAACT,GAAA,EAAK2G,MAAN,CAAYC,OAAO,SACjB,kBAAC5G,GAAA,EAAKE,MAAN,CAAY0T,UAAQ,GAClB,wCACA,kBAACzT,GAAA,EAAD,CACE4T,UAAW,EACXrT,aAAcwS,EACdve,KAAK,SACL0L,YAAY,8BACZC,SAAU,SAAAC,GAAC,OAAI4S,EAAU5S,EAAEC,OAAOC,WAGtC,kBAACT,GAAA,EAAKE,MAAN,CAAY0T,UAAQ,GAClB,yCACA,kBAACzT,GAAA,EAAD,CACEO,aAAc0S,EACdW,UAAW,EACXpf,KAAK,SACL0L,YAAY,aACZC,SAAU,SAAAC,GAAC,OAAI8S,EAAW9S,EAAEC,OAAOC,YAIzC,kBAACT,GAAA,EAAKE,MAAN,KACE,yFACA,kBAAC8T,GAAA,EAAD,CACEtT,aAAcsS,EACd1S,SAAU,SAAAC,GAAC,OAAI0S,EAAU1S,EAAEC,OAAOC,QAClCJ,YAAY,2BAGhB,kBAACL,GAAA,EAAK2G,MAAN,CAAYC,OAAO,SACjB,kBAAC5G,GAAA,EAAKE,MAAN,CAAY0T,UAAQ,GAClB,8DACA,kBAAC3Q,GAAA,EAAD,CACE5C,YAAY,2BACZiG,aAAa,EACb5F,aAAclE,EACd+J,WAAS,EACTvE,QAlYS,CACrB,CACEC,IAAK,EACLC,KAAM,QACNzB,MAAO,GAET,CACEwB,IAAK,EACLC,KAAM,MACNzB,MAAO,GAET,CACEwB,IAAK,KACLC,KAAM,YACNzB,MAAO,OAqXGH,SAlXK,SAACmG,EAAD,GAAuB,IAAbhG,EAAY,EAAZA,MAC3BgG,EAAMC,iBACNmM,EAAWpS,OAmXH,kBAACT,GAAA,EAAKE,MAAN,KACE,+CACA,kBAAC+C,GAAA,EAAD,CACE5C,YAAY,0BACZiG,aAAa,EACb5F,aAAcoS,EACdvM,WAAS,EACTC,QAAM,EACNxE,QAzXe,CAC3B,CAAEE,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,iBAAkBzB,MAAO,MACjC,CAAEyB,KAAM,gBAAiBzB,MAAO,MAChC,CAAEyB,KAAM,cAAezB,MAAO,MAC9B,CAAEyB,KAAM,mBAAiBzB,MAAO,MAChC,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,iBAAkBzB,MAAO,MACjC,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,sBAAuBzB,MAAO,MACtC,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,yBAA0BzB,MAAO,MACzC,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,gBAAiBzB,MAAO,MAChC,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,iCAAkCzB,MAAO,MACjD,CAAEyB,KAAM,oBAAqBzB,MAAO,MACpC,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,eAAgBzB,MAAO,MAC/B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,iBAAkBzB,MAAO,MACjC,CAAEyB,KAAM,2BAA4BzB,MAAO,MAC3C,CAAEyB,KAAM,OAAQzB,MAAO,MACvB,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,mBAAoBzB,MAAO,MACnC,CAAEyB,KAAM,0BAA2BzB,MAAO,MAC1C,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,wCAAyCzB,MAAO,MACxD,CAAEyB,KAAM,eAAgBzB,MAAO,MAC/B,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,gBAAiBzB,MAAO,MAChC,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,OAAQzB,MAAO,MACvB,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,iBAAkBzB,MAAO,MACjC,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,qBAAsBzB,MAAO,MACrC,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,cAAezB,MAAO,MAC9B,CAAEyB,KAAM,oBAAqBzB,MAAO,MACpC,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,8BAA+BzB,MAAO,MAC9C,CAAEyB,KAAM,gBAAiBzB,MAAO,MAChC,CAAEyB,KAAM,OAAQzB,MAAO,MACvB,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,gBAAiBzB,MAAO,MAChC,CAAEyB,KAAM,mBAAoBzB,MAAO,MACnC,CAAEyB,KAAM,8BAA+BzB,MAAO,MAC9C,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,OAAQzB,MAAO,MACvB,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,gBAAiBzB,MAAO,MAChC,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,oCAAqCzB,MAAO,MACpD,CAAEyB,KAAM,gCAAiCzB,MAAO,MAChD,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,4BAA6BzB,MAAO,MAC5C,CAAEyB,KAAM,OAAQzB,MAAO,MACvB,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,cAAezB,MAAO,MAC9B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,yCAA0CzB,MAAO,MACzD,CAAEyB,KAAM,qBAAsBzB,MAAO,MACrC,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,mCAAoCzB,MAAO,MACnD,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,yBAA0BzB,MAAO,MACzC,CAAEyB,KAAM,gBAAiBzB,MAAO,MAChC,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,6CAA8CzB,MAAO,MAC7D,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,OAAQzB,MAAO,MACvB,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,mBAAoBzB,MAAO,MACnC,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,kCAAmCzB,MAAO,MAClD,CAAEyB,KAAM,uBAAwBzB,MAAO,MACvC,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,cAAezB,MAAO,MAC9B,CAAEyB,KAAM,uBAAwBzB,MAAO,MACvC,CAAEyB,KAAM,gBAAiBzB,MAAO,MAChC,CAAEyB,KAAM,cAAezB,MAAO,MAC9B,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,OAAQzB,MAAO,MACvB,CAAEyB,KAAM,iBAAkBzB,MAAO,MACjC,CAAEyB,KAAM,2BAA4BzB,MAAO,MAC3C,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,OAAQzB,MAAO,MACvB,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,kCAAmCzB,MAAO,MAClD,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,mBAAoBzB,MAAO,MACnC,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,OAAQzB,MAAO,MACvB,CAAEyB,KAAM,cAAezB,MAAO,MAC9B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,cAAezB,MAAO,MAC9B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,qBAAsBzB,MAAO,MACrC,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,eAAgBzB,MAAO,MAC/B,CAAEyB,KAAM,wBAAyBzB,MAAO,MACxC,CAAEyB,KAAM,cAAezB,MAAO,MAC9B,CAAEyB,KAAM,4BAA6BzB,MAAO,MAC5C,CAAEyB,KAAM,mCAAoCzB,MAAO,MACnD,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,wBAAyBzB,MAAO,MACxC,CAAEyB,KAAM,eAAgBzB,MAAO,MAC/B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,eAAgBzB,MAAO,MAC/B,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,kBAAmBzB,MAAO,MAClC,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,eAAgBzB,MAAO,MAC/B,CAAEyB,KAAM,+CAAgDzB,MAAO,MAC/D,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,yBAA0BzB,MAAO,MACzC,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,cAAezB,MAAO,MAC9B,CAAEyB,KAAM,uBAAwBzB,MAAO,MACvC,CAAEyB,KAAM,4BAA6BzB,MAAO,MAC5C,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,+BAAgCzB,MAAO,MAC/C,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,cAAezB,MAAO,MAC9B,CAAEyB,KAAM,OAAQzB,MAAO,MACvB,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,sBAAuBzB,MAAO,MACtC,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,eAAgBzB,MAAO,MAC/B,CAAEyB,KAAM,2BAA4BzB,MAAO,MAC3C,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,uBAAwBzB,MAAO,MACvC,CAAEyB,KAAM,uCAAwCzB,MAAO,MACvD,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,0BAA2BzB,MAAO,MAC1C,CAAEyB,KAAM,uBAAwBzB,MAAO,MACvC,CAAEyB,KAAM,oBAAqBzB,MAAO,MACpC,CAAEyB,KAAM,iBAAkBzB,MAAO,MACjC,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,WAAYzB,MAAO,OAwIfH,SAtIW,SAACmG,EAAD,GAAuB,IAAbhG,EAAY,EAAZA,MACjCgG,EAAMC,iBACNqM,EAAiBtS,QAwIX,kBAACT,GAAA,EAAKE,MAAN,CAAY0T,UAAQ,GAClB,6CACA,kBAACzT,GAAA,EAAD,CACEO,aAAc/D,GACdhI,KAAK,OACL0L,YAAY,gBACZC,SAAU,SAAAC,GAAC,OAAIiP,GAASjP,EAAEC,OAAOC,WAGrC,kBAACT,GAAA,EAAKE,MAAN,CAAY0T,UAAQ,GAClB,2BAAOhf,MAAO,CAAEoM,QAAS,WAAzB,aACA,kBAACL,GAAA,EAAD,CACEjB,QAAS,SAAAa,GAAC,OAjJH,WACjB,IAAMzG,EAAQ,CACZE,SACAC,SAEFsE,EAAMxE,oBAAoBD,GA4IFic,CAAWxV,EAAEmG,mBAC3B3E,KAAK,OACLiI,QAAQ,QACRpV,MAAO,CAAEwM,aAAc,WAJzB,6BAQA,kBAACjB,GAAA,EAAD,CACEM,MAAOgP,GACP9a,KAAK,OACL0L,YAAY,eACZC,SAAU,SAAAC,GAAC,OAAImP,GAASnP,EAAEC,OAAOC,WAGrC,kBAACT,GAAA,EAAKE,MAAN,KACE,uCACA,kBAACC,GAAA,EAAD,CACEO,aAAcrE,GACd0X,UAAW,GACXpf,KAAK,OACL0L,YAAY,UACZC,SAAU,SAAAC,GAAC,OAAI+S,GAAQ/S,EAAEC,OAAOC,WAGpC,kBAACT,GAAA,EAAKE,MAAN,CAAY0T,UAAQ,GAClB,wCACA,kBAACzT,GAAA,EAAD,CACEO,aAAc5D,EACdiX,UAAW,EACXpf,KAAK,SACL0L,YAAY,WACZC,SAAU,SAAAC,GAAC,OAAIoP,EAAQpP,EAAEC,OAAOC,WAGpC,kBAACT,GAAA,EAAKE,MAAN,KACE,gDACA,kBAAC8T,GAAA,EAAD,CACEtT,aAAc6S,GACdjT,SAAU,SAAAC,GAAC,OAAIiT,GAAWjT,EAAEC,OAAOC,QACnCJ,YAAY,sBAGhB,kBAACM,GAAA,EAAD,CAaE9L,MAAM,QACNF,KAAK,UAdP,yBC7hBGskB,GALuB1kB,aARd,SAAAC,GACtB,MAAO,CACLsM,OAAQtM,EAAMsM,OACdqD,YAAa3P,EAAM2P,YACnB1P,aAAcD,EAAMC,gBAMtB,CAAEgE,sB9DtCiC,SAAAgB,GAAM,8CAAI,WAAMnD,GAAN,mBAAArB,EAAA,sEAE3CqB,EAAS,CACP3B,KAAMG,IAHmC,SAKlB2O,EAAchL,sBACrCgB,EAAOP,iBANkC,cAKvCggB,EALuC,gBAQVzV,EAAc9K,mBAC7Cc,EAAOb,iBATkC,cAQrCD,EARqC,OAW3CjC,QAAQC,IAAIgC,GACZjC,QAAQC,IAAIuiB,GAZ+B,UAatBzV,EAAcjM,OAAOiC,EAAOsD,WAbN,QAarC+D,EAbqC,OAc3CpK,QAAQC,IAAI,gBAAiBmK,GAC7BxK,EAAS,CACP3B,KhB/DwB,iBgBgExBa,KAAMsL,IAjBmC,kDAoB3CpK,QAAQC,IAAR,MApB2C,0DAAJ,uD8DsChBwiB,e9D6FG,SAAAjjB,GAAE,8CAAI,WAAMI,GAAN,SAAArB,EAAA,sDAClC,IACEyB,QAAQC,IAAI,6BAA8BT,GAC1CI,EAAS,CACP3B,KhBxK0B,mBgByK1Ba,KAAMU,IAER,MAAOoI,GACP5H,QAAQC,IAAI2H,GARoB,2CAAJ,uD8D7FW8a,iB9DyGX,SAAAljB,GAAE,8CAAI,WAAMI,GAAN,SAAArB,EAAA,sDACpC,IACEyB,QAAQC,IAAI,sCAAuCT,GACnDI,EAAS,CACP3B,KhBnL4B,qBgBoL5Ba,KAAMU,IAER,MAAOoI,GACP5H,QAAQC,IAAI2H,GARsB,2CAAJ,wD8D3GI/J,EAzFT,SAAAgK,GAC3B7H,QAAQC,IAAI,iBAAkB4H,EAAMzF,OADA,MAEN0F,oBAAS,GAFH,mBAE7B0L,EAF6B,KAEpBmP,EAFoB,KA+BhCC,EAAU/G,KAAKC,MAAMjU,EAAMzF,MAAM0C,OAAS,IAC9C8d,EAAUA,EAAQC,WAClB,IAAI7d,EAAU6C,EAAMzF,MAAM0C,OAAmB,GAAV8d,EAMnC,OALkC,IAA9B5d,EAAQ6d,WAAW/d,SACrBE,EAAU,IAAMA,EAAQ6d,YAE1B7d,EAAUA,EAAQ6d,WAGhB,kBAACpR,GAAA,EAAMC,IAAP,KACE,kBAACD,GAAA,EAAME,KAAP,KACE,kBAAC4B,GAAA,EAAD,CAAU3J,SArBK,WACnB+Y,GAAYnP,IACI,IAAZA,GACFxT,QAAQC,IAAI,gCAAiC4H,EAAMzF,MAAMI,iBACzDqF,EAAM6a,iBAAiB7a,EAAMzF,MAAMI,mBAEnCxC,QAAQC,IAAI,wBAAyB4H,EAAMzF,MAAMI,iBACjDqF,EAAM4a,eAAe5a,EAAMzF,MAAMI,mBAcGgR,QAASA,IAC3C,kBAACrI,GAAA,EAAD,CACEjN,MAAO,CAAE4kB,WAAY,SAAU3F,OAAQ,WACvCnU,QA5BO,WACbhJ,QAAQC,IAAI,eA4BNmL,KAAK,sBAGT,kBAACqG,GAAA,EAAME,KAAP,KAAa9J,EAAMzF,MAAMG,eACzB,kBAACkP,GAAA,EAAME,KAAP,KAAa9J,EAAMzF,MAAMgD,aACzB,kBAACqM,GAAA,EAAME,KAAP,KAAa9J,EAAMzF,MAAM8D,aACzB,kBAACuL,GAAA,EAAME,KAAP,KACGiR,EADH,IACa5d,GAEb,kBAACyM,GAAA,EAAME,KAAP,KACE,kBAACxG,GAAA,EAAD,CACEjN,MAAO,CAAEif,OAAQ,WACjBhf,MAAM,MACN6K,QAvDS,WACf,IAAM9G,EAAkB2F,EAAMuC,OAAOA,OAAOuL,QAC1C,SAAAuM,GAAC,OAAIA,EAAE1f,kBAAoBqF,EAAMzF,MAAMI,mBAEnCO,EAAS,CACbP,gBAAiBqF,EAAMzF,MAAMI,gBAC7B6D,UAAWwB,EAAMuC,OAAOC,cAAc7K,GACtC0C,mBAEFlC,QAAQC,IAAI8C,GACZ8E,EAAM9F,sBAAsBgB,GAC5B/C,QAAQC,IAAI,iBA6CNmL,KAAK,YAGT,kBAACqG,GAAA,EAAME,KAAP,KAOE,kBAAC,GAAD,CACEnS,GAAIqI,EAAMzF,MAAMsX,SAChBnX,cAAesF,EAAMzF,MAAMG,cAC3BC,gBAAiBqF,EAAMzF,MAAMI,gBAC7BJ,MAAOyF,EAAMzF,a,UC0gBR2gB,GAPgBllB,aARP,SAAAC,GACtB,MAAO,CACLsM,OAAQtM,EAAMsM,OACdqD,YAAa3P,EAAM2P,YACnBvN,MAAOpC,EAAMoC,MACb4P,OAAQhS,EAAMgS,UAGsC,CACtDzI,mBACAZ,eACApD,uBACA4b,sBAJ6BphB,EArkBT,SAAAgK,GACpB7H,QAAQC,IAAI,wBAAyB4H,GADR,MAEKC,oBAAS,GAFd,mBAEtBC,EAFsB,KAEXC,EAFW,OAGDF,mBAAS,IAHR,mBAGtBxE,EAHsB,KAGdgV,EAHc,OAIHxQ,mBAAS,IAJN,mBAItBvE,EAJsB,KAIfoY,EAJe,OAKH7T,mBAAS,IALN,mBAKtB1F,EALsB,KAKfwZ,EALe,OAMP9T,mBAAS,IANF,mBAMtBiU,EANsB,KAMjBC,EANiB,OAOPlU,mBAAS,IAPF,mBAOtBmU,EAPsB,KAOjBC,EAPiB,OAQCpU,mBAAS,IARV,mBAQtBhC,EARsB,KAQbqW,EARa,OASarU,mBAAS,IATtB,mBAStBsU,EATsB,KASPC,EATO,OAUDvU,mBAAS,IAVR,mBAUtBwU,EAVsB,KAUdC,EAVc,OAWDzU,mBAAS,IAXR,mBAWtB0U,EAXsB,KAWdC,EAXc,OAYC3U,mBAAS,IAZV,mBAYtB4U,EAZsB,KAYbC,EAZa,OAaL7U,mBAAS,IAbJ,mBAatB1B,EAbsB,KAahB6S,EAbgB,OAcHnR,mBAAS,IAdN,mBActB7B,GAdsB,KAcf6S,GAde,QAeHhR,mBAAS,IAfN,qBAetBiR,GAfsB,MAefC,GAfe,SAgBLlR,mBAAS,IAhBJ,qBAgBtBnC,GAhBsB,MAgBhBiX,GAhBgB,SAiBC9U,mBAAS,IAjBV,qBAiBtB+U,GAjBsB,MAiBbC,GAjBa,MAkB7B5K,qBAAU,WAC0B,OAA9BrK,EAAMiI,OAAOqP,aACfnG,GAAS,IAETA,GAASnR,EAAMiI,OAAOqP,gBAEvB,CAACtX,EAAMiI,OAAOqP,eAEjB,IAwUMtW,GAAc,WAClBb,GAAa,IASf,OACE,kBAACc,GAAA,EAAD,CACEI,KAAMnB,EACNkB,WAAS,EACTF,QACE,kBAACkB,GAAA,EAAD,CAAQ9L,MAAM,OAAO6K,QAlBR,WACjBhB,GAAa,KAiBT,0BAIFmB,QAASN,IAET,kBAACO,GAAA,EAAD,CAAQ9B,QAAQ,2BAChB,kBAACwB,GAAA,EAAMO,QAAP,KACE,kBAACC,GAAA,EAAD,CAAMC,SA/VQ,WAClBvJ,QAAQC,IAAI,sBAEG,OAAXqD,GACFuE,EAAMR,gBAAgB,8BAA+B,QAEvD,IAAIvC,EAAyB,GAAhBD,SAASkX,GAAYlX,SAASoX,GAC3C,GAAe,OAAXK,EAAiB,CACnB,IAAMxa,EAAa,CACjBsD,YAAa9B,EACb6B,WAAY5B,EACZ2C,YAAa9D,EACb0C,SACAgB,UACAF,eAAgBwW,EAChBE,SACA/W,QAASiX,EACT/W,SAAUiX,EACVtW,OACAH,SACAZ,OAAQ0T,GACRpT,QACAkX,WACAxW,UAAWwB,EAAMuC,OAAOC,cAAc7K,GACtCqO,QAAShG,EAAM3H,MAAMV,GACrB+C,cAAesF,EAAMuC,OAAOA,OAAOtF,OAAS,GAE9C9E,QAAQC,IAAI6B,GACZ+F,EAAMpB,YAAY3E,GAClB+G,SACK,CACL,IAAM/G,EAAa,CACjBsD,YAAa9B,EACb6B,WAAY5B,EACZ2C,YAAa9D,EACb0C,SACAgB,UACAF,eAAgBwW,EAChBE,OAAO,KAAD,OAAOA,EAAOS,QAAQ,MAAO,OAA7B,MACNxX,QAASiX,EACT/W,SAAUiX,EACVtW,OACAH,SACAZ,OAAQ0T,GACRpT,QACAkX,WACAxW,UAAWwB,EAAMuC,OAAOC,cAAc7K,GACtCqO,QAAShG,EAAM3H,MAAMV,GACrB+C,cAAesF,EAAMuC,OAAOA,OAAOtF,OAAS,GAE9C9E,QAAQC,IAAI6B,GACZ+F,EAAMpB,YAAY3E,GAClB+G,QA4SI,kBAACS,GAAA,EAAKE,MAAN,CAAY0T,UAAQ,GAClB,2CACA,kBAACzT,GAAA,EAAD,CACEM,MAAOzG,EACPrF,KAAK,OACL0L,YAAY,aACZC,SAAU,SAAAC,GAAC,OAAIyO,EAAUzO,EAAEC,OAAOC,WAGtC,kBAACT,GAAA,EAAKE,MAAN,CAAY0T,UAAQ,GAClB,yCACA,kBAACzT,GAAA,EAAD,CACEM,MAAOxG,EACPtF,KAAK,OACL0L,YAAY,YACZC,SAAU,SAAAC,GAAC,OAAI8R,EAAS9R,EAAEC,OAAOC,WAGrC,kBAACT,GAAA,EAAKE,MAAN,CAAY0T,UAAQ,GAClB,wCACA,kBAACzT,GAAA,EAAD,CACEM,MAAO3H,EACPnE,KAAK,OACL0L,YAAY,WACZC,SAAU,SAAAC,GAAC,OAAI+R,EAAS/R,EAAEC,OAAOC,WAGrC,kBAACT,GAAA,EAAK2G,MAAN,CAAYC,OAAO,SACjB,kBAAC5G,GAAA,EAAKE,MAAN,CAAY0T,UAAQ,GAClB,mDACA,kBAACzT,GAAA,EAAD,CACE4T,UAAW,EACXtT,MAAOgS,EACP9d,KAAK,SACL0L,YAAY,eACZC,SAAU,SAAAC,GAAC,OAAImS,EAAOnS,EAAEC,OAAOC,WAGnC,kBAACT,GAAA,EAAKE,MAAN,CAAY0T,UAAQ,GAClB,mDACA,kBAACzT,GAAA,EAAD,CACEM,MAAOkS,EACPoB,UAAW,EACXpf,KAAK,SACL0L,YAAY,cACZC,SAAU,SAAAC,GAAC,OAAIqS,EAAOrS,EAAEC,OAAOC,YAIrC,kBAACT,GAAA,EAAK2G,MAAN,CAAYC,OAAO,SACjB,kBAAC5G,GAAA,EAAKE,MAAN,CAAY0T,UAAQ,GAClB,wCACA,kBAACzT,GAAA,EAAD,CACE4T,UAAW,EACXtT,MAAOyS,EACPve,KAAK,SACL0L,YAAY,8BACZC,SAAU,SAAAC,GAAC,OAAI4S,EAAU5S,EAAEC,OAAOC,WAGtC,kBAACT,GAAA,EAAKE,MAAN,CAAY0T,UAAQ,GAClB,yCACA,kBAACzT,GAAA,EAAD,CACEM,MAAO2S,EACPW,UAAW,EACXpf,KAAK,SACL0L,YAAY,aACZC,SAAU,SAAAC,GAAC,OAAI8S,EAAW9S,EAAEC,OAAOC,YAIzC,kBAACT,GAAA,EAAKE,MAAN,KACE,yFACA,kBAAC8T,GAAA,EAAD,CACE1T,SAAU,SAAAC,GAAC,OAAI0S,EAAU1S,EAAEC,OAAOC,QAClCJ,YAAY,2BAGhB,kBAACL,GAAA,EAAK2G,MAAN,CAAYC,OAAO,SACjB,kBAAC5G,GAAA,EAAKE,MAAN,KACE,6DAEE,0BAAMtL,MAAO,CAAEC,MAAO,QACpB,uCAGJ,kBAACoO,GAAA,EAAD,CACE5C,YAAY,2BACZiG,aAAa,EACb7F,MAAOjE,EACP+J,WAAS,EACTvE,QAnYS,CACrB,CACEC,IAAK,EACLC,KAAM,QACNzB,MAAO,GAET,CACEwB,IAAK,EACLC,KAAM,MACNzB,MAAO,GAET,CACEwB,IAAK,EACLC,KAAM,YACNzB,MAAO,OAsXGH,SAnXK,SAACmG,EAAD,GAAuB,IAAbhG,EAAY,EAAZA,MAC3BgG,EAAMC,iBACNmM,EAAWpS,OAoXH,kBAACT,GAAA,EAAKE,MAAN,KACE,+CACA,kBAAC+C,GAAA,EAAD,CACE5C,YAAY,0BACZiG,aAAa,EACb7F,MAAOqS,EACPvM,WAAS,EACTC,QAAM,EACNxE,QA1Xe,CAC3B,CAAEE,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,iBAAkBzB,MAAO,MACjC,CAAEyB,KAAM,gBAAiBzB,MAAO,MAChC,CAAEyB,KAAM,cAAezB,MAAO,MAC9B,CAAEyB,KAAM,mBAAiBzB,MAAO,MAChC,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,iBAAkBzB,MAAO,MACjC,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,sBAAuBzB,MAAO,MACtC,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,yBAA0BzB,MAAO,MACzC,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,gBAAiBzB,MAAO,MAChC,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,iCAAkCzB,MAAO,MACjD,CAAEyB,KAAM,oBAAqBzB,MAAO,MACpC,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,eAAgBzB,MAAO,MAC/B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,iBAAkBzB,MAAO,MACjC,CAAEyB,KAAM,2BAA4BzB,MAAO,MAC3C,CAAEyB,KAAM,OAAQzB,MAAO,MACvB,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,mBAAoBzB,MAAO,MACnC,CAAEyB,KAAM,0BAA2BzB,MAAO,MAC1C,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,wCAAyCzB,MAAO,MACxD,CAAEyB,KAAM,eAAgBzB,MAAO,MAC/B,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,gBAAiBzB,MAAO,MAChC,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,OAAQzB,MAAO,MACvB,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,iBAAkBzB,MAAO,MACjC,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,qBAAsBzB,MAAO,MACrC,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,cAAezB,MAAO,MAC9B,CAAEyB,KAAM,oBAAqBzB,MAAO,MACpC,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,8BAA+BzB,MAAO,MAC9C,CAAEyB,KAAM,gBAAiBzB,MAAO,MAChC,CAAEyB,KAAM,OAAQzB,MAAO,MACvB,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,gBAAiBzB,MAAO,MAChC,CAAEyB,KAAM,mBAAoBzB,MAAO,MACnC,CAAEyB,KAAM,8BAA+BzB,MAAO,MAC9C,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,OAAQzB,MAAO,MACvB,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,gBAAiBzB,MAAO,MAChC,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,oCAAqCzB,MAAO,MACpD,CAAEyB,KAAM,gCAAiCzB,MAAO,MAChD,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,4BAA6BzB,MAAO,MAC5C,CAAEyB,KAAM,OAAQzB,MAAO,MACvB,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,cAAezB,MAAO,MAC9B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,yCAA0CzB,MAAO,MACzD,CAAEyB,KAAM,qBAAsBzB,MAAO,MACrC,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,mCAAoCzB,MAAO,MACnD,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,yBAA0BzB,MAAO,MACzC,CAAEyB,KAAM,gBAAiBzB,MAAO,MAChC,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,6CAA8CzB,MAAO,MAC7D,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,OAAQzB,MAAO,MACvB,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,mBAAoBzB,MAAO,MACnC,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,kCAAmCzB,MAAO,MAClD,CAAEyB,KAAM,uBAAwBzB,MAAO,MACvC,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,cAAezB,MAAO,MAC9B,CAAEyB,KAAM,uBAAwBzB,MAAO,MACvC,CAAEyB,KAAM,gBAAiBzB,MAAO,MAChC,CAAEyB,KAAM,cAAezB,MAAO,MAC9B,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,OAAQzB,MAAO,MACvB,CAAEyB,KAAM,iBAAkBzB,MAAO,MACjC,CAAEyB,KAAM,2BAA4BzB,MAAO,MAC3C,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,OAAQzB,MAAO,MACvB,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,kCAAmCzB,MAAO,MAClD,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,mBAAoBzB,MAAO,MACnC,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,OAAQzB,MAAO,MACvB,CAAEyB,KAAM,cAAezB,MAAO,MAC9B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,cAAezB,MAAO,MAC9B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,qBAAsBzB,MAAO,MACrC,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,eAAgBzB,MAAO,MAC/B,CAAEyB,KAAM,wBAAyBzB,MAAO,MACxC,CAAEyB,KAAM,cAAezB,MAAO,MAC9B,CAAEyB,KAAM,4BAA6BzB,MAAO,MAC5C,CAAEyB,KAAM,mCAAoCzB,MAAO,MACnD,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,wBAAyBzB,MAAO,MACxC,CAAEyB,KAAM,eAAgBzB,MAAO,MAC/B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,eAAgBzB,MAAO,MAC/B,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,kBAAmBzB,MAAO,MAClC,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,eAAgBzB,MAAO,MAC/B,CAAEyB,KAAM,+CAAgDzB,MAAO,MAC/D,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,yBAA0BzB,MAAO,MACzC,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,cAAezB,MAAO,MAC9B,CAAEyB,KAAM,uBAAwBzB,MAAO,MACvC,CAAEyB,KAAM,4BAA6BzB,MAAO,MAC5C,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,+BAAgCzB,MAAO,MAC/C,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,cAAezB,MAAO,MAC9B,CAAEyB,KAAM,OAAQzB,MAAO,MACvB,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,sBAAuBzB,MAAO,MACtC,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,eAAgBzB,MAAO,MAC/B,CAAEyB,KAAM,2BAA4BzB,MAAO,MAC3C,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,uBAAwBzB,MAAO,MACvC,CAAEyB,KAAM,uCAAwCzB,MAAO,MACvD,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,aAAczB,MAAO,MAC7B,CAAEyB,KAAM,UAAWzB,MAAO,MAC1B,CAAEyB,KAAM,YAAazB,MAAO,MAC5B,CAAEyB,KAAM,WAAYzB,MAAO,MAC3B,CAAEyB,KAAM,0BAA2BzB,MAAO,MAC1C,CAAEyB,KAAM,uBAAwBzB,MAAO,MACvC,CAAEyB,KAAM,oBAAqBzB,MAAO,MACpC,CAAEyB,KAAM,iBAAkBzB,MAAO,MACjC,CAAEyB,KAAM,QAASzB,MAAO,MACxB,CAAEyB,KAAM,SAAUzB,MAAO,MACzB,CAAEyB,KAAM,WAAYzB,MAAO,OAyIfH,SAvIW,SAACmG,EAAD,GAAuB,IAAbhG,EAAY,EAAZA,MACjCgG,EAAMC,iBACNqM,EAAiBtS,QAyIX,kBAACT,GAAA,EAAKE,MAAN,KACE,4CAEE,0BAAMtL,MAAO,CAAEC,MAAO,QACpB,uCAGJ,kBAACsL,GAAA,EAAD,CACEM,MAAO9D,GACPhI,KAAK,OACL0L,YAAY,gBACZC,SAAU,SAAAC,GAAC,OAAIiP,GAASjP,EAAEC,OAAOC,WAGrC,kBAACT,GAAA,EAAKE,MAAN,CAAY0T,UAAQ,GAClB,2BAAOhf,MAAO,CAAEoM,QAAS,WAAzB,aACA,kBAACL,GAAA,EAAD,CACEjB,QAAS,SAAAa,GAAC,OAlJH,WACjB,IAAMzG,EAAQ,CACZE,SACAC,SAEFsE,EAAMxE,oBAAoBD,GA6IFic,CAAWxV,EAAEmG,mBAC3B3E,KAAK,OACLiI,QAAQ,QACRpV,MAAO,CAAEwM,aAAc,WAJzB,6BAQA,kBAACjB,GAAA,EAAD,CACEM,MAAOgP,GACP9a,KAAK,OACL0L,YAAY,eACZC,SAAU,SAAAC,GAAC,OAAImP,GAASnP,EAAEC,OAAOC,WAGrC,kBAACT,GAAA,EAAKE,MAAN,KACE,uCACA,kBAACC,GAAA,EAAD,CACEM,MAAOpE,GACP0X,UAAW,GACXpf,KAAK,OACL0L,YAAY,UACZC,SAAU,SAAAC,GAAC,OAAI+S,GAAQ/S,EAAEC,OAAOC,WAGpC,kBAACT,GAAA,EAAKE,MAAN,KACE,uCAEE,0BAAMtL,MAAO,CAAEC,MAAO,QACpB,uCAGJ,kBAACsL,GAAA,EAAD,CACEM,MAAO3D,EACPiX,UAAW,EACXpf,KAAK,SACL0L,YAAY,WACZC,SAAU,SAAAC,GAAC,OAAIoP,EAAQpP,EAAEC,OAAOC,WAGpC,kBAACT,GAAA,EAAKE,MAAN,KACE,gDACA,kBAAC8T,GAAA,EAAD,CACE1T,SAAU,SAAAC,GAAC,OAAIiT,GAAWjT,EAAEC,OAAOC,QACnCJ,YAAY,sBAGhB,kBAACM,GAAA,EAAD,CACEC,UACG5G,IACAC,IACAnB,IACAsa,IACAF,IACAT,IACAE,IACAhW,KACA8S,KACA3S,EAEHjI,MAAM,QACNF,KAAK,UAdP,4CCtcK+kB,GANcnlB,aAPL,SAAAC,GAEtB,OADAkC,QAAQC,IAAI,8BAA+BnC,GACpC,CACLgS,OAAQhS,EAAMgS,OACd1F,OAAQtM,EAAMsM,UAGoC,CACpD6Y,uBhB7FoC,SAAA7f,GAAK,8CAAI,WAAMxD,GAAN,eAAArB,EAAA,sEAE3CqB,EAAS,CACP3B,KhEiC4B,uBgEpCa,SAKrBqZ,EAAcnU,mBAAmBC,GALZ,OAKrCqX,EALqC,OAM3Cza,QAAQC,IAAIwa,GACZ7a,EAAS,CACP3B,KhEyB8B,uBgExB9Ba,KAAM2b,IATmC,gDAY3Cza,QAAQC,IAAR,MAZ2C,yDAAJ,uDgB8FzC4B,oBACAwF,oBAH2BxJ,EAjGT,SAAC,GAAmD,IA8BlE4c,EA9BiBrQ,EAAgD,EAAhDA,OAAQvI,EAAwC,EAAxCA,iBAAkBwF,EAAsB,EAAtBA,gBAAsB,EAC/BS,mBAAS,MADsB,mBAC9DmV,EAD8D,KACjDiG,EADiD,OAErCpb,oBAAS,GAF4B,mBAE9DiH,EAF8D,KAEpDC,EAFoD,OCJpC,WAAO,IAAD,EACLlH,mBAAS,IADJ,mBAChCkS,EADgC,KACrBC,EADqB,KAIjCC,EAAuBC,cAAY,kBACvCC,aAAuB9C,EAAcnU,mBAAoB,QAErD2M,EAASuK,oBAAQ,sBACrB,sBAAA9b,EAAA,yDAC2B,IAArByb,EAAUlV,OADhB,yCAEW,IAFX,gCAIWoV,EAAqBF,IAJhC,2CAQA,CAACA,IAEH,MAAO,CACLA,YACAC,eACAnK,UDd+BqT,GAAzBlJ,EAH6D,EAG7DA,aAAcnK,EAH+C,EAG/CA,OAEhBgL,EAAqB,SAACjR,EAAD,GAAoB,IAAd8Q,EAAa,EAAbA,OACzBsC,EAAc,CAClBvD,SAAUiB,EAAO5Q,MACjB1D,UAAW+D,EAAOC,cAAc7K,GAChCsF,OAAQ6V,EAAO7V,OACfvC,cAAe6H,EAAOA,OAAOtF,OAAS,GAExC9E,QAAQC,IAAI,yBAA0Bgd,GACtCiG,EAAejG,IA+BjB,OAZExC,OADoBC,IAAlB5K,EAAO6K,OACC,GAEA7K,EAAO6K,OAAOxL,KAAI,SAAAwL,GAAM,MAAK,CACrCpP,IAAKoP,EAAOjB,SACZkB,MAAOD,EAAOzU,YACd2U,YAAY,GAAD,OAAKF,EAAOrX,OAAZ,kCACKqX,EAAOpX,OACvBuB,OAAQ6V,EAAO7V,OACfiF,MAAO4Q,EAAOjB,aAId3K,EACK,kBAAC,IAAD,CAAUpE,GAAE,YAInB,yBAAKzM,MAAO,CAAE4kB,WAAY,OAAQpY,aAAc,SAC9C,kBAAC8E,GAAA,EAAD,CAAMsD,QAAQ,cACZ,kBAACtD,GAAA,EAAKkC,IAAN,CAAUqB,QAAQ,KAChB,kBAACzJ,GAAA,EAAD,KACE,kBAACF,GAAA,EAAD,YACA,kBAACE,GAAA,EAAK2G,MAAN,CAAYC,OAAO,SACjB,kBAAC5G,GAAA,EAAKE,MAAN,KACE,kBAAC,KAAD,CACE6H,QAASvB,EAAOuB,QAChB2J,eAAgBF,EAChBG,eAAgB,SAAApR,GAAC,OAAIoQ,EAAapQ,EAAEC,OAAOC,QAC3CmR,kBAAmBJ,EACnBL,QAASA,EACTvc,MAAO,CAAEif,OAAQ,cAGrB,kBAAC7T,GAAA,EAAKE,MAAN,KACE,kBAACS,GAAA,EAAD,CAAQ9L,MAAM,QAAQ6K,QAlDlB,WACXiU,GAGHjd,QAAQC,IAAI,aAAcgd,GAC1Bpb,EAAiBob,GACjBiG,EAAe,OAJf7b,EAAgB,iBAAkB,UAgDxB,kCAKJ,kBAACiC,GAAA,EAAK2G,MAAN,CAAYC,OAAO,SACjB,kBAAC5G,GAAA,EAAKE,MAAN,KACG,IACD,kBAACS,GAAA,EAAD,CAAQjB,QAhDK,WACzBgG,GAAY,IA+CqC7Q,MAAM,QAA3C,qBAIF,kBAACmL,GAAA,EAAKE,MAAN,KACG,IACD,kBAAC,GAAD,e,UE0SD4Z,GAJoBvlB,aAZX,SAAAC,GAEtB,OADAkC,QAAQC,IAAI,mCAAoCnC,GACzC,CACLsM,OAAQtM,EAAMsM,OACdqD,YAAa3P,EAAM2P,YACnBC,SAAU5P,EAAM4P,SAChB3P,aAAcD,EAAMC,aACpBgC,MAAOjC,EAAMiC,MACbG,MAAOpC,EAAMoC,SAI2C,CAC1DmjB,kBpCjX+B,SAAAvf,GAAY,8CAAI,WAAMlE,GAAN,eAAArB,EAAA,sEAE7CqB,EAAS,CACP3B,KAAMG,IAHqC,SAKxB+a,GAAahV,oBAAoBL,GALT,OAKvCQ,EALuC,OAM7C1E,EAAS,CACP3B,K9CG6B,sB8CF7Ba,KAAMwF,IARqC,gDAW7CtE,QAAQC,IAAR,MAX6C,yDAAJ,wDoCgXVpC,EAvXT,SAAAgK,GAAU,IAAD,EACTC,mBACtBwb,mBAASzb,EAAMuC,OAAOC,cAAcS,eAFL,mBAC1BtJ,EAD0B,KACpB+hB,EADoB,OAIDzb,mBAAS,OAJR,mBAI1B1D,EAJ0B,KAIhBof,EAJgB,OAKC1b,mBAChCD,EAAMuC,OAAOC,cAAcW,mBAAmBC,MAAM,EAAG,IANxB,mBAK1BhG,EAL0B,KAKfwe,EALe,OAQH3b,mBAC5BD,EAAMuC,OAAOC,cAAca,iBAAiBD,MAAM,EAAG,IATtB,mBAQ1B/F,EAR0B,KAQjBwe,EARiB,KAYjC1jB,QAAQC,IAAIiF,GA+RZ,OACE,yBAAKhH,MAAO,CAAE4kB,WAAY,OAAQpY,aAAc,SAC9C,kBAAC8E,GAAA,EAAD,CAAMsD,QAAQ,cACZ,kBAACtD,GAAA,EAAKkC,IAAN,CAAUqB,QAAS,GACjB,kBAACzJ,GAAA,EAAD,KACE,kBAACF,GAAA,EAAD,+BACA,kBAACE,GAAA,EAAK2G,MAAN,CAAYC,OAAO,SACjB,kBAAC5G,GAAA,EAAKE,MAAN,KACE,sDACA,kBAAC,KAAD,CACE6G,SAAU7O,EACV8O,WAAW,aACXH,OAAQC,KACRxG,SAAU,SAAApI,GAAI,OAAI+hB,EAAQ/hB,OAG9B,kBAAC8H,GAAA,EAAKE,MAAN,KACE,iDACA,kBAAC+C,GAAA,EAAD,CACE5C,YAAY,WACZiG,aAAW,EACXC,WAAS,EACTvE,QA/SM,CACpB,CACEC,IAAK,MACLC,KAAM,WACNzB,MAAO,OAET,CACEwB,IAAK,OACLC,KAAM,WACNzB,MAAO,SAuSKH,SArTI,SAACC,EAAD,GAAmB,IAAbE,EAAY,EAAZA,MACxBF,EAAEmG,iBACFwT,EAAYzZ,IAoTEC,aAAc5F,IACb,MAGP,kBAACkF,GAAA,EAAK2G,MAAN,CAAYC,OAAO,SACjB,kBAAC5G,GAAA,EAAKE,MAAN,KACE,+CACA,kBAAC+C,GAAA,EAAD,CACE5C,YAAY,eACZiG,aAAW,EACXC,WAAS,EACTC,QAAM,EACNxE,QA/SS,CACvB,CACEC,IAAK,QACLC,KAAM,QACNzB,MAAO,MAET,CACEwB,IAAK,QACLC,KAAM,QACNzB,MAAO,MAET,CACEwB,IAAK,QACLC,KAAM,QACNzB,MAAO,MAET,CACEwB,IAAK,QACLC,KAAM,QACNzB,MAAO,MAET,CACEwB,IAAK,QACLC,KAAM,QACNzB,MAAO,MAET,CACEwB,IAAK,QACLC,KAAM,QACNzB,MAAO,MAET,CACEwB,IAAK,QACLC,KAAM,QACNzB,MAAO,MAET,CACEwB,IAAK,QACLC,KAAM,QACNzB,MAAO,MAET,CACEwB,IAAK,QACLC,KAAM,QACNzB,MAAO,MAET,CACEwB,IAAK,QACLC,KAAM,QACNzB,MAAO,MAET,CACEwB,IAAK,QACLC,KAAM,QACNzB,MAAO,MAET,CACEwB,IAAK,QACLC,KAAM,QACNzB,MAAO,MAET,CACEwB,IAAK,QACLC,KAAM,QACNzB,MAAO,MAET,CACEwB,IAAK,QACLC,KAAM,QACNzB,MAAO,MAET,CACEwB,IAAK,QACLC,KAAM,QACNzB,MAAO,MAET,CACEwB,IAAK,QACLC,KAAM,QACNzB,MAAO,MAET,CACEwB,IAAK,QACLC,KAAM,QACNzB,MAAO,MAET,CACEwB,IAAK,QACLC,KAAM,QACNzB,MAAO,MAET,CACEwB,IAAK,QACLC,KAAM,QACNzB,MAAO,MAET,CACEwB,IAAK,QACLC,KAAM,QACNzB,MAAO,MAET,CACEwB,IAAK,QACLC,KAAM,QACNzB,MAAO,MAET,CACEwB,IAAK,QACLC,KAAM,QACNzB,MAAO,MAET,CACEwB,IAAK,QACLC,KAAM,QACNzB,MAAO,MAET,CACEwB,IAAK,QACLC,KAAM,QACNzB,MAAO,OAyLKH,SAtLK,SAACmG,EAAD,GAAuB,IAAbhG,EAAY,EAAZA,MAC7BgG,EAAMC,iBACNyT,EAAa1Z,IAqLCC,aAAc/E,IACb,KAEL,kBAACqE,GAAA,EAAKE,MAAN,KACE,uDACA,kBAAC+C,GAAA,EAAD,CACE5C,YAAY,uBACZiG,aAAW,EACXC,WAAS,EACTC,QAAM,EACNxE,QA3LO,CACrB,CACEC,IAAK,QACLC,KAAM,QACNzB,MAAO,MAET,CACEwB,IAAK,QACLC,KAAM,QACNzB,MAAO,MAET,CACEwB,IAAK,QACLC,KAAM,QACNzB,MAAO,MAET,CACEwB,IAAK,QACLC,KAAM,QACNzB,MAAO,MAET,CACEwB,IAAK,QACLC,KAAM,QACNzB,MAAO,MAET,CACEwB,IAAK,QACLC,KAAM,QACNzB,MAAO,MAET,CACEwB,IAAK,QACLC,KAAM,QACNzB,MAAO,MAET,CACEwB,IAAK,QACLC,KAAM,QACNzB,MAAO,MAET,CACEwB,IAAK,QACLC,KAAM,QACNzB,MAAO,MAET,CACEwB,IAAK,QACLC,KAAM,QACNzB,MAAO,MAET,CACEwB,IAAK,QACLC,KAAM,QACNzB,MAAO,MAET,CACEwB,IAAK,QACLC,KAAM,QACNzB,MAAO,MAET,CACEwB,IAAK,QACLC,KAAM,QACNzB,MAAO,MAET,CACEwB,IAAK,QACLC,KAAM,QACNzB,MAAO,MAET,CACEwB,IAAK,QACLC,KAAM,QACNzB,MAAO,MAET,CACEwB,IAAK,QACLC,KAAM,QACNzB,MAAO,MAET,CACEwB,IAAK,QACLC,KAAM,QACNzB,MAAO,MAET,CACEwB,IAAK,QACLC,KAAM,QACNzB,MAAO,MAET,CACEwB,IAAK,QACLC,KAAM,QACNzB,MAAO,MAET,CACEwB,IAAK,QACLC,KAAM,QACNzB,MAAO,MAET,CACEwB,IAAK,QACLC,KAAM,QACNzB,MAAO,MAET,CACEwB,IAAK,QACLC,KAAM,QACNzB,MAAO,MAET,CACEwB,IAAK,QACLC,KAAM,QACNzB,MAAO,MAET,CACEwB,IAAK,QACLC,KAAM,QACNzB,MAAO,OAqEKH,SAlEG,SAACmG,EAAD,GAAuB,IAAbhG,EAAY,EAAZA,MAC3BgG,EAAMC,iBACN0T,EAAW3Z,IAiEGC,aAAc9E,IACb,MAGP,kBAAC+E,GAAA,EAAD,CAAQ9L,MAAM,QAAQ6K,QAlEP,WACvB,IAAMlF,EAAe,CACnBM,WACA5C,KAAMqJ,KAAOrJ,GAAMuJ,OAAO,cAC1B9F,YACAC,UACAmB,UAAWwB,EAAMuC,OAAOC,cAAc7K,GACtC+G,oBAAqBsB,EAAMuC,OAAOA,OAAOtF,QAE3C+C,EAAMwb,kBAAkBvf,KAyDhB,cC+NG6f,GANgB9lB,aAZP,SAAAC,GAEtB,OADAkC,QAAQC,IAAI,gCAAiCnC,GACtC,CACLsM,OAAQtM,EAAMsM,OACdqD,YAAa3P,EAAM2P,YACnBC,SAAU5P,EAAM4P,SAChB3P,aAAcD,EAAMC,aACpBgC,MAAOjC,EAAMiC,MACbG,MAAOpC,EAAMoC,SAIuC,CACtD0C,anElZ0B,SAAAC,GAAa,8CAAI,WAAMjD,GAAN,eAAArB,EAAA,sEAEzCqB,EAAS,CACP3B,KAAMG,IAHiC,SAKpB2O,EAAcnK,aAAaC,GALP,OAKnCuH,EALmC,OAMzCpK,QAAQC,IAAI,yBAA0BmK,GACtCxK,EAAS,CACP3B,KhBlKuB,gBgBmKvBa,KAAM+D,IATiC,gDAYzC7C,QAAQC,IAAR,MAZyC,yDAAJ,uDmEmZvC2jB,WnEhbwB,SACxBC,EACAC,GAFwB,8CAGrB,WAAMlkB,GAAN,iBAAArB,EAAA,6DACHqB,EAAS,CACP3B,KAAMG,IAFL,SAIkB2O,EAAcrK,aAAamhB,GAJ7C,cAIGzZ,EAJH,OAKHxK,EAAS,CACP3B,KhBxIyB,gBgByIzBa,KAAMsL,IAER0Z,EAAmB3hB,QAAnB,uCAA2B,WAAMC,GAAN,iBAAA7D,EAAA,6DACnBuD,EADmB,MAEpBM,EAFoB,CAGvBiE,UAAW+D,EAAO5K,GAClBgD,gBAAiB,OAJM,SAMJuK,EAAclL,iBAAiBC,GAN3B,OAMrBiiB,EANqB,OAOzB/jB,QAAQC,IAAI,4BAA6B8jB,GAPhB,2CAA3B,uDATG,SAkBqBhX,EAAcjM,OAAOsJ,EAAO5K,IAlBjD,OAkBGmD,EAlBH,OAmBH3C,QAAQC,IAAI,gBAAiBmK,GAC7BxK,EAAS,CACP3B,KhB7J0B,iBgB8J1Ba,KAAM6D,IAtBL,4CAHqB,uDmEibxB0E,oBAH6BxJ,EA7iBT,SAAAgK,GAAU,IAAD,EACKC,mBAAS,IADd,mBACtBmG,EADsB,KACXC,EADW,OAEapG,mBAAS,IAFtB,mBAEtBqG,EAFsB,KAEPC,EAFO,OAGTtG,mBAAS,IAHA,mBAGtBuG,EAHsB,KAGlBC,EAHkB,OAISxG,mBAAS,IAJlB,mBAItB2G,EAJsB,KAITC,EAJS,OAKmB5G,mBAAS,IAL5B,mBAKtB6G,EALsB,KAKJC,EALI,OAMe9G,mBAAS,IANxB,mBAMtB+G,EANsB,KAMNC,EANM,OAODhH,mBAAS,IAPR,mBAOtB2I,EAPsB,KAOd4C,EAPc,OAQDvL,mBAAS,IARR,mBAQtBgN,EARsB,KAQdC,EARc,OASHjN,mBAAS,MATN,mBAStB4I,EATsB,KASfsT,EATe,KA0B7B,GAfAhkB,QAAQC,IAAI,uBAAwB4H,GACpCqK,qBAAU,WAC2B,OAA/BrK,EAAMuC,OAAOC,gBACf0K,EAAUlN,EAAMuC,OAAOC,cAAcwD,SACrCK,EAAarG,EAAMuC,OAAOC,cAAcsD,YACxCW,EAAMzG,EAAMuC,OAAOC,cAAcmG,YACjCpC,EAAiBvG,EAAMuC,OAAOC,cAAckG,YAC5C7B,EAAe,IAAIhC,KAAK7E,EAAMuC,OAAOC,cAAcS,eACnD8D,EAAoB/G,EAAMuC,OAAOC,cAAcW,oBAC/C8D,EAAkBjH,EAAMuC,OAAOC,cAAca,kBAC7CmI,EAAUxL,EAAMuC,OAAOC,cAAcoG,QACrCuT,EAASnc,EAAMuC,OAAOC,cAAcqG,UAErC,CAAC7I,EAAMuC,OAAOC,gBAEkB,OAA/BxC,EAAMuC,OAAOC,eAAgD,OAAtBxC,EAAM9H,MAAMA,MACrD,OACE,kBAACkkB,GAAA,EAAD,KACE,kBAAC3S,GAAA,EAAD,CAAQC,QAAM,EAACxF,UAAQ,GACrB,kBAACyF,GAAA,EAAD,CAAQzF,UAAQ,EAACzE,QAAQ,kBAMjC,IAAI2H,EAAiBpH,EAAM6F,SAASwB,eAAeC,KAAI,SAAApB,GAAO,MAAK,CACjExC,IAAKwC,EAAQvO,GACbgM,KAAMuC,EAAQ3C,KACdrB,MAAOgE,EAAQvO,OAEb0V,EAAcrN,EAAM9H,MAAMA,MAAMoP,KAAI,SAAAzN,GAAI,MAAK,CAC/C6J,IAAK7J,EAAKlC,GACVgM,KAAK,GAAD,OAAK9J,EAAK2G,WAAV,YAAwB3G,EAAK8G,WACjCuB,MAAOrI,EAAKlC,OAiSR0kB,EAAW,WACflkB,QAAQC,IAAI,iBAEV+jB,EADY,OAAVtT,EACO,EAEA,OAiCPkT,EAAa,SAAA/Z,GACjBA,EAAEmG,iBACFhQ,QAAQC,IAAI,cACZ,IAAM4jB,EAAsB,CAC1BhW,QAASiH,EACTnH,WAAYM,EACZnD,aAAcD,KAAO4D,GAAa1D,OAAO,cACzCC,mBAAoB2D,EACpBzD,iBAAkB2D,EAClB0B,WAAYpC,EACZvD,aAAc/C,EAAMuC,OAAOC,cAAcO,aACzC4F,WAAYnC,EACZoC,OAAQA,EACRC,MAAOA,GAEHoT,EAAqBjc,EAAMuC,OAAOA,OACxCpK,QAAQC,IAAI4jB,GACZ7jB,QAAQC,IAAI6jB,GACZjc,EAAM+b,WAAWC,EAAqBC,GACtCjc,EAAMR,gBAAN,0CACqCwD,KAAO4D,GAAa1D,OACrD,eAEF,YA6BJ,OACE,6BACE,kBAAC3B,GAAA,EAAD,sCACA,kBAAC6a,GAAA,EAAQhU,MAAT,CAAekU,YAAU,GACvB,kBAACF,GAAA,EAAD,KACE,kBAAC,GAAD,CAAW9lB,MAAM,OAAOmP,YAAY,YAClC,kBAAC,GAAD,QAGJ,kBAAC2W,GAAA,EAAD,KACE,kBAAC,GAAD,CAAW9lB,MAAM,OAAOmP,YAAY,0BAClC,kBAAC,GAAD,SAKN,kBAACkC,GAAA,EAAD,CAAMsD,QAAQ,cACZ,kBAACtD,GAAA,EAAKkC,IAAN,CAAUqB,QAAS,GACjB,kBAACvD,GAAA,EAAKC,OAAN,KACE,kBAACrG,GAAA,EAAD,yBACA,kBAACE,GAAA,EAAD,KACE,kBAACA,GAAA,EAAKE,MAAN,KACE,0CACA,kBAAC+C,GAAA,EAAD,CACE5C,YAAY,UACZiG,aAAW,EACXC,WAAS,EACT9F,MAAOkE,EACP6B,QAAM,EACNxE,QAAS2D,EACTrF,SAvZG,SAACmG,EAAD,GAAuB,IAAbhG,EAAY,EAAZA,MAC3BgG,EAAMC,iBACN9B,EAAanE,MAsZE,KAEL,kBAACT,GAAA,EAAKE,MAAN,KACE,gDACA,kBAACF,GAAA,EAAKG,MAAN,CACEO,aAAcmE,EACdvE,SAAU,SAAAC,GAAC,OAAIuE,EAAiBvE,EAAEC,OAAOC,UACxC,KAEL,kBAACT,GAAA,EAAKE,MAAN,KACE,qCACA,kBAACF,GAAA,EAAKG,MAAN,CACEM,MAAOsE,EACPzE,SAAU,SAAAC,GAAC,OAAIyE,EAAMzE,EAAEC,OAAOC,UAC7B,KAGL,kBAACT,GAAA,EAAK2G,MAAN,CAAYC,OAAO,SACjB,kBAAC5G,GAAA,EAAKE,MAAN,KACE,uDAEA,kBAAC,KAAD,CACE6G,SAAU5B,EACVqT,4BAA4B,EAC5BxR,WAAW,aACX1G,SAAU,SAAApI,GAAI,OAAIkN,EAAelN,IACjC2O,OAAQC,QAIZ,kBAAC9G,GAAA,EAAKE,MAAN,KACE,8CACA,kBAAC+C,GAAA,EAAD,CACExC,MAAO4E,EACPiB,aAAW,EACXC,WAAS,EACTC,QAAM,EACNxE,QApbO,CACvB,CACEC,IAAK,EACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,EACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,EACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,EACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,EACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,EACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,EACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,EACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,EACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,EACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,GACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,GACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,GACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,GACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,GACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,GACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,GACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,GACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,GACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,GACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,GACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,GACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,GACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,GACLC,KAAM,QACNzB,MAAO,aA8TOH,SA3TG,SAACmG,EAAD,GAAuB,IAAbhG,EAAY,EAAZA,MAC7BgG,EAAMC,iBACNpB,EAAoB7E,MA0TH,KAGL,kBAACT,GAAA,EAAKE,MAAN,KACE,sDACA,kBAAC+C,GAAA,EAAD,CACExC,MAAO8E,EACPe,aAAW,EACXC,WAAS,EACTC,QAAM,EACNxE,QAhUK,CACrB,CACEC,IAAK,EACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,EACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,EACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,EACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,EACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,EACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,EACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,EACLC,KAAM,QACNzB,MAAO,YAET,CACEwB,IAAK,EACLC,KAAM,QACNzB,MAAO,YAET,C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","file":"static/js/main.8025f48c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.fa00af7b.png\";","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst ModalNotification = ({ notification }) => {\n  if (notification.message === null) {\n    return null;\n  }\n  if (notification.type === 'success') {\n    return <span style={{ color: 'green' }}>{notification.message}</span>;\n  }\n  if (notification.type === 'fail') {\n    return <span style={{ color: 'red' }}>{notification.message}</span>;\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    notification: state.notification\n  };\n};\n\nconst connectedModalNotification = connect(\n  mapStateToProps,\n  null\n)(ModalNotification);\n\nexport default connectedModalNotification;\n","// Login actions:\nexport const INIT_USER = 'INIT_USER';\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\n\n// user actions\nexport const INIT_USERS_LIST = 'INIT_USERS_LIST';\nexport const USER_ERROR = 'USER_ERROR';\nexport const SET_CURRENT = 'SET_CURRENT';\nexport const CREATE_USER = 'CREATE_USER';\nexport const UPDATE_USER = 'UPDATE_USER';\nexport const UPDATE_CURRENT_USER = 'UPDATE_CURRENT_USER';\nexport const DELETE_USER = 'DELETE_USER';\n\n// report actions\nexport const GET_ONE_REPORT = 'GET_ONE_REPORT';\nexport const GET_REPORT_DETAILS = 'GET_REPORT_DETAILS';\nexport const GET_ALL_REPORTS_BY_DATE = 'GET_ALL_REPORTS_BY_DATE';\nexport const GET_ALL_IN_PROGRESS = 'GET_ALL_IN_PROGRESS';\nexport const GET_ALL_REPORT_TRANSFERS = 'GET_ALL_REPORT_TRANSFERS';\nexport const GENERATE_REPORT_TRANSFER = 'GENERATE_REPORT_TRANSFER';\nexport const CREATE_REPORT = 'CREATE_REPORT';\nexport const COPY_REPORT = 'COPY_REPORT';\nexport const UPDATE_REPORT = 'UPDATE_REPORT';\nexport const DELETE_REPORT = 'DELETE_REPORT';\nexport const GET_DJONLINE_TRACKS = 'GET_DJONLINE_TRACKS';\nexport const REPORT_ERROR = 'REPORT_ERROR';\nexport const CLEAR_CURRENT_REPORT = 'CLEAR_CURRENT_REPORT';\nexport const DELETE_TRACK_FROM_REPORT = 'DELETE_TRACK_FROM_REPORT';\nexport const CHECK_FOR_DELETE = 'CHECK_FOR_DELETE';\nexport const UNCHECK_FOR_DELETE = 'UNCHECK_FOR_DELETE';\nexport const DOWNLOAD_REPORT = 'DOWNLOAD_REPORT';\nexport const FILTER_BY_USER_ID = 'FILTER_BY_USER_ID';\nexport const FILTER_BY_STATUS = 'FILTER_BY_STATUS';\nexport const FILTER_BY_TEXT = 'FILTER_BY_TEXT';\nexport const SET_EDIT_TRACK_ID = 'SET_EDIT_TRACK_ID';\n\n// program actions\nexport const GET_ALL_PROGRAMS = 'GET_ALL_PROGRAMS';\nexport const GET_ALL_ACTIVE_PROGRAMS = 'GET_ALL_ACTIVE_PROGRAMS';\nexport const GET_ONE_PROGRAM = 'GET_ONE_PROGRAM';\nexport const CREATE_NEW_PROGRAM = 'CREATE_NEW_PROGRAM';\nexport const CREATE_NEW_PROGRAM_ON_NEW_REPORT =\n  'CREATE_NEW_PROGRAM_ON_NEW_REPORT';\nexport const UPDATE_PROGRAM = 'UPDATE_PROGRAM';\n\n// search actions\nexport const AUTOCOMPLETE_RESULTS = 'AUTOCOMPLETE_RESULTS';\nexport const ADVANCED_RESULTS = 'ADVANCED_RESULTS';\nexport const SORT_ADVANCED_RESULTS = 'SORT_ADVANCED_RESULTS';\nexport const SET_SEARCH_LOADING = 'SET_SEARCH_LOADING';\nexport const GET_DISCOGS_CATID = 'GET_DISCOGS_CATID';\nexport const CLEAR_DISCOGS_CATID = 'CLEAR_DISCOGS_CATID';\nexport const TOP_100 = 'TOP_100';\nexport const TOP_100_QUERY = 'TOP_100_QUERY';\nexport const GET_CHANGE_ALBUM_OPTIONS = 'GET_CHANGE_ALBUM_OPTIONS';\nexport const GET_CHANGE_ARTIST_OPTIONS = 'GET_CHANGE_ARTIST_OPTIONS';\nexport const RESET_CHANGE_ALBUM_OPTIONS = 'RESET_CHANGE_ALBUM_OPTIONS';\nexport const RESET_CHANGE_ARTIST_OPTIONS = 'RESET_CHANGE_ARTIST_OPTIONS';\n\n// track actions\nexport const ADD_NEW_TRACK = 'ADD_NEW_TRACK';\nexport const UPDATE_TRACK = 'UPDATE_TRACK';\nexport const GET_ONE_TRACK = 'GET_ONE_TRACK';\nexport const GET_ONE_TRACK_HISTORY = 'GET_ONE_TRACK_HISTORY';\nexport const CLEAR_CURRENT_TRACK = 'CLEAR_CURRENT_TRACK';\nexport const REMOVE_CURRENT_TRACK = 'REMOVE_CURRENT_TRACK';\nexport const CHANGE_ALBUM = 'CHANGE_ALBUM';\nexport const CHANGE_ARTIST = 'CHANGE_ARTIST';\nexport const MERGE_TRACKS = 'MERGE_TRACKS';\n\n// artist actions\nexport const GET_ONE_ARTIST = 'GET_ONE_ARTIST';\nexport const GET_ALBUM_LIST_BY_ARTIST = 'GET_ALBUM_LIST_BY_ARTIST';\nexport const CLEAR_CURRENT_ARTIST = 'CLEAR_CURRENT_ARTIST';\nexport const MERGE_ARTISTS = 'MERGE_ARTISTS';\n\n// album actions\nexport const GET_ONE_ALBUM = 'GET_ONE_ALBUM';\nexport const GET_TRACKLIST_OF_ALBUM = 'GET_TRACKLIST_OF_ALBUM';\nexport const CLEAR_CURRENT_ALBUM = 'CLEAR_CURRENT_ALBUM';\nexport const MERGE_ALBUMS = 'MERGE_ALBUMS';\n\n// preloader actions\nexport const SET_LOADING = 'SET_LOADING';\n","import axios from 'axios';\nconst baseUrl = '/api/users';\n\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = async () => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const req = await axios.get(baseUrl, config);\n  return req.data;\n};\n\nconst createUser = async userToAdd => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const request = await axios.post(baseUrl, userToAdd, config);\n  return request.data;\n};\n\nconst updateUser = async userToUpdate => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const response = await axios.put(\n    `${baseUrl}/${userToUpdate.id}`,\n    userToUpdate,\n    config\n  );\n  return response.data;\n};\n\nconst deleteUser = async id => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const response = await axios.delete(`${baseUrl}/${id}`, config);\n  return response.data;\n};\n\nexport default { getAll, setToken, createUser, updateUser, deleteUser };\n","import {\n  INIT_USERS_LIST,\n  SET_LOADING,\n  SET_CURRENT,\n  CREATE_USER,\n  UPDATE_USER,\n  DELETE_USER\n} from '../actions/types';\nimport userService from '../services/users';\n\nexport const initializeUsers = () => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const users = await userService.getAll();\n    dispatch({\n      type: INIT_USERS_LIST,\n      data: users\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n// Set current user for editing\nexport const setCurrent = user => {\n  return {\n    type: SET_CURRENT,\n    payload: user\n  };\n};\n\nexport const createUser = userToAdd => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const newUser = await userService.createUser(userToAdd);\n    dispatch({\n      type: CREATE_USER,\n      data: newUser\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updateUser = userToUpdate => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const updated = await userService.updateUser(userToUpdate);\n    const users = await userService.getAll();\n    console.log(updated);\n    dispatch({\n      type: UPDATE_USER,\n      data: users\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deleteUser = id => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    dispatch({\n      type: DELETE_USER,\n      data: id\n    });\n    const deleted = await userService.deleteUser(id);\n    console.log(deleted);\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import axios from 'axios';\nconst baseUrl = '/api/login';\n\nconst login = async credentials => {\n  const res = await axios.post(baseUrl, credentials);\n  return res.data;\n};\n\nexport default { login };\n","import axios from 'axios';\nconst baseUrl = '/api/artists';\n\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\n// get artist details\nconst getOneArtist = async id => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const response = await axios.get(`${baseUrl}/details/${id}`, config);\n  return response.data;\n};\n\nconst getAlbumsByArtist = async id => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const response = await axios.get(`${baseUrl}/albumsby/${id}`, config);\n  return response.data;\n};\n\nconst updateArtist = async artistToUpdate => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  console.log('artistservice updated track', artistToUpdate);\n  const response = await axios.put(\n    `${baseUrl}/details/${artistToUpdate.id}`,\n    artistToUpdate,\n    config\n  );\n  console.log(response.data);\n  return response.data;\n};\n\nexport default {\n  setToken,\n  updateArtist,\n  getOneArtist,\n  getAlbumsByArtist\n};\n","import axios from 'axios';\nconst baseUrl = '/api/albums';\n\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\nconst getOneAlbum = async id => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const response = await axios.get(`${baseUrl}/albumdetails/${id}`, config);\n  return response.data;\n};\n\nconst getTracklistOfAlbum = async id => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const response = await axios.get(`${baseUrl}/tracklist/${id}`, config);\n  return response.data;\n};\n\nconst updateAlbum = async albumToUpdate => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  console.log('albumservice updated album', albumToUpdate);\n  console.log('album to update', albumToUpdate);\n  const response = await axios.put(\n    `${baseUrl}/albumdetails/${albumToUpdate.id}`,\n    albumToUpdate,\n    config\n  );\n  console.log(response.data);\n  return response.data;\n};\n\nexport default {\n  setToken,\n  updateAlbum,\n  getOneAlbum,\n  getTracklistOfAlbum\n};\n","import axios from 'axios';\nconst baseUrl = '/api/programs';\n\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\n// get all active programs\nconst getAllActive = async () => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const req = await axios.get(`${baseUrl}/active`, config);\n  return req.data;\n};\n\n// get all programs\nconst getAll = async () => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const req = await axios.get(`${baseUrl}/all`, config);\n  return req.data;\n};\n\n// get one program\nconst getOne = async id => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  console.log('program req id', id);\n  const request = await axios.get(`${baseUrl}/getone/${id}`, config);\n  console.log('programservice get one program data', request.data);\n  return request.data;\n};\n\nconst createProgram = async newProgram => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const request = await axios.post(baseUrl, newProgram, config);\n  return request.data;\n};\n\nconst updateProgram = async updatedProgram => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const request = await axios.put(`${baseUrl}/update`, updatedProgram, config);\n  return request.data;\n};\n\nconst mergePrograms = async mergeParams => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  console.log(mergeParams);\n  const request = await axios.put(`${baseUrl}/merge`, mergeParams, config);\n  return request.data;\n};\n\nexport default {\n  getAllActive,\n  getAll,\n  getOne,\n  createProgram,\n  updateProgram,\n  mergePrograms,\n  setToken\n};\n","import axios from 'axios';\nconst baseUrl = '/api/reports';\nconst download = require('downloadjs');\n\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\n// get a list of reports by date\nconst getAllByDate = async date => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  // notice baseurl is different here!\n  console.log('getting reports from', date);\n\n  const request = await axios.get(`/api/reportslist/date/${date}`, config);\n  console.log('reportservice get one report-track data', request.data);\n  return request.data;\n};\n\n// get all by month and by user\nconst getAllByDateByUser = async (date, user) => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  // notice baseurl is different here!\n  console.log('getting reports from', date, 'by user ', user);\n\n  const request = await axios.get(\n    `/api/reportslist/all?date=${date}&user=${user}`,\n    config\n  );\n  console.log('reportservice get one report-track data', request.data);\n  return request.data;\n};\n\n// get all in progress reports of one user\nconst getAllInProgress = async id => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  // notice baseurl is different here!\n  console.log('getting reports from id', id);\n\n  const request = await axios.get(`/api/reportslist/user/${id}`, config);\n  console.log('reportservice get all in progress by user id', request.data);\n  return request.data;\n};\n// get a list of reports by user_id, date\n\n// get one report with tracks\nconst getOne = async id => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  console.log('report req id', id);\n  const request = await axios.get(`${baseUrl}/${id}`, config);\n  console.log('reportservice get one report-track data', request.data);\n  return request.data;\n};\n\nconst getAllTransfers = async () => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const request = await axios.get('/api/reporttransfer', config);\n  console.log('reportservice get all transfers data', request.data);\n  return request.data;\n};\n\nconst addTrackToReport = async trackToAdd => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const request = await axios.post(`${baseUrl}`, trackToAdd, config);\n  console.log('reportservice add track to report', request.data);\n  return request.data;\n};\n\nconst deleteTrackFromReport = async id => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const request = await axios.delete(`${baseUrl}/${id}`, config);\n  return request.data;\n};\n\nconst deleteReport = async id => {\n  const config = {\n    headers: { Authorization: token }\n  };\n\n  const request = await axios.delete(`/api/reportslist/${id}`, config);\n  return request.data;\n};\n\nconst updateSortableRank = async remainingTracks => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  remainingTracks.forEach(async (track, index) => {\n    const trackToUpdate = {\n      sortable_rank: index + 1\n    };\n    const request = await axios.put(\n      `${baseUrl}/${track.report_track_id}`,\n      trackToUpdate,\n      config\n    );\n    return request.data;\n  });\n};\n\nconst getReportDetails = async id => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  console.log('reportdetails req id ', id);\n  const request = await axios.get(`/api/reportdetails/details/${id}`, config);\n  console.log('reportservice get report details res data', request.data);\n  return request.data;\n};\n\n// create new report\nconst createReport = async newReport => {\n  const config = {\n    headers: { Authorization: token }\n  };\n\n  const response = await axios.post('/api/reportdetails', newReport, config);\n  console.log(response.data);\n  return response.data;\n};\n\n// update existing report details\nconst updateReport = async updatedReport => {\n  const config = {\n    headers: { Authorization: token }\n  };\n\n  console.log('reportservice report to update', updatedReport);\n  const request = axios.put(\n    `/api/reportdetails/update/${updatedReport.id}`,\n    updatedReport,\n    config\n  );\n  console.log(request.data);\n  return updatedReport;\n};\n\n// generate text file for download\nexport const generateReportDownload = async params => {\n  try {\n    const config = {\n      headers: { Authorization: token, responseType: 'blob' }\n    };\n    const request = await axios.post('/api/reporttransfer', params, config);\n    return request.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// download report\nexport const downloadReport = async filename => {\n  try {\n    const config = {\n      headers: { Authorization: token, responseType: 'blob' }\n    };\n    const response = await axios.get(`/api/reporttransfer/${filename}`, config);\n    download(response.data, filename);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default {\n  setToken,\n  addTrackToReport,\n  deleteTrackFromReport,\n  deleteReport,\n  updateSortableRank,\n  getOne,\n  getAllByDate,\n  getAllByDateByUser,\n  getAllInProgress,\n  getAllTransfers,\n  getReportDetails,\n  createReport,\n  updateReport,\n  generateReportDownload,\n  downloadReport\n};\n","import axios from 'axios';\nconst baseUrl = '/api/search';\n\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\nconst getTracksForSearch = async query => {\n  const config = {\n    headers: { Authorization: token }\n  };\n\n  console.log('autocomplete search query', query);\n  const request = await axios.get(`${baseUrl}/autocomplete/${query}`, config);\n  console.log('search service get autocomplete tracks req data', request.data);\n  return request.data;\n};\n\nconst getCatIdFromDiscogs = async query => {\n  const request = await axios.get(\n    `https://api.discogs.com/database/search?artist=${query.artist}&release_title=${query.album}&token=${process.env.REACT_APP_DISCOGS_TOKEN}`\n  );\n  return request.data;\n};\n\nconst getTop100 = async query => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const request = await axios.get(\n    `/api/top100?list=${query.list}&start_date=${query.start_date}&end_date=${query.end_date}`,\n    config\n  );\n  return request.data;\n};\n\nconst advancedSearch = async searchParams => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const request = await axios.get(\n    `${baseUrl}/advanced?kind=${searchParams.kind}&query=${searchParams.query}`,\n    config\n  );\n  return request.data;\n};\n\nconst merge = async mergeParams => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  console.log(mergeParams);\n  const request = await axios.put(`${baseUrl}/advanced`, mergeParams, config);\n  return request.data;\n};\n\nconst changeArtistOptions = async query => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const request = await axios.get(`${baseUrl}/changeartist/${query}`, config);\n  return request.data;\n};\n\nconst changeAlbumOptions = async query => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const request = await axios.get(`${baseUrl}/changealbum/${query}`, config);\n  return request.data;\n};\n\nexport default {\n  setToken,\n  getTracksForSearch,\n  advancedSearch,\n  getCatIdFromDiscogs,\n  getTop100,\n  merge,\n  changeArtistOptions,\n  changeAlbumOptions\n};\n","import axios from 'axios';\nconst baseUrl = '/api/tracks';\n\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\nconst checkDjonlineTracks = async searchParams => {\n  // TODO - Handle sortable_rank\n  const tracks = await axios.get(\n    `${process.env.REACT_APP_PLAYLOG_URL}?id=${searchParams.studioId}&date=${searchParams.date}`\n  );\n  let arr = [];\n  for (const prop in tracks.data) {\n    arr.push(tracks.data[prop]);\n  }\n  arr = arr.reverse();\n  let newArr = [];\n  arr.forEach((track, index) => {\n    let hours = track.date.charAt(11) + track.date.charAt(12);\n    hours = parseInt(hours);\n    let a = track.length.split(':');\n    console.log('trackservice time after splitting :', a);\n    let seconds = parseInt(a[0]) * 60 + parseInt(a[1]);\n    console.log('trackservice length as seconds', seconds);\n    // make loop skip the songs not matching the start time - end time -window\n    if (\n      hours < parseInt(searchParams.startTime) ||\n      hours >= parseInt(searchParams.endTime)\n    ) {\n      return;\n    }\n    newArr.push({\n      album_name: track.album,\n      artist_name: track.artist,\n      cat_id: track.matrix,\n      disc_no: track.side,\n      track_no: track.tracknumber,\n      isrc: track.isrc,\n      record_country: track.recording_country,\n      country: null,\n      play_time: track.date,\n      djonline_id: track.id,\n      label: track.label,\n      length: seconds,\n      track_title: track.song,\n      year: track.year,\n      // sortable_rank: searchParams.sortable_rank_start + index + 1,\n      report_id: searchParams.report_id\n    });\n  });\n  const config = {\n    headers: { Authorization: token }\n  };\n  console.log('array of tracks going to backend', newArr);\n  const newerArr = [];\n  newArr.forEach((track, index) => {\n    newerArr.push({\n      ...track,\n      sortable_rank: searchParams.sortable_rank_start + index + 1\n    });\n  });\n  let returnArr = [];\n  console.log('new arr to backend with sortable ranks', newerArr);\n  newerArr.forEach(async track => {\n    const request = await axios.post(`${baseUrl}/djonline`, track, config);\n    returnArr.push(request.data);\n  });\n  console.log('returned array from backend', returnArr);\n  return returnArr;\n};\n\n// add new track and save it to a report\nconst addNewTrack = async trackToAdd => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const response = await axios.post(\n    `${baseUrl}/addandreport`,\n    trackToAdd,\n    config\n  );\n  console.log(response.data);\n  return response.data;\n};\n\n// add new track without saving to report\nconst addTrackToDb = async trackToAdd => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const response = await axios.post(`${baseUrl}/addtodb`, trackToAdd, config);\n  console.log(response.data);\n  return response.data;\n};\n\nconst updateTrack = async trackToUpdate => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  console.log('trackservices updated track', trackToUpdate);\n  const response = await axios.put(baseUrl, trackToUpdate, config);\n  console.log(response.data);\n  return response.data;\n};\n\nconst updateAlbumId = async albumToUpdate => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const response = await axios.put(\n    `/api/tracks/updatealbum`,\n    albumToUpdate,\n    config\n  );\n  return response.data;\n};\n\nconst updateArtistId = async artistToUpdate => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const response = await axios.put(\n    `/api/tracks/updateartist`,\n    artistToUpdate,\n    config\n  );\n  return response.data;\n};\n\nconst getOneTrack = async id => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const response = await axios.get(`${baseUrl}/details/${id}`, config);\n  return response.data;\n};\n\nconst getOneTrackHistory = async id => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const response = await axios.get(`${baseUrl}/history/${id}`, config);\n  return response.data;\n};\n\nexport default {\n  setToken,\n  checkDjonlineTracks,\n  addNewTrack,\n  updateTrack,\n  getOneTrack,\n  getOneTrackHistory,\n  updateAlbumId,\n  updateArtistId,\n  addTrackToDb\n};\n","import loginService from '../services/login';\nimport artistService from '../services/artists';\nimport albumService from '../services/albums';\nimport programService from '../services/programs';\nimport reportService from '../services/reports';\nimport searchService from '../services/search';\nimport trackService from '../services/tracks';\nimport userService from '../services/users';\nimport {\n  INIT_USER,\n  LOGIN,\n  LOGOUT,\n  LOGIN_ERROR,\n  UPDATE_CURRENT_USER,\n  SET_LOADING\n} from '../actions/types';\n\nexport const initializeUser = () => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const loggedUserJSON = window.localStorage.getItem('loggedUser');\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      // set token for logged in user\n      userService.setToken(user.token);\n      reportService.setToken(user.token);\n      programService.setToken(user.token);\n      searchService.setToken(user.token);\n      trackService.setToken(user.token);\n      artistService.setToken(user.token);\n      albumService.setToken(user.token);\n      dispatch({\n        type: INIT_USER,\n        data: user\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: LOGIN_ERROR,\n      payload: err.response.statusText\n    });\n  }\n};\n\nexport const newLogin = user => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const newUser = await loginService.login(user);\n    window.localStorage.setItem('loggedUser', JSON.stringify(newUser));\n    // set token for logged in user\n    // blogService.setToken(newUser.token);\n    dispatch({\n      type: LOGIN,\n      data: newUser,\n      loading: false\n    });\n  } catch (exception) {\n    const content = {\n      message: 'wrong username or password',\n      type: 'fail'\n    };\n    dispatch({\n      type: 'SET_NOTIFICATION',\n      data: content\n    });\n    setTimeout(() => {\n      dispatch({\n        type: 'CLEAR_NOTIFICATION'\n      });\n    }, 3000);\n  }\n};\n\nexport const updateCurrentUser = userToUpdate => async dispatch => {\n  try {\n    dispatch({\n      type: UPDATE_CURRENT_USER,\n      data: userToUpdate\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const logout = () => async dispatch => {\n  window.localStorage.removeItem('loggedUser');\n  dispatch({\n    type: LOGOUT\n  });\n};\n","const initialState = {\n  message: null,\n  type: null\n};\n\nconst notificationReducer = (state = initialState, action) => {\n  console.log('action', action);\n  console.log(state);\n  switch (action.type) {\n    case 'SET_NOTIFICATION':\n      return action.data;\n\n    case 'CLEAR_NOTIFICATION':\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n\nexport const setNotification = (message, type) => {\n  console.log(message);\n  console.log(type);\n  const content = {\n    message,\n    type\n  };\n  return async dispatch => {\n    dispatch({\n      type: 'SET_NOTIFICATION',\n      data: content\n    });\n    setTimeout(() => {\n      dispatch({\n        type: 'CLEAR_NOTIFICATION'\n      });\n    }, 3000);\n  };\n};\n\n// const setNotification = (id, message) => {\n//   console.log(message);\n//   return dispatch => {\n//     dispatch({\n//       type: 'NOTIFICATION',\n//       id,\n//       message\n//     });\n//   };\n// };\n\n// const clearNotification = id => {\n//   return {\n//     type: 'CLEAR',\n//     id\n//   };\n// };\n\n// let nextNotificationId = 0;\n// export function showNotificationWithTimeout(text, duration) {\n//   duration = duration * 1000;\n//   return function(dispatch) {\n//     const id = nextNotificationId++;\n//     dispatch(setNotification(id, text));\n\n//     setTimeout(() => {\n//       dispatch(clearNotification(id));\n//     }, duration);\n//   };\n// }\n\nexport default notificationReducer;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport ModalNotification from '../layout/ModalNotification';\nimport { updateUser } from '../../actions/userActions';\nimport { updateCurrentUser } from '../../actions/loginActions';\nimport { setNotification } from '../../reducers/notificationReducer';\nimport { Modal, Header, Form, Button, Input } from 'semantic-ui-react';\n\nconst LoggedInUserModal = props => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [firstName, setFirstName] = useState(props.login.first_name);\n  const [lastName, setLastName] = useState(props.login.last_name);\n  const [email, setEmail] = useState(props.login.email);\n\n  const handleOpen = () => {\n    setModalOpen(true);\n  };\n  const handleClose = () => {\n    setModalOpen(false);\n  };\n\n  const updateUserClick = () => {\n    if (password.length === 0 && confirmPassword.length === 0) {\n      const userToUpdate = {\n        id: props.login.id,\n        first_name: firstName,\n        last_name: lastName,\n        email\n      };\n      console.log('updting info', userToUpdate);\n      props.updateCurrentUser(userToUpdate);\n      props.updateUser(userToUpdate);\n      props.setNotification('Omat tiedot päivitetty!', 'success');\n      handleClose();\n    } else if (password !== confirmPassword || password.length <= 3) {\n      props.setNotification('Tarkasta salasanat!', 'fail');\n    } else {\n      const userToUpdate = {\n        id: props.login.id,\n        password,\n        first_name: firstName,\n        last_name: lastName,\n        email\n      };\n      console.log('updting info', userToUpdate);\n      handleClose();\n      props.updateCurrentUser(userToUpdate);\n      props.updateUser(userToUpdate);\n      props.setNotification('Omat tiedot päivitetty!', 'success');\n    }\n  };\n\n  return (\n    <Modal\n      trigger={<span onClick={handleOpen}>Omat tiedot</span>}\n      closeIcon\n      open={modalOpen}\n      onClose={handleClose}\n    >\n      <Header content=\"Muokkaa tietoja\" />\n      <Modal.Content>\n        <Form onSubmit={updateUserClick}>\n          <Form.Field>\n            <ModalNotification />\n            <label>Salasana - syötä vaihtaaksesi</label>\n            <Input\n              focus\n              type=\"password\"\n              placeholder=\"Salasana...\"\n              onChange={e => setPassword(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Salasana uudelleen</label>\n            <Input\n              focus\n              type=\"password\"\n              placeholder=\"Vahvista salasana...\"\n              onChange={e => setConfirmPassword(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <ModalNotification />\n            <label>Etunimi</label>\n            <Input\n              focus\n              defaultValue={firstName}\n              type=\"text\"\n              placeholder=\"Etunimi...\"\n              onChange={e => setFirstName(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Sukunimi</label>\n            <Input\n              focus\n              defaultValue={lastName}\n              type=\"text\"\n              placeholder=\"Sukunimi...\"\n              onChange={e => setLastName(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Email</label>\n            <Input\n              focus\n              defaultValue={email}\n              type=\"email\"\n              placeholder=\"Email...\"\n              onChange={e => setEmail(e.target.value)}\n            />\n          </Form.Field>\n          <Button\n            color=\"green\"\n            type=\"submit\"\n            disabled={!email || !firstName || !lastName}\n          >\n            Tallenna\n          </Button>\n          <ModalNotification />\n        </Form>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('app state', state);\n  return {\n    login: state.login\n  };\n};\n\nconst connectedLoggedInUserModal = connect(\n  mapStateToProps,\n  { setNotification, updateUser, updateCurrentUser }\n)(LoggedInUserModal);\n\nexport default connectedLoggedInUserModal;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n\nconst CurrentReport = props => {\n  if (!props.report.reportDetails) {\n    return null;\n  } else {\n    return (\n      <div\n        style={{\n          display: 'inline',\n          color: 'white',\n          float: 'right',\n          marginTop: 'auto',\n          // marginLeft: 'auto',\n          marginRight: '0.6rem',\n          marginBottom: '0.7rem'\n        }}\n      >\n        <Link to={`/reports/${props.report.reportDetails.id}`}>\n          {props.report.reportDetails.program_name} <br />\n          {moment(props.report.reportDetails.program_date).format(\n            'DD.MM.YYYY'\n          )}{' '}\n          {props.report.reportDetails.program_start_time.slice(0, -3)} -{' '}\n          {props.report.reportDetails.program_end_time.slice(0, -3)}\n        </Link>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    report: state.report\n  };\n};\n\nconst connectedCurrentReport = connect(mapStateToProps, null)(CurrentReport);\n\nexport default connectedCurrentReport;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport LoggedInUserInfo from '../user/LoggedInUserInfo';\nimport CurrentReport from '../report/CurrentReport';\nimport { logout } from '../../actions/loginActions';\nimport { Link } from 'react-router-dom';\nimport { Menu, Image, Dropdown, Icon } from 'semantic-ui-react';\nimport logo from '../../img/logo.png';\n\nconst Navbar = props => {\n  const getLoggedInUserInfo = () => {\n    return <LoggedInUserInfo />;\n  };\n  const handleLogoutClick = () => {\n    console.log('klikd logout');\n    props.logout();\n  };\n  const trigger = (\n    <span>\n      <Icon color=\"pink\" name=\"user\" size=\"large\" /> {props.first_name}{' '}\n      {props.last_name}\n    </span>\n  );\n  const options = [\n    {\n      key: 'user',\n      text: <LoggedInUserInfo />,\n      icon: 'user',\n      onClick: getLoggedInUserInfo\n    },\n    {\n      key: 'sign-out',\n      text: 'Kirjaudu ulos',\n      icon: 'sign out',\n      onClick: handleLogoutClick\n    }\n  ];\n  if (props.login.level === 1) {\n    return (\n      <div style={{ marginBottom: '1.5rem' }}>\n        <Menu pointing stackable inverted>\n          <Menu.Item link>\n            <Link to=\"/\">\n              <Image alt=\"logo\" src={logo} size=\"small\" />\n            </Link>\n          </Menu.Item>\n          <Menu.Item link>\n            <Link to=\"/reports\">\n              <h4>RAPORTIT</h4>\n            </Link>\n          </Menu.Item>\n          <Menu.Item link>\n            <Link to=\"/top100\">\n              <h4>TOP 100</h4>\n            </Link>\n          </Menu.Item>\n          <Menu.Item link>\n            <Link to=\"/search\">\n              <h4>HAKU</h4>\n            </Link>\n          </Menu.Item>\n          <Menu.Item position=\"right\">\n            <Dropdown\n              trigger={trigger}\n              options={options}\n              pointing=\"top left\"\n              icon={null}\n            />\n          </Menu.Item>\n          <Menu.Item>\n            <CurrentReport />\n          </Menu.Item>\n        </Menu>\n      </div>\n    );\n  } else if (props.login.level === 2) {\n    return (\n      <div style={{ marginBottom: '1.5rem' }}>\n        <Menu pointing stackable inverted>\n          <Menu.Item link>\n            <Link to=\"/\">\n              <Image alt=\"logo\" src={logo} size=\"small\" />\n            </Link>\n          </Menu.Item>\n\n          <Menu.Item link>\n            <Link to=\"/reports\">\n              <h4>RAPORTIT</h4>\n            </Link>\n          </Menu.Item>\n          <Menu.Item link>\n            <Link to=\"/top100\">\n              <h4>TOP 100</h4>\n            </Link>\n          </Menu.Item>\n          <Menu.Item link>\n            <Link to=\"/search\">\n              <h4>HAKU</h4>\n            </Link>\n          </Menu.Item>\n          <Menu.Item link>\n            <Link to=\"/programs\">\n              <h4>OHJELMAT</h4>\n            </Link>\n          </Menu.Item>\n          <Menu.Item position=\"right\">\n            <Dropdown\n              trigger={trigger}\n              options={options}\n              pointing=\"top left\"\n              icon={null}\n            />\n          </Menu.Item>\n          <Menu.Item>\n            <CurrentReport />\n          </Menu.Item>\n        </Menu>\n      </div>\n    );\n  } else if (props.login.level === 3) {\n    return (\n      <div style={{ marginBottom: '1.5rem' }}>\n        <Menu pointing stackable inverted>\n          <Menu.Item link>\n            <Link to=\"/\">\n              <Image alt=\"logo\" src={logo} size=\"small\" />\n            </Link>\n          </Menu.Item>\n          <Menu.Item link>\n            <Link to=\"/reports\">\n              <h4>RAPORTIT</h4>\n            </Link>\n          </Menu.Item>\n          <Menu.Item link>\n            <Link to=\"/top100\">\n              <h4>TOP 100</h4>\n            </Link>\n          </Menu.Item>\n          <Menu.Item link>\n            <Link to=\"/search\">\n              <h4>HAKU</h4>\n            </Link>\n          </Menu.Item>\n          <Menu.Item link>\n            <Link to=\"/transfer\">\n              <h4>SIIRTOTIEDOSTOT</h4>\n            </Link>\n          </Menu.Item>\n          <Menu.Item link>\n            <Link to=\"/users\">\n              <h4>KÄYTTÄJÄT</h4>\n            </Link>\n          </Menu.Item>\n          <Menu.Item link>\n            <Link to=\"/programs\">\n              <h4>OHJELMAT</h4>\n            </Link>\n          </Menu.Item>\n          <Menu.Item position=\"right\">\n            <Dropdown\n              trigger={trigger}\n              options={options}\n              pointing=\"top left\"\n              icon={null}\n            />\n          </Menu.Item>\n          <Menu.Item>\n            <CurrentReport />\n          </Menu.Item>\n        </Menu>\n      </div>\n    );\n  } else {\n    return null;\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    login: state.login\n  };\n};\n\nexport default connect(mapStateToProps, { logout })(Navbar);\n","import React from 'react';\n\nconst Footer = () => {\n  return (\n    <div\n      style={{ marginTop: '5rem', marginBottom: '2rem', textAlign: 'center' }}\n    >\n      <br />\n      <em>\n        {' '}\n        &copy; {new Date().getFullYear()}{' '}\n        <a\n          href=\"https://www.radiohelsinki.fi\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {' '}\n          Radio Helsinki{' '}\n        </a>{' '}\n      </em>\n    </div>\n  );\n};\n\nexport default Footer;\n","import {\n  GET_ONE_REPORT,\n  GET_REPORT_DETAILS,\n  SET_EDIT_TRACK_ID,\n  CREATE_REPORT,\n  UPDATE_REPORT,\n  CHECK_FOR_DELETE,\n  UNCHECK_FOR_DELETE,\n  CREATE_NEW_PROGRAM_ON_NEW_REPORT,\n  SET_LOADING\n} from '../actions/types';\nimport reportService from '../services/reports';\nimport programService from '../services/programs';\n\n// get one report with tracks by report id\nexport const getOneReport = id => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const report = await reportService.getOne(id);\n    // console.log('reportreducer', report);\n    dispatch({\n      type: GET_ONE_REPORT,\n      data: report,\n      id\n    });\n  } catch (error) {\n    console.log(error);\n    // dispatch({\n    //   type: REPORT_ERROR,\n    //   payload: error.response.data\n    // });\n  }\n};\n\nexport const setEditTrackId = id => async dispatch => {\n  dispatch({\n    type: SET_EDIT_TRACK_ID,\n    data: id\n  });\n};\n\n// add track to a report\nexport const addTrackToReport = trackToAdd => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    let track = await reportService.addTrackToReport(trackToAdd);\n    console.log('add track to report track', track);\n    const report = await reportService.getOne(track.report_id);\n    console.log('reportactions', report);\n    dispatch({\n      type: GET_ONE_REPORT,\n      data: report\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// delete track from report¨\nexport const deleteTrackFromReport = params => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    let deletedTrack = await reportService.deleteTrackFromReport(\n      params.report_track_id\n    );\n    const updateSortableRank = await reportService.updateSortableRank(\n      params.remainingTracks\n    );\n    console.log(updateSortableRank);\n    console.log(deletedTrack);\n    const report = await reportService.getOne(params.report_id);\n    console.log('reportactions', report);\n    dispatch({\n      type: GET_ONE_REPORT,\n      data: report\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// get report details by report id\nexport const getReportDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    let report = await reportService.getReportDetails(id);\n    report = report[0];\n    console.log('report actions report', report);\n    dispatch({\n      type: GET_REPORT_DETAILS,\n      data: report,\n      id\n    });\n  } catch (error) {\n    console.log(error);\n    // dispatch({\n    //   type: REPORT_ERROR,\n    //   payload: error.response.data\n    // });\n  }\n};\n\n// create new report\nexport const createReport = newReport => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    if (newReport.program_id === '' && newReport.new_program_name !== '') {\n      const newProgram = {\n        name: newReport.new_program_name,\n        user_id: newReport.user_id\n      };\n      const program = await programService.createProgram(newProgram);\n      dispatch({\n        type: CREATE_NEW_PROGRAM_ON_NEW_REPORT,\n        data: program\n      });\n      const newReportWithNewProgram = {\n        ...newReport,\n        program_id: program.id,\n        display: 1\n      };\n      console.log('new report with new program', newReportWithNewProgram);\n      const report = await reportService.createReport(newReportWithNewProgram);\n      dispatch({\n        type: CREATE_REPORT,\n        data: report\n      });\n    } else {\n      const report = await reportService.createReport(newReport);\n      dispatch({\n        type: CREATE_REPORT,\n        data: report\n      });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const copyReport = (\n  reportDetailsToCopy,\n  reportTracksToCopy\n) => async dispatch => {\n  dispatch({\n    type: SET_LOADING\n  });\n  const report = await reportService.createReport(reportDetailsToCopy);\n  dispatch({\n    type: CREATE_REPORT,\n    data: report\n  });\n  reportTracksToCopy.forEach(async track => {\n    const trackToAdd = {\n      ...track,\n      report_id: report.id,\n      report_track_id: null\n    };\n    let newTrack = await reportService.addTrackToReport(trackToAdd);\n    console.log('add track to report track', newTrack);\n  });\n  const newReport = await reportService.getOne(report.id);\n  console.log('reportactions', report);\n  dispatch({\n    type: GET_ONE_REPORT,\n    data: newReport\n  });\n};\n\nexport const updateReport = updatedReport => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const report = await reportService.updateReport(updatedReport);\n    console.log('updated report details', report);\n    dispatch({\n      type: UPDATE_REPORT,\n      data: updatedReport\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const checkForDelete = id => async dispatch => {\n  try {\n    console.log('id to add to delete tracks', id);\n    dispatch({\n      type: CHECK_FOR_DELETE,\n      data: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const unCheckForDelete = id => async dispatch => {\n  try {\n    console.log('uncheckd id to add to delete tracks', id);\n    dispatch({\n      type: UNCHECK_FOR_DELETE,\n      data: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deleteChecked = (\n  idsToDelete,\n  report_id,\n  remainingTracks\n) => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    idsToDelete.forEach(async id => {\n      let deletedTrack = await reportService.deleteTrackFromReport(id);\n      console.log(deletedTrack);\n    });\n    const updateSortableRank = await reportService.updateSortableRank(\n      remainingTracks\n    );\n    console.log(updateSortableRank);\n    console.log('array of ids to delete from report', idsToDelete);\n    const report = await reportService.getOne(report_id);\n    console.log('reportactions', report);\n    dispatch({\n      type: GET_ONE_REPORT,\n      data: report\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updateSortableRank = (newOrder, report_id) => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const updateSortableRank = await reportService.updateSortableRank(newOrder);\n    console.log(updateSortableRank);\n    const report = await reportService.getOne(report_id);\n    console.log('reportactions', report);\n    dispatch({\n      type: GET_ONE_REPORT,\n      data: report\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React, { useState } from 'react';\nimport { Button } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nconst Togglable = props => {\n  const [visible, setVisible] = useState(false);\n\n  const hideWhenVisible = { display: visible ? 'none' : '' };\n  const showWhenVisible = { display: visible ? '' : 'none' };\n\n  const toggleVisibility = () => {\n    setVisible(!visible);\n  };\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <Button\n          size={props.size}\n          style={props.style}\n          color={props.color}\n          onClick={toggleVisibility}\n        >\n          {props.buttonLabel}\n        </Button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <Button\n          size={props.size}\n          style={props.style}\n          color={props.color}\n          onClick={toggleVisibility}\n        >\n          Piilota\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n};\n\nexport default Togglable;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { createReport } from '../../actions/reportActions';\nimport { setNotification } from '../../reducers/notificationReducer';\nimport Togglable from '../layout/Togglable';\nimport {\n  Form,\n  Button,\n  Input,\n  Dropdown,\n  Container,\n  Grid,\n  Popup,\n  Icon\n} from 'semantic-ui-react';\nimport DatePicker from 'react-datepicker';\nimport fi from 'date-fns/locale/fi';\nimport moment from 'moment';\n\nconst CreateNewReportForm = props => {\n  const [programId, setProgramId] = useState('');\n  const [programNumber, setProgramNumber] = useState(null);\n  const [dj, setDj] = useState(\n    `${props.login.first_name} ${props.login.last_name}`\n  );\n  const [newProgramName, setNewProgramName] = useState('');\n  const [programDate, setProgramDate] = useState(new Date());\n  const [programStartTime, setProgramStartTime] = useState('');\n  const [programEndTime, setProgramEndTime] = useState('');\n  const [redirect, setRedirect] = useState(false);\n\n  // if (props.programs.allPrograms === null) {\n  //   return <div>loafing</div>;\n  // }\n\n  console.log('create new report form props', props);\n\n  // list of programoptions for select\n  let programOptions = props.programs.activePrograms.map(program => ({\n    key: program.id,\n    text: program.name,\n    value: program.id\n  }));\n  const getProgram = (event, { value }) => {\n    event.preventDefault();\n    setProgramId(value);\n    console.log(programId);\n  };\n\n  // list of program start time options\n  const startTimeOptions = [\n    {\n      key: 0,\n      text: '00:00',\n      value: '00:00:00'\n    },\n    {\n      key: 1,\n      text: '01:00',\n      value: '01:00:00'\n    },\n    {\n      key: 2,\n      text: '02:00',\n      value: '02:00:00'\n    },\n    {\n      key: 3,\n      text: '03:00',\n      value: '03:00:00'\n    },\n    {\n      key: 4,\n      text: '04:00',\n      value: '04:00:00'\n    },\n    {\n      key: 5,\n      text: '05:00',\n      value: '05:00:00'\n    },\n    {\n      key: 6,\n      text: '06:00',\n      value: '06:00:00'\n    },\n    {\n      key: 7,\n      text: '07:00',\n      value: '07:00:00'\n    },\n    {\n      key: 8,\n      text: '08:00',\n      value: '08:00:00'\n    },\n    {\n      key: 9,\n      text: '09:00',\n      value: '09:00:00'\n    },\n    {\n      key: 10,\n      text: '10:00',\n      value: '10:00:00'\n    },\n    {\n      key: 11,\n      text: '11:00',\n      value: '11:00:00'\n    },\n    {\n      key: 12,\n      text: '12:00',\n      value: '12:00:00'\n    },\n    {\n      key: 13,\n      text: '13:00',\n      value: '13:00:00'\n    },\n    {\n      key: 14,\n      text: '14:00',\n      value: '14:00:00'\n    },\n    {\n      key: 15,\n      text: '15:00',\n      value: '15:00:00'\n    },\n    {\n      key: 16,\n      text: '16:00',\n      value: '16:00:00'\n    },\n    {\n      key: 17,\n      text: '17:00',\n      value: '17:00:00'\n    },\n    {\n      key: 18,\n      text: '18:00',\n      value: '18:00:00'\n    },\n    {\n      key: 19,\n      text: '19:00',\n      value: '19:00:00'\n    },\n    {\n      key: 20,\n      text: '20:00',\n      value: '20:00:00'\n    },\n    {\n      key: 21,\n      text: '21:00',\n      value: '21:00:00'\n    },\n    {\n      key: 22,\n      text: '22:00',\n      value: '22:00:00'\n    },\n    {\n      key: 23,\n      text: '23:00',\n      value: '23:00:00'\n    }\n  ];\n  const getStartTime = (event, { value }) => {\n    event.preventDefault();\n    setProgramStartTime(value);\n    console.log(programStartTime);\n  };\n\n  // list of program end time options\n  const endTimeOptions = [\n    {\n      key: 0,\n      text: '01:00',\n      value: '01:00:00'\n    },\n    {\n      key: 1,\n      text: '02:00',\n      value: '02:00:00'\n    },\n    {\n      key: 2,\n      text: '03:00',\n      value: '03:00:00'\n    },\n    {\n      key: 3,\n      text: '04:00',\n      value: '04:00:00'\n    },\n    {\n      key: 4,\n      text: '05:00',\n      value: '05:00:00'\n    },\n    {\n      key: 5,\n      text: '06:00',\n      value: '06:00:00'\n    },\n    {\n      key: 6,\n      text: '07:00',\n      value: '07:00:00'\n    },\n    {\n      key: 7,\n      text: '08:00',\n      value: '08:00:00'\n    },\n    {\n      key: 8,\n      text: '09:00',\n      value: '09:00:00'\n    },\n    {\n      key: 9,\n      text: '10:00',\n      value: '10:00:00'\n    },\n    {\n      key: 10,\n      text: '11:00',\n      value: '11:00:00'\n    },\n    {\n      key: 11,\n      text: '12:00',\n      value: '12:00:00'\n    },\n    {\n      key: 12,\n      text: '13:00',\n      value: '13:00:00'\n    },\n    {\n      key: 13,\n      text: '14:00',\n      value: '14:00:00'\n    },\n    {\n      key: 14,\n      text: '15:00',\n      value: '15:00:00'\n    },\n    {\n      key: 15,\n      text: '16:00',\n      value: '16:00:00'\n    },\n    {\n      key: 16,\n      text: '17:00',\n      value: '17:00:00'\n    },\n    {\n      key: 17,\n      text: '18:00',\n      value: '18:00:00'\n    },\n    {\n      key: 18,\n      text: '19:00',\n      value: '19:00:00'\n    },\n    {\n      key: 19,\n      text: '20:00',\n      value: '20:00:00'\n    },\n    {\n      key: 20,\n      text: '21:00',\n      value: '21:00:00'\n    },\n    {\n      key: 21,\n      text: '22:00',\n      value: '22:00:00'\n    },\n    {\n      key: 22,\n      text: '23:00',\n      value: '23:00:00'\n    },\n    {\n      key: 23,\n      text: '23:59',\n      value: '23:59:59'\n    }\n  ];\n  const getEndTime = (event, { value }) => {\n    event.preventDefault();\n    setProgramEndTime(value);\n    console.log(programEndTime);\n  };\n\n  const createReport = () => {\n    const newReport = {\n      user_id: props.login.id,\n      program_id: programId,\n      new_program_name: newProgramName,\n      program_date: moment(programDate).format('YYYY-MM-DD'),\n      program_start_time: programStartTime,\n      program_end_time: programEndTime,\n      program_no: programNumber,\n      program_dj: dj,\n      status: 0,\n      rerun: null\n    };\n    console.log(parseInt(programEndTime));\n    if (\n      parseInt(newReport.program_end_time) <=\n      parseInt(newReport.program_start_time)\n    ) {\n      props.setNotification('Tarkista ohjelman alku- ja loppuaika!', 'fail');\n    } else {\n      props.createReport(newReport);\n      console.log(\n        'create report button click pros',\n        props.report.reportDetails\n      );\n      console.log('creating report:', newReport);\n      setRedirect(true);\n    }\n  };\n\n  const style = {\n    borderRadius: 0,\n    display: 'block',\n    opacity: 0.9,\n    padding: '2em'\n  };\n\n  if (redirect && props.report.newReport !== null) {\n    console.log('create new report for after submit props', props);\n    console.log('redirecting to id', props.report.newReport.id);\n    return <Redirect to={`reports/${props.report.newReport.id}`} />;\n  }\n\n  let disabled;\n  if (!programDate || !programStartTime || !programEndTime || !dj) {\n    disabled = true;\n  } else if (!programId && newProgramName === '') {\n    disabled = true;\n  } else {\n    disabled = false;\n  }\n\n  return (\n    <React.Fragment>\n      <Grid.Column>\n        <Container>\n          <h3>Luo uusi raportti</h3>\n          <Form>\n            <Form.Field>\n              <label>\n                Ohjelma{' '}\n                <Popup\n                  trigger={\n                    <Icon\n                      style={{ display: 'inline' }}\n                      name=\"question circle\"\n                    />\n                  }\n                  content=\"Valitse ohjelma listalta. Jos ohjelmaasi ei löydy listalta niin klikkaa Luo uusi ohjelma, kirjoita ohjelmasi nimi ja jatka\"\n                  style={style}\n                  inverted\n                />\n              </label>\n              <Dropdown\n                placeholder=\"Valitse ohjelma\"\n                openOnFocus\n                selection\n                search\n                options={programOptions}\n                onChange={getProgram}\n              />{' '}\n              <Togglable\n                style={{ marginTop: '0.5rem', float: 'right' }}\n                size=\"tiny\"\n                buttonLabel=\"Luo uusi ohjelma\"\n              >\n                <Form.Field>\n                  <label>Uusi ohjelma</label>\n                  <Input\n                    type=\"text\"\n                    value={newProgramName}\n                    onChange={e => setNewProgramName(e.target.value)}\n                  />{' '}\n                </Form.Field>\n              </Togglable>\n            </Form.Field>\n            <Form.Field>\n              <label>\n                Ohjelmanumero{' '}\n                <Popup\n                  trigger={\n                    <Icon\n                      style={{ display: 'inline' }}\n                      name=\"question circle\"\n                    />\n                  }\n                  content=\"Tsekkaa ohjelmasi numero viikon ohjelmakartasta.\"\n                  style={style}\n                  inverted\n                />\n              </label>\n              <Input\n                type=\"number\"\n                value={programNumber}\n                onChange={e => setProgramNumber(e.target.value)}\n              />{' '}\n            </Form.Field>\n            <Form.Field>\n              <label>DJ</label>\n              <Input\n                type=\"text\"\n                value={dj}\n                onChange={e => setDj(e.target.value)}\n              />{' '}\n            </Form.Field>\n\n            <Form.Group widths=\"equal\">\n              <Form.Field>\n                <label>Ohjelman päivä</label>\n                <DatePicker\n                  locale={fi}\n                  selected={programDate}\n                  dateFormat=\"dd.MM.yyyy\"\n                  onChange={date => setProgramDate(date)}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Alkaa kello</label>\n                <Dropdown\n                  placeholder=\"hh:mm\"\n                  openOnFocus\n                  selection\n                  search\n                  options={startTimeOptions}\n                  onChange={getStartTime}\n                />{' '}\n              </Form.Field>\n              <Form.Field>\n                <label>Päättyy kello</label>\n                <Dropdown\n                  placeholder=\"hh:mm\"\n                  openOnFocus\n                  selection\n                  search\n                  options={endTimeOptions}\n                  onChange={getEndTime}\n                />{' '}\n              </Form.Field>\n            </Form.Group>\n            <Form.Group widths=\"equal\">\n              <Button disabled={disabled} color=\"green\" onClick={createReport}>\n                Jatka\n              </Button>\n            </Form.Group>\n          </Form>\n        </Container>\n      </Grid.Column>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('report details state to props', state);\n  return {\n    report: state.report,\n    reportsList: state.reportsList,\n    programs: state.programs,\n    notification: state.notification,\n    users: state.users,\n    login: state.login\n  };\n};\n\nconst connectedCreateNewReportForm = connect(mapStateToProps, {\n  createReport,\n  setNotification\n})(CreateNewReportForm);\n\nexport default connectedCreateNewReportForm;\n","import {\n  GET_ALL_REPORTS_BY_DATE,\n  GET_ALL_IN_PROGRESS,\n  SET_LOADING,\n  CLEAR_CURRENT_REPORT,\n  DELETE_REPORT,\n  FILTER_BY_USER_ID,\n  FILTER_BY_STATUS,\n  FILTER_BY_TEXT\n} from './types';\nimport reportService from '../services/reports';\n// get a list of reports by user_id, date\n\n// get a list of reports by date\nexport const getAllReportsByDate = date => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    dispatch({\n      type: CLEAR_CURRENT_REPORT\n    });\n    const reports = await reportService.getAllByDate(date);\n    // console.log('reportreducer', report);\n    dispatch({\n      type: GET_ALL_REPORTS_BY_DATE,\n      data: reports,\n      date\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// get a list of reports by date\nexport const getAllReportsByDateByUser = (date, user) => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    dispatch({\n      type: CLEAR_CURRENT_REPORT\n    });\n    const reports = await reportService.getAllByDateByUser(date, user);\n    // console.log('reportreducer', report);\n    dispatch({\n      type: GET_ALL_REPORTS_BY_DATE,\n      data: reports,\n      date: date\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// get all in progress by current user for front page\nexport const getAllInProgress = id => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    dispatch({\n      type: CLEAR_CURRENT_REPORT\n    });\n    const reports = await reportService.getAllInProgress(id);\n    // console.log('reportreducer', report);\n    dispatch({\n      type: GET_ALL_IN_PROGRESS,\n      data: reports\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deleteInProgressReport = params => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const deletedReport = await reportService.deleteReport(params.report_id);\n    console.log(deletedReport);\n    const reports = await reportService.getAllInProgress(params.user_id);\n    dispatch({\n      type: GET_ALL_IN_PROGRESS,\n      data: reports\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deleteReport = id => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const deletedReport = await reportService.deleteReport(id);\n    console.log(deletedReport);\n    dispatch({\n      type: DELETE_REPORT,\n      data: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const filterByUserId = id => dispatch => {\n  console.log('id to filter', id);\n  dispatch({\n    type: FILTER_BY_USER_ID,\n    data: id\n  });\n};\n\nexport const filterByStatus = status => dispatch => {\n  console.log('status to filter', status);\n  dispatch({\n    type: FILTER_BY_STATUS,\n    data: status\n  });\n};\n\nexport const filterByText = text => async dispatch => {\n  console.log('text to filter', text);\n  dispatch({\n    type: FILTER_BY_TEXT,\n    data: text\n  });\n};\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { deleteInProgressReport } from '../../actions/reportsListActions';\nimport { setNotification } from '../../reducers/notificationReducer';\nimport { Table, Icon, Confirm, Dimmer, Loader } from 'semantic-ui-react';\nimport moment from 'moment';\n\nconst InProgressReportListItem = ({\n  report,\n  reportsList,\n  login,\n  deleteInProgressReport,\n  setNotification\n}) => {\n  const [open, setOpen] = useState(false);\n  if (reportsList.loading === true) {\n    return (\n      <Dimmer active inverted>\n        <Loader inverted content=\"Ladataan...\" />\n      </Dimmer>\n    );\n  }\n\n  const cancelDelete = () => {\n    setOpen(false);\n  };\n  const confirmDelete = () => {\n    setOpen(false);\n    const params = {\n      report_id: report.id,\n      user_id: login.id\n    };\n    console.log(`klikd delete on report`, params);\n    deleteInProgressReport(params);\n    console.log('clikd delete on report', report.id);\n    setNotification(\n      `${report.name} ${report.program_date} poistettu!`,\n      'success'\n    );\n  };\n\n  console.log(report, login, reportsList);\n  return (\n    <React.Fragment>\n      <Table.Row>\n        <Table.Cell>\n          <Link to={`reports/${report.id}`}>{report.name}</Link>\n        </Table.Cell>\n        <Table.Cell>\n          {moment(report.program_date).format('DD.MM.YYYY')}\n        </Table.Cell>\n        <Table.Cell>{report.program_no}</Table.Cell>\n        <Table.Cell>\n          {' '}\n          <Icon color=\"red\" onClick={() => setOpen(true)} name=\"delete\" />\n          <Confirm\n            content={`Haluatko varmasti poistaa raportin ${report.name} ${report.program_date}`}\n            open={open}\n            onCancel={cancelDelete}\n            onConfirm={confirmDelete}\n            cancelButton=\"En sittenkään\"\n            confirmButton=\"Joo kyl\"\n          />\n        </Table.Cell>\n      </Table.Row>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    reportsList: state.reportsList,\n    login: state.login\n  };\n};\n\nconst connectedInProgressReportListItem = connect(mapStateToProps, {\n  deleteInProgressReport,\n  setNotification\n})(InProgressReportListItem);\n\nexport default connectedInProgressReportListItem;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport InProgressReportListItem from './InProgressReportListItem';\nimport { getAllInProgress } from '../../actions/reportsListActions';\nimport { Table, Grid, Container, Header } from 'semantic-ui-react';\n\nconst InProgressReportsList = props => {\n  console.log(props);\n  useEffect(() => {\n    props.getAllInProgress(props.login.id);\n    // eslint-disable-next-line\n  }, []);\n\n  if (props.reportsList.inProgress === null) {\n    return null;\n  }\n  if (props.reportsList.inProgress.length === 0) {\n    return (\n      <Grid.Column>\n        <Container>\n          <h3>Omat keskeneräiset raportit</h3>\n          ei keskeneräisiä raportteja\n        </Container>\n      </Grid.Column>\n    );\n  }\n  return (\n    <React.Fragment>\n      <Grid.Column>\n        <Container>\n          <Header>Omat keskeneräiset raportit</Header>\n          <Table striped>\n            <Table.Header>\n              <Table.Row>\n                <Table.Cell>Ohjelma</Table.Cell>\n                <Table.Cell>Aika</Table.Cell>\n                <Table.Cell>Nro</Table.Cell>\n                <Table.Cell></Table.Cell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {props.reportsList.inProgress.map(r => (\n                <InProgressReportListItem key={r.id} report={r} />\n              ))}\n            </Table.Body>\n          </Table>\n        </Container>\n      </Grid.Column>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    reportsList: state.reportsList,\n    login: state.login\n  };\n};\n\nconst connectedInProgressReportsList = connect(mapStateToProps, {\n  getAllInProgress\n})(InProgressReportsList);\n\nexport default connectedInProgressReportsList;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Message } from 'semantic-ui-react';\n\nconst Notification = ({ notification }) => {\n  if (notification.message === null) {\n    return null;\n  }\n\n  if (notification.type === 'success') {\n    return (\n      <div className=\"fixedTop\">\n        <Message\n          floating\n          success\n          header={notification.message}\n          // content=\"You may now log-in with the username you have chosen\"\n        />\n      </div>\n    );\n  }\n\n  if (notification.type === 'fail') {\n    return (\n      <div className=\"fixedTop\">\n        <Message\n          floating\n          negative\n          header={notification.message}\n          // content=\"You may now log-in with the username you have chosen\"\n        />\n      </div>\n    );\n  }\n\n  return null;\n};\n\nconst mapStateToProps = state => {\n  return {\n    notification: state.notification\n  };\n};\n\nexport default connect(mapStateToProps)(Notification);\n","import React from 'react';\nimport { Container, Grid, Dimmer, Loader } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport CreateNewReportForm from '../report/CreateNewReportForm';\nimport InProgressReportsList from '../report/InProgressReportsList';\nimport Notification from '../layout/Notification';\nimport { getAllInProgress } from '../../actions/reportsListActions';\n\nconst Home = props => {\n  console.log('home props', props);\n\n  // useEffect(() => {\n  //   props.getAllInProgress(props.login.id);\n  //   // eslint-disable-next-line\n  // }, []);\n  if (\n    props.programs.activePrograms === null\n    // props.reportsList.inProgress === null\n  ) {\n    return (\n      <Container>\n        <h2>Radio Helsinki teostoraportointi</h2>\n        <Dimmer active>\n          <Loader>Loading</Loader>\n        </Dimmer>{' '}\n      </Container>\n    );\n  }\n  return (\n    <Container>\n      <h2>Radio Helsinki teostoraportointi</h2>\n      <Notification />\n      <Grid divided=\"vertically\">\n        <Grid.Row columns={2}>\n          <CreateNewReportForm />\n          <InProgressReportsList />\n        </Grid.Row>\n      </Grid>\n    </Container>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('report details state to props', state);\n  return {\n    report: state.report,\n    reportsList: state.reportsList,\n    programs: state.programs,\n    notification: state.notification,\n    users: state.users,\n    login: state.login\n  };\n};\n\nconst connectedHome = connect(\n  mapStateToProps,\n  { getAllInProgress }\n)(Home);\n\nexport default connectedHome;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { createUser } from '../../actions/userActions';\nimport { setNotification } from '../../reducers/notificationReducer';\nimport {\n  Modal,\n  Header,\n  Form,\n  Button,\n  Input,\n  Icon,\n  Dropdown\n} from 'semantic-ui-react';\n\nconst AddUserModal = props => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [level, setLevel] = useState(1);\n  const [status, setStatus] = useState(null);\n\n  const handleOpen = () => {\n    setModalOpen(true);\n  };\n  const handleClose = () => {\n    setModalOpen(false);\n  };\n\n  const createUser = () => {\n    if (password !== confirmPassword) {\n      props.setNotification(`Salasanat eivät täsmää!`, 'fail');\n    }\n    const userToAdd = {\n      username,\n      password,\n      first_name: firstName,\n      last_name: lastName,\n      email,\n      level,\n      status\n    };\n    console.log('klikd create user', userToAdd);\n    props.createUser(userToAdd);\n    props.setNotification(`${userToAdd.username} lisätty!`, 'success');\n    handleClose();\n  };\n\n  const levelOptions = [\n    {\n      key: 1,\n      text: 'DJ',\n      value: 1\n    },\n    {\n      key: 2,\n      text: 'Toimitus',\n      value: 2\n    },\n    {\n      key: 3,\n      text: 'Admin',\n      value: 3\n    }\n  ];\n  const getLevel = (event, { value }) => {\n    event.preventDefault();\n    setLevel(value);\n  };\n\n  const getStatus = () => {\n    console.log('getting status');\n    if (status === null) {\n      setStatus(1);\n    } else {\n      setStatus(null);\n    }\n  };\n\n  return (\n    <Modal\n      trigger={\n        <Button\n          style={{ marginBottom: '0.5rem' }}\n          onClick={handleOpen}\n          floated=\"right\"\n          color=\"green\"\n        >\n          <Icon name=\"add\" />\n          LUO UUSI KÄYTTÄJÄ\n        </Button>\n      }\n      closeIcon\n      open={modalOpen}\n      onClose={handleClose}\n    >\n      <Header content=\"Luo uusi käyttäjä\" />\n      <Modal.Content>\n        <Form onSubmit={createUser}>\n          <Form.Field>\n            <label>Käyttäjätunnus</label>\n            <Input\n              type=\"text\"\n              placeholder=\"Käyttäjätunnus...\"\n              onChange={e => setUsername(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Salasana</label>\n            <Input\n              focus\n              type=\"password\"\n              placeholder=\"Salasana...\"\n              onChange={e => setPassword(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Salasana uudelleen</label>\n            <Input\n              focus\n              type=\"password\"\n              placeholder=\"Vahvista salasana...\"\n              onChange={e => setConfirmPassword(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Etunimi</label>\n            <Input\n              focus\n              type=\"text\"\n              placeholder=\"Etunimi...\"\n              onChange={e => setFirstName(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Sukunimi</label>\n            <Input\n              focus\n              type=\"text\"\n              placeholder=\"Sukunimi...\"\n              onChange={e => setLastName(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Email</label>\n            <Input\n              focus\n              type=\"email\"\n              placeholder=\"Email...\"\n              onChange={e => setEmail(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Taso</label>\n            <Dropdown\n              selection\n              defaultValue={level}\n              options={levelOptions}\n              onChange={getLevel}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Tunnus käytössä</label>\n            <Form.Checkbox\n              name=\"active\"\n              onChange={getStatus}\n              checked={status ? true : false}\n            />\n          </Form.Field>\n          <Button\n            color=\"green\"\n            type=\"submit\"\n            disabled={\n              !username ||\n              !password ||\n              !confirmPassword ||\n              !email ||\n              !firstName ||\n              !lastName\n            }\n          >\n            Tallenna\n          </Button>\n        </Form>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nconst connectedAddUserModal = connect(null, { setNotification, createUser })(\n  AddUserModal\n);\n\nexport default connectedAddUserModal;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { updateUser } from '../../actions/userActions';\nimport { setNotification } from '../../reducers/notificationReducer';\nimport ModalNotification from '../layout/ModalNotification';\n\nimport {\n  Modal,\n  Header,\n  Form,\n  Button,\n  Input,\n  Dropdown\n} from 'semantic-ui-react';\n\nconst EditUserModal = props => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [firstName, setFirstName] = useState(props.user.first_name);\n  const [lastName, setLastName] = useState(props.user.last_name);\n  const [email, setEmail] = useState(props.user.email);\n  const [level, setLevel] = useState(props.user.level);\n  const [status, setStatus] = useState(props.user.status);\n\n  const handleOpen = () => {\n    setModalOpen(true);\n  };\n  const handleClose = () => {\n    setModalOpen(false);\n  };\n\n  const updateUserClick = () => {\n    if (password.length === 0 && confirmPassword.length === 0) {\n      const userToUpdate = {\n        id: props.user.id,\n        first_name: firstName,\n        last_name: lastName,\n        email,\n        level,\n        status\n      };\n      console.log('updting info', userToUpdate);\n      props.updateUser(userToUpdate);\n      handleClose();\n    } else if (password !== confirmPassword || password.length <= 3) {\n      props.setNotification('Tarkasta salasanat!', 'fail');\n    } else {\n      const userToUpdate = {\n        id: props.user.id,\n        password,\n        first_name: firstName,\n        last_name: lastName,\n        email,\n        level,\n        status\n      };\n      console.log('updting info', userToUpdate);\n      props.updateUser(userToUpdate);\n      props.setNotification(\n        `Käyttäjän ${userToUpdate.first_name} ${userToUpdate.last_name} tiedot päivitetty!`,\n        'success'\n      );\n      handleClose();\n    }\n    // if (!firstName || !lastName) {\n    //   props.setNotification(\n    //     'Etunimi ja sukunimi ovat pakollisia tietoja',\n    //     'fail'\n    //   );\n    // }\n\n    // props.updateUser(userToUpdate);\n  };\n\n  const levelOptions = [\n    {\n      key: 1,\n      text: 'DJ',\n      value: 1\n    },\n    {\n      key: 2,\n      text: 'Toimitus',\n      value: 2\n    },\n    {\n      key: 3,\n      text: 'Admin',\n      value: 3\n    }\n  ];\n  const getLevel = (event, { value }) => {\n    event.preventDefault();\n    setLevel(value);\n  };\n\n  const getStatus = () => {\n    console.log('getting status');\n    if (status === null) {\n      setStatus(1);\n    } else {\n      setStatus(null);\n    }\n  };\n\n  return (\n    <Modal\n      trigger={\n        <a href=\"#!\" onClick={handleOpen}>\n          {props.user.username}\n        </a>\n      }\n      closeIcon\n      open={modalOpen}\n      onClose={handleClose}\n    >\n      <Header content=\"Muokkaa käyttäjän tietoja\" />\n      <Modal.Content>\n        <Form onSubmit={updateUserClick}>\n          <Form.Field>\n            <label>Käyttäjätunnus</label>\n            <Input\n              defaultValue={props.user.username}\n              type=\"text\"\n              placeholder=\"Käyttäjätunnus...\"\n              disabled\n            />\n          </Form.Field>\n          <Form.Field>\n            <ModalNotification />\n            <label>Salasana - syötä vaihtaaksesi</label>\n            <Input\n              focus\n              type=\"password\"\n              placeholder=\"Salasana...\"\n              onChange={e => setPassword(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Salasana uudelleen</label>\n            <Input\n              focus\n              type=\"password\"\n              placeholder=\"Vahvista salasana...\"\n              onChange={e => setConfirmPassword(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <ModalNotification />\n            <label>Etunimi</label>\n            <Input\n              focus\n              defaultValue={firstName}\n              type=\"text\"\n              placeholder=\"Etunimi...\"\n              onChange={e => setFirstName(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Sukunimi</label>\n            <Input\n              focus\n              defaultValue={lastName}\n              type=\"text\"\n              placeholder=\"Sukunimi...\"\n              onChange={e => setLastName(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Email</label>\n            <Input\n              focus\n              defaultValue={email}\n              type=\"email\"\n              placeholder=\"Email...\"\n              onChange={e => setEmail(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Taso</label>\n            <Dropdown\n              selection\n              defaultValue={props.user.level}\n              options={levelOptions}\n              onChange={getLevel}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Tunnus käytössä</label>\n            <Form.Checkbox\n              name=\"active\"\n              onChange={getStatus}\n              checked={status ? true : false}\n            />\n          </Form.Field>\n          {/* <Form.Field>\n            <label>Tila</label>\n            <Dropdown\n              selection\n              defaultValue={props.user.status}\n              options={statusOptions}\n              onChange={getStatus}\n            />\n          </Form.Field> */}\n          <Button\n            color=\"green\"\n            type=\"submit\"\n            disabled={!email || !firstName || !lastName}\n          >\n            Tallenna\n          </Button>\n          <ModalNotification />\n        </Form>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('app state', state);\n  return {\n    login: state.login\n  };\n};\n\nconst connectedEditUserModal = connect(mapStateToProps, {\n  setNotification,\n  updateUser\n})(EditUserModal);\n\nexport default connectedEditUserModal;\n","import React, { useState } from 'react';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport EditUserModal from './EditUserModal';\nimport { setNotification } from '../../reducers/notificationReducer';\nimport { setCurrent, updateUser, deleteUser } from '../../actions/userActions';\nimport { Table, Icon, Confirm } from 'semantic-ui-react';\n\nconst UserListItem = props => {\n  const [open, setOpen] = useState(false);\n\n  let userLevelOutPrint;\n  if (props.user.level === 1) {\n    userLevelOutPrint = 'DJ';\n  } else if (props.user.level === 2) {\n    userLevelOutPrint = 'Toimitus';\n  } else {\n    userLevelOutPrint = 'Admin';\n  }\n\n  let className;\n  let userStatusOutPrint;\n  if (props.user.status === null) {\n    userStatusOutPrint = 'Hyllyllä';\n    className = 'inactive-user';\n  } else if (props.user.status === 1) {\n    userStatusOutPrint = 'Käytössä';\n    className = 'active-user';\n  }\n\n  const cancelDelete = () => {\n    setOpen(false);\n  };\n  const confirmDelete = () => {\n    setOpen(false);\n    props.deleteUser(props.user.id);\n    console.log('deleting user', props.user.id);\n    props.setNotification(\n      `Käyttäjä ${props.user.username} poistettu!`,\n      'success'\n    );\n  };\n\n  return (\n    <Table.Row>\n      <Table.Cell>\n        <EditUserModal user={props.user} />\n      </Table.Cell>\n      <Table.Cell>\n        {props.user.first_name} {props.user.last_name}\n      </Table.Cell>\n      <Table.Cell>\n        <Moment format=\"MMMM Do YYYY, h:mm:ss a\">{props.user.last_seen}</Moment>\n      </Table.Cell>\n      <Table.Cell className={className}>{userStatusOutPrint}</Table.Cell>\n      <Table.Cell>{userLevelOutPrint}</Table.Cell>\n      <Table.Cell>\n        <Icon color=\"red\" onClick={() => setOpen(true)} name=\"delete\" />\n        <Confirm\n          content={`Haluatko varmasti poistaa käyttäjän ${props.user.username}?`}\n          open={open}\n          onCancel={cancelDelete}\n          onConfirm={confirmDelete}\n          cancelButton=\"En sittenkään\"\n          confirmButton=\"Joo kyl\"\n        />\n      </Table.Cell>\n    </Table.Row>\n  );\n};\n\nconst mapDispatchToProps = {\n  setCurrent,\n  setNotification,\n  updateUser,\n  deleteUser\n};\n\nconst connectedUser = connect(null, mapDispatchToProps)(UserListItem);\n\nexport default connectedUser;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport AddUserModal from './AddUserModal';\nimport User from './UserListItem';\nimport Notification from '../layout/Notification';\nimport { Container, Dimmer, Loader } from 'semantic-ui-react';\nimport { Table } from 'semantic-ui-react';\n\nconst UserList = props => {\n  if (props.users.users === null || props.users.loading === true) {\n    return (\n      <Container>\n        <Dimmer active inverted>\n          <Loader size=\"medium\">Haetaan käyttäjiä...</Loader>\n        </Dimmer>\n      </Container>\n    );\n  }\n\n  console.log('userlist props', props);\n  if (props.login.level === 3) {\n    return (\n      <Container>\n        <div style={{ marginTop: '1rem', marginBottom: '1rem' }}>\n          <h3 style={{ display: 'inline' }}>Käyttäjät</h3>\n          <AddUserModal />\n        </div>\n        <Notification />\n        <Table striped>\n          <Table.Header>\n            <Table.Row>\n              <Table.Cell>Käyttäjätunnus</Table.Cell>\n              <Table.Cell>Nimi</Table.Cell>\n              <Table.Cell>Viimeisin kirjautuminen</Table.Cell>\n              <Table.Cell>Tila</Table.Cell>\n              <Table.Cell>Taso</Table.Cell>\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>\n            {props.users.users.map(user => (\n              <User user={user} key={user.id} />\n            ))}\n          </Table.Body>\n        </Table>\n      </Container>\n    );\n  } else {\n    return null;\n  }\n};\n\nconst mapStateToProps = state => ({\n  users: state.users,\n  login: state.login\n});\n\nconst connectedUserList = connect(mapStateToProps, null)(UserList);\n\nexport default connectedUserList;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { getOneReport } from '../../actions/reportActions';\nimport {\n  getAllReportsByDate,\n  getAllReportsByDateByUser,\n  filterByUserId,\n  filterByStatus,\n  filterByText\n} from '../../actions/reportsListActions';\nimport { Dropdown, Button, Form, Dimmer, Loader } from 'semantic-ui-react';\n\nconst ReportFilterForm = props => {\n  const [reportMonth, setReportMonth] = useState('');\n  const [reportYear, setReportYear] = useState('');\n\n  if (props.users.users === null) {\n    return (\n      <Dimmer active inverted>\n        <Loader inverted content=\"Ladataan...\" />\n      </Dimmer>\n    );\n  }\n\n  // const teststatus = 0;\n\n  // const reports = props.reportsList.reportsList.filter(\n  //   r => r.status === teststatus\n  // );\n  // console.log(reports);\n  // month options\n  const monthOptions = [\n    {\n      key: '01',\n      text: 'Tammikuu',\n      value: '01'\n    },\n    {\n      key: '02',\n      text: 'Helmikuu',\n      value: '02'\n    },\n    {\n      key: '03',\n      text: 'Maaliskuu',\n      value: '03'\n    },\n    {\n      key: '04',\n      text: 'Huhtikuu',\n      value: '04'\n    },\n    {\n      key: '05',\n      text: 'Toukokuu',\n      value: '05'\n    },\n    {\n      key: '06',\n      text: 'Kesäkuu',\n      value: '06'\n    },\n    {\n      key: '07',\n      text: 'Heinäkuu',\n      value: '07'\n    },\n    {\n      key: '08',\n      text: 'Elokuu',\n      value: '08'\n    },\n    {\n      key: '09',\n      text: 'Syyskuu',\n      value: '09'\n    },\n    {\n      key: '10',\n      text: 'Lokakuu',\n      value: '10'\n    },\n    {\n      key: '11',\n      text: 'Marraskuu',\n      value: '11'\n    },\n    {\n      key: '12',\n      text: 'Joulukuu',\n      value: '12'\n    }\n  ];\n  // year options\n  const date = new Date().getFullYear() + 1;\n  const years = [];\n  for (var i = 2001; i <= date; i++) {\n    years.push(i);\n  }\n  let yearOptions = years.map(option => ({\n    key: option,\n    text: option,\n    value: option\n  }));\n  yearOptions = yearOptions.reverse();\n\n  const getReportsByMonth = () => {\n    const date = reportYear + '-' + reportMonth;\n    console.log(date);\n    console.log('klik');\n    if (props.login.level === 1) {\n      props.getAllReportsByDateByUser(date, props.login.id);\n    } else {\n      props.getAllReportsByDate(date);\n    }\n  };\n\n  // get month from dropdown\n  const getMonth = (event, { value }) => {\n    event.preventDefault();\n    setReportMonth(value);\n    console.log(reportMonth);\n  };\n\n  // get year from dropdown\n  const getYear = (event, { value }) => {\n    event.preventDefault();\n    setReportYear(value);\n  };\n\n  return (\n    <React.Fragment>\n      <Form>\n        <h2>Hae raportit ajalta:</h2>\n        <Form.Group widths=\"equal\">\n          <Form.Field>\n            <Dropdown\n              placeholder=\"Kuukausi\"\n              openOnFocus={false}\n              selection\n              options={monthOptions}\n              onChange={getMonth}\n              value={reportMonth}\n            />\n          </Form.Field>\n          <Form.Field>\n            <Dropdown\n              placeholder=\"Vuosi\"\n              openOnFocus\n              selection\n              options={yearOptions}\n              onChange={getYear}\n              value={reportYear}\n            />{' '}\n          </Form.Field>\n          <Form.Field>\n            <Button color=\"blue\" onClick={() => getReportsByMonth()}>\n              HAE\n            </Button>\n          </Form.Field>\n          <Form.Field></Form.Field>\n        </Form.Group>\n      </Form>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('reportfilterform state to props', state);\n  return {\n    report: state.report,\n    reportsList: state.reportsList,\n    notification: state.notification,\n    users: state.users,\n    login: state.login\n  };\n};\n\nconst mapDispatchToProps = {\n  getOneReport,\n  getAllReportsByDate,\n  getAllReportsByDateByUser,\n  filterByUserId,\n  filterByStatus,\n  filterByText\n};\n\nconst connectedReportFilterForm = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ReportFilterForm);\n\nexport default connectedReportFilterForm;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  filterByUserId,\n  filterByStatus,\n  filterByText\n} from '../../actions/reportsListActions';\nimport { Dropdown, Form, Input } from 'semantic-ui-react';\n\nconst FilterReportList = props => {\n  const [userId, setUserId] = useState(null);\n  const [status, setStatus] = useState(null);\n  const [filterText, setFilterText] = useState('');\n\n  useEffect(() => {\n    props.filterByUserId(userId);\n    props.filterByStatus(status);\n    props.filterByText(filterText);\n    console.log('user id', userId);\n    console.log('filterText', filterText);\n    console.log('status', status);\n    // eslint-disable-next-line\n  }, [userId, status, filterText]);\n\n  const userOptions = props.users.users.map(user => ({\n    key: user.id,\n    text: `${user.first_name} ${user.last_name}`,\n    value: user.id\n  }));\n\n  const addAllToUserOptions = [\n    {\n      key: 0,\n      text: 'Kaikki',\n      value: null\n    },\n    ...userOptions\n  ];\n  // status options\n  const statusOptions = [\n    {\n      key: '2',\n      text: 'Kaikki',\n      value: null\n    },\n    {\n      key: '0',\n      text: 'Keskeneräinen',\n      value: 0\n    },\n    {\n      key: '1',\n      text: 'Valmis',\n      value: 1\n    }\n  ];\n\n  const getUser = (e, { value }) => {\n    e.preventDefault();\n    setUserId(value);\n    // console.log('user id', userId);\n    // props.filterByUserId(userId);\n  };\n  const getStatus = (event, { value }) => {\n    event.preventDefault();\n    setStatus(value);\n    console.log('tila', status);\n    props.filterByStatus(status);\n  };\n  const getFilteredByText = (event, { value }) => {\n    event.preventDefault();\n    setFilterText(value);\n    props.filterByText(filterText);\n  };\n\n  const filterByUser = () => {\n    if (props.login.level === 1) {\n      return null;\n    } else {\n      return (\n        <Form.Field>\n          <Dropdown\n            placeholder=\"Käyttäjä\"\n            openOnFocus\n            selection\n            search\n            options={addAllToUserOptions}\n            onChange={getUser}\n          />\n        </Form.Field>\n      );\n    }\n  };\n\n  return (\n    <Form>\n      <Form.Group widths=\"equal\">\n        <Form.Field>\n          <Input\n            type=\"text\"\n            placeholder=\"Tekstisuodatus\"\n            onChange={getFilteredByText}\n          />\n        </Form.Field>\n        {filterByUser()}\n        <Form.Field>\n          <Dropdown\n            placeholder=\"Tila\"\n            openOnFocus\n            selection\n            options={statusOptions}\n            onChange={getStatus}\n          />{' '}\n        </Form.Field>\n        <Form.Field></Form.Field>\n      </Form.Group>\n    </Form>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('reportfilterform state to props', state);\n  return {\n    report: state.report,\n    reportsList: state.reportsList,\n    notification: state.notification,\n    users: state.users,\n    login: state.login\n  };\n};\n\nconst mapDispatchToProps = {\n  filterByUserId,\n  filterByStatus,\n  filterByText\n};\n\nconst connectedFilterReportList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FilterReportList);\n\nexport default connectedFilterReportList;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Table, Icon, Confirm } from 'semantic-ui-react';\nimport { getOneReport } from '../../actions/reportActions';\nimport { deleteReport } from '../../actions/reportsListActions';\nimport { setNotification } from '../../reducers/notificationReducer';\nimport moment from 'moment';\n\nconst ReportListItem = props => {\n  const [open, setOpen] = useState(false);\n  const cancelDelete = () => {\n    setOpen(false);\n  };\n  const confirmDelete = () => {\n    setOpen(false);\n    console.log('clikd delete on report', props.report.id);\n    props.deleteReport(props.report.id);\n    props.setNotification(\n      `${props.report.name} ${props.report.program_date} poistettu!`,\n      'success'\n    );\n  };\n  let reportStatusOutPrint;\n  let className;\n\n  if (props.report.status === 1) {\n    reportStatusOutPrint = 'Valmis';\n  } else if (props.report.status === 0) {\n    reportStatusOutPrint = 'Keskeneräinen';\n  } else if (props.report.status === 9) {\n    reportStatusOutPrint = 'Poistettu';\n    return null;\n  }\n  if (props.report.rerun === 1) {\n    className = 'rerun';\n  }\n\n  if (props.login.level === 1 && props.report.rerun === 1) {\n    return null;\n  }\n\n  return (\n    <React.Fragment>\n      <Table.Row className={className}>\n        <Table.Cell>{props.report.program_no}</Table.Cell>\n        <Table.Cell>\n          <Link className={className} to={`reports/${props.report.id}`}>\n            {props.report.name}\n          </Link>\n        </Table.Cell>\n        <Table.Cell>\n          {moment(props.report.program_date).format('DD.MM.YYYY')}\n        </Table.Cell>\n        <Table.Cell>\n          {props.report.program_start_time.slice(0, -3)} -{' '}\n          {props.report.program_end_time.slice(0, -3)}\n        </Table.Cell>\n        <Table.Cell>{reportStatusOutPrint}</Table.Cell>\n        <Table.Cell>\n          <Icon\n            style={{ color: 'red' }}\n            name=\"delete\"\n            onClick={() => setOpen(true)}\n          />\n          <Confirm\n            content={`Haluatko varmasti poistaa raportin ${props.report.name} ${props.report.program_date}`}\n            open={open}\n            onCancel={cancelDelete}\n            onConfirm={confirmDelete}\n          />\n        </Table.Cell>\n      </Table.Row>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = state => ({\n  login: state.login\n});\n\nconst connectedReportListItem = connect(mapStateToProps, {\n  getOneReport,\n  deleteReport,\n  setNotification\n})(ReportListItem);\n\nexport default connectedReportListItem;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport ReportFilterForm from './ReportFilterForm';\nimport FilterReportList from './FilterReportList';\nimport ReportListItem from './ReportListItem';\nimport Notification from '../layout/Notification';\nimport { getOneReport } from '../../actions/reportActions';\nimport {\n  getAllReportsByDate,\n  getAllReportsByDateByUser\n} from '../../actions/reportsListActions';\nimport { setNotification } from '../../reducers/notificationReducer';\nimport { Container, Table, Dimmer, Loader } from 'semantic-ui-react';\nimport moment from 'moment';\nmoment.locale('fi');\nconsole.log(moment.locale());\n\nconst ReportList = props => {\n  // initial reports list\n  useEffect(() => {\n    if (props.login.level === 1) {\n      if (props.reportsList.reportListDate === null) {\n        props.getAllReportsByDateByUser(\n          moment().format('YYYY-MM'),\n          props.login.id\n        );\n      } else {\n        props.getAllReportsByDateByUser(\n          props.reportsList.reportListDate,\n          props.login.id\n        );\n      }\n    } else {\n      if (props.reportsList.reportListDate === null) {\n        props.getAllReportsByDate(moment().format('YYYY-MM'));\n      } else {\n        props.getAllReportsByDate(props.reportsList.reportListDate);\n      }\n    }\n\n    // eslint-disable-next-line\n  }, []);\n  console.log('Reportlist props', props);\n\n  if (props.reportsList.reportsList === null || props.reportsList.loading) {\n    return (\n      <Dimmer active inverted>\n        <Loader inverted content=\"Ladataan...\" />\n      </Dimmer>\n    );\n  }\n\n  if (props.reportsList.reportsList.length === 0) {\n    return (\n      <Container>\n        <h2>Ei raportteja valittuna ajankohtana. Valitse vuosi ja kuukausi</h2>\n        <ReportFilterForm />\n      </Container>\n    );\n  }\n\n  let reportListTimeDate;\n  if (props.reportsList.reportListDate === null) {\n    reportListTimeDate = moment().format('MMMM YYYY');\n  } else {\n    reportListTimeDate = moment(props.reportsList.reportListDate).format(\n      'MMMM YYYY'\n    );\n  }\n\n  let reportsToShow = props.reportsList.reportsList;\n\n  reportsToShow =\n    props.reportsList.filterByText === 0\n      ? reportsToShow\n      : (reportsToShow = reportsToShow.filter(report =>\n          report.name\n            .toLowerCase()\n            .includes(props.reportsList.filterByText.toLowerCase())\n        ));\n  reportsToShow =\n    props.reportsList.filterUserValue === null\n      ? reportsToShow\n      : (reportsToShow = reportsToShow.filter(\n          report => report.user_id === props.reportsList.filterUserValue\n        ));\n  reportsToShow =\n    props.reportsList.filterStatusValue === null\n      ? reportsToShow\n      : (reportsToShow = reportsToShow.filter(\n          report => report.status === props.reportsList.filterStatusValue\n        ));\n\n  return (\n    <Container>\n      <ReportFilterForm />\n      <Notification />\n      <h3>Raportit {reportListTimeDate}</h3>\n      <FilterReportList />\n      <Table striped>\n        <Table.Header>\n          <Table.Row>\n            <Table.Cell>Ohjelmanro</Table.Cell>\n            <Table.Cell>Nimi</Table.Cell>\n            <Table.Cell>Aika</Table.Cell>\n            <Table.Cell>Kello</Table.Cell>\n            <Table.Cell>Tila</Table.Cell>\n            <Table.Cell></Table.Cell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {reportsToShow.map(r => (\n            <ReportListItem key={r.id} report={r} />\n          ))}\n        </Table.Body>\n      </Table>\n    </Container>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('report list state to props', state);\n  return {\n    report: state.report,\n    reportsList: state.reportsList,\n    notification: state.notification,\n    login: state.login\n  };\n};\n\nconst mapDispatchToProps = {\n  getAllReportsByDate,\n  getAllReportsByDateByUser,\n  getOneReport,\n  setNotification\n};\n\nconst connectedReportList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ReportList);\n\nexport default connectedReportList;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { updateProgram } from '../../actions/programActions';\nimport { setNotification } from '../../reducers/notificationReducer';\nimport {\n  Modal,\n  Header,\n  Form,\n  Button,\n  Input,\n  Popup,\n  Icon\n} from 'semantic-ui-react';\n\nconst EditProgramModal = props => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [name, setName] = useState(props.program.name);\n  const [identifier, setIdentifier] = useState(props.program.identifier);\n  const [display, setDisplay] = useState(props.program.display);\n  const [site, setSite] = useState(props.program.site);\n\n  const handleOpen = () => {\n    setModalOpen(true);\n  };\n  const handleClose = () => {\n    setModalOpen(false);\n  };\n\n  const updateProgram = () => {\n    const updatedProgram = {\n      id: props.program.id,\n      display,\n      identifier,\n      name,\n      site,\n      user_id: props.program.user_id\n    };\n    console.log('klikd update program', updatedProgram);\n    props.updateProgram(updatedProgram);\n    props.setNotification(`${updatedProgram.name} päivitetty!`, 'success');\n    handleClose();\n  };\n\n  const getDisplay = () => {\n    console.log('getting display');\n    if (display === null) {\n      setDisplay(1);\n    } else {\n      setDisplay(null);\n    }\n  };\n\n  const getSite = () => {\n    console.log('getting display');\n    if (site === null) {\n      setSite(1);\n    } else {\n      setSite(null);\n    }\n  };\n\n  return (\n    <Modal\n      trigger={\n        <a href=\"#!\" onClick={handleOpen}>\n          {props.program.name}\n        </a>\n      }\n      closeIcon\n      open={modalOpen}\n      onClose={handleClose}\n    >\n      <Header content=\"Muokkaa ohjelman tietoja\" />\n      <Modal.Content>\n        <Form onSubmit={updateProgram}>\n          <Form.Field>\n            <label>Ohjelman nimi</label>\n            <Input\n              focus\n              type=\"text\"\n              defaultValue={name}\n              onChange={e => setName(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Ohjelman lisätieto</label>\n            <Input\n              focus\n              type=\"text\"\n              defaultValue={identifier}\n              onChange={e => setIdentifier(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>\n              Aktiivinen{' '}\n              <Popup\n                trigger={\n                  <Icon style={{ display: 'inline' }} name=\"question circle\" />\n                }\n                content=\"Aktiiviset ohjelmat näkyy Luo uusi raportti -sivun ohjelmalistalla\"\n                style={style}\n                inverted\n              />\n            </label>\n            <Form.Checkbox\n              name=\"active\"\n              onChange={getDisplay}\n              checked={display ? true : false}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>\n              Näytä saitin hakulistassa{' '}\n              <Popup\n                trigger={\n                  <Icon style={{ display: 'inline' }} name=\"question circle\" />\n                }\n                content=\"Liittyy vanhaan saittiin jossa pääsi selaamaan raportteja per ohjelma\"\n                style={style}\n                inverted\n              />\n            </label>\n            <Form.Checkbox\n              name=\"active\"\n              onChange={getSite}\n              checked={site ? true : false}\n            />\n          </Form.Field>\n          <Button color=\"green\" type=\"submit\" disabled={!name}>\n            Tallenna\n          </Button>\n        </Form>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nconst style = {\n  borderRadius: 0,\n  display: 'block',\n  opacity: 0.9,\n  padding: '2em'\n};\n\nconst mapStateToProps = state => {\n  return {\n    programs: state.programs\n  };\n};\n\nconst connectedEditProgramModal = connect(\n  mapStateToProps,\n  { setNotification, updateProgram }\n)(EditProgramModal);\n\nexport default connectedEditProgramModal;\n","import {\n  GET_ALL_PROGRAMS,\n  GET_ALL_ACTIVE_PROGRAMS,\n  GET_ONE_PROGRAM,\n  CREATE_NEW_PROGRAM,\n  UPDATE_PROGRAM,\n  SET_LOADING\n} from '../actions/types';\nimport programService from '../services/programs';\n\n// get program list fo\nexport const getAllPrograms = () => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const programs = await programService.getAll();\n    dispatch({\n      type: GET_ALL_PROGRAMS,\n      data: programs\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n// get all active programs\nexport const initializePrograms = () => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const programs = await programService.getAllActive();\n    dispatch({\n      type: GET_ALL_ACTIVE_PROGRAMS,\n      data: programs\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n// get one program by id\nexport const getOneProgram = id => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const program = await programService.getOne(id);\n    dispatch({\n      type: GET_ONE_PROGRAM,\n      data: program,\n      id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// create new program\nexport const createNewProgram = programToAdd => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const program = await programService.createProgram(programToAdd);\n    dispatch({\n      type: CREATE_NEW_PROGRAM,\n      data: program\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// update program\nexport const updateProgram = updatedProgram => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const updated = await programService.updateProgram(updatedProgram);\n    console.log(updated);\n    dispatch({\n      type: UPDATE_PROGRAM,\n      data: updatedProgram\n    });\n    // const programs = await programService.getAll();\n    // dispatch({\n    //   type: GET_ALL_PROGRAMS,\n    //   data: programs\n    // });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const mergePrograms = mergeParams => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const mergeAction = await programService.mergePrograms(mergeParams);\n    console.log(mergeAction);\n    const programs = await programService.getAll();\n    dispatch({\n      type: GET_ALL_PROGRAMS,\n      data: programs\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, Header, Form, Button, Dropdown } from 'semantic-ui-react';\nimport { mergePrograms } from '../../actions/programActions';\nimport { setNotification } from '../../reducers/notificationReducer';\n\nconst MergePrograms = props => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [programToMerge, setProgramToMerge] = useState(null);\n  const handleOpen = () => {\n    setModalOpen(true);\n  };\n  const handleClose = () => {\n    setModalOpen(false);\n  };\n\n  if (!modalOpen) {\n    return (\n      <button className=\"link-btn\" onClick={handleOpen}>\n        {props.program_id}\n      </button>\n    );\n  } else {\n    const onSubmit = () => {\n      const mergeParams = {\n        type: 'program',\n        merge: programToMerge,\n        mergeTo: props.program_id\n      };\n      console.log(mergeParams);\n      props.mergePrograms(mergeParams);\n      props.setNotification(\n        `Ohjelma #${mergeParams.merge} yhdistetty!`,\n        'success'\n      );\n      handleClose();\n    };\n    const mergeOptions = props.programs.allPrograms.map(program => ({\n      id: program.id,\n      text: `${program.id} - ${program.name}`,\n      value: program.id\n    }));\n    const getProgramToMerge = (e, { value }) => {\n      e.preventDefault();\n      setProgramToMerge(value);\n    };\n    return (\n      <Modal\n        open={modalOpen}\n        closeIcon\n        onClose={handleClose}\n        trigger={\n          <button className=\"link-btn\" onClick={handleOpen}>\n            {props.program_id}\n          </button>\n        }\n      >\n        <Header>\n          Yhdistä albumiin {props.program_id} - {props.program_name} tiedot\n        </Header>\n        <Modal.Content>\n          <Form onSubmit={onSubmit}>\n            <Form.Field>\n              <Dropdown\n                onChange={getProgramToMerge}\n                selection\n                search\n                options={mergeOptions}\n              />\n            </Form.Field>\n            <Form.Field>\n              <Button type=\"submit\">Yhdistä</Button>\n            </Form.Field>\n          </Form>\n        </Modal.Content>\n      </Modal>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  // console.log('MergeAlbums state', state);\n  return {\n    programs: state.programs\n  };\n};\n\nconst connectedMergePrograms = connect(mapStateToProps, {\n  mergePrograms,\n  setNotification\n})(MergePrograms);\n\nexport default connectedMergePrograms;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport EditProgramModal from './EditProgramModal';\nimport MergePrograms from './MergePrograms';\nimport { setNotification } from '../../reducers/notificationReducer';\nimport { Table, Container, Dimmer, Loader } from 'semantic-ui-react';\n\nconst ProgramListItem = props => {\n  if (props.program === null) {\n    return (\n      <Container>\n        <Dimmer active inverted>\n          <Loader size=\"medium\">Haetaan Ohjelmia...</Loader>\n        </Dimmer>\n      </Container>\n    );\n  }\n\n  let className;\n  if (props.program.display === 1) {\n    className = 'active-program';\n  }\n\n  return (\n    <Table.Row className={className}>\n      <Table.Cell>\n        <MergePrograms\n          program_id={props.program.id}\n          program_name={props.program.name}\n        />\n      </Table.Cell>\n      {/* <Table.Cell>{props.program.name}</Table.Cell> */}\n      <Table.Cell>\n        <EditProgramModal program={props.program} />\n      </Table.Cell>\n      <Table.Cell>{props.program.identifier}</Table.Cell>\n    </Table.Row>\n  );\n};\n\nconst connectedProgramListItem = connect(null, { setNotification })(\n  ProgramListItem\n);\n\nexport default connectedProgramListItem;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { createNewProgram } from '../../actions/programActions';\nimport { setNotification } from '../../reducers/notificationReducer';\nimport {\n  Modal,\n  Header,\n  Form,\n  Button,\n  Input,\n  Popup,\n  Icon\n} from 'semantic-ui-react';\n\nconst AddProgramModal = props => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [name, setName] = useState('');\n  const [identifier, setIdentifier] = useState('');\n  const [display, setDisplay] = useState(false);\n  const [site, setSite] = useState(false);\n\n  const handleOpen = () => {\n    setModalOpen(true);\n  };\n  const handleClose = () => {\n    setModalOpen(false);\n  };\n\n  const addProgram = () => {\n    const programToAdd = {\n      display,\n      identifier,\n      name,\n      site,\n      user_id: props.login.id\n    };\n    console.log('klikd add program', programToAdd);\n    props.createNewProgram(programToAdd);\n    props.setNotification(`${programToAdd.name} lisätty!`, 'success');\n    handleClose();\n  };\n\n  return (\n    <Modal\n      trigger={\n        <Button onClick={handleOpen} floated=\"right\" color=\"green\">\n          Luo uusi ohjelma\n        </Button>\n      }\n      closeIcon\n      open={modalOpen}\n      onClose={handleClose}\n    >\n      <Header content=\"Lisää ohjelma\" />\n      <Modal.Content>\n        <Form onSubmit={addProgram}>\n          <Form.Field>\n            <label>Ohjelman nimi</label>\n            <Input\n              focus\n              type=\"text\"\n              placeholder=\"Ohjelman nimi...\"\n              onChange={e => setName(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Ohjelman tarkenne</label>\n            <Input\n              focus\n              type=\"text\"\n              placeholder=\"Ohjelman tarkenne...\"\n              onChange={e => setIdentifier(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>\n              Aktiivinen{' '}\n              <Popup\n                trigger={\n                  <Icon style={{ display: 'inline' }} name=\"question circle\" />\n                }\n                content=\"Aktiiviset ohjelmat näkyy Luo uusi raportti -sivun ohjelmalistalla\"\n                style={style}\n                inverted\n              />\n            </label>\n            <Form.Checkbox\n              name=\"active\"\n              onChange={() => setDisplay(!display)}\n              checked={display ? true : false}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>\n              Näytä saitin hakulistassa{' '}\n              <Popup\n                trigger={\n                  <Icon style={{ display: 'inline' }} name=\"question circle\" />\n                }\n                content=\"Liittyy vanhaan saittiin jossa pääsi selaamaan raportteja per ohjelma\"\n                style={style}\n                inverted\n              />\n            </label>\n            <Form.Checkbox\n              name=\"site\"\n              onChange={() => setSite(!site)}\n              checked={site ? true : false}\n            />\n          </Form.Field>\n          <Button color=\"green\" type=\"submit\" disabled={!name}>\n            Tallenna\n          </Button>\n        </Form>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nconst style = {\n  borderRadius: 0,\n  display: 'block',\n  opacity: 0.9,\n  padding: '2em'\n};\n\nconst mapStateToProps = state => {\n  return {\n    login: state.login\n  };\n};\nconst connectedAddProgramModal = connect(\n  mapStateToProps,\n  { setNotification, createNewProgram }\n)(AddProgramModal);\n\nexport default connectedAddProgramModal;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport ProgramListItem from './ProgramListItem';\nimport AddProgramModal from './AddProgramModal';\nimport Notification from '../layout/Notification';\nimport { getAllPrograms } from '../../actions/programActions';\nimport { Container, Dimmer, Loader } from 'semantic-ui-react';\nimport { Table } from 'semantic-ui-react';\n\nconst ProgramList = props => {\n  useEffect(() => {\n    props.getAllPrograms();\n    //eslint-disable-next-line\n  }, []);\n  if (props.programs.allPrograms === null || props.programs.loading === true) {\n    return (\n      <Container>\n        <Dimmer active inverted>\n          <Loader size=\"medium\">Haetaan ohjelmia...</Loader>\n        </Dimmer>\n      </Container>\n    );\n  }\n  if (props.login.level === 3 || props.login.level === 2) {\n    return (\n      <Container>\n        <div style={{ marginTop: '1rem', marginBottom: '1rem' }}>\n          <h3 style={{ display: 'inline' }}>Ohjelmat</h3>\n          <AddProgramModal />\n        </div>\n\n        <Notification />\n        <Table>\n          <Table.Header>\n            <Table.Row>\n              <Table.Cell>ID</Table.Cell>\n              <Table.Cell>Nimi</Table.Cell>\n              <Table.Cell>Tarkenne</Table.Cell>\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>\n            {props.programs.allPrograms.map(program => (\n              <ProgramListItem program={program} key={program.id} />\n            ))}\n          </Table.Body>\n        </Table>\n      </Container>\n    );\n  } else {\n    return null;\n  }\n};\n\nconst mapStateToProps = state => ({\n  programs: state.programs,\n  login: state.login\n});\n\nconst connectedProgramList = connect(mapStateToProps, { getAllPrograms })(\n  ProgramList\n);\n\nexport default connectedProgramList;\n","import {\n  GET_ONE_ALBUM,\n  GET_TRACKLIST_OF_ALBUM,\n  CLEAR_CURRENT_ALBUM,\n  MERGE_ALBUMS,\n  SET_LOADING\n} from './types';\nimport albumService from '../services/albums';\nimport searchService from '../services/search';\n\nexport const getOneAlbum = id => async dispatch => {\n  try {\n    dispatch({\n      type: CLEAR_CURRENT_ALBUM\n    });\n    dispatch({\n      type: SET_LOADING\n    });\n    const album = await albumService.getOneAlbum(id);\n    dispatch({\n      type: GET_ONE_ALBUM,\n      data: album\n    });\n    const tracklist = await albumService.getTracklistOfAlbum(id);\n    dispatch({\n      type: GET_TRACKLIST_OF_ALBUM,\n      data: tracklist\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updateAlbum = albumToUpdate => async dispatch => {\n  dispatch({\n    type: SET_LOADING\n  });\n  console.log('artist to update', albumToUpdate);\n  const updateAlbum = await albumService.updateAlbum(albumToUpdate);\n  console.log(updateAlbum);\n  const updatedAlbum = await albumService.getOneAlbum(albumToUpdate.id);\n  dispatch({\n    type: GET_ONE_ALBUM,\n    data: updatedAlbum\n  });\n};\n\nexport const mergeAlbumFunction = mergeParams => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const mergeAction = await searchService.merge(mergeParams);\n    console.log(mergeAction);\n    const album = await albumService.getOneAlbum(mergeParams.mergeTo);\n    dispatch({\n      type: GET_ONE_ALBUM,\n      data: album\n    });\n    const tracklist = await albumService.getTracklistOfAlbum(\n      mergeParams.mergeTo\n    );\n    dispatch({\n      type: GET_TRACKLIST_OF_ALBUM,\n      data: tracklist\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updateAlbumState = mergeParams => async dispatch => {\n  dispatch({\n    type: MERGE_ALBUMS,\n    data: mergeParams\n  });\n};\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, Header, Form, Button, Dropdown } from 'semantic-ui-react';\nimport { mergeAlbumFunction } from '../../actions/albumActions';\n\nconst MergeAlbumsModal = props => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [albumToMerge, setAlbumToMerge] = useState(null);\n  const handleOpen = () => {\n    setModalOpen(true);\n    console.log(modalOpen);\n  };\n  const handleClose = () => {\n    setModalOpen(false);\n  };\n  if (!modalOpen) {\n    return (\n      <button className=\"link-btn\" onClick={handleOpen}>\n        {props.album_id}\n      </button>\n    );\n  } else {\n    const onSubmit = () => {\n      const mergeParams = {\n        type: 'album',\n        merge: albumToMerge,\n        mergeTo: props.album_id\n      };\n      console.log(mergeParams);\n      props.mergeAlbumFunction(mergeParams);\n    };\n\n    const mergeOptions = props.artist.albumList.map(album => ({\n      key: album.album_id,\n      text: `${album.album_id} - ${album.name}`,\n      value: album.album_id\n    }));\n    const getAlbumToMerge = (e, { value }) => {\n      e.preventDefault();\n      setAlbumToMerge(value);\n    };\n    return (\n      <Modal\n        open={modalOpen}\n        closeIcon\n        onClose={handleClose}\n        trigger={\n          <button className=\"link-btn\" onClick={handleOpen}>\n            {props.album_id}\n          </button>\n        }\n      >\n        <Header>\n          Yhdistä albumiin {props.album_id} - {props.album_name} tiedot\n        </Header>\n        <Modal.Content>\n          <Form onSubmit={onSubmit}>\n            <Form.Field>\n              <Dropdown\n                onChange={getAlbumToMerge}\n                selection\n                search\n                options={mergeOptions}\n              />\n            </Form.Field>\n            <Form.Field>\n              <Button type=\"submit\">Yhdistä</Button>\n            </Form.Field>\n          </Form>\n        </Modal.Content>\n      </Modal>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  console.log('MergeAlbumsModal state', state);\n  return {\n    artist: state.artist\n  };\n};\n\nconst connectedMergeAlbumsModal = connect(\n  mapStateToProps,\n  { mergeAlbumFunction }\n)(MergeAlbumsModal);\n\nexport default connectedMergeAlbumsModal;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Table } from 'semantic-ui-react';\nimport MergeAlbumsModal from './MergeAlbumsModal';\n\nconst AlbumsByArtistItem = props => {\n  console.log(props);\n  return (\n    <Table.Row>\n      <Table.Cell>\n        <MergeAlbumsModal\n          album_name={props.album.name}\n          album_id={props.album.album_id}\n        />\n      </Table.Cell>\n      <Table.Cell>\n        <Link to={`/album/${props.album.album_id}`}>{props.album.name}</Link>\n      </Table.Cell>\n      <Table.Cell>{props.album.identifier}</Table.Cell>\n      <Table.Cell>{props.album.track_count}</Table.Cell>\n      <Table.Cell>{props.album.report_occurrence}</Table.Cell>\n    </Table.Row>\n  );\n};\n\nexport default AlbumsByArtistItem;\n","import React from 'react';\nimport { Table } from 'semantic-ui-react';\nimport AlbumsByArtistItem from './AlbumsByArtistItem';\n\nconst AlbumsByArtist = props => {\n  console.log('albumbyartist props', props);\n  if (props.albumList === null) {\n    return <span>loading</span>;\n  }\n  return (\n    <React.Fragment>\n      <h4>Albumit</h4>\n      <Table striped>\n        <Table.Header>\n          <Table.Row>\n            <Table.Cell>ID#</Table.Cell>\n            <Table.Cell>Nimi</Table.Cell>\n            <Table.Cell>Levykoodi</Table.Cell>\n            <Table.Cell>Biisejä</Table.Cell>\n            <Table.Cell>Raportit</Table.Cell>\n            <Table.Cell></Table.Cell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {props.albumList.map(album => (\n            <AlbumsByArtistItem key={album.album_id} album={album} />\n          ))}\n        </Table.Body>\n      </Table>\n    </React.Fragment>\n  );\n};\n\nexport default AlbumsByArtist;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Input, Button, Grid, Dimmer, Loader } from 'semantic-ui-react';\nimport Notification from '../layout/Notification';\nimport { updateArtist } from '../../actions/artistActions';\nimport { setNotification } from '../../reducers/notificationReducer';\n\nconst ArtistDetailsForm = props => {\n  console.log(props);\n  const [artist, setArtist] = useState(props.currentArtist.name);\n  const [spotifyId, setSpotifyId] = useState(props.currentArtist.spotify_id);\n  if (props.currentArtist === null) {\n    return (\n      <Dimmer>\n        <Loader>Ladataan...</Loader>\n      </Dimmer>\n    );\n  }\n\n  const saveChanges = () => {\n    console.log('klikd save artist');\n    const artistToUpdate = {\n      id: props.currentArtist.id,\n      name: artist,\n      spotify_id: spotifyId\n    };\n    console.log(artistToUpdate);\n    props.updateArtist(artistToUpdate);\n    props.setNotification(\n      `Artistin ${artistToUpdate.name} tiedot päivitetty!`,\n      'success'\n    );\n  };\n  return (\n    <Grid columns={2}>\n      <Grid.Column>\n        <h2>Artistin tiedot</h2>\n        <Notification />\n        <Form>\n          <Form.Field>\n            <label>Artistin nimi</label>\n            <Input\n              type=\"text\"\n              defaultValue={artist}\n              onChange={e => setArtist(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Spotify id</label>\n            <Input\n              type=\"text\"\n              defaultValue={spotifyId}\n              onChange={e => setSpotifyId(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <Button onClick={saveChanges} color=\"green\">\n              Tallenna muutokset\n            </Button>\n          </Form.Field>\n        </Form>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nconst connectedArtistDetailsForm = connect(\n  null,\n  { updateArtist, setNotification }\n)(ArtistDetailsForm);\n\nexport default connectedArtistDetailsForm;\n","import {\n  GET_ONE_ARTIST,\n  SET_LOADING,\n  GET_ALBUM_LIST_BY_ARTIST,\n  CLEAR_CURRENT_ARTIST,\n  MERGE_ARTISTS\n} from './types';\nimport artistService from '../services/artists';\nimport searchService from '../services/search';\n\nexport const getOneArtist = id => async dispatch => {\n  try {\n    dispatch({\n      type: CLEAR_CURRENT_ARTIST\n    });\n    dispatch({\n      type: SET_LOADING\n    });\n    const artist = await artistService.getOneArtist(id);\n    dispatch({\n      type: GET_ONE_ARTIST,\n      data: artist\n    });\n    const albumList = await artistService.getAlbumsByArtist(id);\n    dispatch({\n      type: GET_ALBUM_LIST_BY_ARTIST,\n      data: albumList\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updateArtist = artistToUpdate => async dispatch => {\n  dispatch({\n    type: SET_LOADING\n  });\n  console.log('artist to update', artistToUpdate);\n  const updateArtist = await artistService.updateArtist(artistToUpdate);\n  console.log(updateArtist);\n  const updatedArtist = await artistService.getOneArtist(artistToUpdate.id);\n  dispatch({\n    type: GET_ONE_ARTIST,\n    data: updatedArtist\n  });\n};\n\nexport const mergeArtistFunction = mergeParams => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const mergeAction = await searchService.merge(mergeParams);\n    console.log(mergeAction);\n    const artist = await artistService.getOneArtist(mergeParams.mergeTo);\n    dispatch({\n      type: GET_ONE_ARTIST,\n      data: artist\n    });\n    const albumList = await artistService.getAlbumsByArtist(\n      mergeParams.mergeTo\n    );\n    dispatch({\n      type: GET_ALBUM_LIST_BY_ARTIST,\n      data: albumList\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updateArtistState = mergeParams => async dispatch => {\n  dispatch({\n    type: MERGE_ARTISTS,\n    data: mergeParams\n  });\n};\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Dimmer, Loader } from 'semantic-ui-react';\nimport { getOneArtist } from '../../actions/artistActions';\nimport AlbumsByArtist from './AlbumsByArtist';\nimport ArtistDetailsForm from './ArtistDetailsForm';\n\nconst ArtistDetails = props => {\n  console.log('artist detail props', props);\n\n  useEffect(() => {\n    props.getOneArtist(props.id);\n    // eslint-disable-next-line\n  }, [props.id]);\n\n  if (props.artist.currentArtist === null) {\n    return (\n      <Container>\n        <Dimmer>\n          <Loader>Ladataan...</Loader>\n        </Dimmer>\n      </Container>\n    );\n  }\n\n  return (\n    <Container>\n      <ArtistDetailsForm currentArtist={props.artist.currentArtist} />\n      <AlbumsByArtist albumList={props.artist.albumList} />\n    </Container>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    artist: state.artist\n  };\n};\n\nconst connectedArtistDetails = connect(\n  mapStateToProps,\n  { getOneArtist }\n)(ArtistDetails);\nexport default connectedArtistDetails;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Input, Button, Grid, Dimmer, Loader } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport Notification from '../layout/Notification';\nimport { updateAlbum } from '../../actions/albumActions';\nimport { setNotification } from '../../reducers/notificationReducer';\n\nconst AlbumDetailsForm = props => {\n  console.log(props);\n  const [name, setName] = useState(props.currentAlbum[0].album_name);\n  const [label, setLabel] = useState(props.currentAlbum[0].label);\n  const [catId, setCatId] = useState(props.currentAlbum[0].cat_id);\n  const [year, setYear] = useState(null);\n  const [spotifyId, setSpotifyId] = useState(props.currentAlbum[0].spotify_id);\n  useEffect(() => {\n    if (props.currentAlbum[0].year === null) {\n      setYear(null);\n    } else {\n      setYear(parseInt(props.currentAlbum[0].year));\n    }\n    // eslint-disable-next-line\n  }, [props.currentAlbum[0].year]);\n  if (props.currentAlbum === null) {\n    return (\n      <Dimmer>\n        <Loader>Ladataan...</Loader>\n      </Dimmer>\n    );\n  }\n\n  const saveChanges = () => {\n    console.log('klikd save album');\n    const albumToUpdate = {\n      id: props.album_id,\n      name,\n      label,\n      cat_id: catId,\n      year,\n      spotify_id: spotifyId\n    };\n    console.log('album details form albumtoupdate', albumToUpdate);\n    props.updateAlbum(albumToUpdate);\n    props.setNotification(\n      `Albumin ${albumToUpdate.name} tiedot päivitetty!`,\n      'success'\n    );\n  };\n  return (\n    <Grid columns={2}>\n      <Grid.Column>\n        <h2>Albumin tiedot</h2>\n        <Notification />\n        <Form>\n          <Form.Field>\n            <label>Artistin nimi</label>\n            <Input\n              disabled\n              type=\"text\"\n              defaultValue={props.currentAlbum[0].artist_name}\n            />\n            <span>\n              <a href=\"!#\">Vaihda esittäjää</a> {'  '}\n              <Link to={`../artist/${props.currentAlbum[0].artist_id}`}>\n                Muokkaa esittäjän tietoja\n              </Link>\n            </span>\n          </Form.Field>\n          <Form.Field>\n            <label>Albumi</label>\n            <Input\n              type=\"text\"\n              defaultValue={name}\n              onChange={e => setName(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Levymerkki</label>\n            <Input\n              type=\"text\"\n              defaultValue={label}\n              onChange={e => setLabel(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Levykoodi</label>\n            <Input\n              type=\"text\"\n              defaultValue={catId}\n              onChange={e => setCatId(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Vuosi</label>\n            <Input\n              type=\"number\"\n              defaultValue={year}\n              onChange={e => setYear(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Spotify id</label>\n            <Input\n              type=\"text\"\n              defaultValue={spotifyId}\n              onChange={e => setSpotifyId(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <Button onClick={saveChanges} color=\"green\">\n              Tallenna muutokset\n            </Button>\n          </Form.Field>\n        </Form>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nconst connectedAlbumDetailsForm = connect(null, {\n  updateAlbum,\n  setNotification\n})(AlbumDetailsForm);\n\nexport default connectedAlbumDetailsForm;\n","import {\n  GET_DJONLINE_TRACKS,\n  ADD_NEW_TRACK,\n  UPDATE_TRACK,\n  SET_LOADING,\n  GET_ONE_TRACK,\n  GET_ONE_TRACK_HISTORY,\n  CLEAR_CURRENT_TRACK,\n  REMOVE_CURRENT_TRACK,\n  CHANGE_ALBUM,\n  CHANGE_ARTIST,\n  MERGE_TRACKS\n} from './types';\nimport trackService from '../services/tracks';\nimport searchService from '../services/search';\n\nexport const getDjonlineTracks = searchParams => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const tracks = await trackService.checkDjonlineTracks(searchParams);\n    dispatch({\n      type: GET_DJONLINE_TRACKS,\n      data: tracks\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// add a new track and save it to current report\nexport const addNewTrack = trackToAdd => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const track = await trackService.addNewTrack(trackToAdd);\n    console.log(track);\n    dispatch({\n      type: ADD_NEW_TRACK,\n      data: track\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// add a new track to db - not in a report\nexport const addTrackToDb = trackToAdd => async dispatch => {\n  try {\n    const track = await trackService.addTrackToDb(trackToAdd);\n    console.log(track);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updateTrack = trackToUpdate => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const updatedTrack = await trackService.updateTrack(trackToUpdate);\n    console.log('updated track', updatedTrack);\n    dispatch({\n      type: UPDATE_TRACK,\n      data: updatedTrack\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getOneTrack = id => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const track = await trackService.getOneTrack(id);\n    dispatch({\n      type: GET_ONE_TRACK,\n      data: track\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getOneTrackHistory = id => async dispatch => {\n  try {\n    dispatch({\n      type: CLEAR_CURRENT_TRACK\n    });\n    dispatch({\n      type: SET_LOADING\n    });\n    const history = await trackService.getOneTrackHistory(id);\n    dispatch({\n      type: GET_ONE_TRACK_HISTORY,\n      data: history\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const removeCurrentTrack = () => async dispatch => {\n  dispatch({\n    type: REMOVE_CURRENT_TRACK\n  });\n};\n\nexport const mergeTrackFunction = mergeParams => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const mergeAction = await searchService.merge(mergeParams);\n    console.log(mergeAction);\n    const track = await trackService.getOneTrack(mergeParams.mergeTo);\n    dispatch({\n      type: GET_ONE_TRACK,\n      data: track\n    });\n    const history = await trackService.getOneTrackHistory(mergeParams.mergeTo);\n    dispatch({\n      type: GET_ONE_TRACK_HISTORY,\n      data: history\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const changeAlbumId = albumToUpdate => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const updateAlbum = await trackService.updateAlbumId(albumToUpdate);\n    console.log(updateAlbum);\n    dispatch({\n      type: CHANGE_ALBUM,\n      data: albumToUpdate\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const changeArtistId = artistToUpdate => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const updateArtist = await trackService.updateArtistId(artistToUpdate);\n    console.log(updateArtist);\n    dispatch({\n      type: CHANGE_ARTIST,\n      data: artistToUpdate\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updateTrackState = mergeParams => async dispatch => {\n  dispatch({\n    type: MERGE_TRACKS,\n    data: mergeParams\n  });\n};\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, Header, Form, Button, Dropdown } from 'semantic-ui-react';\nimport { mergeTrackFunction } from '../../actions/trackActions';\n\nconst MergeAlbumTracksModal = props => {\n  console.log('merge album tracks modal props', props);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [trackToMerge, setTrackToMerge] = useState(null);\n  const handleOpen = () => {\n    setModalOpen(true);\n    console.log(modalOpen);\n  };\n  const handleClose = () => {\n    setModalOpen(false);\n  };\n\n  if (!modalOpen) {\n    return (\n      <button className=\"link-btn\" onClick={handleOpen}>\n        {props.track_id}\n      </button>\n    );\n  } else {\n    const onSubmit = () => {\n      const mergeParams = {\n        type: 'track',\n        merge: trackToMerge,\n        mergeTo: props.track_id\n      };\n      mergeTrackFunction(mergeParams);\n    };\n\n    const mergeOptions = props.album.tracklist.map(track => ({\n      key: track.track_id,\n      text: `${track.track_id} - ${track.track_title}`,\n      value: track.track_id\n    }));\n    const getTrackToMerge = (e, { value }) => {\n      e.preventDefault();\n      setTrackToMerge(value);\n    };\n    return (\n      <Modal\n        open={modalOpen}\n        closeIcon\n        onClose={handleClose}\n        trigger={\n          <button className=\"link-btn\" onClick={handleOpen}>\n            {props.track_id}\n          </button>\n        }\n      >\n        <Header>\n          Yhdistä biisiin {props.track_id} - {props.track_title} tiedot\n        </Header>\n        <Modal.Content>\n          <Form onSubmit={onSubmit}>\n            <Form.Field>\n              <Dropdown\n                onChange={getTrackToMerge}\n                selection\n                search\n                options={mergeOptions}\n              />\n            </Form.Field>\n            <Form.Field>\n              <Button type=\"submit\">Yhdistä</Button>\n            </Form.Field>\n          </Form>\n        </Modal.Content>\n      </Modal>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  console.log('MergeAlbumTracksModal state', state);\n  return {\n    album: state.album\n  };\n};\n\nconst connectedMergeAlbumTracksModal = connect(\n  mapStateToProps,\n  { mergeTrackFunction }\n)(MergeAlbumTracksModal);\n\nexport default connectedMergeAlbumTracksModal;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Table } from 'semantic-ui-react';\nimport MergeAlbumTracksModal from './MergeAlbumTracksModal';\n\nconst TracksInAnAlbumItem = props => {\n  console.log(props);\n  return (\n    <Table.Row>\n      <Table.Cell>\n        <MergeAlbumTracksModal\n          track_id={props.track.track_id}\n          track_title={props.track.track_title}\n        />\n      </Table.Cell>\n      <Table.Cell>\n        <Link to={`/track/${props.track.track_id}`}>\n          {props.track.artist_name} - {props.track.track_title}{' '}\n        </Link>\n      </Table.Cell>\n      <Table.Cell>\n        {props.track.track_no} / {props.track.disc_no}\n      </Table.Cell>\n      <Table.Cell>{props.track.isrc}</Table.Cell>\n      <Table.Cell>{props.track.report_occurrence}</Table.Cell>\n      <Table.Cell></Table.Cell>\n    </Table.Row>\n  );\n};\n\nexport default TracksInAnAlbumItem;\n","import React from 'react';\nimport { Table } from 'semantic-ui-react';\nimport TracksInAnAlbumItem from './TracksInAnAlbumItem';\n\nconst TracksInAnAlbum = props => {\n  console.log('albumbyartist props', props);\n  if (props.tracklist === null) {\n    return <span>loading</span>;\n  }\n  return (\n    <React.Fragment>\n      <h4>Biisit</h4>\n      <Table striped>\n        <Table.Header>\n          <Table.Row>\n            <Table.Cell>ID#</Table.Cell>\n            <Table.Cell>ESITTÄJÄ - Biisi</Table.Cell>\n            <Table.Cell>Biisi# / Levy#</Table.Cell>\n            <Table.Cell>ISRC</Table.Cell>\n            <Table.Cell>Raportit</Table.Cell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {props.tracklist.map(track => (\n            <TracksInAnAlbumItem key={track.track_id} track={track} />\n          ))}\n        </Table.Body>\n      </Table>\n    </React.Fragment>\n  );\n};\n\nexport default TracksInAnAlbum;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Dimmer, Loader } from 'semantic-ui-react';\nimport AlbumDetailsForm from './AlbumDetailsForm';\nimport { getOneAlbum } from '../../actions/albumActions';\nimport TracksInAnAlbum from './TracksInAnAlbum';\n\nconst AlbumDetails = props => {\n  console.log('album detail props', props);\n\n  useEffect(() => {\n    props.getOneAlbum(props.id);\n    // eslint-disable-next-line\n  }, [props.id]);\n\n  if (props.album.currentAlbum === null) {\n    return (\n      <Container>\n        <Dimmer>\n          <Loader>Ladataan...</Loader>\n        </Dimmer>\n      </Container>\n    );\n  }\n\n  return (\n    <Container>\n      <AlbumDetailsForm\n        album_id={props.id}\n        currentAlbum={props.album.currentAlbum}\n      />\n      <TracksInAnAlbum tracklist={props.album.tracklist} />\n    </Container>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    album: state.album\n  };\n};\n\nconst connectedAlbumDetails = connect(\n  mapStateToProps,\n  { getOneAlbum }\n)(AlbumDetails);\nexport default connectedAlbumDetails;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, Header, Form, Button, Search } from 'semantic-ui-react';\nimport { changeAlbumId } from '../../actions/trackActions';\nimport { setNotification } from '../../reducers/notificationReducer';\nimport { useChangeAlbumOptionsHook } from '../../hooks/changeAlbumOptionsHook';\n\nconst ChangeAlbumModal = props => {\n  console.log('change album modal props', props);\n  const { setInputText, search } = useChangeAlbumOptionsHook();\n  console.log(search);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [albumToChange, setAlbumToChange] = useState(null);\n  const handleOpen = () => {\n    setModalOpen(true);\n  };\n  const handleClose = () => {\n    setModalOpen(false);\n  };\n  if (!modalOpen) {\n    return (\n      <button className=\"link-btn\" onClick={handleOpen}>\n        Vaihda albumi\n      </button>\n    );\n  } else {\n    let results = [];\n    if (search.result === undefined) {\n      results = [];\n    } else {\n      results = search.result.map(result => ({\n        key: result.album_id,\n        title: `#${result.album_id}: ${result.album_name}`,\n        description: result.artist_name,\n        length: result.length,\n        value: result.album_id,\n        album_name: result.album_name\n      }));\n    }\n    const onSubmit = () => {\n      console.log('klikd submit change album');\n      console.log(\n        'inserting into track id ',\n        props.currentTrack.track_id,\n        'album id',\n        albumToChange.value,\n        albumToChange.album_name\n      );\n      const changedAlbum = {\n        track_id: props.currentTrack.track_id,\n        album_id: albumToChange.value,\n        album_name: albumToChange.album_name\n      };\n      console.log(changedAlbum);\n      props.changeAlbumId(changedAlbum);\n      props.setNotification(\n        `${props.currentTrack.track_title} -biisin albumi vaihdettu!`,\n        'success'\n      );\n      handleClose();\n    };\n\n    const handleResultSelect = (e, { result }) => {\n      e.preventDefault();\n      setAlbumToChange(result);\n    };\n\n    return (\n      <Modal\n        open={modalOpen}\n        closeIcon\n        onClose={handleClose}\n        trigger={\n          <button className=\"link-btn\" onClick={handleOpen}>\n            Vaihda albumi\n          </button>\n        }\n      >\n        <Header>\n          Vaihda biisin {props.currentTrack.track_title} albumiksi:\n        </Header>\n        <Modal.Content>\n          <Form.Field>\n            <div className=\"searchResults\">\n              <Search\n                loading={search.loading}\n                onResultSelect={handleResultSelect}\n                onSearchChange={e => setInputText(e.target.value)}\n                onSelectionChange={handleResultSelect}\n                results={results}\n\n                // value={value}\n              />\n            </div>\n          </Form.Field>\n          <Form.Field>\n            <Button onClick={onSubmit}>Vaihda</Button>\n          </Form.Field>\n        </Modal.Content>\n      </Modal>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  console.log('change album modal state', state);\n  return {\n    search: state.search\n  };\n};\n\nconst connectedChangeAlbumModal = connect(\n  mapStateToProps,\n  { changeAlbumId, setNotification }\n)(ChangeAlbumModal);\n\nexport default connectedChangeAlbumModal;\n","import { useState } from 'react';\nimport AwesomeDebouncePromise from 'awesome-debounce-promise';\nimport useConstant from 'use-constant';\nimport { useAsync } from 'react-async-hook';\nimport searchService from '../services/search';\n\nexport const useChangeAlbumOptionsHook = () => {\n  const [inputText, setInputText] = useState('');\n\n  // Debounce the original search async function\n  const debouncedSearchTrack = useConstant(() =>\n    AwesomeDebouncePromise(searchService.changeAlbumOptions, 400)\n  );\n  const search = useAsync(\n    async () => {\n      if (inputText.length === 0) {\n        return [];\n      } else {\n        return debouncedSearchTrack(inputText);\n      }\n    },\n    // Ensure a new request is made everytime the text changes (even if it's debounced)\n    [inputText]\n  );\n  return {\n    inputText,\n    setInputText,\n    search\n  };\n};\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, Header, Form, Button, Search } from 'semantic-ui-react';\nimport { changeArtistId } from '../../actions/trackActions';\nimport { setNotification } from '../../reducers/notificationReducer';\nimport { useChangeArtistOptionsHook } from '../../hooks/changeArtistOptionsHook';\n\nconst ChangeArtistModal = props => {\n  console.log('change artist modal props', props);\n  const { setInputText, search } = useChangeArtistOptionsHook();\n  const [modalOpen, setModalOpen] = useState(false);\n  const [artistToChange, setArtistToChange] = useState(null);\n  const handleOpen = () => {\n    setModalOpen(true);\n  };\n  const handleClose = () => {\n    setModalOpen(false);\n  };\n  if (!modalOpen) {\n    return (\n      <button className=\"link-btn\" onClick={handleOpen}>\n        Vaihda artisti\n      </button>\n    );\n  } else {\n    let results = [];\n    if (search.result === undefined) {\n      results = [];\n    } else {\n      results = search.result.map(result => ({\n        key: result.artist_id,\n        title: `#${result.artist_id}: ${result.artist_name}`,\n        description: result.artist_name,\n        value: result.artist_id,\n        artist_name: result.artist_name\n      }));\n    }\n\n    const onSubmit = () => {\n      console.log('klikd submit change artist');\n      console.log(\n        'inserting into track id ',\n        props.currentTrack.track_id,\n        'artist id',\n        artistToChange.value,\n        artistToChange.artist_name\n      );\n      const changedArtist = {\n        track_id: props.currentTrack.track_id,\n        artist_id: artistToChange.value,\n        artist_name: artistToChange.artist_name\n      };\n      console.log(changedArtist);\n      props.changeArtistId(changedArtist);\n      props.setNotification(\n        `${props.currentTrack.track_title} -biisin artisti vaihdettu!`,\n        'success'\n      );\n      handleClose();\n    };\n\n    const handleResultSelect = (e, { result }) => {\n      e.preventDefault();\n      setArtistToChange(result);\n    };\n\n    return (\n      <Modal\n        open={modalOpen}\n        closeIcon\n        onClose={handleClose}\n        trigger={\n          <button className=\"link-btn\" onClick={handleOpen}>\n            Vaihda artisti\n          </button>\n        }\n      >\n        <Header>\n          Vaihda biisin {props.currentTrack.track_title} artistiksi:\n        </Header>\n        <Modal.Content>\n          <Form.Field>\n            <div className=\"searchResults\">\n              <Search\n                loading={search.loading}\n                onResultSelect={handleResultSelect}\n                onSearchChange={e => setInputText(e.target.value)}\n                onSelectionChange={handleResultSelect}\n                results={results}\n\n                // value={value}\n              />\n            </div>\n          </Form.Field>\n          <Form.Field>\n            <Button onClick={onSubmit}>Vaihda</Button>\n          </Form.Field>\n        </Modal.Content>\n      </Modal>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  console.log('change album modal state', state);\n  return {\n    search: state.search\n  };\n};\n\nconst connectedChangeArtistModal = connect(\n  mapStateToProps,\n  { changeArtistId, setNotification }\n)(ChangeArtistModal);\n\nexport default connectedChangeArtistModal;\n","import { useState } from 'react';\nimport AwesomeDebouncePromise from 'awesome-debounce-promise';\nimport useConstant from 'use-constant';\nimport { useAsync } from 'react-async-hook';\nimport searchService from '../services/search';\n\nexport const useChangeArtistOptionsHook = () => {\n  const [inputText, setInputText] = useState('');\n\n  // Debounce the original search async function\n  const debouncedSearchTrack = useConstant(() =>\n    AwesomeDebouncePromise(searchService.changeArtistOptions, 400)\n  );\n  const search = useAsync(\n    async () => {\n      if (inputText.length === 0) {\n        return [];\n      } else {\n        return debouncedSearchTrack(inputText);\n      }\n    },\n    // Ensure a new request is made everytime the text changes (even if it's debounced)\n    [inputText]\n  );\n  return {\n    inputText,\n    setInputText,\n    search\n  };\n};\n","import React, { useState, useEffect } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {\n  Form,\n  Input,\n  Button,\n  Grid,\n  Dimmer,\n  Loader,\n  TextArea,\n  Dropdown\n} from 'semantic-ui-react';\nimport { updateTrack } from '../../actions/trackActions';\nimport { setNotification } from '../../reducers/notificationReducer';\nimport { addTrackToReport } from '../../actions/reportActions';\nimport ChangeAlbumModal from './ChangeAlbumModal';\nimport ChangeArtistModal from './ChangeArtistModal';\n\nconst TrackDetailsForm = props => {\n  console.log('track details form props', props);\n  const [redirect, setRedirect] = useState(false);\n  const [artist, setArtist] = useState(props.currentTrack.artist);\n  const [album, setAlbum] = useState(props.currentTrack.album);\n  const [track, setTrack] = useState(props.currentTrack.track_title);\n  const [min, setMin] = useState(Math.floor(props.currentTrack.length / 60));\n  const [sec, setSec] = useState(props.currentTrack.length % 60);\n  const [country, setCountry] = useState(props.currentTrack.country);\n  const [recordCountry, setRecordCountry] = useState(\n    props.currentTrack.record_country\n  );\n  const [people, setPeople] = useState(null);\n  const [discNo, setDiscNo] = useState(props.currentTrack.disc_no);\n  const [trackNo, setTrackNo] = useState(props.currentTrack.track_no);\n  const [year, setYear] = useState(null);\n  const [isrc, setIsrc] = useState(props.currentTrack.isrc);\n  const [comment, setComment] = useState(props.currentTrack.comment);\n\n  useEffect(() => {\n    if (props.currentTrack.year === null) {\n      setYear(null);\n    } else {\n      setYear(parseInt(props.currentTrack.year));\n    }\n  }, [props.currentTrack.year]);\n\n  useEffect(() => {\n    if (props.currentTrack.people === null) {\n      setPeople(null);\n    } else {\n      setPeople(\n        props.currentTrack.people\n          .replace(/\\| /, '')\n          .replace(/\\| /g, '\\n')\n          .replace(/ \\|/, '')\n      );\n    }\n  }, [props.currentTrack.people]);\n\n  const countryOptions = [\n    {\n      key: 1,\n      text: 'Suomi',\n      value: 1\n    },\n    {\n      key: 2,\n      text: 'Muu',\n      value: 2\n    },\n    {\n      key: 0,\n      text: 'Ei tietoa',\n      value: null\n    }\n  ];\n  const getCountry = (event, { value }) => {\n    event.preventDefault();\n    setCountry(value);\n  };\n  const recordCountryOptions = [\n    { text: 'Finland', value: 'FI' },\n    { text: 'United Kingdom', value: 'GB' },\n    { text: 'United States', value: 'US' },\n    { text: 'Afghanistan', value: 'AF' },\n    { text: 'Åland Islands', value: 'AX' },\n    { text: 'Albania', value: 'AL' },\n    { text: 'Algeria', value: 'DZ' },\n    { text: 'American Samoa', value: 'AS' },\n    { text: 'AndorrA', value: 'AD' },\n    { text: 'Angola', value: 'AO' },\n    { text: 'Anguilla', value: 'AI' },\n    { text: 'Antarctica', value: 'AQ' },\n    { text: 'Antigua and Barbuda', value: 'AG' },\n    { text: 'Argentina', value: 'AR' },\n    { text: 'Armenia', value: 'AM' },\n    { text: 'Aruba', value: 'AW' },\n    { text: 'Australia', value: 'AU' },\n    { text: 'Austria', value: 'AT' },\n    { text: 'Azerbaijan', value: 'AZ' },\n    { text: 'Bahamas', value: 'BS' },\n    { text: 'Bahrain', value: 'BH' },\n    { text: 'Bangladesh', value: 'BD' },\n    { text: 'Barbados', value: 'BB' },\n    { text: 'Belarus', value: 'BY' },\n    { text: 'Belgium', value: 'BE' },\n    { text: 'Belize', value: 'BZ' },\n    { text: 'Benin', value: 'BJ' },\n    { text: 'Bermuda', value: 'BM' },\n    { text: 'Bhutan', value: 'BT' },\n    { text: 'Bolivia', value: 'BO' },\n    { text: 'Bosnia and Herzegovina', value: 'BA' },\n    { text: 'Botswana', value: 'BW' },\n    { text: 'Bouvet Island', value: 'BV' },\n    { text: 'Brazil', value: 'BR' },\n    { text: 'British Indian Ocean Territory', value: 'IO' },\n    { text: 'Brunei Darussalam', value: 'BN' },\n    { text: 'Bulgaria', value: 'BG' },\n    { text: 'Burkina Faso', value: 'BF' },\n    { text: 'Burundi', value: 'BI' },\n    { text: 'Cambodia', value: 'KH' },\n    { text: 'Cameroon', value: 'CM' },\n    { text: 'Canada', value: 'CA' },\n    { text: 'Cape Verde', value: 'CV' },\n    { text: 'Cayman Islands', value: 'KY' },\n    { text: 'Central African Republic', value: 'CF' },\n    { text: 'Chad', value: 'TD' },\n    { text: 'Chile', value: 'CL' },\n    { text: 'China', value: 'CN' },\n    { text: 'Christmas Island', value: 'CX' },\n    { text: 'Cocos (Keeling) Islands', value: 'CC' },\n    { text: 'Colombia', value: 'CO' },\n    { text: 'Comoros', value: 'KM' },\n    { text: 'Congo', value: 'CG' },\n    { text: 'Congo, The Democratic Republic of the', value: 'CD' },\n    { text: 'Cook Islands', value: 'CK' },\n    { text: 'Costa Rica', value: 'CR' },\n    { text: \"Cote D'Ivoire\", value: 'CI' },\n    { text: 'Croatia', value: 'HR' },\n    { text: 'Cuba', value: 'CU' },\n    { text: 'Cyprus', value: 'CY' },\n    { text: 'Czech Republic', value: 'CZ' },\n    { text: 'Denmark', value: 'DK' },\n    { text: 'Djibouti', value: 'DJ' },\n    { text: 'Dominica', value: 'DM' },\n    { text: 'Dominican Republic', value: 'DO' },\n    { text: 'Ecuador', value: 'EC' },\n    { text: 'Egypt', value: 'EG' },\n    { text: 'El Salvador', value: 'SV' },\n    { text: 'Equatorial Guinea', value: 'GQ' },\n    { text: 'Eritrea', value: 'ER' },\n    { text: 'Estonia', value: 'EE' },\n    { text: 'Ethiopia', value: 'ET' },\n    { text: 'Falkland Islands (Malvinas)', value: 'FK' },\n    { text: 'Faroe Islands', value: 'FO' },\n    { text: 'Fiji', value: 'FJ' },\n    { text: 'France', value: 'FR' },\n    { text: 'French Guiana', value: 'GF' },\n    { text: 'French Polynesia', value: 'PF' },\n    { text: 'French Southern Territories', value: 'TF' },\n    { text: 'Gabon', value: 'GA' },\n    { text: 'Gambia', value: 'GM' },\n    { text: 'Georgia', value: 'GE' },\n    { text: 'Germany', value: 'DE' },\n    { text: 'Ghana', value: 'GH' },\n    { text: 'Gibraltar', value: 'GI' },\n    { text: 'Greece', value: 'GR' },\n    { text: 'Greenland', value: 'GL' },\n    { text: 'Grenada', value: 'GD' },\n    { text: 'Guadeloupe', value: 'GP' },\n    { text: 'Guam', value: 'GU' },\n    { text: 'Guatemala', value: 'GT' },\n    { text: 'Guernsey', value: 'GG' },\n    { text: 'Guinea', value: 'GN' },\n    { text: 'Guinea-Bissau', value: 'GW' },\n    { text: 'Guyana', value: 'GY' },\n    { text: 'Haiti', value: 'HT' },\n    { text: 'Heard Island and Mcdonald Islands', value: 'HM' },\n    { text: 'Holy See (Vatican City State)', value: 'VA' },\n    { text: 'Honduras', value: 'HN' },\n    { text: 'Hong Kong', value: 'HK' },\n    { text: 'Hungary', value: 'HU' },\n    { text: 'Iceland', value: 'IS' },\n    { text: 'India', value: 'IN' },\n    { text: 'Indonesia', value: 'ID' },\n    { text: 'Iran, Islamic Republic Of', value: 'IR' },\n    { text: 'Iraq', value: 'IQ' },\n    { text: 'Ireland', value: 'IE' },\n    { text: 'Isle of Man', value: 'IM' },\n    { text: 'Israel', value: 'IL' },\n    { text: 'Italy', value: 'IT' },\n    { text: 'Jamaica', value: 'JM' },\n    { text: 'Japan', value: 'JP' },\n    { text: 'Jersey', value: 'JE' },\n    { text: 'Jordan', value: 'JO' },\n    { text: 'Kazakhstan', value: 'KZ' },\n    { text: 'Kenya', value: 'KE' },\n    { text: 'Kiribati', value: 'KI' },\n    { text: \"Korea, Democratic People's Republic of\", value: 'KP' },\n    { text: 'Korea, Republic of', value: 'KR' },\n    { text: 'Kuwait', value: 'KW' },\n    { text: 'Kyrgyzstan', value: 'KG' },\n    { text: \"Lao People's Democratic Republic\", value: 'LA' },\n    { text: 'Latvia', value: 'LV' },\n    { text: 'Lebanon', value: 'LB' },\n    { text: 'Lesotho', value: 'LS' },\n    { text: 'Liberia', value: 'LR' },\n    { text: 'Libyan Arab Jamahiriya', value: 'LY' },\n    { text: 'Liechtenstein', value: 'LI' },\n    { text: 'Lithuania', value: 'LT' },\n    { text: 'Luxembourg', value: 'LU' },\n    { text: 'Macao', value: 'MO' },\n    { text: 'Macedonia, The Former Yugoslav Republic of', value: 'MK' },\n    { text: 'Madagascar', value: 'MG' },\n    { text: 'Malawi', value: 'MW' },\n    { text: 'Malaysia', value: 'MY' },\n    { text: 'Maldives', value: 'MV' },\n    { text: 'Mali', value: 'ML' },\n    { text: 'Malta', value: 'MT' },\n    { text: 'Marshall Islands', value: 'MH' },\n    { text: 'Martinique', value: 'MQ' },\n    { text: 'Mauritania', value: 'MR' },\n    { text: 'Mauritius', value: 'MU' },\n    { text: 'Mayotte', value: 'YT' },\n    { text: 'Mexico', value: 'MX' },\n    { text: 'Micronesia, Federated States of', value: 'FM' },\n    { text: 'Moldova, Republic of', value: 'MD' },\n    { text: 'Monaco', value: 'MC' },\n    { text: 'Mongolia', value: 'MN' },\n    { text: 'Montenegro', value: 'ME' },\n    { text: 'Montserrat', value: 'MS' },\n    { text: 'Morocco', value: 'MA' },\n    { text: 'Mozambique', value: 'MZ' },\n    { text: 'Myanmar', value: 'MM' },\n    { text: 'Namibia', value: 'NA' },\n    { text: 'Nauru', value: 'NR' },\n    { text: 'Nepal', value: 'NP' },\n    { text: 'Netherlands', value: 'NL' },\n    { text: 'Netherlands Antilles', value: 'AN' },\n    { text: 'New Caledonia', value: 'NC' },\n    { text: 'New Zealand', value: 'NZ' },\n    { text: 'Nicaragua', value: 'NI' },\n    { text: 'Niger', value: 'NE' },\n    { text: 'Nigeria', value: 'NG' },\n    { text: 'Niue', value: 'NU' },\n    { text: 'Norfolk Island', value: 'NF' },\n    { text: 'Northern Mariana Islands', value: 'MP' },\n    { text: 'Norway', value: 'NO' },\n    { text: 'Oman', value: 'OM' },\n    { text: 'Pakistan', value: 'PK' },\n    { text: 'Palau', value: 'PW' },\n    { text: 'Palestinian Territory, Occupied', value: 'PS' },\n    { text: 'Panama', value: 'PA' },\n    { text: 'Papua New Guinea', value: 'PG' },\n    { text: 'Paraguay', value: 'PY' },\n    { text: 'Peru', value: 'PE' },\n    { text: 'Philippines', value: 'PH' },\n    { text: 'Poland', value: 'PL' },\n    { text: 'Portugal', value: 'PT' },\n    { text: 'Puerto Rico', value: 'PR' },\n    { text: 'Qatar', value: 'QA' },\n    { text: 'Romania', value: 'RO' },\n    { text: 'Russian Federation', value: 'RU' },\n    { text: 'RWANDA', value: 'RW' },\n    { text: 'Saint Helena', value: 'SH' },\n    { text: 'Saint Kitts and Nevis', value: 'KN' },\n    { text: 'Saint Lucia', value: 'LC' },\n    { text: 'Saint Pierre and Miquelon', value: 'PM' },\n    { text: 'Saint Vincent and the Grenadines', value: 'VC' },\n    { text: 'Samoa', value: 'WS' },\n    { text: 'San Marino', value: 'SM' },\n    { text: 'Sao Tome and Principe', value: 'ST' },\n    { text: 'Saudi Arabia', value: 'SA' },\n    { text: 'Senegal', value: 'SN' },\n    { text: 'Serbia', value: 'RS' },\n    { text: 'Seychelles', value: 'SC' },\n    { text: 'Sierra Leone', value: 'SL' },\n    { text: 'Singapore', value: 'SG' },\n    { text: 'Slovakia', value: 'SK' },\n    { text: 'Slovenia', value: 'SI' },\n    { text: 'Solomon Islands', value: 'SB' },\n    { text: 'Somalia', value: 'SO' },\n    { text: 'South Africa', value: 'ZA' },\n    { text: 'South Georgia and the South Sandwich Islands', value: 'GS' },\n    { text: 'Spain', value: 'ES' },\n    { text: 'Sri Lanka', value: 'LK' },\n    { text: 'Sudan', value: 'SD' },\n    { text: 'Suriname', value: 'SR' },\n    { text: 'Svalbard and Jan Mayen', value: 'SJ' },\n    { text: 'Swaziland', value: 'SZ' },\n    { text: 'Sweden', value: 'SE' },\n    { text: 'Switzerland', value: 'CH' },\n    { text: 'Syrian Arab Republic', value: 'SY' },\n    { text: 'Taiwan, Province of China', value: 'TW' },\n    { text: 'Tajikistan', value: 'TJ' },\n    { text: 'Tanzania, United Republic of', value: 'TZ' },\n    { text: 'Thailand', value: 'TH' },\n    { text: 'Timor-Leste', value: 'TL' },\n    { text: 'Togo', value: 'TG' },\n    { text: 'Tokelau', value: 'TK' },\n    { text: 'Tonga', value: 'TO' },\n    { text: 'Trinidad and Tobago', value: 'TT' },\n    { text: 'Tunisia', value: 'TN' },\n    { text: 'Turkey', value: 'TR' },\n    { text: 'Turkmenistan', value: 'TM' },\n    { text: 'Turks and Caicos Islands', value: 'TC' },\n    { text: 'Tuvalu', value: 'TV' },\n    { text: 'Uganda', value: 'UG' },\n    { text: 'Ukraine', value: 'UA' },\n    { text: 'United Arab Emirates', value: 'AE' },\n    { text: 'United States Minor Outlying Islands', value: 'UM' },\n    { text: 'Uruguay', value: 'UY' },\n    { text: 'Uzbekistan', value: 'UZ' },\n    { text: 'Vanuatu', value: 'VU' },\n    { text: 'Venezuela', value: 'VE' },\n    { text: 'Viet Nam', value: 'VN' },\n    { text: 'Virgin Islands, British', value: 'VG' },\n    { text: 'Virgin Islands, U.S.', value: 'VI' },\n    { text: 'Wallis and Futuna', value: 'WF' },\n    { text: 'Western Sahara', value: 'EH' },\n    { text: 'Yemen', value: 'YE' },\n    { text: 'Zambia', value: 'ZM' },\n    { text: 'Zimbabwe', value: 'ZW' }\n  ];\n  const getRecordCountry = (event, { value }) => {\n    event.preventDefault();\n    setRecordCountry(value);\n  };\n  const submitTrack = () => {\n    console.log('klikd submit track');\n    // artist name validation\n    if (artist === null) {\n      props.setNotification('Artisti on pakollinen tieto', 'fail');\n    }\n    if (people === null) {\n      let length = parseInt(min) * 60 + parseInt(sec);\n      const trackToUpdate = {\n        artist_name: artist,\n        album_name: album,\n        artist_id: props.currentTrack.artist_id,\n        album_id: props.currentTrack.album_id,\n        track_id: props.currentTrack.track_id,\n        track_title: track,\n        length,\n        country,\n        record_country: recordCountry,\n        people,\n        disc_no: discNo,\n        track_no: trackNo,\n        year,\n        isrc,\n        comment\n      };\n      console.log(trackToUpdate);\n      props.updateTrack(trackToUpdate);\n      props.setNotification(\n        `Biisin ${trackToUpdate.track_title} tiedot päivitetty!`,\n        'success'\n      );\n    } else {\n      let length = parseInt(min) * 60 + parseInt(sec);\n      const trackToUpdate = {\n        artist_name: artist,\n        album_name: album,\n        artist_id: props.currentTrack.artist_id,\n        album_id: props.currentTrack.album_id,\n        track_id: props.currentTrack.track_id,\n        track_title: track,\n        length,\n        country,\n        record_country: recordCountry,\n        people: `| ${people.replace(/\\n/g, ' | ')} |`,\n        disc_no: discNo,\n        track_no: trackNo,\n        year,\n        isrc,\n        comment\n      };\n      console.log(trackToUpdate);\n      props.updateTrack(trackToUpdate);\n      props.setNotification(\n        `Biisin ${trackToUpdate.track_title} tiedot päivitetty!`,\n        'success'\n      );\n    }\n  };\n  const addToReport = () => {\n    console.log('klikd add to report', props.currentTrack.track_id);\n    const trackToSave = {\n      track_id: props.currentTrack.track_id,\n      report_id: props.report.reportDetails.id,\n      length: props.currentTrack.length,\n      sortable_rank: props.report.report.length + 1\n    };\n    console.log('track to save', trackToSave);\n    props.addTrackToReport(trackToSave);\n    props.setNotification(\n      `${props.currentTrack.track_title} lisätty raporttiin ${props.report.reportDetails.program_name}`,\n      'success'\n    );\n    setRedirect(true);\n  };\n  // save and add to report button - render if current report exists\n  const addToReportButton = () => {\n    if (props.report.reportDetails === null) {\n      return null;\n    } else {\n      return (\n        <Button onClick={addToReport} color=\"blue\">\n          Lisää raporttiin\n        </Button>\n      );\n    }\n  };\n\n  if (props.currentTrack === null) {\n    return (\n      <Dimmer>\n        <Loader>Ladataan...</Loader>\n      </Dimmer>\n    );\n  }\n  if (redirect) {\n    return <Redirect to={`/reports/${props.report.reportDetails.id}`} />;\n  }\n  return (\n    <Grid columns={2}>\n      <Grid.Column>\n        <h2>Biisin tiedot</h2>\n        <Form>\n          <Form.Field required>\n            <label>Artisti</label>\n            <Input\n              disabled\n              value={props.track.currentTrack[0].artist}\n              type=\"text\"\n              placeholder={artist}\n              onChange={e => setArtist(e.target.value)}\n            />\n            <span>\n              <Link\n                style={{\n                  cursor: 'pointer',\n                  fontSize: '0.8rem',\n                  color: 'teal',\n                  marginRight: '1rem'\n                }}\n                to={`../artist/${props.currentTrack.artist_id}`}\n              >\n                Muokkaa artistin tietoja\n              </Link>\n            </span>\n            <span>\n              <ChangeArtistModal currentTrack={props.currentTrack} />\n            </span>\n          </Form.Field>\n          <Form.Field required>\n            <label>Albumi</label>\n            <Input\n              disabled\n              value={props.track.currentTrack[0].album}\n              type=\"text\"\n              placeholder=\"Albumi...\"\n              onChange={e => setAlbum(e.target.value)}\n            />\n            <span>\n              <Link\n                style={{\n                  cursor: 'pointer',\n                  fontSize: '0.8rem',\n                  color: 'teal',\n                  marginRight: '1rem'\n                }}\n                to={`../album/${props.currentTrack.album_id}`}\n              >\n                Muokkaa albumin tietoja\n              </Link>\n            </span>\n            <span>\n              <ChangeAlbumModal currentTrack={props.currentTrack} />\n            </span>\n          </Form.Field>\n          <Form.Field required>\n            <label>Biisi</label>\n            <Input\n              defaultValue={track}\n              type=\"text\"\n              placeholder=\"Biisi...\"\n              onChange={e => setTrack(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Group widths=\"equal\">\n            <Form.Field required>\n              <label>Kesto - minuutit</label>\n              <Input\n                maxLength={4}\n                defaultValue={min}\n                type=\"number\"\n                placeholder=\"Minuuttia...\"\n                onChange={e => setMin(e.target.value)}\n              />\n            </Form.Field>\n            <Form.Field required>\n              <label>Kesto - sekunnit</label>\n              <Input\n                defaultValue={sec}\n                maxLength={2}\n                type=\"number\"\n                placeholder=\"Sekuntia...\"\n                onChange={e => setSec(e.target.value)}\n              />\n            </Form.Field>\n          </Form.Group>\n          <Form.Group widths=\"equal\">\n            <Form.Field required>\n              <label>Levy#</label>\n              <Input\n                maxLength={2}\n                defaultValue={discNo}\n                type=\"number\"\n                placeholder=\"CD1=1, CD2=2, A1=1, A2=2...\"\n                onChange={e => setDiscNo(e.target.value)}\n              />\n            </Form.Field>\n            <Form.Field required>\n              <label>Biisi#</label>\n              <Input\n                defaultValue={trackNo}\n                maxLength={2}\n                type=\"number\"\n                placeholder=\"Biisi #...\"\n                onChange={e => setTrackNo(e.target.value)}\n              />\n            </Form.Field>\n          </Form.Group>\n          <Form.Field>\n            <label>Tekijät - max 5kpl, yksi per rivi, SUKUNIMI ETUNIMI</label>\n            <TextArea\n              defaultValue={people}\n              onChange={e => setPeople(e.target.value)}\n              placeholder=\"Tekijät - max 5kpl\"\n            />\n          </Form.Field>\n          <Form.Group widths=\"equal\">\n            <Form.Field required>\n              <label>Säveltäjän kotimaa</label>\n              <Dropdown\n                placeholder=\"Suomi, muu, ei tietoa...\"\n                openOnFocus={false}\n                defaultValue={country}\n                selection\n                options={countryOptions}\n                onChange={getCountry}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Tallennusmaa</label>\n              <Dropdown\n                placeholder=\"Valitse tallennusmaa...\"\n                openOnFocus={false}\n                defaultValue={recordCountry}\n                selection\n                search\n                options={recordCountryOptions}\n                onChange={getRecordCountry}\n              />\n            </Form.Field>\n          </Form.Group>\n          <Form.Field>\n            <label>ISRC</label>\n            <Input\n              defaultValue={isrc}\n              maxLength={12}\n              type=\"text\"\n              placeholder=\"ISRC...\"\n              onChange={e => setIsrc(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field required>\n            <label>Vuosi</label>\n            <Input\n              defaultValue={year}\n              maxLength={4}\n              type=\"number\"\n              placeholder=\"Vuosi...\"\n              onChange={e => setYear(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Lisätietoa</label>\n            <TextArea\n              defaultValue={comment}\n              onChange={e => setComment(e.target.value)}\n              placeholder=\"Lisätietoa...\"\n            />\n          </Form.Field>\n          <Button\n            // disabled={\n            //   !artist ||\n            //   !album ||\n            //   !track ||\n            //   !trackNo ||\n            //   !discNo ||\n            //   !min ||\n            //   !sec ||\n            //   !label ||\n            //   !catId ||\n            //   !year\n            // }\n            color=\"green\"\n            onClick={submitTrack}\n          >\n            Tallenna muutokset\n          </Button>\n          {addToReportButton()}\n        </Form>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    track: state.track,\n    report: state.report\n  };\n};\n\nconst connectedTrackDetailsForm = connect(mapStateToProps, {\n  setNotification,\n  updateTrack,\n  addTrackToReport\n})(TrackDetailsForm);\n\nexport default connectedTrackDetailsForm;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Table } from 'semantic-ui-react';\n\nconst PlayHistoryItem = props => {\n  console.log('playhistoryitem props', props);\n  return (\n    <Table.Row>\n      <Table.Cell>{props.pgm.program_date}</Table.Cell>\n      <Table.Cell>\n        <Link to={`/reports/${props.pgm.report_id}`}>\n          {props.pgm.program_name}\n        </Link>\n      </Table.Cell>\n    </Table.Row>\n  );\n};\n\nexport default PlayHistoryItem;\n","import React from 'react';\nimport { Table, Dimmer, Loader } from 'semantic-ui-react';\nimport PlayHistoryItem from './PlayHistoryItem';\n\nconst PlayHistory = props => {\n  console.log('playhistory props', props);\n  if (props.playhistory === null) {\n    return (\n      <Dimmer>\n        <Loader>Ladataan...</Loader>\n      </Dimmer>\n    );\n  }\n  return (\n    <React.Fragment>\n      <h4>Soittohistoria</h4>\n      <Table striped>\n        <Table.Header>\n          <Table.Row>\n            <Table.Cell>Päivämäärä</Table.Cell>\n            <Table.Cell>Ohjelma</Table.Cell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {props.playhistory.map(pgm => (\n            <PlayHistoryItem key={pgm.report_id} pgm={pgm} />\n          ))}\n        </Table.Body>\n      </Table>\n    </React.Fragment>\n  );\n};\n\nexport default PlayHistory;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Dimmer, Loader } from 'semantic-ui-react';\nimport TrackDetailsForm from './TrackDetailsForm';\nimport PlayHistory from './PlayHistory';\nimport Notification from '../layout/Notification';\nimport { getOneTrack, getOneTrackHistory } from '../../actions/trackActions';\n\nconst TrackDetails = props => {\n  console.log('track detail props', props);\n  useEffect(() => {\n    props.getOneTrackHistory(props.id);\n    props.getOneTrack(props.id);\n    // eslint-disable-next-line\n  }, []);\n\n  if (props.track.currentTrack === null || props.track.playhistory === null) {\n    return (\n      <Container>\n        <Dimmer>\n          <Loader>Ladataan...</Loader>\n        </Dimmer>\n      </Container>\n    );\n  }\n\n  return (\n    <Container>\n      <Notification />\n      <TrackDetailsForm currentTrack={props.track.currentTrack[0]} />\n      <PlayHistory playhistory={props.track.playhistory} />\n    </Container>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    track: state.track\n  };\n};\n\nconst connectedTrackDetails = connect(\n  mapStateToProps,\n  { getOneTrack, getOneTrackHistory }\n)(TrackDetails);\nexport default connectedTrackDetails;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Notification from '../layout/Notification';\nimport { Form, Button } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { newLogin } from '../../actions/loginActions';\nimport { setNotification } from '../../reducers/notificationReducer';\n\nconst LoginForm = ({ newLogin }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  // handle login redux\n  const handleLogin = async event => {\n    event.preventDefault();\n    const user = {\n      username,\n      password\n    };\n    console.log(user);\n    newLogin(user);\n  };\n  return (\n    <div>\n      <h1>RADIO HELSINKI - TEOSTORAPORTOINTI</h1>\n      <h3>Kirjaudu sisään</h3>\n      <Notification />\n      <Form onSubmit={handleLogin}>\n        <Form.Field>\n          <label>Käyttäjätunnus</label>\n          <input\n            type=\"text\"\n            placeholder=\"Käyttäjätunnus...\"\n            onChange={e => setUsername(e.target.value.trim())}\n          />\n        </Form.Field>\n        <Form.Field>\n          <label>Salasana</label>\n          <input\n            type=\"password\"\n            placeholder=\"Salasana...\"\n            onChange={e => setPassword(e.target.value.trim())}\n          />\n        </Form.Field>\n        <Button color=\"green\" type=\"submit\">\n          Kirjaudu\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nLoginForm.propTypes = {\n  newLogin: PropTypes.func.isRequired\n};\n\nexport default connect(null, { newLogin, setNotification })(LoginForm);\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Button,\n  Form,\n  Header,\n  Container,\n  Dimmer,\n  Loader\n} from 'semantic-ui-react';\nimport DatePicker from 'react-datepicker';\nimport { getAllReportsByDate } from '../../actions/reportsListActions';\nimport { generateReportTransfer } from '../../actions/reportTransferActions';\nimport moment from 'moment';\nimport fi from 'date-fns/locale/fi';\n\nconst ReportTransferOptions = props => {\n  console.log('report transfer options props', props);\n  const [pickerDate, setPickerDate] = useState(new Date());\n  // initial reports list\n  useEffect(() => {\n    props.getAllReportsByDate(moment(pickerDate).format('YYYY-MM'));\n    // eslint-disable-next-line\n  }, [pickerDate]);\n  const getTransferFile = () => {\n    console.log(\n      'transferring file from ',\n      moment(pickerDate).format('YYYY-MM')\n    );\n    const params = {\n      user_id: props.login.id,\n      status: 1,\n      period: moment(pickerDate).format('YYYY-MM'),\n      filename: moment(new Date()).format('YYYYMMDDhhmmss') + '.txt'\n    };\n    console.log(params);\n    props.generateReportTransfer(params);\n  };\n\n  if (props.reportsList.reportsList === null) {\n    return (\n      <Container>\n        <Dimmer active inverted>\n          <Loader size=\"medium\">Ladataan...</Loader>\n        </Dimmer>\n      </Container>\n    );\n  }\n\n  if (props.reportsList.loading === true) {\n    return (\n      <Container>\n        <Dimmer active inverted>\n          <Loader size=\"medium\">Ladataan...</Loader>\n        </Dimmer>\n      </Container>\n    );\n  }\n\n  return (\n    <div>\n      <Header>Hae siirtotiedosto ajalta:</Header>\n      <Form>\n        <Form.Field>\n          <DatePicker\n            selected={pickerDate}\n            dateFormat=\"MMMM yyyy\"\n            onChange={date => setPickerDate(date)}\n            showMonthYearPicker\n            locale={fi}\n          />\n        </Form.Field>\n        <Form.Field>\n          {/* löytyi {props.reportsList.reportsList.length} raporttia */}\n        </Form.Field>\n        <Form.Field>\n          <Button color=\"blue\" onClick={getTransferFile}>\n            HAE\n          </Button>\n        </Form.Field>\n      </Form>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('report transfer options state to props', state);\n  return {\n    reportsList: state.reportsList,\n    notification: state.notification,\n    login: state.login\n  };\n};\n\nconst connectedReportTransferOptions = connect(mapStateToProps, {\n  getAllReportsByDate,\n  generateReportTransfer\n})(ReportTransferOptions);\n\nexport default connectedReportTransferOptions;\n","import {\n  GET_ALL_REPORT_TRANSFERS,\n  GENERATE_REPORT_TRANSFER,\n  SET_LOADING\n} from './types';\nimport reportService from '../services/reports';\n\n// get a list of reports by date\nexport const getAllTransfers = () => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const reports = await reportService.getAllTransfers();\n    // console.log('reportreducer', report);\n    dispatch({\n      type: GET_ALL_REPORT_TRANSFERS,\n      data: reports\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const generateReportTransfer = params => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const transferredReport = await reportService.generateReportDownload(\n      params\n    );\n    console.log(transferredReport);\n    const reports = await reportService.getAllTransfers();\n    dispatch({\n      type: GET_ALL_REPORT_TRANSFERS,\n      data: reports\n    });\n    dispatch({\n      type: GENERATE_REPORT_TRANSFER,\n      data: transferredReport\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Table } from 'semantic-ui-react';\nimport { downloadReport } from '../../services/reports';\nimport moment from 'moment';\n\nconst ReportTransferListItem = props => {\n  const downloadTransfer = filename => {\n    downloadReport(filename);\n  };\n  return (\n    <Table.Row>\n      <Table.Cell>{props.item.created_at}</Table.Cell>\n      <Table.Cell>\n        {props.item.first_name} {props.item.last_name}\n      </Table.Cell>\n      <Table.Cell>{moment(props.item.period).format('MM/YYYY')}</Table.Cell>\n      <Table.Cell>\n        <Link to=\"#\" onClick={() => downloadTransfer(props.item.filename)}>\n          {props.item.filename}\n        </Link>\n      </Table.Cell>\n    </Table.Row>\n  );\n};\n\nconst connectedReportTransferListItem = connect(null, { downloadReport })(\n  ReportTransferListItem\n);\n\nexport default connectedReportTransferListItem;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport ReportTransferOptions from './ReportTransferOptions';\nimport ReportTransferListItem from './ReportTransferListItem';\nimport { Container, Table, Dimmer, Loader } from 'semantic-ui-react';\nimport { getAllTransfers } from '../../actions/reportTransferActions';\n\nconst ReportTransferList = props => {\n  console.log('report transfer list props', props);\n  useEffect(() => {\n    props.getAllTransfers();\n    // eslint-disable-next-line\n  }, [props.reportsList.lastReport]);\n\n  if (props.reportsList.reportTransferList === null) {\n    return (\n      <Container>\n        <Dimmer active inverted>\n          <Loader size=\"medium\">Ladataan...</Loader>\n        </Dimmer>\n      </Container>\n    );\n  }\n  if (props.login.level === 3) {\n    return (\n      <Container>\n        <h1>Siirtotiedostot</h1>\n        <ReportTransferOptions />\n        <Table>\n          <Table.Header>\n            <Table.Row>\n              <Table.Cell>Luontipäivämäärä</Table.Cell>\n              <Table.Cell>Käyttäjä</Table.Cell>\n              <Table.Cell>Raportin ajankohta</Table.Cell>\n              <Table.Cell>Siirtotiedosto</Table.Cell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {props.reportsList.reportTransferList.map(item => (\n              <ReportTransferListItem key={item.id} item={item} />\n            ))}\n          </Table.Body>\n        </Table>\n      </Container>\n    );\n  } else {\n    return null;\n  }\n};\n\nconst mapStateToProps = state => {\n  console.log('report list state to props', state);\n  return {\n    report: state.report,\n    reportsList: state.reportsList,\n    notification: state.notification,\n    login: state.login\n  };\n};\n\nconst mapDispatchToProps = {\n  getAllTransfers\n};\n\nconst connectedReportTransferList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ReportTransferList);\n\nexport default connectedReportTransferList;\n","import {\n  AUTOCOMPLETE_RESULTS,\n  SET_SEARCH_LOADING,\n  TOP_100,\n  GET_DISCOGS_CATID,\n  CLEAR_DISCOGS_CATID,\n  ADVANCED_RESULTS,\n  SORT_ADVANCED_RESULTS,\n  GET_CHANGE_ALBUM_OPTIONS,\n  GET_CHANGE_ARTIST_OPTIONS,\n  RESET_CHANGE_ARTIST_OPTIONS,\n  RESET_CHANGE_ALBUM_OPTIONS\n} from './types';\nimport searchService from '../services/search';\n\nexport const getAutocompleteResults = query => async dispatch => {\n  try {\n    dispatch({\n      type: SET_SEARCH_LOADING\n    });\n    const results = await searchService.getTracksForSearch(query);\n    console.log(results);\n    dispatch({\n      type: AUTOCOMPLETE_RESULTS,\n      data: results\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const advancedSearch = searchParams => async dispatch => {\n  try {\n    dispatch({\n      type: SET_SEARCH_LOADING\n    });\n    const results = await searchService.advancedSearch(searchParams);\n    console.log(results);\n    dispatch({\n      type: ADVANCED_RESULTS,\n      data: results\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const sortAdvancedResults = sortBy => async dispatch => {\n  try {\n    console.log('sort advanced search results by', sortBy);\n    dispatch({\n      type: SORT_ADVANCED_RESULTS,\n      data: sortBy\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getCatIdFromDiscogs = query => async dispatch => {\n  try {\n    let catId;\n    const results = await searchService.getCatIdFromDiscogs(query);\n    console.log(results.results);\n    if (results.results === undefined) {\n      catId = 'EI ILMOITETTU';\n    } else if (results.results[0].catno !== 'none') {\n      catId = results.results[0].catno;\n    } else if (results.results[1].catno !== 'none') {\n      catId = results.results[1].catno;\n    } else if (results.results[2].catno !== 'none') {\n      catId = results.results[2].catno;\n    } else if (results.results[3].catno !== 'none') {\n      catId = results.results[3].catno;\n    } else if (results.results[4].catno !== 'none') {\n      catId = results.results[4].catno;\n    } else {\n      catId = 'EI ILMOITETTU';\n    }\n    console.log(catId);\n    dispatch({\n      type: GET_DISCOGS_CATID,\n      data: catId\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const clearDiscogsCatId = () => async dispatch => {\n  try {\n    dispatch({\n      type: CLEAR_DISCOGS_CATID\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getTop100 = query => async dispatch => {\n  try {\n    dispatch({\n      type: SET_SEARCH_LOADING\n    });\n    const results = await searchService.getTop100(query);\n    dispatch({\n      type: TOP_100,\n      data: results,\n      query\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getChangeAlbumOptions = query => async dispatch => {\n  try {\n    dispatch({\n      type: RESET_CHANGE_ALBUM_OPTIONS\n    });\n    dispatch({\n      type: SET_SEARCH_LOADING\n    });\n    const results = await searchService.changeAlbumOptions(query);\n    dispatch({\n      type: GET_CHANGE_ALBUM_OPTIONS,\n      data: results\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getChangeArtistOptions = query => async dispatch => {\n  try {\n    dispatch({\n      type: RESET_CHANGE_ARTIST_OPTIONS\n    });\n    dispatch({\n      type: SET_SEARCH_LOADING\n    });\n    const results = await searchService.changeArtistOptions(query);\n    dispatch({\n      type: GET_CHANGE_ARTIST_OPTIONS,\n      data: results\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  getCatIdFromDiscogs,\n  clearDiscogsCatId\n} from '../../actions/searchActions';\nimport { setNotification } from '../../reducers/notificationReducer';\nimport { addTrackToDb, addNewTrack } from '../../actions/trackActions';\nimport {\n  Modal,\n  Header,\n  Form,\n  Button,\n  Input,\n  TextArea,\n  Dropdown\n} from 'semantic-ui-react';\n\nconst AddTrackBtn = props => {\n  console.log('search form add track button', props);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [artist, setArtist] = useState('');\n  const [album, setAlbum] = useState('');\n  const [track, setTrack] = useState('');\n  const [min, setMin] = useState('');\n  const [sec, setSec] = useState('');\n  const [country, setCountry] = useState('');\n  const [recordCountry, setRecordCountry] = useState('');\n  const [people, setPeople] = useState('');\n  const [discNo, setDiscNo] = useState('');\n  const [trackNo, setTrackNo] = useState('');\n  const [year, setYear] = useState('');\n  const [label, setLabel] = useState('');\n  const [catId, setCatId] = useState('');\n  const [isrc, setIsrc] = useState('');\n  const [comment, setComment] = useState('');\n  useEffect(() => {\n    if (props.search.discogsCatId === null) {\n      setCatId('');\n    } else {\n      setCatId(props.search.discogsCatId);\n    }\n  }, [props.search.discogsCatId]);\n\n  const submitTrack = () => {\n    console.log('klikd submit track');\n    // artist name validation\n    if (artist === null) {\n      props.setNotification('Artisti on pakollinen tieto', 'fail');\n    }\n    let length = parseInt(min) * 60 + parseInt(sec);\n    if (people === null) {\n      const trackToAdd = {\n        artist_name: artist,\n        album_name: album,\n        track_title: track,\n        length,\n        country,\n        record_country: recordCountry,\n        people,\n        disc_no: discNo,\n        track_no: trackNo,\n        year,\n        label,\n        cat_id: catId,\n        isrc,\n        comment,\n        user_id: props.login.id\n      };\n      console.log(trackToAdd);\n      props.addTrackToDb(trackToAdd);\n      props.setNotification(`${trackToAdd.track_title} lisätty!`, 'success');\n      handleClose();\n    } else {\n      const trackToAdd = {\n        artist_name: artist,\n        album_name: album,\n        track_title: track,\n        length,\n        country,\n        record_country: recordCountry,\n        people: `| ${people.replace(/\\n/g, ' | ')} |`,\n        disc_no: discNo,\n        track_no: trackNo,\n        year,\n        label,\n        cat_id: catId,\n        isrc,\n        comment,\n        user_id: props.login.id\n      };\n      console.log(trackToAdd);\n      props.addTrackToDb(trackToAdd);\n      props.setNotification(`${trackToAdd.track_title} lisätty!`, 'success');\n      handleClose();\n    }\n  };\n\n  const saveAndAddToReport = () => {\n    console.log('klikd submit track');\n    // artist name validation\n    if (artist === null) {\n      props.setNotification('Artisti on pakollinen tieto', 'fail');\n    }\n    let length = parseInt(min) * 60 + parseInt(sec);\n    if (people === null) {\n      const trackToAdd = {\n        artist_name: artist,\n        album_name: album,\n        track_title: track,\n        length,\n        country,\n        record_country: recordCountry,\n        people,\n        disc_no: discNo,\n        track_no: trackNo,\n        year,\n        label,\n        cat_id: catId,\n        isrc,\n        comment,\n        report_id: props.report.reportDetails.id,\n        user_id: props.login.id,\n        sortable_rank: props.report.report.length + 1\n      };\n      console.log(trackToAdd);\n      props.addNewTrack(trackToAdd);\n      props.setNotification(\n        `${trackToAdd.track_title} lisätty ja tallennettu raporttiin ${props.report.reportDetails.program_name}!`,\n        'success'\n      );\n      handleClose();\n    } else {\n      const trackToAdd = {\n        artist_name: artist,\n        album_name: album,\n        track_title: track,\n        length,\n        country,\n        record_country: recordCountry,\n        people: `| ${people.replace(/\\n/g, ' | ')} |`,\n        disc_no: discNo,\n        track_no: trackNo,\n        year,\n        label,\n        cat_id: catId,\n        isrc,\n        comment,\n        report_id: props.report.reportDetails.id,\n        user_id: props.login.id,\n        sortable_rank: props.report.report.length + 1\n      };\n      console.log(trackToAdd);\n      props.addNewTrack(trackToAdd);\n      props.setNotification(\n        `${trackToAdd.track_title} lisätty ja tallennettu raporttiin ${props.report.reportDetails.program_name}!`,\n        'success'\n      );\n      handleClose();\n    }\n  };\n\n  // save and add to report button - render if current report exists\n  const saveAndAddToReportButton = () => {\n    if (props.report.reportDetails === null) {\n      return null;\n    } else {\n      return (\n        <Button\n          disabled={\n            !artist ||\n            !album ||\n            !track ||\n            !trackNo ||\n            !discNo ||\n            !min ||\n            !sec ||\n            !label ||\n            !catId ||\n            !year\n          }\n          onClick={saveAndAddToReport}\n          color=\"green\"\n        >\n          Tallenna ja lisää raporttiin\n        </Button>\n      );\n    }\n  };\n\n  const countryOptions = [\n    {\n      key: 1,\n      text: 'Suomi',\n      value: 1\n    },\n    {\n      key: 2,\n      text: 'Muu',\n      value: 2\n    },\n    {\n      key: 0,\n      text: 'Ei tietoa',\n      value: null\n    }\n  ];\n  const getCountry = (event, { value }) => {\n    event.preventDefault();\n    setCountry(value);\n  };\n  const recordCountryOptions = [\n    { text: 'Finland', value: 'FI' },\n    { text: 'United Kingdom', value: 'GB' },\n    { text: 'United States', value: 'US' },\n    { text: 'Afghanistan', value: 'AF' },\n    { text: 'Åland Islands', value: 'AX' },\n    { text: 'Albania', value: 'AL' },\n    { text: 'Algeria', value: 'DZ' },\n    { text: 'American Samoa', value: 'AS' },\n    { text: 'AndorrA', value: 'AD' },\n    { text: 'Angola', value: 'AO' },\n    { text: 'Anguilla', value: 'AI' },\n    { text: 'Antarctica', value: 'AQ' },\n    { text: 'Antigua and Barbuda', value: 'AG' },\n    { text: 'Argentina', value: 'AR' },\n    { text: 'Armenia', value: 'AM' },\n    { text: 'Aruba', value: 'AW' },\n    { text: 'Australia', value: 'AU' },\n    { text: 'Austria', value: 'AT' },\n    { text: 'Azerbaijan', value: 'AZ' },\n    { text: 'Bahamas', value: 'BS' },\n    { text: 'Bahrain', value: 'BH' },\n    { text: 'Bangladesh', value: 'BD' },\n    { text: 'Barbados', value: 'BB' },\n    { text: 'Belarus', value: 'BY' },\n    { text: 'Belgium', value: 'BE' },\n    { text: 'Belize', value: 'BZ' },\n    { text: 'Benin', value: 'BJ' },\n    { text: 'Bermuda', value: 'BM' },\n    { text: 'Bhutan', value: 'BT' },\n    { text: 'Bolivia', value: 'BO' },\n    { text: 'Bosnia and Herzegovina', value: 'BA' },\n    { text: 'Botswana', value: 'BW' },\n    { text: 'Bouvet Island', value: 'BV' },\n    { text: 'Brazil', value: 'BR' },\n    { text: 'British Indian Ocean Territory', value: 'IO' },\n    { text: 'Brunei Darussalam', value: 'BN' },\n    { text: 'Bulgaria', value: 'BG' },\n    { text: 'Burkina Faso', value: 'BF' },\n    { text: 'Burundi', value: 'BI' },\n    { text: 'Cambodia', value: 'KH' },\n    { text: 'Cameroon', value: 'CM' },\n    { text: 'Canada', value: 'CA' },\n    { text: 'Cape Verde', value: 'CV' },\n    { text: 'Cayman Islands', value: 'KY' },\n    { text: 'Central African Republic', value: 'CF' },\n    { text: 'Chad', value: 'TD' },\n    { text: 'Chile', value: 'CL' },\n    { text: 'China', value: 'CN' },\n    { text: 'Christmas Island', value: 'CX' },\n    { text: 'Cocos (Keeling) Islands', value: 'CC' },\n    { text: 'Colombia', value: 'CO' },\n    { text: 'Comoros', value: 'KM' },\n    { text: 'Congo', value: 'CG' },\n    { text: 'Congo, The Democratic Republic of the', value: 'CD' },\n    { text: 'Cook Islands', value: 'CK' },\n    { text: 'Costa Rica', value: 'CR' },\n    { text: \"Cote D'Ivoire\", value: 'CI' },\n    { text: 'Croatia', value: 'HR' },\n    { text: 'Cuba', value: 'CU' },\n    { text: 'Cyprus', value: 'CY' },\n    { text: 'Czech Republic', value: 'CZ' },\n    { text: 'Denmark', value: 'DK' },\n    { text: 'Djibouti', value: 'DJ' },\n    { text: 'Dominica', value: 'DM' },\n    { text: 'Dominican Republic', value: 'DO' },\n    { text: 'Ecuador', value: 'EC' },\n    { text: 'Egypt', value: 'EG' },\n    { text: 'El Salvador', value: 'SV' },\n    { text: 'Equatorial Guinea', value: 'GQ' },\n    { text: 'Eritrea', value: 'ER' },\n    { text: 'Estonia', value: 'EE' },\n    { text: 'Ethiopia', value: 'ET' },\n    { text: 'Falkland Islands (Malvinas)', value: 'FK' },\n    { text: 'Faroe Islands', value: 'FO' },\n    { text: 'Fiji', value: 'FJ' },\n    { text: 'France', value: 'FR' },\n    { text: 'French Guiana', value: 'GF' },\n    { text: 'French Polynesia', value: 'PF' },\n    { text: 'French Southern Territories', value: 'TF' },\n    { text: 'Gabon', value: 'GA' },\n    { text: 'Gambia', value: 'GM' },\n    { text: 'Georgia', value: 'GE' },\n    { text: 'Germany', value: 'DE' },\n    { text: 'Ghana', value: 'GH' },\n    { text: 'Gibraltar', value: 'GI' },\n    { text: 'Greece', value: 'GR' },\n    { text: 'Greenland', value: 'GL' },\n    { text: 'Grenada', value: 'GD' },\n    { text: 'Guadeloupe', value: 'GP' },\n    { text: 'Guam', value: 'GU' },\n    { text: 'Guatemala', value: 'GT' },\n    { text: 'Guernsey', value: 'GG' },\n    { text: 'Guinea', value: 'GN' },\n    { text: 'Guinea-Bissau', value: 'GW' },\n    { text: 'Guyana', value: 'GY' },\n    { text: 'Haiti', value: 'HT' },\n    { text: 'Heard Island and Mcdonald Islands', value: 'HM' },\n    { text: 'Holy See (Vatican City State)', value: 'VA' },\n    { text: 'Honduras', value: 'HN' },\n    { text: 'Hong Kong', value: 'HK' },\n    { text: 'Hungary', value: 'HU' },\n    { text: 'Iceland', value: 'IS' },\n    { text: 'India', value: 'IN' },\n    { text: 'Indonesia', value: 'ID' },\n    { text: 'Iran, Islamic Republic Of', value: 'IR' },\n    { text: 'Iraq', value: 'IQ' },\n    { text: 'Ireland', value: 'IE' },\n    { text: 'Isle of Man', value: 'IM' },\n    { text: 'Israel', value: 'IL' },\n    { text: 'Italy', value: 'IT' },\n    { text: 'Jamaica', value: 'JM' },\n    { text: 'Japan', value: 'JP' },\n    { text: 'Jersey', value: 'JE' },\n    { text: 'Jordan', value: 'JO' },\n    { text: 'Kazakhstan', value: 'KZ' },\n    { text: 'Kenya', value: 'KE' },\n    { text: 'Kiribati', value: 'KI' },\n    { text: \"Korea, Democratic People's Republic of\", value: 'KP' },\n    { text: 'Korea, Republic of', value: 'KR' },\n    { text: 'Kuwait', value: 'KW' },\n    { text: 'Kyrgyzstan', value: 'KG' },\n    { text: \"Lao People's Democratic Republic\", value: 'LA' },\n    { text: 'Latvia', value: 'LV' },\n    { text: 'Lebanon', value: 'LB' },\n    { text: 'Lesotho', value: 'LS' },\n    { text: 'Liberia', value: 'LR' },\n    { text: 'Libyan Arab Jamahiriya', value: 'LY' },\n    { text: 'Liechtenstein', value: 'LI' },\n    { text: 'Lithuania', value: 'LT' },\n    { text: 'Luxembourg', value: 'LU' },\n    { text: 'Macao', value: 'MO' },\n    { text: 'Macedonia, The Former Yugoslav Republic of', value: 'MK' },\n    { text: 'Madagascar', value: 'MG' },\n    { text: 'Malawi', value: 'MW' },\n    { text: 'Malaysia', value: 'MY' },\n    { text: 'Maldives', value: 'MV' },\n    { text: 'Mali', value: 'ML' },\n    { text: 'Malta', value: 'MT' },\n    { text: 'Marshall Islands', value: 'MH' },\n    { text: 'Martinique', value: 'MQ' },\n    { text: 'Mauritania', value: 'MR' },\n    { text: 'Mauritius', value: 'MU' },\n    { text: 'Mayotte', value: 'YT' },\n    { text: 'Mexico', value: 'MX' },\n    { text: 'Micronesia, Federated States of', value: 'FM' },\n    { text: 'Moldova, Republic of', value: 'MD' },\n    { text: 'Monaco', value: 'MC' },\n    { text: 'Mongolia', value: 'MN' },\n    { text: 'Montenegro', value: 'ME' },\n    { text: 'Montserrat', value: 'MS' },\n    { text: 'Morocco', value: 'MA' },\n    { text: 'Mozambique', value: 'MZ' },\n    { text: 'Myanmar', value: 'MM' },\n    { text: 'Namibia', value: 'NA' },\n    { text: 'Nauru', value: 'NR' },\n    { text: 'Nepal', value: 'NP' },\n    { text: 'Netherlands', value: 'NL' },\n    { text: 'Netherlands Antilles', value: 'AN' },\n    { text: 'New Caledonia', value: 'NC' },\n    { text: 'New Zealand', value: 'NZ' },\n    { text: 'Nicaragua', value: 'NI' },\n    { text: 'Niger', value: 'NE' },\n    { text: 'Nigeria', value: 'NG' },\n    { text: 'Niue', value: 'NU' },\n    { text: 'Norfolk Island', value: 'NF' },\n    { text: 'Northern Mariana Islands', value: 'MP' },\n    { text: 'Norway', value: 'NO' },\n    { text: 'Oman', value: 'OM' },\n    { text: 'Pakistan', value: 'PK' },\n    { text: 'Palau', value: 'PW' },\n    { text: 'Palestinian Territory, Occupied', value: 'PS' },\n    { text: 'Panama', value: 'PA' },\n    { text: 'Papua New Guinea', value: 'PG' },\n    { text: 'Paraguay', value: 'PY' },\n    { text: 'Peru', value: 'PE' },\n    { text: 'Philippines', value: 'PH' },\n    { text: 'Poland', value: 'PL' },\n    { text: 'Portugal', value: 'PT' },\n    { text: 'Puerto Rico', value: 'PR' },\n    { text: 'Qatar', value: 'QA' },\n    { text: 'Romania', value: 'RO' },\n    { text: 'Russian Federation', value: 'RU' },\n    { text: 'RWANDA', value: 'RW' },\n    { text: 'Saint Helena', value: 'SH' },\n    { text: 'Saint Kitts and Nevis', value: 'KN' },\n    { text: 'Saint Lucia', value: 'LC' },\n    { text: 'Saint Pierre and Miquelon', value: 'PM' },\n    { text: 'Saint Vincent and the Grenadines', value: 'VC' },\n    { text: 'Samoa', value: 'WS' },\n    { text: 'San Marino', value: 'SM' },\n    { text: 'Sao Tome and Principe', value: 'ST' },\n    { text: 'Saudi Arabia', value: 'SA' },\n    { text: 'Senegal', value: 'SN' },\n    { text: 'Serbia', value: 'RS' },\n    { text: 'Seychelles', value: 'SC' },\n    { text: 'Sierra Leone', value: 'SL' },\n    { text: 'Singapore', value: 'SG' },\n    { text: 'Slovakia', value: 'SK' },\n    { text: 'Slovenia', value: 'SI' },\n    { text: 'Solomon Islands', value: 'SB' },\n    { text: 'Somalia', value: 'SO' },\n    { text: 'South Africa', value: 'ZA' },\n    { text: 'South Georgia and the South Sandwich Islands', value: 'GS' },\n    { text: 'Spain', value: 'ES' },\n    { text: 'Sri Lanka', value: 'LK' },\n    { text: 'Sudan', value: 'SD' },\n    { text: 'Suriname', value: 'SR' },\n    { text: 'Svalbard and Jan Mayen', value: 'SJ' },\n    { text: 'Swaziland', value: 'SZ' },\n    { text: 'Sweden', value: 'SE' },\n    { text: 'Switzerland', value: 'CH' },\n    { text: 'Syrian Arab Republic', value: 'SY' },\n    { text: 'Taiwan, Province of China', value: 'TW' },\n    { text: 'Tajikistan', value: 'TJ' },\n    { text: 'Tanzania, United Republic of', value: 'TZ' },\n    { text: 'Thailand', value: 'TH' },\n    { text: 'Timor-Leste', value: 'TL' },\n    { text: 'Togo', value: 'TG' },\n    { text: 'Tokelau', value: 'TK' },\n    { text: 'Tonga', value: 'TO' },\n    { text: 'Trinidad and Tobago', value: 'TT' },\n    { text: 'Tunisia', value: 'TN' },\n    { text: 'Turkey', value: 'TR' },\n    { text: 'Turkmenistan', value: 'TM' },\n    { text: 'Turks and Caicos Islands', value: 'TC' },\n    { text: 'Tuvalu', value: 'TV' },\n    { text: 'Uganda', value: 'UG' },\n    { text: 'Ukraine', value: 'UA' },\n    { text: 'United Arab Emirates', value: 'AE' },\n    { text: 'United States Minor Outlying Islands', value: 'UM' },\n    { text: 'Uruguay', value: 'UY' },\n    { text: 'Uzbekistan', value: 'UZ' },\n    { text: 'Vanuatu', value: 'VU' },\n    { text: 'Venezuela', value: 'VE' },\n    { text: 'Viet Nam', value: 'VN' },\n    { text: 'Virgin Islands, British', value: 'VG' },\n    { text: 'Virgin Islands, U.S.', value: 'VI' },\n    { text: 'Wallis and Futuna', value: 'WF' },\n    { text: 'Western Sahara', value: 'EH' },\n    { text: 'Yemen', value: 'YE' },\n    { text: 'Zambia', value: 'ZM' },\n    { text: 'Zimbabwe', value: 'ZW' }\n  ];\n  const getRecordCountry = (event, { value }) => {\n    event.preventDefault();\n    setRecordCountry(value);\n  };\n  const handleOpen = () => {\n    setModalOpen(true);\n  };\n  const handleClose = () => {\n    setModalOpen(false);\n  };\n  const getDiscogs = () => {\n    const query = {\n      artist,\n      album\n    };\n    props.getCatIdFromDiscogs(query);\n  };\n  return (\n    <Modal\n      open={modalOpen}\n      closeIcon\n      trigger={\n        <Button color=\"blue\" onClick={handleOpen}>\n          Lisää uusi biisi\n        </Button>\n      }\n      onClose={handleClose}\n    >\n      <Header content=\"Lisää uusi biisi\" />\n      <Modal.Content>\n        <Form onSubmit={submitTrack}>\n          <Form.Field required>\n            <label>Artisti </label>\n            <Input\n              value={artist}\n              type=\"text\"\n              placeholder=\"Artisti...\"\n              onChange={e => setArtist(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field required>\n            <label>Albumi</label>\n            <Input\n              value={album}\n              type=\"text\"\n              placeholder=\"Albumi...\"\n              onChange={e => setAlbum(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field required>\n            <label>Biisi</label>\n            <Input\n              value={track}\n              type=\"text\"\n              placeholder=\"Biisi...\"\n              onChange={e => setTrack(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Group widths=\"equal\">\n            <Form.Field required>\n              <label>Kesto - minuutit</label>\n              <Input\n                maxLength={4}\n                value={min}\n                type=\"number\"\n                placeholder=\"Minuuttia...\"\n                onChange={e => setMin(e.target.value)}\n              />\n            </Form.Field>\n            <Form.Field required>\n              <label>Kesto - sekunnit</label>\n              <Input\n                value={sec}\n                maxLength={2}\n                type=\"number\"\n                placeholder=\"Sekuntia...\"\n                onChange={e => setSec(e.target.value)}\n              />\n            </Form.Field>\n          </Form.Group>\n          <Form.Group widths=\"equal\">\n            <Form.Field required>\n              <label>Levy#</label>\n              <Input\n                maxLength={2}\n                value={discNo}\n                type=\"number\"\n                placeholder=\"CD1=1, CD2=2, A1=1, A2=2...\"\n                onChange={e => setDiscNo(e.target.value)}\n              />\n            </Form.Field>\n            <Form.Field required>\n              <label>Biisi#</label>\n              <Input\n                value={trackNo}\n                maxLength={2}\n                type=\"number\"\n                placeholder=\"Biisi #...\"\n                onChange={e => setTrackNo(e.target.value)}\n              />\n            </Form.Field>\n          </Form.Group>\n          <Form.Field>\n            <label>Tekijät - max 5kpl, yksi per rivi, SUKUNIMI ETUNIMI</label>\n            <TextArea\n              onChange={e => setPeople(e.target.value)}\n              placeholder=\"Tekijät - max 5kpl\"\n            />\n          </Form.Field>\n          <Form.Group widths=\"equal\">\n            <Form.Field>\n              <label>\n                Säveltäjän kotimaa\n                <span style={{ color: 'red' }}>\n                  <strong>*</strong>\n                </span>\n              </label>\n              <Dropdown\n                placeholder=\"Suomi, muu, ei tietoa...\"\n                openOnFocus={false}\n                value={country}\n                selection\n                options={countryOptions}\n                onChange={getCountry}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Tallennusmaa</label>\n              <Dropdown\n                placeholder=\"Valitse tallennusmaa...\"\n                openOnFocus={false}\n                value={recordCountry}\n                selection\n                search\n                options={recordCountryOptions}\n                onChange={getRecordCountry}\n              />\n            </Form.Field>\n          </Form.Group>\n          <Form.Field>\n            <label>\n              Levymerkki\n              <span style={{ color: 'red' }}>\n                <strong>*</strong>\n              </span>\n            </label>\n            <Input\n              value={label}\n              type=\"text\"\n              placeholder=\"Levymerkki...\"\n              onChange={e => setLabel(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field required>\n            <label style={{ display: 'inline' }}>Levykoodi</label>\n            <Button\n              onClick={e => getDiscogs(e.preventDefault())}\n              size=\"mini\"\n              floated=\"right\"\n              style={{ marginBottom: '0.3rem' }}\n            >\n              Hae levykoodi Discogsista\n            </Button>\n            <Input\n              value={catId}\n              type=\"text\"\n              placeholder=\"Levykoodi...\"\n              onChange={e => setCatId(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>ISRC</label>\n            <Input\n              value={isrc}\n              maxLength={12}\n              type=\"text\"\n              placeholder=\"ISRC...\"\n              onChange={e => setIsrc(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>\n              Vuosi\n              <span style={{ color: 'red' }}>\n                <strong>*</strong>\n              </span>\n            </label>\n            <Input\n              value={year}\n              maxLength={4}\n              type=\"number\"\n              placeholder=\"Vuosi...\"\n              onChange={e => setYear(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Lisätietoa</label>\n            <TextArea\n              onChange={e => setComment(e.target.value)}\n              placeholder=\"Lisätietoa...\"\n            />\n          </Form.Field>\n          <Button\n            disabled={\n              !artist ||\n              !album ||\n              !track ||\n              !trackNo ||\n              !discNo ||\n              !min ||\n              !sec ||\n              !label ||\n              !catId ||\n              !year\n            }\n            color=\"blue\"\n            type=\"submit\"\n          >\n            Tallenna\n          </Button>\n          {saveAndAddToReportButton()}\n        </Form>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    report: state.report,\n    reportsList: state.reportsList,\n    login: state.login,\n    search: state.search\n  };\n};\nconst connectedAddTrackBtn = connect(mapStateToProps, {\n  setNotification,\n  addTrackToDb,\n  addNewTrack,\n  getCatIdFromDiscogs,\n  clearDiscogsCatId\n})(AddTrackBtn);\n\nexport default connectedAddTrackBtn;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Input, Button, Dropdown, Grid } from 'semantic-ui-react';\nimport AddTrackBtn from './AddTrackBtn';\nimport { advancedSearch } from '../../actions/searchActions';\n\nconst SearchForm = props => {\n  const [searchString, setSearchString] = useState('');\n  const [searchTarget, setSearchTarget] = useState('ar');\n\n  const searchTargetOptions = [\n    {\n      key: 1,\n      text: 'Biisi',\n      value: 'tr'\n    },\n    {\n      key: 2,\n      text: 'Artisti',\n      value: 'ar'\n    },\n    {\n      key: 3,\n      text: 'Album',\n      value: 'al'\n    }\n  ];\n  const getSearchTarget = (e, { value }) => {\n    e.preventDefault();\n    setSearchTarget(value);\n  };\n\n  const handleSearch = () => {\n    const searchParams = {\n      query: searchString,\n      kind: searchTarget\n    };\n    console.log(searchParams);\n    props.advancedSearch(searchParams);\n  };\n  return (\n    <Grid columns={2}>\n      <Grid.Column>\n        <Form>\n          <Form.Field>\n            <label>Hakusana</label>\n            <Input\n              placeholder=\"Hakusana...\"\n              type=\"text\"\n              value={searchString}\n              onChange={e => setSearchString(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Hae Biisin / Artistin / Albumin nimellä:</label>\n            <Dropdown\n              openOnFocus\n              selection\n              defaultValue={searchTarget}\n              options={searchTargetOptions}\n              onChange={getSearchTarget}\n            />{' '}\n          </Form.Field>\n          <Button color=\"blue\" onClick={handleSearch}>\n            HAE\n          </Button>\n        </Form>\n      </Grid.Column>\n      <Grid.Column>\n        <span style={{ float: 'right' }}>\n          <AddTrackBtn />\n        </span>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nconst connectedSearchForm = connect(null, { advancedSearch })(SearchForm);\n\nexport default connectedSearchForm;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, Header, Form, Button, Dropdown } from 'semantic-ui-react';\nimport {\n  mergeArtistFunction,\n  updateArtistState\n} from '../../actions/artistActions';\nimport { setNotification } from '../../reducers/notificationReducer';\nimport ModalNotification from '../layout/ModalNotification';\nconst MergeArtists = props => {\n  // console.log('merge album tracks modal props', props);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [artistToMerge, setArtistToMerge] = useState(null);\n  const handleOpen = () => {\n    setModalOpen(true);\n  };\n  const handleClose = () => {\n    setModalOpen(false);\n  };\n  if (!modalOpen) {\n    return (\n      <button className=\"link-btn\" onClick={handleOpen}>\n        {props.artist_id}\n      </button>\n    );\n  } else {\n    const onSubmit = () => {\n      const mergeInto = props.artist_id;\n      console.log('merging', artistToMerge, 'into', mergeInto);\n      const mergeParams = {\n        type: 'artist',\n        mergeTo: props.artist_id,\n        merge: artistToMerge,\n        newName: props.artist_name\n      };\n      if (mergeParams.merge === mergeParams.mergeTo) {\n        props.setNotification('Tarkista artisti', 'fail');\n      } else {\n        props.mergeArtistFunction(mergeParams);\n        props.updateArtistState(mergeParams);\n        props.setNotification('Tiedot päivitetty!', 'success');\n        handleClose();\n        console.log(mergeParams);\n      }\n    };\n\n    const mergeOptions = Array.from(\n      new Set(props.search.advancedResults.map(r => r.artist_id))\n    ).map(artist_id => {\n      return {\n        key: artist_id,\n        text: `${artist_id}: ${\n          props.search.advancedResults.find(r => r.artist_id === artist_id)\n            .artist_name\n        }`,\n        value: artist_id\n      };\n    });\n    const getArtistToMerge = (e, { value }) => {\n      e.preventDefault();\n      setArtistToMerge(value);\n    };\n    return (\n      <Modal\n        open={modalOpen}\n        closeIcon\n        onClose={handleClose}\n        trigger={\n          <button className=\"link-btn\" onClick={handleOpen}>\n            {props.artist_id}\n          </button>\n        }\n      >\n        <Header>\n          Yhdistä artistiin {props.artist_id} - {props.artist_name} tiedot\n        </Header>\n        <Modal.Content>\n          <ModalNotification />\n          <Form onSubmit={onSubmit}>\n            <Form.Field>\n              <Dropdown\n                onChange={getArtistToMerge}\n                selection\n                search\n                options={mergeOptions}\n              />\n            </Form.Field>\n            <Form.Field>\n              <Button type=\"submit\">Yhdistä</Button>\n            </Form.Field>\n          </Form>\n        </Modal.Content>\n      </Modal>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  // console.log('MergeArtists state', state);\n  return {\n    search: state.search\n  };\n};\n\nconst connectedMergeArtists = connect(mapStateToProps, {\n  mergeArtistFunction,\n  updateArtistState,\n  setNotification\n})(MergeArtists);\n\nexport default connectedMergeArtists;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, Header, Form, Button, Dropdown } from 'semantic-ui-react';\nimport {\n  mergeAlbumFunction,\n  updateAlbumState\n} from '../../actions/albumActions';\nimport ModalNotification from '../layout/ModalNotification';\n\nimport { setNotification } from '../../reducers/notificationReducer';\n\nconst MergeAlbums = props => {\n  // console.log('merge album tracks modal props', props);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [albumToMerge, setAlbumToMerge] = useState(null);\n  const handleOpen = () => {\n    setModalOpen(true);\n  };\n  const handleClose = () => {\n    setModalOpen(false);\n  };\n  if (!modalOpen) {\n    return (\n      <button className=\"link-btn\" onClick={handleOpen}>\n        {props.album_id}\n      </button>\n    );\n  } else {\n    const onSubmit = () => {\n      const mergeParams = {\n        type: 'album',\n        merge: albumToMerge,\n        mergeTo: props.album_id,\n        newName: props.album_name\n      };\n      console.log(mergeParams);\n      if (mergeParams.merge === mergeParams.mergeTo) {\n        props.setNotification('Tarkista albumi', 'fail');\n      } else {\n        props.updateAlbumState(mergeParams);\n        props.mergeAlbumFunction(mergeParams);\n        props.setNotification('Tiedot päivitetty!', 'success');\n        handleClose();\n      }\n    };\n\n    const mergeOptions = Array.from(\n      new Set(props.search.advancedResults.map(r => r.album_id))\n    ).map(album_id => {\n      return {\n        key: album_id,\n        text: `${album_id}: ${\n          props.search.advancedResults.find(r => r.album_id === album_id)\n            .album_name\n        }`,\n        value: album_id\n      };\n    });\n\n    const getalbumToMerge = (e, { value }) => {\n      e.preventDefault();\n      setAlbumToMerge(value);\n    };\n    return (\n      <Modal\n        open={modalOpen}\n        closeIcon\n        onClose={handleClose}\n        trigger={\n          <button className=\"link-btn\" onClick={handleOpen}>\n            {props.album_id}\n          </button>\n        }\n      >\n        <Header>\n          Yhdistä albumiin {props.album_id} - {props.album_name} tiedot\n        </Header>\n        <Modal.Content>\n          <ModalNotification />\n\n          <Form onSubmit={onSubmit}>\n            <Form.Field>\n              <Dropdown\n                onChange={getalbumToMerge}\n                selection\n                search\n                options={mergeOptions}\n              />\n            </Form.Field>\n            <Form.Field>\n              <Button type=\"submit\">Yhdistä</Button>\n            </Form.Field>\n          </Form>\n        </Modal.Content>\n      </Modal>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  // console.log('MergeAlbums state', state);\n  return {\n    search: state.search\n  };\n};\n\nconst connectedMergeAlbums = connect(mapStateToProps, {\n  mergeAlbumFunction,\n  updateAlbumState,\n  setNotification\n})(MergeAlbums);\n\nexport default connectedMergeAlbums;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, Header, Form, Button, Dropdown } from 'semantic-ui-react';\nimport {\n  mergeTrackFunction,\n  updateTrackState\n} from '../../actions/trackActions';\nimport ModalNotification from '../layout/ModalNotification';\nimport { setNotification } from '../../reducers/notificationReducer';\n\nconst MergeTracks = props => {\n  // console.log('merge track tracks modal props', props);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [trackToMerge, setTrackToMerge] = useState(null);\n  const handleOpen = () => {\n    setModalOpen(true);\n  };\n  const handleClose = () => {\n    setModalOpen(false);\n  };\n  if (!modalOpen) {\n    return (\n      <button className=\"link-btn\" onClick={handleOpen}>\n        {props.track_id}\n      </button>\n    );\n  } else {\n    const onSubmit = () => {\n      const mergeParams = {\n        type: 'track',\n        merge: trackToMerge,\n        mergeTo: props.track_id,\n        newName: props.track_title\n      };\n      console.log(mergeParams);\n      if (mergeParams.merge === mergeParams.mergeTo) {\n        props.setNotification('Tarkista biisi', 'fail');\n      } else {\n        props.mergeTrackFunction(mergeParams);\n        props.updateTrackState(mergeParams);\n        props.setNotification('Tiedot päivitetty!', 'success');\n        handleClose();\n      }\n    };\n\n    const mergeOptions = props.search.advancedResults.map(track => ({\n      key: track.track_id,\n      text: `${track.track_id} - ${track.track_title}`,\n      value: track.track_id\n    }));\n    const getTrackToMerge = (e, { value }) => {\n      e.preventDefault();\n      setTrackToMerge(value);\n    };\n    return (\n      <Modal\n        open={modalOpen}\n        closeIcon\n        onClose={handleClose}\n        trigger={\n          <button className=\"link-btn\" onClick={handleOpen}>\n            {props.track_id}\n          </button>\n        }\n      >\n        <Header>\n          Yhdistä biisiin {props.track_id} - {props.track_title} tiedot:\n        </Header>\n        <Modal.Content>\n          <ModalNotification />\n\n          <Form onSubmit={onSubmit}>\n            <Form.Field>\n              <Dropdown\n                onChange={getTrackToMerge}\n                selection\n                search\n                options={mergeOptions}\n              />\n            </Form.Field>\n            <Form.Field>\n              <Button type=\"submit\">Yhdistä</Button>\n            </Form.Field>\n          </Form>\n        </Modal.Content>\n      </Modal>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  // console.log('MergeTracks state', state);\n  return {\n    search: state.search\n  };\n};\n\nconst connectedMergeTracks = connect(mapStateToProps, {\n  mergeTrackFunction,\n  updateTrackState,\n  setNotification\n})(MergeTracks);\n\nexport default connectedMergeTracks;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Icon, Popup } from 'semantic-ui-react';\nimport { Redirect } from 'react-router-dom';\nimport { setNotification } from '../../reducers/notificationReducer';\nimport { addTrackToReport } from '../../actions/reportActions';\n\nconst AddToCurrentReport = props => {\n  const [redirect, setRedirect] = useState(false);\n  if (!props.report.reportDetails) {\n    return null;\n  }\n  const onAdd = () => {\n    console.log('klikd add', props.track_id);\n    const trackToSave = {\n      track_id: props.track_id,\n      report_id: props.report.reportDetails.id,\n      length: props.length,\n      sortable_rank: props.report.report.length + 1\n    };\n    console.log('track to save', trackToSave);\n    props.addTrackToReport(trackToSave);\n    props.setNotification(\n      `${props.track_title} lisätty raporttiin ${props.report.reportDetails.program_name}`,\n      'success'\n    );\n    setRedirect(true);\n  };\n  if (redirect) {\n    return <Redirect to={`/reports/${props.report.reportDetails.id}`} />;\n  }\n  return (\n    <React.Fragment>\n      <Popup\n        trigger={\n          <Icon\n            style={{ cursor: 'pointer' }}\n            color=\"green\"\n            onClick={onAdd}\n            name=\"add\"\n          />\n        }\n        style={style}\n        inverted\n        basic\n        content={`Lisää kappale ${props.track_title} raporttiin ${props.report.reportDetails.program_name}`}\n      />\n    </React.Fragment>\n  );\n};\nconst style = {\n  borderRadius: 0,\n  display: 'block',\n  opacity: 0.9,\n  padding: '2em'\n};\n\nconst mapStateToProps = state => {\n  return {\n    report: state.report\n  };\n};\nconst connectedAddToCurrentReport = connect(mapStateToProps, {\n  setNotification,\n  addTrackToReport\n})(AddToCurrentReport);\n\nexport default connectedAddToCurrentReport;\n","import React from 'react';\nimport { Table } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport MergeArtists from './MergeArtists';\nimport MergeAlbums from './MergeAlbums';\nimport MergeTracks from './MergeTracks';\nimport AddToCurrentReport from '../track/AddToCurrentReport';\n\nconst SearchResultItem = props => {\n  if (props.result === null) {\n    return null;\n  }\n  return (\n    <Table.Row>\n      <Table.Cell>\n        <Link to={`../artist/${props.result.artist_id}`}>\n          {props.result.artist_name}\n        </Link>\n        <MergeArtists\n          artist_id={props.result.artist_id}\n          artist_name={props.result.artist_name}\n        />\n      </Table.Cell>\n      <Table.Cell>\n        <Link to={`../album/${props.result.album_id}`}>\n          {props.result.album_name}\n        </Link>\n        <MergeAlbums\n          album_id={props.result.album_id}\n          album_name={props.result.album_name}\n        />\n      </Table.Cell>\n      <Table.Cell>\n        <Link to={`../track/${props.result.track_id}`}>\n          {props.result.track_title}\n        </Link>\n        <MergeTracks\n          track_id={props.result.track_id}\n          track_title={props.result.track_title}\n        />\n      </Table.Cell>\n      <Table.Cell>\n        <Link to={`../reports/${props.result.report_id}`}>\n          {props.result.program_date}\n        </Link>\n      </Table.Cell>\n      <Table.Cell>\n        <AddToCurrentReport\n          track_title={props.result.track_title}\n          track_id={props.result.track_id}\n          length={props.result.length}\n        />\n      </Table.Cell>\n    </Table.Row>\n  );\n};\n\nexport default SearchResultItem;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Dropdown, Grid } from 'semantic-ui-react';\nimport { sortAdvancedResults } from '../../actions/searchActions';\n\nconst SortResults = props => {\n  console.log('sort props', props);\n  const [sortBy, setSortBy] = useState(1);\n\n  useEffect(() => {\n    console.log(sortBy);\n    props.sortAdvancedResults(sortBy);\n    // eslint-disable-next-line\n  }, [sortBy]);\n\n  const sortOptions = [\n    {\n      key: 1,\n      text: 'Biisin nimen mukaan',\n      value: 1\n    },\n    {\n      key: 2,\n      text: 'Artistin nimen mukaan',\n      value: 2\n    }\n  ];\n  const getSortOptions = (e, { value }) => {\n    e.preventDefault();\n    console.log(sortBy);\n    setSortBy(value);\n  };\n  return (\n    <Grid columns={4}>\n      <Grid.Column>\n        <Form>\n          <Form.Field>\n            <label>Järjestä tulokset</label>\n            <Dropdown\n              defaultValue={sortBy}\n              openOnFocus\n              selection\n              options={sortOptions}\n              onChange={getSortOptions}\n            />{' '}\n          </Form.Field>\n        </Form>\n      </Grid.Column>\n    </Grid>\n  );\n};\nconst mapStateToProps = state => {\n  return {\n    search: state.search\n  };\n};\n\nconst connectedSortResult = connect(mapStateToProps, { sortAdvancedResults })(\n  SortResults\n);\n\nexport default connectedSortResult;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Table, Loader, Dimmer } from 'semantic-ui-react';\nimport SearchResultItem from './SearchResultItem';\nimport SortResults from './SortResults';\n\nconst SearchResults = props => {\n  console.log('search result props', props);\n  if (props.search.advancedResults === null) {\n    return null;\n  }\n  if (props.search.loading === true) {\n    return (\n      <Dimmer active>\n        <Loader>ladataan...</Loader>\n      </Dimmer>\n    );\n  }\n  let resultsToShow = props.search.advancedResults;\n\n  resultsToShow =\n    props.search.sortAdvancedResults === 2\n      ? resultsToShow\n      : resultsToShow.sort((a, b) =>\n          a.track_title > b.track_title\n            ? 1\n            : b.track_title > a.track_title\n            ? -1\n            : 0\n        );\n\n  resultsToShow =\n    props.search.sortAdvancedResults === 1\n      ? resultsToShow\n      : resultsToShow.sort((a, b) =>\n          a.artist_name > b.artist_name\n            ? 1\n            : b.artist_name > a.artist_name\n            ? -1\n            : 0\n        );\n\n  // objs.sort((a, b) =>\n  //   a.last_nom > b.last_nom ? 1 : b.last_nom > a.last_nom ? -1 : 0\n  // );\n\n  return (\n    <div style={{ marginTop: '2rem' }}>\n      <SortResults />\n      <Table striped>\n        <Table.Header>\n          <Table.Row>\n            <Table.Cell>Esittäjä</Table.Cell>\n            <Table.Cell>Albumi</Table.Cell>\n            <Table.Cell>Biisi</Table.Cell>\n            <Table.Cell>Soinut viimeksi</Table.Cell>\n            <Table.Cell></Table.Cell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {resultsToShow.map(result => (\n            <SearchResultItem key={result.track_id} result={result} />\n          ))}\n        </Table.Body>\n      </Table>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('search results state', state);\n  return {\n    search: state.search\n  };\n};\n\nconst connectedSearchResults = connect(mapStateToProps, null)(SearchResults);\n\nexport default connectedSearchResults;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Container } from 'semantic-ui-react';\nimport SearchForm from './SearchForm';\nimport SearchResults from './SearchResults';\nconst Search = props => {\n  return (\n    <Container>\n      <h1>Haku</h1>\n      <SearchForm />\n      <SearchResults />\n    </Container>\n  );\n};\n\nconst connectedSearch = connect(\n  null,\n  null\n)(Search);\n\nexport default connectedSearch;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { getTop100 } from '../../actions/searchActions';\nimport { Form, Button, Dropdown } from 'semantic-ui-react';\nimport DatePicker from 'react-datepicker';\nimport moment from 'moment';\nimport fi from 'date-fns/locale/fi';\n\nconst Top100SearchForm = props => {\n  const [startDate, setStartDate] = useState(Date.now() - 7 * 24 * 3600 * 1000);\n  const [endDate, setEndDate] = useState(new Date());\n  const [list, setList] = useState('artist_id');\n  // useEffect(() => {\n  //   const query = {\n  //     list,\n  //     start_date: moment()\n  //       .subtract(7, 'd')\n  //       .format('YYYY-MM-DD'),\n  //     end_date: moment(endDate).format('YYYY-MM-DD')\n  //   };\n  //   console.log(query);\n  //   props.getTop100(query);\n  //   // eslint-disable-next-line\n  // }, []);\n  console.log('start date', startDate);\n\n  const handleSearch = () => {\n    const query = {\n      list,\n      start_date: moment(startDate).format('YYYY-MM-DD'),\n      end_date: moment(endDate).format('YYYY-MM-DD')\n    };\n    console.log('klikd search', query);\n    props.getTop100(query);\n  };\n\n  const listOptions = [\n    {\n      key: 1,\n      value: 'artist_id',\n      text: 'Artistit'\n    },\n    {\n      key: 2,\n      value: 'track_id',\n      text: 'Biisit'\n    },\n    {\n      key: 3,\n      value: 'album_id',\n      text: 'Albumit'\n    }\n  ];\n\n  const getListOptions = (e, { value }) => {\n    e.preventDefault();\n    setList(value);\n  };\n  return (\n    <Form>\n      <Form.Group widths=\"equal\">\n        <Form.Field>\n          <label>Hae</label>\n          <Dropdown\n            openOnFocus\n            selection\n            defaultValue={list}\n            options={listOptions}\n            onChange={getListOptions}\n          />{' '}\n        </Form.Field>\n        <Form.Field>\n          <label>Alkaen</label>\n          <DatePicker\n            selected={startDate}\n            disabledKeyboardNavigation={true}\n            dateFormat=\"dd.MM.yyyy\"\n            onChange={date => setStartDate(date)}\n            locale={fi}\n          />\n        </Form.Field>\n        <Form.Field>\n          <label>Päättyen</label>\n          <DatePicker\n            selected={endDate}\n            disabledKeyboardNavigation={true}\n            dateFormat=\"dd.MM.yyyy\"\n            onChange={date => setEndDate(date)}\n            locale={fi}\n          />\n        </Form.Field>\n        <Form.Field></Form.Field>\n        <Form.Field></Form.Field>\n        <Form.Field></Form.Field>\n      </Form.Group>\n      <Button color=\"blue\" onClick={handleSearch}>\n        Hae\n      </Button>{' '}\n    </Form>\n  );\n};\n\nconst connectedTop100SearchForm = connect(null, { getTop100 })(\n  Top100SearchForm\n);\n\nexport default connectedTop100SearchForm;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Table, Container } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport Top100SearchForm from './Top100SearchForm';\nimport AddToCurrentReport from '../track/AddToCurrentReport';\n\nconst Top100List = props => {\n  if (props.search.top100Query === null) {\n    return (\n      <Container>\n        <h1>Top 100</h1>\n        <Top100SearchForm />\n      </Container>\n    );\n  }\n  if (props.search.loading) {\n    return (\n      <Container>\n        <h1>Top 100</h1>\n        <Top100SearchForm />\n        <div>Loading</div>\n      </Container>\n    );\n  }\n  if (props.search.top100Query.list === 'artist_id')\n    return (\n      <Container>\n        <h1>Top 100</h1>\n        <p>\n          Hae eniten soitettuja biisejä, artisteja tai albumeita tietyllä\n          aikavälillä.\n        </p>\n        <Top100SearchForm />\n        <Table striped>\n          <Table.Header>\n            <Table.Row>\n              <Table.Cell>Artisti</Table.Cell>\n              <Table.Cell>Soittokerrat</Table.Cell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {props.search.top100.map(t => (\n              <Table.Row key={t.track_id}>\n                <Table.Cell>\n                  <Link to={`/artist/${t.artist_id}`}>{t.artist}</Link>\n                </Table.Cell>\n                <Table.Cell>{t.count}</Table.Cell>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </Container>\n    );\n  if (props.search.top100Query.list === 'album_id')\n    return (\n      <Container>\n        <h1>Top 100</h1>\n        <Top100SearchForm />\n        <Table striped>\n          <Table.Header>\n            <Table.Row>\n              <Table.Cell>Artisti</Table.Cell>\n              <Table.Cell>Albumi</Table.Cell>\n              <Table.Cell>Soittokerrat</Table.Cell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {props.search.top100.map(t => (\n              <Table.Row key={t.track_id}>\n                <Table.Cell>\n                  <Link to={`/artist/${t.artist_id}`}>{t.artist}</Link>\n                </Table.Cell>\n                <Table.Cell>\n                  <Link to={`/album/${t.album_id}`}>{t.album}</Link>\n                </Table.Cell>\n                <Table.Cell>{t.count}</Table.Cell>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </Container>\n    );\n  if (props.search.top100Query.list === 'track_id')\n    return (\n      <Container>\n        <h1>Top 100</h1>\n        <Top100SearchForm />\n        <Table striped>\n          <Table.Header>\n            <Table.Row>\n              <Table.Cell>Artisti</Table.Cell>\n              <Table.Cell>Albumi</Table.Cell>\n              <Table.Cell>Biisi</Table.Cell>\n              <Table.Cell>Soittokerrat</Table.Cell>\n              <Table.Cell></Table.Cell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {props.search.top100.map(t => (\n              <Table.Row key={t.track_id}>\n                <Table.Cell>\n                  <Link to={`/artist/${t.artist_id}`}>{t.artist}</Link>\n                </Table.Cell>\n                <Table.Cell>\n                  <Link to={`/album/${t.album_id}`}>{t.album}</Link>\n                </Table.Cell>\n                <Table.Cell>\n                  <Link to={`/track/${t.track_id}`}>{t.track_title}</Link>\n                </Table.Cell>\n                <Table.Cell>{t.count}</Table.Cell>\n                <Table.Cell>\n                  <AddToCurrentReport\n                    track_title={t.track_title}\n                    track_id={t.track_id}\n                    length={t.length}\n                  />\n                </Table.Cell>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </Container>\n    );\n};\n\nconst mapStateToProps = state => {\n  console.log('top100', state);\n  return {\n    search: state.search\n  };\n};\n\nconst connectedTop100List = connect(mapStateToProps, null)(Top100List);\n\nexport default connectedTop100List;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  getOneTrack,\n  removeCurrentTrack,\n  updateTrack\n} from '../../actions/trackActions';\nimport {\n  getCatIdFromDiscogs,\n  clearDiscogsCatId\n} from '../../actions/searchActions';\nimport { setNotification } from '../../reducers/notificationReducer';\nimport {\n  Modal,\n  Header,\n  Form,\n  Button,\n  Input,\n  TextArea,\n  Dropdown,\n  Icon\n} from 'semantic-ui-react';\n\nconst EditTrackModal = props => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [artist, setArtist] = useState(props.track.artist_name);\n  const [album, setAlbum] = useState(props.track.album_name);\n  const [track, setTrack] = useState(props.track.track_title);\n  const [min, setMin] = useState(Math.floor(props.track.length / 60));\n  const [sec, setSec] = useState(props.track.length % 60);\n  const [country, setCountry] = useState(props.track.country);\n  const [recordCountry, setRecordCountry] = useState(\n    props.track.record_country\n  );\n  const [people, setPeople] = useState(props.track.people);\n  const [discNo, setDiscNo] = useState(props.track.disc_no);\n  const [trackNo, setTrackNo] = useState(props.track.track_no);\n  const [year, setYear] = useState(parseInt(props.track.year));\n  const [label, setLabel] = useState(props.track.label);\n  const [catId, setCatId] = useState(props.track.cat_id);\n  const [isrc, setIsrc] = useState(props.track.isrc);\n  const [comment, setComment] = useState(props.track.comment);\n  useEffect(() => {\n    if (props.track.year === null) {\n      setYear(null);\n    } else {\n      setYear(parseInt(props.track.year));\n    }\n  }, [props.track.year]);\n\n  useEffect(() => {\n    if (props.track.people === null) {\n      setPeople(null);\n    } else if (props.track.people === undefined) {\n      setPeople(null);\n    } else {\n      setPeople(\n        props.track.people\n          .replace(/\\| /, '')\n          .replace(/\\| /g, '\\n')\n          .replace(/ \\|/, '')\n      );\n    }\n  }, [props.track.people]);\n\n  useEffect(() => {\n    if (props.search.discogsCatId === null) {\n      setCatId(props.track.cat_id);\n    } else {\n      setCatId(props.search.discogsCatId);\n    }\n    // eslint-disable-next-line\n  }, [props.search.discogsCatId]);\n\n  const handleOpen = () => {\n    // props.getOneTrack(props.id);\n    setModalOpen(true);\n    console.log(modalOpen);\n  };\n\n  const handleClose = () => {\n    // props.removeCurrentTrack();\n    props.clearDiscogsCatId();\n    setModalOpen(false);\n  };\n\n  // if (props.report.currentTrack === null) {\n  //   return (\n  //     <Icon\n  //       style={{ cursor: 'pointer' }}\n  //       color=\"blue\"\n  //       onClick={handleOpen}\n  //       name=\"edit\"\n  //     />\n  //   );\n  // }\n\n  if (props.report.loading || !modalOpen) {\n    return (\n      <Modal\n        open={modalOpen}\n        closeIcon\n        trigger={\n          <Icon\n            style={{ cursor: 'pointer' }}\n            color=\"blue\"\n            onClick={handleOpen}\n            name=\"edit\"\n          />\n        }\n        onClose={handleClose}\n      >\n        <Header content=\"Muokkaa biisin tietoja\" />\n        <Modal.Content>ladataan</Modal.Content>\n      </Modal>\n    );\n  } else {\n    const submitTrack = () => {\n      console.log('klikd submit track');\n      // artist name validation\n      if (artist === null) {\n        props.setNotification('Artisti on pakollinen tieto', 'fail');\n      }\n      if (people === null) {\n        let length = parseInt(min) * 60 + parseInt(sec);\n        const trackToEdit = {\n          artist_name: artist,\n          album_name: album,\n          track_title: track,\n          length,\n          country,\n          record_country: recordCountry,\n          people,\n          disc_no: discNo,\n          track_no: trackNo,\n          year,\n          label,\n          cat_id: catId,\n          isrc,\n          comment,\n          user_id: props.login.id,\n          artist_id: props.track.artist_id,\n          album_id: props.track.album_id,\n          track_id: props.track.track_id,\n          sortable_rank: props.sortable_rank,\n          report_track_id: props.report_track_id\n        };\n        console.log('updating track', trackToEdit);\n        props.updateTrack(trackToEdit);\n        props.setNotification(\n          `Biisin ${trackToEdit.track_title} tiedot päivitetty!`,\n          'success'\n        );\n        handleClose();\n      } else {\n        let length = parseInt(min) * 60 + parseInt(sec);\n        const trackToEdit = {\n          artist_name: artist,\n          album_name: album,\n          track_title: track,\n          length,\n          country,\n          record_country: recordCountry,\n          people: `| ${people.replace(/\\n/g, ' | ')} |`,\n          disc_no: discNo,\n          track_no: trackNo,\n          year,\n          label,\n          cat_id: catId,\n          isrc,\n          comment,\n          user_id: props.login.id,\n          artist_id: props.track.artist_id,\n          album_id: props.track.album_id,\n          track_id: props.track.track_id,\n          sortable_rank: props.sortable_rank,\n          report_track_id: props.report_track_id\n        };\n        console.log('updating track', trackToEdit);\n        props.updateTrack(trackToEdit);\n        props.setNotification(\n          `Biisin ${trackToEdit.track_title} tiedot päivitetty!`,\n          'success'\n        );\n        handleClose();\n      }\n    };\n\n    const countryOptions = [\n      {\n        key: 1,\n        text: 'Suomi',\n        value: 1\n      },\n      {\n        key: 2,\n        text: 'Muu',\n        value: 2\n      },\n      {\n        key: null,\n        text: 'Ei tietoa',\n        value: null\n      }\n    ];\n    const getCountry = (event, { value }) => {\n      event.preventDefault();\n      setCountry(value);\n    };\n    const recordCountryOptions = [\n      { text: 'Finland', value: 'FI' },\n      { text: 'United Kingdom', value: 'GB' },\n      { text: 'United States', value: 'US' },\n      { text: 'Afghanistan', value: 'AF' },\n      { text: 'Åland Islands', value: 'AX' },\n      { text: 'Albania', value: 'AL' },\n      { text: 'Algeria', value: 'DZ' },\n      { text: 'American Samoa', value: 'AS' },\n      { text: 'AndorrA', value: 'AD' },\n      { text: 'Angola', value: 'AO' },\n      { text: 'Anguilla', value: 'AI' },\n      { text: 'Antarctica', value: 'AQ' },\n      { text: 'Antigua and Barbuda', value: 'AG' },\n      { text: 'Argentina', value: 'AR' },\n      { text: 'Armenia', value: 'AM' },\n      { text: 'Aruba', value: 'AW' },\n      { text: 'Australia', value: 'AU' },\n      { text: 'Austria', value: 'AT' },\n      { text: 'Azerbaijan', value: 'AZ' },\n      { text: 'Bahamas', value: 'BS' },\n      { text: 'Bahrain', value: 'BH' },\n      { text: 'Bangladesh', value: 'BD' },\n      { text: 'Barbados', value: 'BB' },\n      { text: 'Belarus', value: 'BY' },\n      { text: 'Belgium', value: 'BE' },\n      { text: 'Belize', value: 'BZ' },\n      { text: 'Benin', value: 'BJ' },\n      { text: 'Bermuda', value: 'BM' },\n      { text: 'Bhutan', value: 'BT' },\n      { text: 'Bolivia', value: 'BO' },\n      { text: 'Bosnia and Herzegovina', value: 'BA' },\n      { text: 'Botswana', value: 'BW' },\n      { text: 'Bouvet Island', value: 'BV' },\n      { text: 'Brazil', value: 'BR' },\n      { text: 'British Indian Ocean Territory', value: 'IO' },\n      { text: 'Brunei Darussalam', value: 'BN' },\n      { text: 'Bulgaria', value: 'BG' },\n      { text: 'Burkina Faso', value: 'BF' },\n      { text: 'Burundi', value: 'BI' },\n      { text: 'Cambodia', value: 'KH' },\n      { text: 'Cameroon', value: 'CM' },\n      { text: 'Canada', value: 'CA' },\n      { text: 'Cape Verde', value: 'CV' },\n      { text: 'Cayman Islands', value: 'KY' },\n      { text: 'Central African Republic', value: 'CF' },\n      { text: 'Chad', value: 'TD' },\n      { text: 'Chile', value: 'CL' },\n      { text: 'China', value: 'CN' },\n      { text: 'Christmas Island', value: 'CX' },\n      { text: 'Cocos (Keeling) Islands', value: 'CC' },\n      { text: 'Colombia', value: 'CO' },\n      { text: 'Comoros', value: 'KM' },\n      { text: 'Congo', value: 'CG' },\n      { text: 'Congo, The Democratic Republic of the', value: 'CD' },\n      { text: 'Cook Islands', value: 'CK' },\n      { text: 'Costa Rica', value: 'CR' },\n      { text: \"Cote D'Ivoire\", value: 'CI' },\n      { text: 'Croatia', value: 'HR' },\n      { text: 'Cuba', value: 'CU' },\n      { text: 'Cyprus', value: 'CY' },\n      { text: 'Czech Republic', value: 'CZ' },\n      { text: 'Denmark', value: 'DK' },\n      { text: 'Djibouti', value: 'DJ' },\n      { text: 'Dominica', value: 'DM' },\n      { text: 'Dominican Republic', value: 'DO' },\n      { text: 'Ecuador', value: 'EC' },\n      { text: 'Egypt', value: 'EG' },\n      { text: 'El Salvador', value: 'SV' },\n      { text: 'Equatorial Guinea', value: 'GQ' },\n      { text: 'Eritrea', value: 'ER' },\n      { text: 'Estonia', value: 'EE' },\n      { text: 'Ethiopia', value: 'ET' },\n      { text: 'Falkland Islands (Malvinas)', value: 'FK' },\n      { text: 'Faroe Islands', value: 'FO' },\n      { text: 'Fiji', value: 'FJ' },\n      { text: 'France', value: 'FR' },\n      { text: 'French Guiana', value: 'GF' },\n      { text: 'French Polynesia', value: 'PF' },\n      { text: 'French Southern Territories', value: 'TF' },\n      { text: 'Gabon', value: 'GA' },\n      { text: 'Gambia', value: 'GM' },\n      { text: 'Georgia', value: 'GE' },\n      { text: 'Germany', value: 'DE' },\n      { text: 'Ghana', value: 'GH' },\n      { text: 'Gibraltar', value: 'GI' },\n      { text: 'Greece', value: 'GR' },\n      { text: 'Greenland', value: 'GL' },\n      { text: 'Grenada', value: 'GD' },\n      { text: 'Guadeloupe', value: 'GP' },\n      { text: 'Guam', value: 'GU' },\n      { text: 'Guatemala', value: 'GT' },\n      { text: 'Guernsey', value: 'GG' },\n      { text: 'Guinea', value: 'GN' },\n      { text: 'Guinea-Bissau', value: 'GW' },\n      { text: 'Guyana', value: 'GY' },\n      { text: 'Haiti', value: 'HT' },\n      { text: 'Heard Island and Mcdonald Islands', value: 'HM' },\n      { text: 'Holy See (Vatican City State)', value: 'VA' },\n      { text: 'Honduras', value: 'HN' },\n      { text: 'Hong Kong', value: 'HK' },\n      { text: 'Hungary', value: 'HU' },\n      { text: 'Iceland', value: 'IS' },\n      { text: 'India', value: 'IN' },\n      { text: 'Indonesia', value: 'ID' },\n      { text: 'Iran, Islamic Republic Of', value: 'IR' },\n      { text: 'Iraq', value: 'IQ' },\n      { text: 'Ireland', value: 'IE' },\n      { text: 'Isle of Man', value: 'IM' },\n      { text: 'Israel', value: 'IL' },\n      { text: 'Italy', value: 'IT' },\n      { text: 'Jamaica', value: 'JM' },\n      { text: 'Japan', value: 'JP' },\n      { text: 'Jersey', value: 'JE' },\n      { text: 'Jordan', value: 'JO' },\n      { text: 'Kazakhstan', value: 'KZ' },\n      { text: 'Kenya', value: 'KE' },\n      { text: 'Kiribati', value: 'KI' },\n      { text: \"Korea, Democratic People's Republic of\", value: 'KP' },\n      { text: 'Korea, Republic of', value: 'KR' },\n      { text: 'Kuwait', value: 'KW' },\n      { text: 'Kyrgyzstan', value: 'KG' },\n      { text: \"Lao People's Democratic Republic\", value: 'LA' },\n      { text: 'Latvia', value: 'LV' },\n      { text: 'Lebanon', value: 'LB' },\n      { text: 'Lesotho', value: 'LS' },\n      { text: 'Liberia', value: 'LR' },\n      { text: 'Libyan Arab Jamahiriya', value: 'LY' },\n      { text: 'Liechtenstein', value: 'LI' },\n      { text: 'Lithuania', value: 'LT' },\n      { text: 'Luxembourg', value: 'LU' },\n      { text: 'Macao', value: 'MO' },\n      { text: 'Macedonia, The Former Yugoslav Republic of', value: 'MK' },\n      { text: 'Madagascar', value: 'MG' },\n      { text: 'Malawi', value: 'MW' },\n      { text: 'Malaysia', value: 'MY' },\n      { text: 'Maldives', value: 'MV' },\n      { text: 'Mali', value: 'ML' },\n      { text: 'Malta', value: 'MT' },\n      { text: 'Marshall Islands', value: 'MH' },\n      { text: 'Martinique', value: 'MQ' },\n      { text: 'Mauritania', value: 'MR' },\n      { text: 'Mauritius', value: 'MU' },\n      { text: 'Mayotte', value: 'YT' },\n      { text: 'Mexico', value: 'MX' },\n      { text: 'Micronesia, Federated States of', value: 'FM' },\n      { text: 'Moldova, Republic of', value: 'MD' },\n      { text: 'Monaco', value: 'MC' },\n      { text: 'Mongolia', value: 'MN' },\n      { text: 'Montenegro', value: 'ME' },\n      { text: 'Montserrat', value: 'MS' },\n      { text: 'Morocco', value: 'MA' },\n      { text: 'Mozambique', value: 'MZ' },\n      { text: 'Myanmar', value: 'MM' },\n      { text: 'Namibia', value: 'NA' },\n      { text: 'Nauru', value: 'NR' },\n      { text: 'Nepal', value: 'NP' },\n      { text: 'Netherlands', value: 'NL' },\n      { text: 'Netherlands Antilles', value: 'AN' },\n      { text: 'New Caledonia', value: 'NC' },\n      { text: 'New Zealand', value: 'NZ' },\n      { text: 'Nicaragua', value: 'NI' },\n      { text: 'Niger', value: 'NE' },\n      { text: 'Nigeria', value: 'NG' },\n      { text: 'Niue', value: 'NU' },\n      { text: 'Norfolk Island', value: 'NF' },\n      { text: 'Northern Mariana Islands', value: 'MP' },\n      { text: 'Norway', value: 'NO' },\n      { text: 'Oman', value: 'OM' },\n      { text: 'Pakistan', value: 'PK' },\n      { text: 'Palau', value: 'PW' },\n      { text: 'Palestinian Territory, Occupied', value: 'PS' },\n      { text: 'Panama', value: 'PA' },\n      { text: 'Papua New Guinea', value: 'PG' },\n      { text: 'Paraguay', value: 'PY' },\n      { text: 'Peru', value: 'PE' },\n      { text: 'Philippines', value: 'PH' },\n      { text: 'Poland', value: 'PL' },\n      { text: 'Portugal', value: 'PT' },\n      { text: 'Puerto Rico', value: 'PR' },\n      { text: 'Qatar', value: 'QA' },\n      { text: 'Romania', value: 'RO' },\n      { text: 'Russian Federation', value: 'RU' },\n      { text: 'RWANDA', value: 'RW' },\n      { text: 'Saint Helena', value: 'SH' },\n      { text: 'Saint Kitts and Nevis', value: 'KN' },\n      { text: 'Saint Lucia', value: 'LC' },\n      { text: 'Saint Pierre and Miquelon', value: 'PM' },\n      { text: 'Saint Vincent and the Grenadines', value: 'VC' },\n      { text: 'Samoa', value: 'WS' },\n      { text: 'San Marino', value: 'SM' },\n      { text: 'Sao Tome and Principe', value: 'ST' },\n      { text: 'Saudi Arabia', value: 'SA' },\n      { text: 'Senegal', value: 'SN' },\n      { text: 'Serbia', value: 'RS' },\n      { text: 'Seychelles', value: 'SC' },\n      { text: 'Sierra Leone', value: 'SL' },\n      { text: 'Singapore', value: 'SG' },\n      { text: 'Slovakia', value: 'SK' },\n      { text: 'Slovenia', value: 'SI' },\n      { text: 'Solomon Islands', value: 'SB' },\n      { text: 'Somalia', value: 'SO' },\n      { text: 'South Africa', value: 'ZA' },\n      { text: 'South Georgia and the South Sandwich Islands', value: 'GS' },\n      { text: 'Spain', value: 'ES' },\n      { text: 'Sri Lanka', value: 'LK' },\n      { text: 'Sudan', value: 'SD' },\n      { text: 'Suriname', value: 'SR' },\n      { text: 'Svalbard and Jan Mayen', value: 'SJ' },\n      { text: 'Swaziland', value: 'SZ' },\n      { text: 'Sweden', value: 'SE' },\n      { text: 'Switzerland', value: 'CH' },\n      { text: 'Syrian Arab Republic', value: 'SY' },\n      { text: 'Taiwan, Province of China', value: 'TW' },\n      { text: 'Tajikistan', value: 'TJ' },\n      { text: 'Tanzania, United Republic of', value: 'TZ' },\n      { text: 'Thailand', value: 'TH' },\n      { text: 'Timor-Leste', value: 'TL' },\n      { text: 'Togo', value: 'TG' },\n      { text: 'Tokelau', value: 'TK' },\n      { text: 'Tonga', value: 'TO' },\n      { text: 'Trinidad and Tobago', value: 'TT' },\n      { text: 'Tunisia', value: 'TN' },\n      { text: 'Turkey', value: 'TR' },\n      { text: 'Turkmenistan', value: 'TM' },\n      { text: 'Turks and Caicos Islands', value: 'TC' },\n      { text: 'Tuvalu', value: 'TV' },\n      { text: 'Uganda', value: 'UG' },\n      { text: 'Ukraine', value: 'UA' },\n      { text: 'United Arab Emirates', value: 'AE' },\n      { text: 'United States Minor Outlying Islands', value: 'UM' },\n      { text: 'Uruguay', value: 'UY' },\n      { text: 'Uzbekistan', value: 'UZ' },\n      { text: 'Vanuatu', value: 'VU' },\n      { text: 'Venezuela', value: 'VE' },\n      { text: 'Viet Nam', value: 'VN' },\n      { text: 'Virgin Islands, British', value: 'VG' },\n      { text: 'Virgin Islands, U.S.', value: 'VI' },\n      { text: 'Wallis and Futuna', value: 'WF' },\n      { text: 'Western Sahara', value: 'EH' },\n      { text: 'Yemen', value: 'YE' },\n      { text: 'Zambia', value: 'ZM' },\n      { text: 'Zimbabwe', value: 'ZW' }\n    ];\n    const getRecordCountry = (event, { value }) => {\n      event.preventDefault();\n      setRecordCountry(value);\n    };\n\n    const getDiscogs = () => {\n      const query = {\n        artist,\n        album\n      };\n      props.getCatIdFromDiscogs(query);\n    };\n\n    // let minutes = Math.floor(props.report.currentTrack[0].length / 60);\n    // let seconds = props.report.currentTrack[0].length % 60;\n\n    return (\n      <Modal\n        open={modalOpen}\n        closeIcon\n        trigger={\n          <Icon\n            style={{ cursor: 'pointer' }}\n            color=\"blue\"\n            onClick={handleOpen}\n            name=\"edit\"\n          />\n        }\n        onClose={handleClose}\n      >\n        <Header content=\"Muokkaa biisin tietoja\" />\n        <Modal.Content>\n          <Form onSubmit={submitTrack}>\n            <Form.Field required>\n              <label>Artisti</label>\n              <Input\n                defaultValue={artist}\n                // value={artist}\n                type=\"text\"\n                placeholder={artist}\n                onChange={e => setArtist(e.target.value)}\n              />\n            </Form.Field>\n            <Form.Field required>\n              <label>Albumi</label>\n              <Input\n                defaultValue={album}\n                type=\"text\"\n                placeholder=\"Albumi...\"\n                onChange={e => setAlbum(e.target.value)}\n              />\n            </Form.Field>\n            <Form.Field required>\n              <label>Biisi</label>\n              <Input\n                defaultValue={track}\n                type=\"text\"\n                placeholder=\"Biisi...\"\n                onChange={e => setTrack(e.target.value)}\n              />\n            </Form.Field>\n            <Form.Group widths=\"equal\">\n              <Form.Field required>\n                <label>Kesto - minuutit</label>\n                <Input\n                  maxLength={4}\n                  defaultValue={min}\n                  type=\"number\"\n                  placeholder=\"Minuuttia...\"\n                  onChange={e => setMin(e.target.value)}\n                />\n              </Form.Field>\n              <Form.Field required>\n                <label>Kesto - sekunnit</label>\n                <Input\n                  defaultValue={sec}\n                  maxLength={2}\n                  type=\"number\"\n                  placeholder=\"Sekuntia...\"\n                  onChange={e => setSec(e.target.value)}\n                />\n              </Form.Field>\n            </Form.Group>\n            <Form.Group widths=\"equal\">\n              <Form.Field required>\n                <label>Levy#</label>\n                <Input\n                  maxLength={2}\n                  defaultValue={discNo}\n                  type=\"number\"\n                  placeholder=\"CD1=1, CD2=2, A1=1, A2=2...\"\n                  onChange={e => setDiscNo(e.target.value)}\n                />\n              </Form.Field>\n              <Form.Field required>\n                <label>Biisi#</label>\n                <Input\n                  defaultValue={trackNo}\n                  maxLength={2}\n                  type=\"number\"\n                  placeholder=\"Biisi #...\"\n                  onChange={e => setTrackNo(e.target.value)}\n                />\n              </Form.Field>\n            </Form.Group>\n            <Form.Field>\n              <label>Tekijät - max 5kpl, yksi per rivi, SUKUNIMI ETUNIMI</label>\n              <TextArea\n                defaultValue={people}\n                onChange={e => setPeople(e.target.value)}\n                placeholder=\"Tekijät - max 5kpl\"\n              />\n            </Form.Field>\n            <Form.Group widths=\"equal\">\n              <Form.Field required>\n                <label>Säveltäjän kotimaa</label>\n                <Dropdown\n                  placeholder=\"Suomi, muu, ei tietoa...\"\n                  openOnFocus={false}\n                  defaultValue={country}\n                  selection\n                  options={countryOptions}\n                  onChange={getCountry}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Tallennusmaa</label>\n                <Dropdown\n                  placeholder=\"Valitse tallennusmaa...\"\n                  openOnFocus={false}\n                  defaultValue={recordCountry}\n                  selection\n                  search\n                  options={recordCountryOptions}\n                  onChange={getRecordCountry}\n                />\n              </Form.Field>\n            </Form.Group>\n            <Form.Field required>\n              <label>Levymerkki</label>\n              <Input\n                defaultValue={label}\n                type=\"text\"\n                placeholder=\"Levymerkki...\"\n                onChange={e => setLabel(e.target.value)}\n              />\n            </Form.Field>\n            <Form.Field required>\n              <label style={{ display: 'inline' }}>Levykoodi</label>\n              <Button\n                onClick={e => getDiscogs(e.preventDefault())}\n                size=\"mini\"\n                floated=\"right\"\n                style={{ marginBottom: '0.3rem' }}\n              >\n                Hae levykoodi Discogsista\n              </Button>\n              <Input\n                value={catId}\n                type=\"text\"\n                placeholder=\"Levykoodi...\"\n                onChange={e => setCatId(e.target.value)}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>ISRC</label>\n              <Input\n                defaultValue={isrc}\n                maxLength={12}\n                type=\"text\"\n                placeholder=\"ISRC...\"\n                onChange={e => setIsrc(e.target.value)}\n              />\n            </Form.Field>\n            <Form.Field required>\n              <label>Vuosi</label>\n              <Input\n                defaultValue={year}\n                maxLength={4}\n                type=\"number\"\n                placeholder=\"Vuosi...\"\n                onChange={e => setYear(e.target.value)}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Lisätietoa</label>\n              <TextArea\n                defaultValue={comment}\n                onChange={e => setComment(e.target.value)}\n                placeholder=\"Lisätietoa...\"\n              />\n            </Form.Field>\n            <Button\n              // disabled={\n              //   !artist ||\n              //   !album ||\n              //   !track ||\n              //   !trackNo ||\n              //   !discNo ||\n              //   !min ||\n              //   !sec ||\n              //   !label ||\n              //   !catId ||\n              //   !year\n              // }\n              color=\"green\"\n              type=\"submit\"\n            >\n              Tallenna tiedot\n            </Button>\n          </Form>\n        </Modal.Content>\n      </Modal>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    report: state.report,\n    reportsList: state.reportsList,\n    login: state.login,\n    search: state.search\n  };\n};\nconst connectedEditTrackModal = connect(mapStateToProps, {\n  setNotification,\n  getOneTrack,\n  removeCurrentTrack,\n  updateTrack,\n  getCatIdFromDiscogs,\n  clearDiscogsCatId\n})(EditTrackModal);\n\nexport default connectedEditTrackModal;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Table, Icon, Checkbox } from 'semantic-ui-react';\nimport EditTrackModal from '../track/EditTrackModal';\nimport {\n  deleteTrackFromReport,\n  checkForDelete,\n  unCheckForDelete\n} from '../../actions/reportActions';\n\nconst ReportWithTracksItem = props => {\n  console.log('track to modal', props.track);\n  const [checked, setChecked] = useState(false);\n  // console.log('report with tracks item props', props);\n  const onDelete = () => {\n    const remainingTracks = props.report.report.filter(\n      t => t.report_track_id !== props.track.report_track_id\n    );\n    const params = {\n      report_track_id: props.track.report_track_id,\n      report_id: props.report.reportDetails.id,\n      remainingTracks\n    };\n    console.log(params);\n    props.deleteTrackFromReport(params);\n    console.log('klikd delete');\n  };\n  const onEdit = () => {\n    console.log('klikd edit');\n  };\n\n  const checkedClick = () => {\n    setChecked(!checked);\n    if (checked === true) {\n      console.log('removing id from delete array', props.track.report_track_id);\n      props.unCheckForDelete(props.track.report_track_id);\n    } else {\n      console.log('checked for delete id', props.track.report_track_id);\n      props.checkForDelete(props.track.report_track_id);\n    }\n  };\n  let minutes = Math.floor(props.track.length / 60);\n  minutes = minutes.toString();\n  let seconds = props.track.length - minutes * 60;\n  if (seconds.toString().length === 1) {\n    seconds = '0' + seconds.toString();\n  }\n  seconds = seconds.toString();\n\n  return (\n    <Table.Row>\n      <Table.Cell>\n        <Checkbox onChange={checkedClick} checked={checked} />\n        <Icon\n          style={{ marginLeft: '1.5rem', cursor: 'pointer' }}\n          onClick={onEdit}\n          name=\"arrows alternate\"\n        />\n      </Table.Cell>\n      <Table.Cell>{props.track.sortable_rank}</Table.Cell>\n      <Table.Cell>{props.track.artist_name}</Table.Cell>\n      <Table.Cell>{props.track.track_title}</Table.Cell>\n      <Table.Cell>\n        {minutes}:{seconds}\n      </Table.Cell>\n      <Table.Cell>\n        <Icon\n          style={{ cursor: 'pointer' }}\n          color=\"red\"\n          onClick={onDelete}\n          name=\"delete\"\n        />\n      </Table.Cell>\n      <Table.Cell>\n        {/* <Icon\n          style={{ cursor: 'pointer' }}\n          color=\"blue\"\n          onClick={onEdit}\n          name=\"edit\"\n        /> */}\n        <EditTrackModal\n          id={props.track.track_id}\n          sortable_rank={props.track.sortable_rank}\n          report_track_id={props.track.report_track_id}\n          track={props.track}\n        />\n      </Table.Cell>\n    </Table.Row>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    report: state.report,\n    reportsList: state.reportsList,\n    notification: state.notification\n  };\n};\n\nconst connectedReportWithTracksItem = connect(\n  mapStateToProps,\n  { deleteTrackFromReport, checkForDelete, unCheckForDelete }\n)(ReportWithTracksItem);\n\nexport default connectedReportWithTracksItem;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  getCatIdFromDiscogs,\n  clearDiscogsCatId\n} from '../../actions/searchActions';\nimport { setNotification } from '../../reducers/notificationReducer';\nimport { addNewTrack } from '../../actions/trackActions';\nimport {\n  Modal,\n  Header,\n  Form,\n  Button,\n  Input,\n  TextArea,\n  Dropdown\n} from 'semantic-ui-react';\n\nconst AddTrackModal = props => {\n  console.log('add track modal props', props);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [artist, setArtist] = useState('');\n  const [album, setAlbum] = useState('');\n  const [track, setTrack] = useState('');\n  const [min, setMin] = useState('');\n  const [sec, setSec] = useState('');\n  const [country, setCountry] = useState('');\n  const [recordCountry, setRecordCountry] = useState('');\n  const [people, setPeople] = useState('');\n  const [discNo, setDiscNo] = useState('');\n  const [trackNo, setTrackNo] = useState('');\n  const [year, setYear] = useState('');\n  const [label, setLabel] = useState('');\n  const [catId, setCatId] = useState('');\n  const [isrc, setIsrc] = useState('');\n  const [comment, setComment] = useState('');\n  useEffect(() => {\n    if (props.search.discogsCatId === null) {\n      setCatId('');\n    } else {\n      setCatId(props.search.discogsCatId);\n    }\n  }, [props.search.discogsCatId]);\n\n  const submitTrack = () => {\n    console.log('klikd submit track');\n    // artist name validation\n    if (artist === null) {\n      props.setNotification('Artisti on pakollinen tieto', 'fail');\n    }\n    let length = parseInt(min) * 60 + parseInt(sec);\n    if (people === null) {\n      const trackToAdd = {\n        artist_name: artist,\n        album_name: album,\n        track_title: track,\n        length,\n        country,\n        record_country: recordCountry,\n        people,\n        disc_no: discNo,\n        track_no: trackNo,\n        year,\n        label,\n        cat_id: catId,\n        isrc,\n        comment,\n        report_id: props.report.reportDetails.id,\n        user_id: props.login.id,\n        sortable_rank: props.report.report.length + 1\n      };\n      console.log(trackToAdd);\n      props.addNewTrack(trackToAdd);\n      handleClose();\n    } else {\n      const trackToAdd = {\n        artist_name: artist,\n        album_name: album,\n        track_title: track,\n        length,\n        country,\n        record_country: recordCountry,\n        people: `| ${people.replace(/\\n/g, ' | ')} |`,\n        disc_no: discNo,\n        track_no: trackNo,\n        year,\n        label,\n        cat_id: catId,\n        isrc,\n        comment,\n        report_id: props.report.reportDetails.id,\n        user_id: props.login.id,\n        sortable_rank: props.report.report.length + 1\n      };\n      console.log(trackToAdd);\n      props.addNewTrack(trackToAdd);\n      handleClose();\n    }\n  };\n\n  const countryOptions = [\n    {\n      key: 1,\n      text: 'Suomi',\n      value: 1\n    },\n    {\n      key: 2,\n      text: 'Muu',\n      value: 2\n    },\n    {\n      key: 0,\n      text: 'Ei tietoa',\n      value: null\n    }\n  ];\n  const getCountry = (event, { value }) => {\n    event.preventDefault();\n    setCountry(value);\n  };\n  const recordCountryOptions = [\n    { text: 'Finland', value: 'FI' },\n    { text: 'United Kingdom', value: 'GB' },\n    { text: 'United States', value: 'US' },\n    { text: 'Afghanistan', value: 'AF' },\n    { text: 'Åland Islands', value: 'AX' },\n    { text: 'Albania', value: 'AL' },\n    { text: 'Algeria', value: 'DZ' },\n    { text: 'American Samoa', value: 'AS' },\n    { text: 'AndorrA', value: 'AD' },\n    { text: 'Angola', value: 'AO' },\n    { text: 'Anguilla', value: 'AI' },\n    { text: 'Antarctica', value: 'AQ' },\n    { text: 'Antigua and Barbuda', value: 'AG' },\n    { text: 'Argentina', value: 'AR' },\n    { text: 'Armenia', value: 'AM' },\n    { text: 'Aruba', value: 'AW' },\n    { text: 'Australia', value: 'AU' },\n    { text: 'Austria', value: 'AT' },\n    { text: 'Azerbaijan', value: 'AZ' },\n    { text: 'Bahamas', value: 'BS' },\n    { text: 'Bahrain', value: 'BH' },\n    { text: 'Bangladesh', value: 'BD' },\n    { text: 'Barbados', value: 'BB' },\n    { text: 'Belarus', value: 'BY' },\n    { text: 'Belgium', value: 'BE' },\n    { text: 'Belize', value: 'BZ' },\n    { text: 'Benin', value: 'BJ' },\n    { text: 'Bermuda', value: 'BM' },\n    { text: 'Bhutan', value: 'BT' },\n    { text: 'Bolivia', value: 'BO' },\n    { text: 'Bosnia and Herzegovina', value: 'BA' },\n    { text: 'Botswana', value: 'BW' },\n    { text: 'Bouvet Island', value: 'BV' },\n    { text: 'Brazil', value: 'BR' },\n    { text: 'British Indian Ocean Territory', value: 'IO' },\n    { text: 'Brunei Darussalam', value: 'BN' },\n    { text: 'Bulgaria', value: 'BG' },\n    { text: 'Burkina Faso', value: 'BF' },\n    { text: 'Burundi', value: 'BI' },\n    { text: 'Cambodia', value: 'KH' },\n    { text: 'Cameroon', value: 'CM' },\n    { text: 'Canada', value: 'CA' },\n    { text: 'Cape Verde', value: 'CV' },\n    { text: 'Cayman Islands', value: 'KY' },\n    { text: 'Central African Republic', value: 'CF' },\n    { text: 'Chad', value: 'TD' },\n    { text: 'Chile', value: 'CL' },\n    { text: 'China', value: 'CN' },\n    { text: 'Christmas Island', value: 'CX' },\n    { text: 'Cocos (Keeling) Islands', value: 'CC' },\n    { text: 'Colombia', value: 'CO' },\n    { text: 'Comoros', value: 'KM' },\n    { text: 'Congo', value: 'CG' },\n    { text: 'Congo, The Democratic Republic of the', value: 'CD' },\n    { text: 'Cook Islands', value: 'CK' },\n    { text: 'Costa Rica', value: 'CR' },\n    { text: \"Cote D'Ivoire\", value: 'CI' },\n    { text: 'Croatia', value: 'HR' },\n    { text: 'Cuba', value: 'CU' },\n    { text: 'Cyprus', value: 'CY' },\n    { text: 'Czech Republic', value: 'CZ' },\n    { text: 'Denmark', value: 'DK' },\n    { text: 'Djibouti', value: 'DJ' },\n    { text: 'Dominica', value: 'DM' },\n    { text: 'Dominican Republic', value: 'DO' },\n    { text: 'Ecuador', value: 'EC' },\n    { text: 'Egypt', value: 'EG' },\n    { text: 'El Salvador', value: 'SV' },\n    { text: 'Equatorial Guinea', value: 'GQ' },\n    { text: 'Eritrea', value: 'ER' },\n    { text: 'Estonia', value: 'EE' },\n    { text: 'Ethiopia', value: 'ET' },\n    { text: 'Falkland Islands (Malvinas)', value: 'FK' },\n    { text: 'Faroe Islands', value: 'FO' },\n    { text: 'Fiji', value: 'FJ' },\n    { text: 'France', value: 'FR' },\n    { text: 'French Guiana', value: 'GF' },\n    { text: 'French Polynesia', value: 'PF' },\n    { text: 'French Southern Territories', value: 'TF' },\n    { text: 'Gabon', value: 'GA' },\n    { text: 'Gambia', value: 'GM' },\n    { text: 'Georgia', value: 'GE' },\n    { text: 'Germany', value: 'DE' },\n    { text: 'Ghana', value: 'GH' },\n    { text: 'Gibraltar', value: 'GI' },\n    { text: 'Greece', value: 'GR' },\n    { text: 'Greenland', value: 'GL' },\n    { text: 'Grenada', value: 'GD' },\n    { text: 'Guadeloupe', value: 'GP' },\n    { text: 'Guam', value: 'GU' },\n    { text: 'Guatemala', value: 'GT' },\n    { text: 'Guernsey', value: 'GG' },\n    { text: 'Guinea', value: 'GN' },\n    { text: 'Guinea-Bissau', value: 'GW' },\n    { text: 'Guyana', value: 'GY' },\n    { text: 'Haiti', value: 'HT' },\n    { text: 'Heard Island and Mcdonald Islands', value: 'HM' },\n    { text: 'Holy See (Vatican City State)', value: 'VA' },\n    { text: 'Honduras', value: 'HN' },\n    { text: 'Hong Kong', value: 'HK' },\n    { text: 'Hungary', value: 'HU' },\n    { text: 'Iceland', value: 'IS' },\n    { text: 'India', value: 'IN' },\n    { text: 'Indonesia', value: 'ID' },\n    { text: 'Iran, Islamic Republic Of', value: 'IR' },\n    { text: 'Iraq', value: 'IQ' },\n    { text: 'Ireland', value: 'IE' },\n    { text: 'Isle of Man', value: 'IM' },\n    { text: 'Israel', value: 'IL' },\n    { text: 'Italy', value: 'IT' },\n    { text: 'Jamaica', value: 'JM' },\n    { text: 'Japan', value: 'JP' },\n    { text: 'Jersey', value: 'JE' },\n    { text: 'Jordan', value: 'JO' },\n    { text: 'Kazakhstan', value: 'KZ' },\n    { text: 'Kenya', value: 'KE' },\n    { text: 'Kiribati', value: 'KI' },\n    { text: \"Korea, Democratic People's Republic of\", value: 'KP' },\n    { text: 'Korea, Republic of', value: 'KR' },\n    { text: 'Kuwait', value: 'KW' },\n    { text: 'Kyrgyzstan', value: 'KG' },\n    { text: \"Lao People's Democratic Republic\", value: 'LA' },\n    { text: 'Latvia', value: 'LV' },\n    { text: 'Lebanon', value: 'LB' },\n    { text: 'Lesotho', value: 'LS' },\n    { text: 'Liberia', value: 'LR' },\n    { text: 'Libyan Arab Jamahiriya', value: 'LY' },\n    { text: 'Liechtenstein', value: 'LI' },\n    { text: 'Lithuania', value: 'LT' },\n    { text: 'Luxembourg', value: 'LU' },\n    { text: 'Macao', value: 'MO' },\n    { text: 'Macedonia, The Former Yugoslav Republic of', value: 'MK' },\n    { text: 'Madagascar', value: 'MG' },\n    { text: 'Malawi', value: 'MW' },\n    { text: 'Malaysia', value: 'MY' },\n    { text: 'Maldives', value: 'MV' },\n    { text: 'Mali', value: 'ML' },\n    { text: 'Malta', value: 'MT' },\n    { text: 'Marshall Islands', value: 'MH' },\n    { text: 'Martinique', value: 'MQ' },\n    { text: 'Mauritania', value: 'MR' },\n    { text: 'Mauritius', value: 'MU' },\n    { text: 'Mayotte', value: 'YT' },\n    { text: 'Mexico', value: 'MX' },\n    { text: 'Micronesia, Federated States of', value: 'FM' },\n    { text: 'Moldova, Republic of', value: 'MD' },\n    { text: 'Monaco', value: 'MC' },\n    { text: 'Mongolia', value: 'MN' },\n    { text: 'Montenegro', value: 'ME' },\n    { text: 'Montserrat', value: 'MS' },\n    { text: 'Morocco', value: 'MA' },\n    { text: 'Mozambique', value: 'MZ' },\n    { text: 'Myanmar', value: 'MM' },\n    { text: 'Namibia', value: 'NA' },\n    { text: 'Nauru', value: 'NR' },\n    { text: 'Nepal', value: 'NP' },\n    { text: 'Netherlands', value: 'NL' },\n    { text: 'Netherlands Antilles', value: 'AN' },\n    { text: 'New Caledonia', value: 'NC' },\n    { text: 'New Zealand', value: 'NZ' },\n    { text: 'Nicaragua', value: 'NI' },\n    { text: 'Niger', value: 'NE' },\n    { text: 'Nigeria', value: 'NG' },\n    { text: 'Niue', value: 'NU' },\n    { text: 'Norfolk Island', value: 'NF' },\n    { text: 'Northern Mariana Islands', value: 'MP' },\n    { text: 'Norway', value: 'NO' },\n    { text: 'Oman', value: 'OM' },\n    { text: 'Pakistan', value: 'PK' },\n    { text: 'Palau', value: 'PW' },\n    { text: 'Palestinian Territory, Occupied', value: 'PS' },\n    { text: 'Panama', value: 'PA' },\n    { text: 'Papua New Guinea', value: 'PG' },\n    { text: 'Paraguay', value: 'PY' },\n    { text: 'Peru', value: 'PE' },\n    { text: 'Philippines', value: 'PH' },\n    { text: 'Poland', value: 'PL' },\n    { text: 'Portugal', value: 'PT' },\n    { text: 'Puerto Rico', value: 'PR' },\n    { text: 'Qatar', value: 'QA' },\n    { text: 'Romania', value: 'RO' },\n    { text: 'Russian Federation', value: 'RU' },\n    { text: 'RWANDA', value: 'RW' },\n    { text: 'Saint Helena', value: 'SH' },\n    { text: 'Saint Kitts and Nevis', value: 'KN' },\n    { text: 'Saint Lucia', value: 'LC' },\n    { text: 'Saint Pierre and Miquelon', value: 'PM' },\n    { text: 'Saint Vincent and the Grenadines', value: 'VC' },\n    { text: 'Samoa', value: 'WS' },\n    { text: 'San Marino', value: 'SM' },\n    { text: 'Sao Tome and Principe', value: 'ST' },\n    { text: 'Saudi Arabia', value: 'SA' },\n    { text: 'Senegal', value: 'SN' },\n    { text: 'Serbia', value: 'RS' },\n    { text: 'Seychelles', value: 'SC' },\n    { text: 'Sierra Leone', value: 'SL' },\n    { text: 'Singapore', value: 'SG' },\n    { text: 'Slovakia', value: 'SK' },\n    { text: 'Slovenia', value: 'SI' },\n    { text: 'Solomon Islands', value: 'SB' },\n    { text: 'Somalia', value: 'SO' },\n    { text: 'South Africa', value: 'ZA' },\n    { text: 'South Georgia and the South Sandwich Islands', value: 'GS' },\n    { text: 'Spain', value: 'ES' },\n    { text: 'Sri Lanka', value: 'LK' },\n    { text: 'Sudan', value: 'SD' },\n    { text: 'Suriname', value: 'SR' },\n    { text: 'Svalbard and Jan Mayen', value: 'SJ' },\n    { text: 'Swaziland', value: 'SZ' },\n    { text: 'Sweden', value: 'SE' },\n    { text: 'Switzerland', value: 'CH' },\n    { text: 'Syrian Arab Republic', value: 'SY' },\n    { text: 'Taiwan, Province of China', value: 'TW' },\n    { text: 'Tajikistan', value: 'TJ' },\n    { text: 'Tanzania, United Republic of', value: 'TZ' },\n    { text: 'Thailand', value: 'TH' },\n    { text: 'Timor-Leste', value: 'TL' },\n    { text: 'Togo', value: 'TG' },\n    { text: 'Tokelau', value: 'TK' },\n    { text: 'Tonga', value: 'TO' },\n    { text: 'Trinidad and Tobago', value: 'TT' },\n    { text: 'Tunisia', value: 'TN' },\n    { text: 'Turkey', value: 'TR' },\n    { text: 'Turkmenistan', value: 'TM' },\n    { text: 'Turks and Caicos Islands', value: 'TC' },\n    { text: 'Tuvalu', value: 'TV' },\n    { text: 'Uganda', value: 'UG' },\n    { text: 'Ukraine', value: 'UA' },\n    { text: 'United Arab Emirates', value: 'AE' },\n    { text: 'United States Minor Outlying Islands', value: 'UM' },\n    { text: 'Uruguay', value: 'UY' },\n    { text: 'Uzbekistan', value: 'UZ' },\n    { text: 'Vanuatu', value: 'VU' },\n    { text: 'Venezuela', value: 'VE' },\n    { text: 'Viet Nam', value: 'VN' },\n    { text: 'Virgin Islands, British', value: 'VG' },\n    { text: 'Virgin Islands, U.S.', value: 'VI' },\n    { text: 'Wallis and Futuna', value: 'WF' },\n    { text: 'Western Sahara', value: 'EH' },\n    { text: 'Yemen', value: 'YE' },\n    { text: 'Zambia', value: 'ZM' },\n    { text: 'Zimbabwe', value: 'ZW' }\n  ];\n  const getRecordCountry = (event, { value }) => {\n    event.preventDefault();\n    setRecordCountry(value);\n  };\n  const handleOpen = () => {\n    setModalOpen(true);\n  };\n  const handleClose = () => {\n    setModalOpen(false);\n  };\n  const getDiscogs = () => {\n    const query = {\n      artist,\n      album\n    };\n    props.getCatIdFromDiscogs(query);\n  };\n  return (\n    <Modal\n      open={modalOpen}\n      closeIcon\n      trigger={\n        <Button color=\"blue\" onClick={handleOpen}>\n          Lisää uusi biisi\n        </Button>\n      }\n      onClose={handleClose}\n    >\n      <Header content=\"Lisää uusi biisi\" />\n      <Modal.Content>\n        <Form onSubmit={submitTrack}>\n          <Form.Field required>\n            <label>Artisti </label>\n            <Input\n              value={artist}\n              type=\"text\"\n              placeholder=\"Artisti...\"\n              onChange={e => setArtist(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field required>\n            <label>Albumi</label>\n            <Input\n              value={album}\n              type=\"text\"\n              placeholder=\"Albumi...\"\n              onChange={e => setAlbum(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field required>\n            <label>Biisi</label>\n            <Input\n              value={track}\n              type=\"text\"\n              placeholder=\"Biisi...\"\n              onChange={e => setTrack(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Group widths=\"equal\">\n            <Form.Field required>\n              <label>Kesto - minuutit</label>\n              <Input\n                maxLength={4}\n                value={min}\n                type=\"number\"\n                placeholder=\"Minuuttia...\"\n                onChange={e => setMin(e.target.value)}\n              />\n            </Form.Field>\n            <Form.Field required>\n              <label>Kesto - sekunnit</label>\n              <Input\n                value={sec}\n                maxLength={2}\n                type=\"number\"\n                placeholder=\"Sekuntia...\"\n                onChange={e => setSec(e.target.value)}\n              />\n            </Form.Field>\n          </Form.Group>\n          <Form.Group widths=\"equal\">\n            <Form.Field required>\n              <label>Levy#</label>\n              <Input\n                maxLength={2}\n                value={discNo}\n                type=\"number\"\n                placeholder=\"CD1=1, CD2=2, A1=1, A2=2...\"\n                onChange={e => setDiscNo(e.target.value)}\n              />\n            </Form.Field>\n            <Form.Field required>\n              <label>Biisi#</label>\n              <Input\n                value={trackNo}\n                maxLength={2}\n                type=\"number\"\n                placeholder=\"Biisi #...\"\n                onChange={e => setTrackNo(e.target.value)}\n              />\n            </Form.Field>\n          </Form.Group>\n          <Form.Field>\n            <label>Tekijät - max 5kpl, yksi per rivi, SUKUNIMI ETUNIMI</label>\n            <TextArea\n              onChange={e => setPeople(e.target.value)}\n              placeholder=\"Tekijät - max 5kpl\"\n            />\n          </Form.Field>\n          <Form.Group widths=\"equal\">\n            <Form.Field>\n              <label>\n                Säveltäjän kotimaa\n                <span style={{ color: 'red' }}>\n                  <strong>*</strong>\n                </span>\n              </label>\n              <Dropdown\n                placeholder=\"Suomi, muu, ei tietoa...\"\n                openOnFocus={false}\n                value={country}\n                selection\n                options={countryOptions}\n                onChange={getCountry}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Tallennusmaa</label>\n              <Dropdown\n                placeholder=\"Valitse tallennusmaa...\"\n                openOnFocus={false}\n                value={recordCountry}\n                selection\n                search\n                options={recordCountryOptions}\n                onChange={getRecordCountry}\n              />\n            </Form.Field>\n          </Form.Group>\n          <Form.Field>\n            <label>\n              Levymerkki\n              <span style={{ color: 'red' }}>\n                <strong>*</strong>\n              </span>\n            </label>\n            <Input\n              value={label}\n              type=\"text\"\n              placeholder=\"Levymerkki...\"\n              onChange={e => setLabel(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field required>\n            <label style={{ display: 'inline' }}>Levykoodi</label>\n            <Button\n              onClick={e => getDiscogs(e.preventDefault())}\n              size=\"mini\"\n              floated=\"right\"\n              style={{ marginBottom: '0.3rem' }}\n            >\n              Hae levykoodi Discogsista\n            </Button>\n            <Input\n              value={catId}\n              type=\"text\"\n              placeholder=\"Levykoodi...\"\n              onChange={e => setCatId(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>ISRC</label>\n            <Input\n              value={isrc}\n              maxLength={12}\n              type=\"text\"\n              placeholder=\"ISRC...\"\n              onChange={e => setIsrc(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>\n              Vuosi\n              <span style={{ color: 'red' }}>\n                <strong>*</strong>\n              </span>\n            </label>\n            <Input\n              value={year}\n              maxLength={4}\n              type=\"number\"\n              placeholder=\"Vuosi...\"\n              onChange={e => setYear(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Lisätietoa</label>\n            <TextArea\n              onChange={e => setComment(e.target.value)}\n              placeholder=\"Lisätietoa...\"\n            />\n          </Form.Field>\n          <Button\n            disabled={\n              !artist ||\n              !album ||\n              !track ||\n              !trackNo ||\n              !discNo ||\n              !min ||\n              !sec ||\n              !label ||\n              !catId ||\n              !year\n            }\n            color=\"green\"\n            type=\"submit\"\n          >\n            Tallenna ja lisää raporttiin\n          </Button>\n        </Form>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    report: state.report,\n    reportsList: state.reportsList,\n    login: state.login,\n    search: state.search\n  };\n};\nconst connectedAddTrackModal = connect(mapStateToProps, {\n  setNotification,\n  addNewTrack,\n  getCatIdFromDiscogs,\n  clearDiscogsCatId\n})(AddTrackModal);\n\nexport default connectedAddTrackModal;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Search, Button, Grid, Header } from 'semantic-ui-react';\nimport { Redirect } from 'react-router-dom';\nimport { getAutocompleteResults } from '../../actions/searchActions';\nimport { addTrackToReport } from '../../actions/reportActions';\nimport { setNotification } from '../../reducers/notificationReducer';\nimport AddTrackModal from './AddTrackModal';\nimport { useSearchTracksHook } from '../../hooks/searchTracksHook';\n\nconst SearchTrack = ({ report, addTrackToReport, setNotification }) => {\n  const [trackToSave, setTrackToSave] = useState(null);\n  const [redirect, setRedirect] = useState(false);\n  const { setInputText, search } = useSearchTracksHook();\n\n  const handleResultSelect = (e, { result }) => {\n    const trackToSave = {\n      track_id: result.value,\n      report_id: report.reportDetails.id,\n      length: result.length,\n      sortable_rank: report.report.length + 1\n    };\n    console.log('handling result select', trackToSave);\n    setTrackToSave(trackToSave);\n  };\n\n  const saveClick = () => {\n    if (!trackToSave) {\n      setNotification('Valitse biisi!', 'fail');\n    } else {\n      console.log('klikd save', trackToSave);\n      addTrackToReport(trackToSave);\n      setTrackToSave(null);\n    }\n  };\n\n  const goToAdvancedSearch = () => {\n    setRedirect(true);\n  };\n\n  let results;\n  if (search.result === undefined) {\n    results = [];\n  } else {\n    results = search.result.map(result => ({\n      key: result.track_id,\n      title: result.track_title,\n      description: `${result.artist}:\n                    ${result.album}`,\n      length: result.length,\n      value: result.track_id\n    }));\n  }\n\n  if (redirect) {\n    return <Redirect to={`/search`} />;\n  }\n\n  return (\n    <div style={{ marginLeft: '1rem', marginBottom: '1rem' }}>\n      <Grid divided=\"vertically\">\n        <Grid.Row columns=\"2\">\n          <Form>\n            <Header>Hae</Header>\n            <Form.Group widths=\"equal\">\n              <Form.Field>\n                <Search\n                  loading={search.loading}\n                  onResultSelect={handleResultSelect}\n                  onSearchChange={e => setInputText(e.target.value)}\n                  onSelectionChange={handleResultSelect}\n                  results={results}\n                  style={{ cursor: 'pointer' }}\n                />\n              </Form.Field>\n              <Form.Field>\n                <Button color=\"green\" onClick={saveClick}>\n                  Lisää biisi raporttiin\n                </Button>\n              </Form.Field>\n            </Form.Group>\n            <Form.Group widths=\"equal\">\n              <Form.Field>\n                {' '}\n                <Button onClick={goToAdvancedSearch} color=\"blue\">\n                  Tarkennettu haku\n                </Button>\n              </Form.Field>\n              <Form.Field>\n                {' '}\n                <AddTrackModal />\n              </Form.Field>\n            </Form.Group>\n          </Form>\n        </Grid.Row>\n      </Grid>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('search track state to props', state);\n  return {\n    search: state.search,\n    report: state.report\n  };\n};\nconst connectedSearchTrack = connect(mapStateToProps, {\n  getAutocompleteResults,\n  addTrackToReport,\n  setNotification\n})(SearchTrack);\n\nexport default connectedSearchTrack;\n","import { useState } from 'react';\nimport AwesomeDebouncePromise from 'awesome-debounce-promise';\nimport useConstant from 'use-constant';\nimport { useAsync } from 'react-async-hook';\nimport searchService from '../services/search';\n\nexport const useSearchTracksHook = () => {\n  const [inputText, setInputText] = useState('');\n\n  // Debounce the original search async function\n  const debouncedSearchTrack = useConstant(() =>\n    AwesomeDebouncePromise(searchService.getTracksForSearch, 400)\n  );\n  const search = useAsync(\n    async () => {\n      if (inputText.length === 0) {\n        return [];\n      } else {\n        return debouncedSearchTrack(inputText);\n      }\n    },\n    // Ensure a new request is made everytime the text changes (even if it's debounced)\n    [inputText]\n  );\n  return {\n    inputText,\n    setInputText,\n    search\n  };\n};\n","import React, { useState } from 'react';\nimport { getDjonlineTracks } from '../../actions/trackActions';\nimport { connect } from 'react-redux';\nimport { Form, Button, Dropdown, Grid, Header } from 'semantic-ui-react';\nimport DatePicker from 'react-datepicker';\nimport fi from 'date-fns/locale/fi';\nimport moment from 'moment';\nimport { parseISO } from 'date-fns';\n\nconst GetDjOnlineTracks = props => {\n  const [date, setDate] = useState(\n    parseISO(props.report.reportDetails.program_date)\n  );\n  const [studioId, setStudioId] = useState('928');\n  const [startTime, setStartTime] = useState(\n    props.report.reportDetails.program_start_time.slice(0, 2)\n  );\n  const [endTime, setEndTime] = useState(\n    props.report.reportDetails.program_end_time.slice(0, 2)\n  );\n\n  console.log(endTime);\n  const getStudioId = (e, { value }) => {\n    e.preventDefault();\n    setStudioId(value);\n  };\n\n  const studioOptions = [\n    {\n      key: '928',\n      text: 'Studio 1',\n      value: '928'\n    },\n    {\n      key: '1047',\n      text: 'Studio 2',\n      value: '1047'\n    }\n  ];\n\n  // list of program start time options\n  const startTimeOptions = [\n    {\n      key: '00:00',\n      text: '00:00',\n      value: '00'\n    },\n    {\n      key: '01:00',\n      text: '01:00',\n      value: '01'\n    },\n    {\n      key: '02:00',\n      text: '02:00',\n      value: '02'\n    },\n    {\n      key: '03:00',\n      text: '03:00',\n      value: '03'\n    },\n    {\n      key: '04:00',\n      text: '04:00',\n      value: '04'\n    },\n    {\n      key: '05:00',\n      text: '05:00',\n      value: '05'\n    },\n    {\n      key: '06:00',\n      text: '06:00',\n      value: '06'\n    },\n    {\n      key: '07:00',\n      text: '07:00',\n      value: '07'\n    },\n    {\n      key: '08:00',\n      text: '08:00',\n      value: '08'\n    },\n    {\n      key: '09:00',\n      text: '09:00',\n      value: '09'\n    },\n    {\n      key: '10:00',\n      text: '10:00',\n      value: '10'\n    },\n    {\n      key: '11:00',\n      text: '11:00',\n      value: '11'\n    },\n    {\n      key: '12:00',\n      text: '12:00',\n      value: '12'\n    },\n    {\n      key: '13:00',\n      text: '13:00',\n      value: '13'\n    },\n    {\n      key: '14:00',\n      text: '14:00',\n      value: '14'\n    },\n    {\n      key: '15:00',\n      text: '15:00',\n      value: '15'\n    },\n    {\n      key: '16:00',\n      text: '16:00',\n      value: '16'\n    },\n    {\n      key: '17:00',\n      text: '17:00',\n      value: '17'\n    },\n    {\n      key: '18:00',\n      text: '18:00',\n      value: '18'\n    },\n    {\n      key: '19:00',\n      text: '19:00',\n      value: '19'\n    },\n    {\n      key: '20:00',\n      text: '20:00',\n      value: '20'\n    },\n    {\n      key: '21:00',\n      text: '21:00',\n      value: '21'\n    },\n    {\n      key: '22:00',\n      text: '22:00',\n      value: '22'\n    },\n    {\n      key: '23:00',\n      text: '23:00',\n      value: '23'\n    }\n  ];\n  const getStartTime = (event, { value }) => {\n    event.preventDefault();\n    setStartTime(value);\n  };\n\n  // list of program end time options\n  const endTimeOptions = [\n    {\n      key: '01:00',\n      text: '01:00',\n      value: '01'\n    },\n    {\n      key: '02:00',\n      text: '02:00',\n      value: '02'\n    },\n    {\n      key: '03:00',\n      text: '03:00',\n      value: '03'\n    },\n    {\n      key: '04:00',\n      text: '04:00',\n      value: '04'\n    },\n    {\n      key: '05:00',\n      text: '05:00',\n      value: '05'\n    },\n    {\n      key: '06:00',\n      text: '06:00',\n      value: '06'\n    },\n    {\n      key: '07:00',\n      text: '07:00',\n      value: '07'\n    },\n    {\n      key: '08:00',\n      text: '08:00',\n      value: '08'\n    },\n    {\n      key: '09:00',\n      text: '09:00',\n      value: '09'\n    },\n    {\n      key: '10:00',\n      text: '10:00',\n      value: '10'\n    },\n    {\n      key: '11:00',\n      text: '11:00',\n      value: '11'\n    },\n    {\n      key: '12:00',\n      text: '12:00',\n      value: '12'\n    },\n    {\n      key: '13:00',\n      text: '13:00',\n      value: '13'\n    },\n    {\n      key: '14:00',\n      text: '14:00',\n      value: '14'\n    },\n    {\n      key: '15:00',\n      text: '15:00',\n      value: '15'\n    },\n    {\n      key: '16:00',\n      text: '16:00',\n      value: '16'\n    },\n    {\n      key: '17:00',\n      text: '17:00',\n      value: '17'\n    },\n    {\n      key: '18:00',\n      text: '18:00',\n      value: '18'\n    },\n    {\n      key: '19:00',\n      text: '19:00',\n      value: '19'\n    },\n    {\n      key: '20:00',\n      text: '20:00',\n      value: '20'\n    },\n    {\n      key: '21:00',\n      text: '21:00',\n      value: '21'\n    },\n    {\n      key: '22:00',\n      text: '22:00',\n      value: '22'\n    },\n    {\n      key: '23:00',\n      text: '23:00',\n      value: '23'\n    },\n    {\n      key: '24:00',\n      text: '24:00',\n      value: '24'\n    }\n  ];\n  const getEndTime = (event, { value }) => {\n    event.preventDefault();\n    setEndTime(value);\n  };\n\n  const GetTracksFromApi = () => {\n    const searchParams = {\n      studioId,\n      date: moment(date).format('YYYY-MM-DD'),\n      startTime,\n      endTime,\n      report_id: props.report.reportDetails.id,\n      sortable_rank_start: props.report.report.length\n    };\n    props.getDjonlineTracks(searchParams);\n  };\n\n  return (\n    <div style={{ marginLeft: '1rem', marginBottom: '1rem' }}>\n      <Grid divided=\"vertically\">\n        <Grid.Row columns={2}>\n          <Form>\n            <Header>Hae biisit DJOnlinesta</Header>\n            <Form.Group widths=\"equal\">\n              <Form.Field>\n                <label>Valitse päivä</label>\n                <DatePicker\n                  selected={date}\n                  dateFormat=\"dd.MM.yyyy\"\n                  locale={fi}\n                  onChange={date => setDate(date)}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Valitse studio</label>\n                <Dropdown\n                  placeholder=\"Studio 1\"\n                  openOnFocus\n                  selection\n                  options={studioOptions}\n                  onChange={getStudioId}\n                  defaultValue={studioId}\n                />{' '}\n              </Form.Field>\n            </Form.Group>\n            <Form.Group widths=\"equal\">\n              <Form.Field>\n                <label>Alkaen kello</label>\n                <Dropdown\n                  placeholder=\"Alkaen HH:MM\"\n                  openOnFocus\n                  selection\n                  search\n                  options={startTimeOptions}\n                  onChange={getStartTime}\n                  defaultValue={startTime}\n                />{' '}\n              </Form.Field>\n              <Form.Field>\n                <label>Päättyen kello</label>\n                <Dropdown\n                  placeholder=\"Päättyen HH:MM\"\n                  openOnFocus\n                  selection\n                  search\n                  options={endTimeOptions}\n                  onChange={getEndTime}\n                  defaultValue={endTime}\n                />{' '}\n              </Form.Field>\n            </Form.Group>\n            <Button color=\"green\" onClick={GetTracksFromApi}>\n              Hae\n            </Button>\n          </Form>\n        </Grid.Row>\n      </Grid>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('getdjonlinetracks state to props', state);\n  return {\n    report: state.report,\n    reportsList: state.reportsList,\n    programs: state.programs,\n    notification: state.notification,\n    users: state.users,\n    login: state.login\n  };\n};\n\nconst connectedGetDjOnlineTracks = connect(mapStateToProps, {\n  getDjonlineTracks\n})(GetDjOnlineTracks);\n\nexport default connectedGetDjOnlineTracks;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Header,\n  Form,\n  Button,\n  Dropdown,\n  Segment,\n  Grid,\n  Dimmer,\n  Loader\n} from 'semantic-ui-react';\nimport DatePicker from 'react-datepicker';\nimport fi from 'date-fns/locale/fi';\nimport moment from 'moment';\nimport SearchTrack from '../track/SearchTrack';\nimport GetDjOnlineTracks from '../track/GetDjOnlineTracks';\nimport Togglable from '../layout/Togglable';\nimport { updateReport } from '../../actions/reportActions';\nimport { copyReport } from '../../actions/reportActions';\nimport { setNotification } from '../../reducers/notificationReducer';\n\nconst ReportDetails = props => {\n  const [programId, setProgramId] = useState('');\n  const [programNumber, setProgramNumber] = useState('');\n  const [dj, setDj] = useState('');\n  const [programDate, setProgramDate] = useState('');\n  const [programStartTime, setProgramStartTime] = useState('');\n  const [programEndTime, setProgramEndTime] = useState('');\n  const [status, setStatus] = useState('');\n  const [userId, setUserId] = useState('');\n  const [rerun, setRerun] = useState(null);\n\n  console.log('report detauls props', props);\n  useEffect(() => {\n    if (props.report.reportDetails !== null) {\n      setUserId(props.report.reportDetails.user_id);\n      setProgramId(props.report.reportDetails.program_id);\n      setDj(props.report.reportDetails.program_dj);\n      setProgramNumber(props.report.reportDetails.program_no);\n      setProgramDate(new Date(props.report.reportDetails.program_date));\n      setProgramStartTime(props.report.reportDetails.program_start_time);\n      setProgramEndTime(props.report.reportDetails.program_end_time);\n      setStatus(props.report.reportDetails.status);\n      setRerun(props.report.reportDetails.rerun);\n    }\n  }, [props.report.reportDetails]);\n\n  if (props.report.reportDetails === null || props.users.users === null) {\n    return (\n      <Segment>\n        <Dimmer active inverted>\n          <Loader inverted content=\"Ladataan...\" />\n        </Dimmer>\n      </Segment>\n    );\n  }\n\n  let programOptions = props.programs.activePrograms.map(program => ({\n    key: program.id,\n    text: program.name,\n    value: program.id\n  }));\n  let userOptions = props.users.users.map(user => ({\n    key: user.id,\n    text: `${user.first_name} ${user.last_name}`,\n    value: user.id\n  }));\n  const getProgram = (event, { value }) => {\n    event.preventDefault();\n    setProgramId(value);\n  };\n  const getUser = (event, { value }) => {\n    event.preventDefault();\n    setUserId(value);\n  };\n  // list of program start time options\n  const startTimeOptions = [\n    {\n      key: 0,\n      text: '00:00',\n      value: '00:00:00'\n    },\n    {\n      key: 1,\n      text: '01:00',\n      value: '01:00:00'\n    },\n    {\n      key: 2,\n      text: '02:00',\n      value: '02:00:00'\n    },\n    {\n      key: 3,\n      text: '03:00',\n      value: '03:00:00'\n    },\n    {\n      key: 4,\n      text: '04:00',\n      value: '04:00:00'\n    },\n    {\n      key: 5,\n      text: '05:00',\n      value: '05:00:00'\n    },\n    {\n      key: 6,\n      text: '06:00',\n      value: '06:00:00'\n    },\n    {\n      key: 7,\n      text: '07:00',\n      value: '07:00:00'\n    },\n    {\n      key: 8,\n      text: '08:00',\n      value: '08:00:00'\n    },\n    {\n      key: 9,\n      text: '09:00',\n      value: '09:00:00'\n    },\n    {\n      key: 10,\n      text: '10:00',\n      value: '10:00:00'\n    },\n    {\n      key: 11,\n      text: '11:00',\n      value: '11:00:00'\n    },\n    {\n      key: 12,\n      text: '12:00',\n      value: '12:00:00'\n    },\n    {\n      key: 13,\n      text: '13:00',\n      value: '13:00:00'\n    },\n    {\n      key: 14,\n      text: '14:00',\n      value: '14:00:00'\n    },\n    {\n      key: 15,\n      text: '15:00',\n      value: '15:00:00'\n    },\n    {\n      key: 16,\n      text: '16:00',\n      value: '16:00:00'\n    },\n    {\n      key: 17,\n      text: '17:00',\n      value: '17:00:00'\n    },\n    {\n      key: 18,\n      text: '18:00',\n      value: '18:00:00'\n    },\n    {\n      key: 19,\n      text: '19:00',\n      value: '19:00:00'\n    },\n    {\n      key: 20,\n      text: '20:00',\n      value: '20:00:00'\n    },\n    {\n      key: 21,\n      text: '21:00',\n      value: '21:00:00'\n    },\n    {\n      key: 22,\n      text: '22:00',\n      value: '22:00:00'\n    },\n    {\n      key: 23,\n      text: '23:00',\n      value: '23:00:00'\n    }\n  ];\n  const getStartTime = (event, { value }) => {\n    event.preventDefault();\n    setProgramStartTime(value);\n  };\n\n  // list of program end time options\n  const endTimeOptions = [\n    {\n      key: 0,\n      text: '01:00',\n      value: '01:00:00'\n    },\n    {\n      key: 1,\n      text: '02:00',\n      value: '02:00:00'\n    },\n    {\n      key: 2,\n      text: '03:00',\n      value: '03:00:00'\n    },\n    {\n      key: 3,\n      text: '04:00',\n      value: '04:00:00'\n    },\n    {\n      key: 4,\n      text: '05:00',\n      value: '05:00:00'\n    },\n    {\n      key: 5,\n      text: '06:00',\n      value: '06:00:00'\n    },\n    {\n      key: 6,\n      text: '07:00',\n      value: '07:00:00'\n    },\n    {\n      key: 7,\n      text: '08:00',\n      value: '08:00:00'\n    },\n    {\n      key: 8,\n      text: '09:00',\n      value: '09:00:00'\n    },\n    {\n      key: 9,\n      text: '10:00',\n      value: '10:00:00'\n    },\n    {\n      key: 10,\n      text: '11:00',\n      value: '11:00:00'\n    },\n    {\n      key: 11,\n      text: '12:00',\n      value: '12:00:00'\n    },\n    {\n      key: 12,\n      text: '13:00',\n      value: '13:00:00'\n    },\n    {\n      key: 13,\n      text: '14:00',\n      value: '14:00:00'\n    },\n    {\n      key: 14,\n      text: '15:00',\n      value: '15:00:00'\n    },\n    {\n      key: 15,\n      text: '16:00',\n      value: '16:00:00'\n    },\n    {\n      key: 16,\n      text: '17:00',\n      value: '17:00:00'\n    },\n    {\n      key: 17,\n      text: '18:00',\n      value: '18:00:00'\n    },\n    {\n      key: 18,\n      text: '19:00',\n      value: '19:00:00'\n    },\n    {\n      key: 19,\n      text: '20:00',\n      value: '20:00:00'\n    },\n    {\n      key: 20,\n      text: '21:00',\n      value: '21:00:00'\n    },\n    {\n      key: 21,\n      text: '22:00',\n      value: '22:00:00'\n    },\n    {\n      key: 22,\n      text: '23:00',\n      value: '23:00:00'\n    },\n    {\n      key: 23,\n      text: '23:59',\n      value: '23:59:59'\n    }\n  ];\n  const getEndTime = (event, { value }) => {\n    event.preventDefault();\n    setProgramEndTime(value);\n  };\n\n  // list of program status options\n  const statusOptions = [\n    {\n      key: 0,\n      text: 'Keskeneräinen',\n      value: 0\n    },\n    {\n      key: 1,\n      text: 'Valmis',\n      value: 1\n    },\n    {\n      key: 9,\n      text: 'Poistettu',\n      value: 9\n    }\n  ];\n  const getStatus = (event, { value }) => {\n    event.preventDefault();\n    setStatus(value);\n  };\n\n  const getRerun = () => {\n    console.log('getting rerun');\n    if (rerun === null) {\n      setRerun(1);\n    } else {\n      setRerun(null);\n    }\n  };\n\n  // save changes to db\n  const saveChanges = e => {\n    e.preventDefault();\n    const updatedReportDetails = {\n      id: props.report.reportDetails.id,\n      user_id: userId,\n      program_id: programId,\n      program_date: moment(programDate).format('YYYY-MM-DD'),\n      program_start_time: programStartTime,\n      program_end_time: programEndTime,\n      program_no: programNumber,\n      program_dj: dj,\n      program_name: props.report.reportDetails.program_name,\n      status: status,\n      rerun: rerun\n    };\n    if (\n      parseInt(updatedReportDetails.program_start_time) >=\n      parseInt(updatedReportDetails.program_end_time)\n    ) {\n      props.setNotification('Tarkasta aloitus- ja lopetusaika!', 'fail');\n    } else {\n      console.log('saving changes...', updatedReportDetails);\n      props.setNotification('Muutokset tallennettu!', 'success');\n      props.updateReport(updatedReportDetails);\n    }\n  };\n\n  // copy report for rerun\n  const copyReport = e => {\n    e.preventDefault();\n    console.log('klikd copy');\n    const reportDetailsToCopy = {\n      user_id: userId,\n      program_id: programId,\n      program_date: moment(programDate).format('YYYY-MM-DD'),\n      program_start_time: programStartTime,\n      program_end_time: programEndTime,\n      program_no: programNumber,\n      program_name: props.report.reportDetails.program_name,\n      program_dj: dj,\n      status: status,\n      rerun: rerun\n    };\n    const reportTracksToCopy = props.report.report;\n    console.log(reportDetailsToCopy);\n    console.log(reportTracksToCopy);\n    props.copyReport(reportDetailsToCopy, reportTracksToCopy);\n    props.setNotification(\n      `Raportti monistettu ajankohtaan ${moment(programDate).format(\n        'YYYY-MM-DD'\n      )}`,\n      'success'\n    );\n  };\n\n  const rerunCheckBox = () => {\n    if (props.login.level === 1) {\n      return null;\n    } else {\n      return (\n        <Form.Field>\n          <label>Uusinta</label>\n          <Form.Checkbox\n            name=\"rerun\"\n            onChange={getRerun}\n            checked={rerun ? true : false}\n          />\n        </Form.Field>\n      );\n    }\n  };\n\n  const duplicateBtn = () => {\n    if (props.login.level === 1) {\n      return null;\n    } else {\n      return <Button onClick={copyReport}>Monista</Button>;\n    }\n  };\n\n  return (\n    <div>\n      <Header>Lisää biisi raporttiin:</Header>\n      <Segment.Group horizontal>\n        <Segment>\n          <Togglable color=\"blue\" buttonLabel=\"Pikahaku\">\n            <SearchTrack />\n          </Togglable>\n        </Segment>\n        <Segment>\n          <Togglable color=\"blue\" buttonLabel=\"Hae biisit DJonlinesta\">\n            <GetDjOnlineTracks />\n          </Togglable>\n        </Segment>\n      </Segment.Group>\n\n      <Grid divided=\"vertically\">\n        <Grid.Row columns={2}>\n          <Grid.Column>\n            <Header>Raportin tiedot:</Header>\n            <Form>\n              <Form.Field>\n                <label>Ohjelma</label>\n                <Dropdown\n                  placeholder=\"Ohjelma\"\n                  openOnFocus\n                  selection\n                  value={programId}\n                  search\n                  options={programOptions}\n                  onChange={getProgram}\n                />{' '}\n              </Form.Field>\n              <Form.Field>\n                <label>Ohjelmanumero</label>\n                <Form.Input\n                  defaultValue={programNumber}\n                  onChange={e => setProgramNumber(e.target.value)}\n                />{' '}\n              </Form.Field>\n              <Form.Field>\n                <label>DJ</label>\n                <Form.Input\n                  value={dj}\n                  onChange={e => setDj(e.target.value)}\n                />{' '}\n              </Form.Field>\n\n              <Form.Group widths=\"equal\">\n                <Form.Field>\n                  <label>Ohjelman päivä</label>\n\n                  <DatePicker\n                    selected={programDate}\n                    disabledKeyboardNavigation={true}\n                    dateFormat=\"dd.MM.yyyy\"\n                    onChange={date => setProgramDate(date)}\n                    locale={fi}\n                  />\n                </Form.Field>\n\n                <Form.Field>\n                  <label>Alkaa kello</label>\n                  <Dropdown\n                    value={programStartTime}\n                    openOnFocus\n                    selection\n                    search\n                    options={startTimeOptions}\n                    onChange={getStartTime}\n                  />{' '}\n                </Form.Field>\n\n                <Form.Field>\n                  <label>Päättyy kello</label>\n                  <Dropdown\n                    value={programEndTime}\n                    openOnFocus\n                    selection\n                    search\n                    options={endTimeOptions}\n                    onChange={getEndTime}\n                  />{' '}\n                </Form.Field>\n              </Form.Group>\n              <Form.Field>\n                <label>Raportin tila</label>\n                <Dropdown\n                  openOnFocus\n                  selection\n                  options={statusOptions}\n                  onChange={getStatus}\n                  value={status}\n                />{' '}\n              </Form.Field>\n              <Form.Field>\n                <label>Käyttäjä</label>\n                <Dropdown\n                  placeholder=\"Käyttäjä\"\n                  openOnFocus={false}\n                  value={userId}\n                  selection\n                  search\n                  options={userOptions}\n                  onChange={getUser}\n                />\n              </Form.Field>\n              {rerunCheckBox()}\n              <Form.Group widths=\"equal\">\n                <Button color=\"green\" onClick={saveChanges}>\n                  Tallenna\n                </Button>\n                {duplicateBtn()}\n              </Form.Group>\n            </Form>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('report details state to props', state);\n  return {\n    report: state.report,\n    reportsList: state.reportsList,\n    programs: state.programs,\n    notification: state.notification,\n    users: state.users,\n    login: state.login\n  };\n};\n\nconst connectedReportDetails = connect(mapStateToProps, {\n  updateReport,\n  copyReport,\n  setNotification\n})(ReportDetails);\n\nexport default connectedReportDetails;\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport ReactDragListView from 'react-drag-listview/lib/index.js';\nimport {\n  Container,\n  Table,\n  Dimmer,\n  Loader,\n  Button,\n  Header\n} from 'semantic-ui-react';\nimport {\n  getOneReport,\n  getReportDetails,\n  deleteChecked,\n  updateSortableRank\n} from '../../actions/reportActions';\nimport { getOneTrack } from '../../actions/trackActions';\nimport ReportWithTracksItem from './ReportWithTracksItem';\nimport ReportDetails from './ReportDetails';\n\nconst ReportWithTracks = props => {\n  const [dragState, setDragState] = useState(null);\n  console.log(dragState);\n  // get report tracks by report id\n  useEffect(() => {\n    setTimeout(() => {\n      if (props.id === undefined) {\n        props.getOneReport(props.report.reportDetails.id);\n      } else {\n        props.getOneReport(props.id);\n      }\n    }, 1000);\n    // tää efekti uusiks sit kun hakutuloksista lisää biisin listaan\n    // eslint-disable-next-line\n  }, [props.report.djonline]);\n  // get report details by report id\n  useEffect(() => {\n    if (props.id === undefined) {\n      props.getReportDetails(props.report.reportDetails.id);\n    } else {\n      console.log('get details of report ', props.id);\n      props.getReportDetails(props.id);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  // fetch tracks after sorting changes\n  useEffect(() => {\n    console.log('array state changed', dragState);\n    props.updateSortableRank(dragState, props.id);\n    // eslint-disable-next-line\n  }, [dragState]);\n\n  // get track details after edit click\n  // useEffect(() => {\n  //   props.getOneTrack(props.report.editTrackId);\n  // }, [props.report.editTrackId]);\n\n  const array = props.report.report;\n  console.log('array', array);\n\n  const deleteChecked = () => {\n    console.log('klikd delete checkd');\n\n    let remainingTracks = props.report.report.filter(function(e) {\n      return this.indexOf(e.report_track_id) < 0;\n    }, props.report.checkedForDelete);\n    console.log(remainingTracks);\n    props.deleteChecked(\n      props.report.checkedForDelete,\n      props.id,\n      remainingTracks\n    );\n  };\n\n  const dragProps = {\n    onDragEnd(fromIndex, toIndex) {\n      console.log(dragState);\n      const item = array.splice(fromIndex, 1)[0];\n      console.log(item);\n      console.log(dragState);\n      array.splice(toIndex, 0, item);\n      setDragState(array);\n    },\n    nodeSelector: 'tr',\n    handleSelector: 'i.arrows'\n  };\n\n  console.log('report with tracks props', props);\n\n  if (props.report.report === null || props.report.reportDetails === null) {\n    return (\n      <Dimmer active inverted>\n        <Loader inverted content=\"Ladataan...\" />\n      </Dimmer>\n    );\n  }\n  if (props.report.loading) {\n    return (\n      <Dimmer active inverted>\n        <Loader inverted content=\"Ladataan...\" />\n      </Dimmer>\n    );\n  }\n  if (props.report.report.length === 0) {\n    return (\n      <Container>\n        <Header>Ei lisättyjä kappaleita. Lisää biisit alta</Header>\n        <ReportDetails report={props.report.reportDetails} />\n      </Container>\n    );\n  }\n  if (\n    props.login.level === 1 &&\n    props.login.id !== props.report.reportDetails.user_id\n  ) {\n    return null;\n  } else {\n    return (\n      <Container>\n        <h3>Raportti</h3>\n        <ReactDragListView {...dragProps}>\n          <Table striped>\n            <Table.Header>\n              <Table.Row>\n                <Table.Cell></Table.Cell>\n                <Table.Cell>#</Table.Cell>\n                <Table.Cell>Artisti</Table.Cell>\n                <Table.Cell>Biisi</Table.Cell>\n                <Table.Cell>Kesto</Table.Cell>\n                <Table.Cell></Table.Cell>\n                <Table.Cell></Table.Cell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {props.report.report.map(track => (\n                <ReportWithTracksItem\n                  key={track.report_track_id}\n                  track={track}\n                />\n              ))}\n            </Table.Body>\n            <Table.Footer>\n              <Table.Row></Table.Row>\n            </Table.Footer>\n          </Table>\n        </ReactDragListView>\n\n        <Button\n          color=\"red\"\n          onClick={deleteChecked}\n          style={{\n            marginLeft: '1rem',\n            marginBottom: '1rem',\n            marginTop: '1rem'\n          }}\n        >\n          Poista valitut\n        </Button>\n        <ReportDetails report={props.report.reportDetails} />\n      </Container>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  console.log('reportwithtracks state', state);\n  return {\n    report: state.report,\n    reportsList: state.reportsList,\n    login: state.login\n  };\n};\n\nconst connectedReportWithTracks = connect(mapStateToProps, {\n  getOneReport,\n  getReportDetails,\n  getOneTrack,\n  deleteChecked,\n  updateSortableRank\n})(ReportWithTracks);\n\nexport default connectedReportWithTracks;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './App.css';\nimport Navbar from './components/layout/Navbar';\nimport Footer from './components/layout/Footer';\nimport Home from './components/layout/Home';\nimport UserList from './components/user/UserList';\nimport ReportList from './components/report/ReportList';\nimport ProgramList from './components/program/ProgramList';\nimport ArtistDetails from './components/artist/ArtistDetails';\nimport AlbumDetails from './components/album/AlbumDetails';\nimport TrackDetails from './components/track/TrackDetails';\nimport LoginForm from './components/login/LoginForm';\nimport ReportTransferList from './components/report/ReportTransferList';\nimport Search from './components/search/Search';\nimport Top100List from './components/top100/Top100List';\nimport ReportWithTracks from './components/report/ReportWithTracks';\nimport Notification from './components/layout/Notification';\nimport { Container } from 'semantic-ui-react';\nimport { initializeUser, logout } from './actions/loginActions';\nimport { initializeUsers } from './actions/userActions';\nimport { initializePrograms } from './actions/programActions';\n\nconst App = props => {\n  // logout on browser close\n  // window.onbeforeunload = () => {\n  //   props.logout();\n  // };\n  // initial logged in user, programs list, users list\n  useEffect(() => {\n    props.initializeUser();\n    props.initializePrograms();\n    props.initializeUsers();\n    // eslint-disable-next-line\n  }, [props.login.token]);\n\n  // handle logout redux\n  // const handleLogout = () => {\n  //   props.logout();\n  // };\n\n  console.log('app 74', props);\n  if (props.login.user === null) {\n    return (\n      <Container>\n        <LoginForm />\n      </Container>\n    );\n  }\n  if (props.login.status === null) {\n    return (\n      <Container>\n        <div>Tunnukset hyllyllä. Ota yhteys ylläpitoon.</div>\n        <LoginForm />\n      </Container>\n    );\n  }\n\n  // return dj\n\n  // return toimitus\n\n  // return admin\n  return (\n    <Router>\n      <div>\n        {/* Logged in as {props.login.username}\n        <button onClick={handleLogout}>logout</button> */}\n        <Navbar\n          first_name={props.login.first_name}\n          last_name={props.login.last_name}\n        />\n      </div>\n      <div>\n        <Notification />\n      </div>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/reports\" component={ReportList} />\n        <Route exact path=\"/transfer\" component={ReportTransferList} />\n        <Route\n          path=\"/reports/:id\"\n          render={({ match }) => {\n            console.log('*');\n            return <ReportWithTracks id={match.params.id} />;\n          }}\n        />\n        <Route\n          path=\"/artist/:id\"\n          render={({ match }) => {\n            console.log('*');\n            return <ArtistDetails id={match.params.id} />;\n          }}\n        />\n        <Route\n          path=\"/album/:id\"\n          render={({ match }) => {\n            console.log('*');\n            return <AlbumDetails id={match.params.id} />;\n          }}\n        />\n        <Route\n          path=\"/track/:id\"\n          render={({ match }) => {\n            console.log('*');\n            return <TrackDetails id={match.params.id} />;\n          }}\n        />\n        <Route exact path=\"/programs\" component={ProgramList} />\n        <Route exact path=\"/search\" component={Search} />\n        <Route exact path=\"/top100\" component={Top100List} />\n        <Route exact path=\"/users\" component={UserList} />\n      </Switch>\n      <div>\n        <Footer />\n      </div>\n    </Router>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('app state', state);\n  return {\n    report: state.report,\n    reportsList: state.reportsList,\n    login: state.login,\n    users: state.users,\n    programs: state.programs\n  };\n};\n\nconst mapDispatchToProps = {\n  initializeUser,\n  logout,\n  initializePrograms,\n  initializeUsers\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import {\n  GET_ONE_ARTIST,\n  GET_ALBUM_LIST_BY_ARTIST,\n  CLEAR_CURRENT_ARTIST,\n  SET_LOADING\n} from '../actions/types';\n\nconst initialState = {\n  currentArtist: null,\n  albumList: null,\n  loading: false\n};\n\nconst artistReducer = (state = initialState, action) => {\n  console.log('artistreducer state now: ', state);\n  console.log('artistreducer action', action);\n\n  switch (action.type) {\n    case GET_ONE_ARTIST:\n      return {\n        ...state,\n        currentArtist: action.data,\n        loading: false\n      };\n    case GET_ALBUM_LIST_BY_ARTIST:\n      return {\n        ...state,\n        albumList: action.data,\n        loading: false\n      };\n    case CLEAR_CURRENT_ARTIST:\n      return {\n        ...state,\n        currentArtist: null\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n};\n\nexport default artistReducer;\n","import {\n  GET_ONE_ALBUM,\n  GET_TRACKLIST_OF_ALBUM,\n  CLEAR_CURRENT_ALBUM,\n  SET_LOADING\n} from '../actions/types';\n\nconst initialState = {\n  currentAlbum: null,\n  tracklist: null,\n  loading: false\n};\n\nconst albumReducer = (state = initialState, action) => {\n  console.log('albumReducer state now: ', state);\n  console.log('albumReducer action', action);\n\n  switch (action.type) {\n    case GET_ONE_ALBUM:\n      return {\n        ...state,\n        currentAlbum: action.data,\n        loading: false\n      };\n    case GET_TRACKLIST_OF_ALBUM:\n      return {\n        ...state,\n        tracklist: action.data,\n        loading: false\n      };\n    case CLEAR_CURRENT_ALBUM:\n      return {\n        ...state,\n        currentAlbum: null,\n        tracklist: null,\n        loading: false\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n};\n\nexport default albumReducer;\n","import {\n  GET_ONE_TRACK,\n  GET_ONE_TRACK_HISTORY,\n  CLEAR_CURRENT_TRACK,\n  SET_LOADING,\n  CHANGE_ALBUM,\n  CHANGE_ARTIST\n} from '../actions/types';\n\nconst initialState = {\n  currentTrack: null,\n  playhistory: null,\n  loading: false\n};\n\nconst trackReducer = (state = initialState, action) => {\n  console.log('trackreducer state now: ', state);\n  console.log('trackreducer action', action);\n\n  switch (action.type) {\n    case GET_ONE_TRACK:\n      return {\n        ...state,\n        currentTrack: action.data,\n        loading: false\n      };\n    case GET_ONE_TRACK_HISTORY:\n      return {\n        ...state,\n        playhistory: action.data,\n        loading: false\n      };\n    case CLEAR_CURRENT_TRACK:\n      return {\n        ...state,\n        playhistory: null,\n        currentTrack: null\n      };\n    case CHANGE_ALBUM:\n      return {\n        ...state,\n        currentTrack: [\n          {\n            ...state.currentTrack[0],\n            album_id: action.data.album_id,\n            album: action.data.album_name\n          }\n        ],\n        loading: false\n      };\n    case CHANGE_ARTIST:\n      return {\n        ...state,\n        currentTrack: [\n          {\n            ...state.currentTrack[0],\n            artist_id: action.data.artist_id,\n            artist: action.data.artist_name\n          }\n        ],\n        loading: false\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n};\n\nexport default trackReducer;\n","import {\n  INIT_USER,\n  LOGIN,\n  LOGOUT,\n  LOGIN_ERROR,\n  UPDATE_CURRENT_USER,\n  SET_LOADING\n} from '../actions/types';\n\nconst initialState = {\n  user: null,\n  loading: false,\n  error: null\n};\n\nconst loginReducer = (state = initialState, action) => {\n  // console.log('loginreducer state', state);\n  // console.log('loginreducer action', action);\n\n  switch (action.type) {\n    case INIT_USER:\n      return action.data;\n\n    case LOGOUT:\n      return initialState;\n\n    case LOGIN:\n      return action.data;\n\n    case LOGIN_ERROR:\n      console.error(action.payload);\n      return {\n        ...state,\n        error: action.payload\n      };\n    case UPDATE_CURRENT_USER:\n      return {\n        ...state,\n        first_name: action.data.first_name,\n        last_name: action.data.last_name,\n        email: action.data.email\n      };\n\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default loginReducer;\n","import {\n  GET_ONE_REPORT,\n  GET_REPORT_DETAILS,\n  GET_DJONLINE_TRACKS,\n  ADD_NEW_TRACK,\n  UPDATE_TRACK,\n  SET_EDIT_TRACK_ID,\n  GET_ONE_TRACK,\n  REMOVE_CURRENT_TRACK,\n  DELETE_TRACK_FROM_REPORT,\n  CHECK_FOR_DELETE,\n  UNCHECK_FOR_DELETE,\n  CREATE_REPORT,\n  UPDATE_REPORT,\n  CLEAR_CURRENT_REPORT,\n  SET_LOADING,\n  REPORT_ERROR\n} from '../actions/types';\n\nconst initialState = {\n  report: [],\n  djonline: null,\n  editTrackId: null,\n  reportDetails: null,\n  newReport: null,\n  loading: false,\n  checkedForDelete: [],\n  currentTrack: null,\n  error: null\n};\n\nconst reportReducer = (state = initialState, action) => {\n  console.log('reportreducer state now: ', state);\n  console.log('reportreducer action', action);\n  console.log(action.type);\n\n  switch (action.type) {\n    case GET_ONE_REPORT:\n      return {\n        ...state,\n        report: action.data,\n        loading: false\n      };\n    case GET_DJONLINE_TRACKS:\n      return {\n        ...state,\n        report: [...state.report, action.data.map(track => track)],\n        djonline: action.data,\n        loading: false\n      };\n    case ADD_NEW_TRACK:\n      return {\n        ...state,\n        report: [...state.report, action.data],\n        loading: false\n      };\n    case UPDATE_TRACK:\n      return {\n        ...state,\n        report: state.report.map(track =>\n          track.track_id === action.data.track_id ? action.data : track\n        ),\n        loading: false\n      };\n    case SET_EDIT_TRACK_ID:\n      return {\n        ...state,\n        editTrackId: action.data\n      };\n    case GET_ONE_TRACK:\n      return {\n        ...state,\n        currentTrack: action.data,\n        loading: false\n      };\n    case REMOVE_CURRENT_TRACK:\n      return {\n        ...state,\n        currentTrack: null\n      };\n    case GET_REPORT_DETAILS:\n      return {\n        ...state,\n        reportDetails: action.data,\n        newReport: null\n        // loading: false\n      };\n    case CREATE_REPORT:\n      return {\n        ...state,\n        newReport: action.data,\n        reportDetails: action.data,\n        loading: false\n      };\n\n    case UPDATE_REPORT:\n      return {\n        ...state,\n        reportDetails: action.data,\n        newReport: null,\n        loading: false\n      };\n\n    case DELETE_TRACK_FROM_REPORT:\n      return {\n        ...state,\n        report: state.report.filter(\n          track => track.report_track_id !== action.id\n        )\n      };\n    case CHECK_FOR_DELETE:\n      return {\n        ...state,\n        checkedForDelete: [action.data, ...state.checkedForDelete]\n      };\n    case UNCHECK_FOR_DELETE:\n      console.log(action.data);\n      console.log(typeof state.checkedForDelete);\n      console.log(state.checkedForDelete);\n      return {\n        ...state,\n        checkedForDelete: state.checkedForDelete.filter(\n          id => id !== action.data\n        )\n      };\n    case CLEAR_CURRENT_REPORT:\n      return {\n        ...state,\n        report: []\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    case REPORT_ERROR:\n      console.error(action.payload);\n      return {\n        ...state,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reportReducer;\n","import {\n  INIT_USERS_LIST,\n  SET_LOADING,\n  SET_CURRENT,\n  CREATE_USER,\n  UPDATE_USER,\n  DELETE_USER\n} from '../actions/types';\n\nconst initialState = {\n  users: null,\n  current: null,\n  loading: false\n};\nconst userReducer = (state = initialState, action) => {\n  // console.log('userreducer state now: ', state);\n  // console.log('userreducer action', action.data);\n\n  switch (action.type) {\n    case INIT_USERS_LIST:\n      return {\n        ...state,\n        users: action.data,\n        loading: false\n      };\n\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: false\n      };\n    case SET_CURRENT:\n      return {\n        ...state,\n        current: action.payload,\n        loading: false\n      };\n    case CREATE_USER:\n      return {\n        ...state,\n        users: [...state.users, action.data],\n        loading: false\n      };\n    case UPDATE_USER:\n      return {\n        ...state,\n        users: action.data,\n        loading: false\n      };\n    case DELETE_USER:\n      console.log('removing user id from user reducer', action.data);\n      return {\n        ...state,\n        users: state.users.filter(user => user.id !== action.data),\n        loading: false\n      };\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import {\n  GET_ALL_REPORTS_BY_DATE,\n  GET_ALL_IN_PROGRESS,\n  GET_ALL_REPORT_TRANSFERS,\n  GENERATE_REPORT_TRANSFER,\n  FILTER_BY_USER_ID,\n  FILTER_BY_STATUS,\n  FILTER_BY_TEXT,\n  DELETE_REPORT,\n  SET_LOADING,\n  REPORT_ERROR\n} from '../actions/types';\n\nconst initialState = {\n  inProgress: null,\n  reportsList: null,\n  reportListDate: null,\n  reportTransferList: null,\n  lastTransfer: null,\n  loading: false,\n  filterStatusValue: null,\n  filterUserValue: null,\n  filterByText: '',\n  error: null\n};\n\nconst reportListReducer = (state = initialState, action) => {\n  console.log('report list reducer state now: ', state);\n  console.log('report list reducer action', action);\n  console.log(action.type);\n\n  switch (action.type) {\n    // date is YYYY-MM\n    case GET_ALL_REPORTS_BY_DATE:\n      return {\n        ...state,\n        reportsList: action.data,\n        reportListDate: action.date,\n        loading: false\n      };\n    case GET_ALL_IN_PROGRESS:\n      return {\n        ...state,\n        inProgress: action.data,\n        loading: false\n      };\n    case GET_ALL_REPORT_TRANSFERS:\n      return {\n        ...state,\n        reportTransferList: action.data,\n        loading: false\n      };\n    case GENERATE_REPORT_TRANSFER:\n      return {\n        ...state,\n        lastTransfer: action.data,\n        loading: false\n      };\n    case DELETE_REPORT:\n      return {\n        ...state,\n        reportsList: state.reportsList.filter(\n          report => report.id !== action.data\n        ),\n        loading: false\n      };\n    case FILTER_BY_USER_ID:\n      console.log('action id', action.data);\n      console.log('report list reducer state after FILTER by id action', state);\n      return {\n        ...state,\n        filterUserValue: action.data\n      };\n    case FILTER_BY_STATUS:\n      console.log('action id', action.data);\n      console.log('report list reducer state after FILTER by id action', state);\n      return {\n        ...state,\n        filterStatusValue: action.data\n      };\n    case FILTER_BY_TEXT:\n      return {\n        ...state,\n        // reportsToShow:\n        //   action.data.length === 0\n        //     ? state.reportsList\n        //     : state.reportsList.filter(r =>\n        //         r.name.toLowerCase().includes(action.data.toLowerCase())\n        //       ),\n\n        filterByText: action.data\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    case REPORT_ERROR:\n      console.error(action.payload);\n      return {\n        ...state,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reportListReducer;\n","import {\n  GET_ONE_PROGRAM,\n  GET_ALL_PROGRAMS,\n  GET_ALL_ACTIVE_PROGRAMS,\n  CREATE_NEW_PROGRAM,\n  CREATE_NEW_PROGRAM_ON_NEW_REPORT,\n  UPDATE_PROGRAM\n} from '../actions/types';\n\nconst initialState = {\n  allPrograms: null,\n  activePrograms: null,\n  program: null,\n  loading: false\n};\n\nconst programReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_ALL_PROGRAMS:\n      return {\n        ...state,\n        allPrograms: action.data,\n        loading: false\n      };\n    case GET_ALL_ACTIVE_PROGRAMS:\n      return {\n        ...state,\n        activePrograms: action.data,\n        loading: false\n      };\n    case GET_ONE_PROGRAM:\n      return {\n        ...state,\n        program: action.data,\n        loading: false\n      };\n    case CREATE_NEW_PROGRAM:\n      return {\n        ...state,\n        allPrograms: [...state.allPrograms, action.data],\n        loading: false\n      };\n    case CREATE_NEW_PROGRAM_ON_NEW_REPORT:\n      return {\n        ...state,\n        activePrograms: [...state.activePrograms, action.data],\n        loading: false\n      };\n    case UPDATE_PROGRAM:\n      return {\n        ...state,\n        allPrograms: state.allPrograms.map(program =>\n          program.id === action.data.id ? action.data : program\n        ),\n        loading: false\n      };\n    default:\n      return state;\n  }\n};\n\nexport default programReducer;\n","import {\n  AUTOCOMPLETE_RESULTS,\n  ADVANCED_RESULTS,\n  SORT_ADVANCED_RESULTS,\n  GET_DISCOGS_CATID,\n  CLEAR_DISCOGS_CATID,\n  TOP_100,\n  SET_SEARCH_LOADING,\n  GET_CHANGE_ALBUM_OPTIONS,\n  GET_CHANGE_ARTIST_OPTIONS,\n  RESET_CHANGE_ALBUM_OPTIONS,\n  RESET_CHANGE_ARTIST_OPTIONS,\n  MERGE_ALBUMS,\n  MERGE_ARTISTS,\n  MERGE_TRACKS\n} from '../actions/types';\n\nconst initialState = {\n  searchResults: [],\n  top100: null,\n  top100Query: null,\n  advancedResults: null,\n  sortAdvancedResults: null,\n  changeArtistOptions: null,\n  changeAlbumOptions: null,\n  loading: false,\n  discogsCatId: null,\n  error: null\n};\n\nconst searchReducer = (state = initialState, action) => {\n  console.log('searchReducer state now: ', state);\n  console.log('searchReducer action', action);\n  console.log('searchReducer action.type', action.type);\n\n  switch (action.type) {\n    case AUTOCOMPLETE_RESULTS:\n      return {\n        ...state,\n        searchResults: action.data,\n        loading: false\n      };\n    case ADVANCED_RESULTS:\n      return {\n        ...state,\n        advancedResults: action.data,\n        loading: false\n      };\n    case SORT_ADVANCED_RESULTS:\n      return {\n        ...state,\n        sortAdvancedResults: action.data\n      };\n    case SET_SEARCH_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    case TOP_100:\n      return {\n        ...state,\n        top100: action.data,\n        top100Query: action.query,\n        loading: false\n      };\n    case GET_DISCOGS_CATID:\n      return {\n        ...state,\n        discogsCatId: action.data\n      };\n    case CLEAR_DISCOGS_CATID:\n      return {\n        ...state,\n        discogsCatId: null\n      };\n    case GET_CHANGE_ALBUM_OPTIONS:\n      return {\n        ...state,\n        changeAlbumOptions: action.data,\n        loading: false\n      };\n    case GET_CHANGE_ARTIST_OPTIONS:\n      return {\n        ...state,\n        changeArtistOptions: action.data,\n        loading: false\n      };\n    case RESET_CHANGE_ALBUM_OPTIONS:\n      return {\n        ...state,\n        changeAlbumOptions: null\n      };\n    case RESET_CHANGE_ARTIST_OPTIONS:\n      return {\n        ...state,\n        changeArtistOptions: null\n      };\n    case MERGE_TRACKS:\n      return {\n        ...state,\n        advancedResults: state.advancedResults.filter(\n          result => result.track_id !== action.data.merge\n        )\n      };\n    case MERGE_ALBUMS:\n      const albumToMerge = action.data.merge;\n      const mergeAlbumTo = action.data.mergeTo;\n      const newAlbumName = action.data.newName;\n      // get the albums that need name and id changing\n      const filteredAlbums = state.advancedResults.filter(\n        r => r.album_id === albumToMerge\n      );\n      // update the names and ids of those albums\n      const renamedAlbums = filteredAlbums.map(result => ({\n        ...result,\n        album_id: mergeAlbumTo,\n        album_name: newAlbumName\n      }));\n      // remove albums with old ids from advancedResults\n      const removeMergedAlbums = state.advancedResults.filter(\n        r => r.album_id !== albumToMerge\n      );\n      //\n      const newAlbumResults = [...renamedAlbums, ...removeMergedAlbums];\n      return {\n        ...state,\n        advancedResults: newAlbumResults\n      };\n    case MERGE_ARTISTS:\n      const artistToMerge = action.data.merge;\n      const mergeArtistTo = action.data.mergeTo;\n      const newArtistName = action.data.newName;\n      // get the artists that need name and id changing\n      const filteredArtists = state.advancedResults.filter(\n        r => r.artist_id === artistToMerge\n      );\n      // update the names and ids of those artists\n      const renamedArtists = filteredArtists.map(result => ({\n        ...result,\n        artist_id: mergeArtistTo,\n        artist_name: newArtistName\n      }));\n      // remove albums with old ids from advancedResults\n      const removeMergedArtists = state.advancedResults.filter(\n        r => r.artist_id !== artistToMerge\n      );\n      //\n      const newArtistResults = [...renamedArtists, ...removeMergedArtists];\n      return {\n        ...state,\n        advancedResults: newArtistResults\n      };\n    default:\n      return state;\n  }\n};\n\nexport default searchReducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport artistReducer from './reducers/artistReducer';\nimport albumReducer from './reducers/albumReducer';\nimport trackReducer from './reducers/trackReducer';\nimport loginReducer from './reducers/loginReducer';\nimport notificationReducer from './reducers/notificationReducer';\nimport reportReducer from './reducers/reportReducer';\nimport userReducer from './reducers/userReducer';\nimport reportsListReducer from './reducers/reportsListReducer';\nimport programReducer from './reducers/programReducer';\nimport searchReducer from './reducers/searchReducer';\n\nconst reducer = combineReducers({\n  artist: artistReducer,\n  album: albumReducer,\n  track: trackReducer,\n  login: loginReducer,\n  notification: notificationReducer,\n  report: reportReducer,\n  reportsList: reportsListReducer,\n  programs: programReducer,\n  search: searchReducer,\n  users: userReducer\n});\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}