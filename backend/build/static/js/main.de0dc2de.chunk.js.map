{"version":3,"sources":["img/logo.png","services/login.js","services/programs.js","services/reports.js","services/search.js","services/tracks.js","services/users.js","actions/types.js","actions/loginActions.js","components/layout/Navbar.js","actions/reportActions.js","reducers/notificationReducer.js","components/layout/Togglable.js","components/report/CreateNewReportForm.js","actions/reportsListActions.js","components/report/InProgressReportListItem.js","components/report/InProgressReportsList.js","components/layout/Notification.js","components/layout/Home.js","components/layout/ModalNotification.js","components/user/User.js","actions/userActions.js","components/user/UserList.js","components/report/ReportFilterForm.js","components/report/ReportListItem.js","components/report/ReportList.js","components/program/ProgramListItem.js","components/program/ProgramList.js","components/login/LoginForm.js","components/report/ReportTransferOptions.js","actions/reportTransferActions.js","components/report/ReportTransferListItem.js","components/report/ReportTransferList.js","components/track/EditTrackModal.js","actions/trackActions.js","components/report/ReportWithTracksItem.js","components/track/AddTrackModal.js","components/track/SearchTrack.js","actions/searchActions.js","components/track/GetDjOnlineTracks.js","components/report/ReportDetails.js","components/report/ReportWithTracks.js","App.js","actions/programActions.js","reducers/loginReducer.js","reducers/reportReducer.js","reducers/userReducer.js","reducers/reportsListReducer.js","reducers/programReducer.js","reducers/searchReducer.js","store.js","index.js"],"names":["module","exports","login","credentials","a","axios","post","res","data","token","getAll","config","headers","Authorization","get","req","getOne","id","console","log","request","createProgram","newProgram","setToken","newToken","download","require","getAllByDate","date","getAllInProgress","getAllTransfers","addTrackToReport","trackToAdd","deleteTrackFromReport","delete","deleteReport","updateSortableRank","remainingTracks","forEach","track","index","trackToUpdate","sortable_rank","put","report_track_id","getReportDetails","createReport","newReport","response","updateReport","updatedReport","generateReportDownload","params","responseType","downloadReport","filename","getTracksForSearch","query","checkDjonlineTracks","searchParams","process","studioId","prop","tracks","arr","push","reverse","newArr","hours","charAt","parseInt","length","split","seconds","startTime","endTime","album_name","album","artist_name","artist","cat_id","matrix","disc_no","side","track_no","tracknumber","isrc","record_country","recording_country","country","play_time","djonline_id","label","track_title","song","year","report_id","newerArr","sortable_rank_start","returnArr","addNewTrack","updateTrack","getOneTrack","updateUser","userToUpdate","SET_LOADING","logout","dispatch","window","localStorage","removeItem","type","connect","props","trigger","Icon","color","name","size","first_name","last_name","options","key","text","icon","onClick","Menu","pointing","stackable","inverted","Item","link","to","Image","alt","src","logo","style","align","Dropdown","getOneReport","reportService","report","initialState","message","setNotification","content","setTimeout","notificationReducer","state","action","Togglable","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","Button","buttonLabel","children","connectedCreateNewReportForm","reportsList","programs","notification","users","program_id","new_program_name","user_id","programService","program","newReportWithNewProgram","programId","setProgramId","programNumber","setProgramNumber","dj","setDj","newProgramName","setNewProgramName","Date","programDate","setProgramDate","programStartTime","setProgramStartTime","programEndTime","setProgramEndTime","redirect","setRedirect","programOptions","allPrograms","map","value","Fragment","Grid","Column","Container","Header","Form","Field","placeholder","openOnFocus","selection","search","onChange","event","preventDefault","marginTop","Input","e","target","Group","widths","selected","dateFormat","program_date","moment","format","program_start_time","program_end_time","program_no","program_dj","status","rerun","reportDetails","getAllReportsByDate","reports","connectedInProgressReportListItem","deleteInProgressReport","deletedReport","loading","Dimmer","active","Loader","Table","Row","Cell","connectedInProgressReportsList","useEffect","inProgress","striped","Body","r","InProgressReportListItem","Message","success","header","negative","connectedHome","divided","columns","connectedModalNotification","mapDispatchToProps","setCurrent","user","payload","userService","updated","connectedUser","userLevelOutPrint","userStatusOutPrint","modalOpen","setModalOpen","password","setPassword","confirmPassword","setConfirmPassword","firstName","setFirstName","lastName","setLastName","email","setEmail","level","setLevel","setStatus","handleClose","Modal","href","username","closeIcon","open","onClose","Content","onSubmit","disabled","focus","control","last_seen","connectedUserList","sortByUserId","sortByStatus","filterByText","connectedReportFilterForm","reportMonth","setReportMonth","reportYear","setReportYear","userId","setUserId","filterText","setFilterText","getFullYear","years","i","yearOptions","option","userOptions","addAllToUserOptions","getReportsByMonth","connectedReportListItem","reportStatusOutPrint","className","connectedReportList","reportListDate","Segment","connectedProgramListItem","identifier","connectedProgramList","newLogin","loginService","newUser","setItem","JSON","stringify","setUsername","handleLogin","connectedReportTransferOptions","generateReportTransfer","transferredReport","pickerDate","setPickerDate","showMonthYearPicker","period","connectedReportTransferListItem","item","created_at","connectedReportTransferList","lastReport","reportTransferList","connectedEditTrackModal","trackService","removeCurrentTrack","updatedTrack","setArtist","setAlbum","setTrack","min","setMin","sec","setSec","setCountry","recordCountry","setRecordCountry","people","setPeople","discNo","setDiscNo","trackNo","setTrackNo","setYear","setLabel","catId","setCatId","setIsrc","comment","setComment","currentTrack","minutes","Math","floor","handleOpen","cursor","trackToEdit","artist_id","album_id","track_id","required","defaultValue","maxLength","TextArea","connectedReportWithTracksItem","deletedTrack","checkForDelete","error","unCheckForDelete","checked","setChecked","toString","Checkbox","marginLeft","filter","t","connectedAddTrackModal","connectedSearchTrack","getAutocompleteResults","searchService","results","searchQuery","setSearchQuery","trackToSave","setTrackToSave","timeout","clearTimeout","handleResultSelect","result","searchResults","title","marginBottom","Search","onResultSelect","onSearchChange","onSelectionChange","connectedGetDjOnlineTracks","getDjonlineTracks","setDate","setStudioId","setStartTime","setEndTime","connectedReportDetails","setRerun","statusPlaceholder","horizontal","updatedReportDetails","connectedReportWithTracks","deleteChecked","idsToDelete","newOrder","dragState","setDragState","undefined","djonline","array","dragProps","onDragEnd","fromIndex","toIndex","splice","nodeSelector","handleSelector","Footer","this","indexOf","checkedForDelete","initializeUser","loggedUserJSON","getItem","parse","err","statusText","initializePrograms","initializeUsers","exact","path","component","Home","ReportList","ReportTransferList","render","match","ProgramList","UserList","loginReducer","reportReducer","current","userReducer","lastTransfer","filterStatusValue","filterUserValue","reportListReducer","programReducer","trackResults","artistResults","albumResults","searchReducer","reducer","combineReducers","reportsListReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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KAAM,QACNsE,MAAO,MAET,CACEvE,IAAK,QACLC,KAAM,QACNsE,MAAO,MAET,CACEvE,IAAK,QACLC,KAAM,QACNsE,MAAO,MAET,CACEvE,IAAK,QACLC,KAAM,QACNsE,MAAO,MAET,CACEvE,IAAK,QACLC,KAAM,QACNsE,MAAO,MAET,CACEvE,IAAK,QACLC,KAAM,QACNsE,MAAO,MAET,CACEvE,IAAK,QACLC,KAAM,QACNsE,MAAO,MAET,CACEvE,IAAK,QACLC,KAAM,QACNsE,MAAO,MAET,CACEvE,IAAK,QACLC,KAAM,QACNsE,MAAO,MAET,CACEvE,IAAK,QACLC,KAAM,QACNsE,MAAO,MAET,CACEvE,IAAK,QACLC,KAAM,QACNsE,MAAO,MAET,CACEvE,IAAK,QACLC,KAAM,QACNsE,MAAO,MAET,CACEvE,IAAK,QACLC,KAAM,QACNsE,MAAO,MAET,CACEvE,IAAK,QACLC,KAAM,QACNsE,MAAO,MAET,CACEvE,IAAK,QACLC,KAAM,QACNsE,MAAO,MAET,CACEvE,IAAK,QACLC,KAAM,QACNsE,MAAO,MAET,CACEvE,IAAK,QACLC,KAAM,QACNsE,MAAO,MAET,CACEvE,IAAK,QACLC,KAAM,QACNsE,MAAO,MAET,CACEvE,IAAK,QACLC,KAAM,QACNsE,MAAO,OAuLKY,SApLK,SAACC,EAAD,GAAuB,IAAbb,EAAY,EAAZA,MAC7Ba,EAAMC,iBACNmN,EAAajO,MAmLE,KAEL,kBAACM,GAAA,EAAKC,MAAN,KACE,uDACA,kBAAC7D,EAAA,EAAD,CACE8D,YAAY,uBACZC,aAAW,EACXC,WAAS,EACTC,QAAM,EACNnF,QAxLO,CACrB,CACEC,IAAK,QACLC,KAAM,QACNsE,MAAO,MAET,CACEvE,IAAK,QACLC,KAAM,QACNsE,MAAO,MAET,CACEvE,IAAK,QACLC,KAAM,QACNsE,MAAO,MAET,CACEvE,IAAK,QACLC,KAAM,QACNsE,MAAO,MAET,CACEvE,IAAK,QACLC,KAAM,QACNsE,MAAO,MAET,CACEvE,IAAK,QACLC,KAAM,QACNsE,MAAO,MAET,CACEvE,IAAK,QACLC,KAA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","file":"static/js/main.de0dc2de.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.fa00af7b.png\";","import axios from 'axios';\nconst baseUrl = '/api/login';\n\nconst login = async credentials => {\n  const res = await axios.post(baseUrl, credentials);\n  return res.data;\n};\n\nexport default { login };\n","import axios from 'axios';\nconst baseUrl = '/api/programs';\n\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\n// get all programs\nconst getAll = async () => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const req = await axios.get(baseUrl, config);\n  return req.data;\n};\n\n// get one program\nconst getOne = async id => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  console.log('program req id', id);\n  const request = await axios.get(`${baseUrl}/${id}`, config);\n  console.log('programservice get one program data', request.data);\n  return request.data;\n};\n\nconst createProgram = async newProgram => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const request = await axios.post(baseUrl, newProgram, config);\n  return request.data;\n};\n\nexport default { getAll, getOne, createProgram, setToken };\n","import axios from 'axios';\nconst baseUrl = '/api/reports';\nconst download = require('downloadjs');\n\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\n// get a list of reports by date\nconst getAllByDate = async date => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  // notice baseurl is different here!\n  console.log('getting reports from', date);\n\n  const request = await axios.get(`/api/reportslist/date/${date}`, config);\n  console.log('reportservice get one report-track data', request.data);\n  return request.data;\n};\n\n// get all in progress reports of one user\nconst getAllInProgress = async id => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  // notice baseurl is different here!\n  console.log('getting reports from id', id);\n\n  const request = await axios.get(`/api/reportslist/user/${id}`, config);\n  console.log('reportservice get all in progress by user id', request.data);\n  return request.data;\n};\n// get a list of reports by user_id, date\n\n// get one report with tracks\nconst getOne = async id => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  console.log('report req id', id);\n  const request = await axios.get(`${baseUrl}/${id}`, config);\n  console.log('reportservice get one report-track data', request.data);\n  return request.data;\n};\n\nconst getAllTransfers = async () => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const request = await axios.get('/api/reporttransfer', config);\n  console.log('reportservice get all transfers data', request.data);\n  return request.data;\n};\n\nconst addTrackToReport = async trackToAdd => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const request = await axios.post(`${baseUrl}`, trackToAdd, config);\n  console.log('reportservice add track to report', request.data);\n  return request.data;\n};\n\nconst deleteTrackFromReport = async id => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const request = await axios.delete(`${baseUrl}/${id}`, config);\n  return request.data;\n};\n\nconst deleteReport = async id => {\n  const config = {\n    headers: { Authorization: token }\n  };\n\n  const request = await axios.delete(`/api/reportslist/${id}`, config);\n  return request.data;\n};\n\nconst updateSortableRank = async remainingTracks => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  remainingTracks.forEach(async (track, index) => {\n    const trackToUpdate = {\n      sortable_rank: index + 1\n    };\n    const request = await axios.put(\n      `${baseUrl}/${track.report_track_id}`,\n      trackToUpdate,\n      config\n    );\n    return request.data;\n  });\n};\n\nconst getReportDetails = async id => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  console.log('reportdetails req id ', id);\n  const request = await axios.get(`/api/reportdetails/${id}`, config);\n  console.log('reportservice get report details res data', request.data);\n  return request.data;\n};\n\n// create new report\nconst createReport = async newReport => {\n  const config = {\n    headers: { Authorization: token }\n  };\n\n  const response = await axios.post('/api/reportdetails', newReport, config);\n  console.log(response.data);\n  return response.data;\n};\n\n// update existing report details\nconst updateReport = async updatedReport => {\n  const config = {\n    headers: { Authorization: token }\n  };\n\n  console.log('reportservice report to update', updatedReport);\n  const request = axios.put(\n    `/api/reportdetails/${updatedReport.id}`,\n    updatedReport,\n    config\n  );\n  console.log(request.data);\n  return updatedReport;\n};\n\n// generate text file for download\nexport const generateReportDownload = async params => {\n  try {\n    const config = {\n      headers: { Authorization: token, responseType: 'blob' }\n    };\n    const request = await axios.post('/api/reporttransfer', params, config);\n    return request.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// download report\nexport const downloadReport = async filename => {\n  try {\n    const config = {\n      headers: { Authorization: token, responseType: 'blob' }\n    };\n    const response = await axios.get(`/api/reporttransfer/${filename}`, config);\n    download(response.data, filename);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default {\n  setToken,\n  addTrackToReport,\n  deleteTrackFromReport,\n  deleteReport,\n  updateSortableRank,\n  getOne,\n  getAllByDate,\n  getAllInProgress,\n  getAllTransfers,\n  getReportDetails,\n  createReport,\n  updateReport,\n  generateReportDownload,\n  downloadReport\n};\n","import axios from 'axios';\nconst baseUrl = '/api/search';\n\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\nconst getTracksForSearch = async query => {\n  const config = {\n    headers: { Authorization: token }\n  };\n\n  console.log('autocomplete search query', query);\n  const request = await axios.get(`${baseUrl}/tracks/${query}`, config);\n  console.log('search service get autocomplete tracks req data', request.data);\n  return request.data;\n};\n\nexport default { setToken, getTracksForSearch };\n","import axios from 'axios';\nconst baseUrl = '/api/tracks';\n\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\nconst checkDjonlineTracks = async searchParams => {\n  // TODO - Handle sortable_rank\n  const tracks = await axios.get(\n    `${process.env.REACT_APP_PLAYLOG_URL}?id=${searchParams.studioId}&date=${searchParams.date}`\n  );\n  let arr = [];\n  for (const prop in tracks.data) {\n    arr.push(tracks.data[prop]);\n  }\n  arr = arr.reverse();\n  let newArr = [];\n  arr.forEach((track, index) => {\n    let hours = track.date.charAt(11) + track.date.charAt(12);\n    hours = parseInt(hours);\n    let a = track.length.split(':');\n    let seconds = parseInt(a[0]) * 60 + parseInt(a[1]);\n    // make loop skip the songs not matching the start time - end time -window\n    if (\n      hours < parseInt(searchParams.startTime) ||\n      hours >= parseInt(searchParams.endTime)\n    ) {\n      return;\n    }\n    newArr.push({\n      album_name: track.album,\n      artist_name: track.artist,\n      cat_id: track.matrix,\n      disc_no: track.side,\n      track_no: track.tracknumber,\n      isrc: track.isrc,\n      record_country: track.recording_country,\n      country: null,\n      play_time: track.date,\n      djonline_id: track.id,\n      label: track.label,\n      length: seconds,\n      track_title: track.song,\n      year: track.year,\n      // sortable_rank: searchParams.sortable_rank_start + index + 1,\n      report_id: searchParams.report_id\n    });\n  });\n  const config = {\n    headers: { Authorization: token }\n  };\n  console.log('array of tracks going to backend', newArr);\n  const newerArr = [];\n  newArr.forEach((track, index) => {\n    newerArr.push({\n      ...track,\n      sortable_rank: searchParams.sortable_rank_start + index + 1\n    });\n  });\n  let returnArr = [];\n  console.log('new arr to backend with sortable ranks', newerArr);\n  newerArr.forEach(async track => {\n    const request = await axios.post(`${baseUrl}/djonline`, track, config);\n    returnArr.push(request.data);\n  });\n  console.log('returned array from backend', returnArr);\n  return returnArr;\n};\n\nconst addNewTrack = async trackToAdd => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const response = await axios.post(baseUrl, trackToAdd, config);\n  console.log(response.data);\n  return response.data;\n};\n\nconst updateTrack = async trackToUpdate => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const response = await axios.put(baseUrl, trackToUpdate, config);\n  return response.data;\n};\n\nconst getOneTrack = async id => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const response = await axios.get(`${baseUrl}/${id}`, config);\n  return response.data;\n};\n\nexport default {\n  setToken,\n  checkDjonlineTracks,\n  addNewTrack,\n  updateTrack,\n  getOneTrack\n};\n","import axios from 'axios';\nconst baseUrl = '/api/users';\n\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = async () => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const req = await axios.get(baseUrl, config);\n  console.log(typeof req.date);\n  return req.data;\n};\n\nconst updateUser = async userToUpdate => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const response = await axios.put(\n    `${baseUrl}/${userToUpdate.id}`,\n    userToUpdate,\n    config\n  );\n  return response.data;\n};\n\nexport default { getAll, setToken, updateUser };\n","// Login actions:\nexport const INIT_USER = 'INIT_USER';\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\n\n// user actions\nexport const INIT_USERS_LIST = 'INIT_USERS_LIST';\nexport const USER_ERROR = 'USER_ERROR';\nexport const SET_CURRENT = 'SET_CURRENT';\nexport const UPDATE_USER = 'UPDATE_USER';\n\n// report actions\nexport const GET_ONE_REPORT = 'GET_ONE_REPORT';\nexport const GET_REPORT_DETAILS = 'GET_REPORT_DETAILS';\nexport const GET_ALL_REPORTS_BY_DATE = 'GET_ALL_REPORTS_BY_DATE';\nexport const GET_ALL_IN_PROGRESS = 'GET_ALL_IN_PROGRESS';\nexport const GET_ALL_REPORT_TRANSFERS = 'GET_ALL_REPORT_TRANSFERS';\nexport const GENERATE_REPORT_TRANSFER = 'GENERATE_REPORT_TRANSFER';\nexport const CREATE_REPORT = 'CREATE_REPORT';\nexport const UPDATE_REPORT = 'UPDATE_REPORT';\nexport const GET_DJONLINE_TRACKS = 'GET_DJONLINE_TRACKS';\nexport const REPORT_ERROR = 'REPORT_ERROR';\nexport const CLEAR_CURRENT_REPORT = 'CLEAR_CURRENT_REPORT';\nexport const DELETE_TRACK_FROM_REPORT = 'DELETE_TRACK_FROM_REPORT';\nexport const CHECK_FOR_DELETE = 'CHECK_FOR_DELETE';\nexport const UNCHECK_FOR_DELETE = 'UNCHECK_FOR_DELETE';\nexport const DOWNLOAD_REPORT = 'DOWNLOAD_REPORT';\nexport const SORT_BY_USER_ID = 'SORT_BY_USER_ID';\nexport const SORT_BY_STATUS = 'SORT_BY_STATUS';\nexport const FILTER_BY_TEXT = 'FILTER_BY_TEXT';\n\n// program actions\nexport const GET_ALL_PROGRAMS = 'GET_ALL_PROGRAMS';\nexport const GET_ONE_PROGRAM = 'GET_ONE_PROGRAM';\nexport const CREATE_NEW_PROGRAM = 'CREATE_NEW_PROGRAM';\n\n// search actions\nexport const AUTOCOMPLETE_RESULTS = 'AUTOCOMPLETE_RESULTS';\nexport const SET_SEARCH_LOADING = 'SET_SEARCH_LOADING';\n\n// track actions\nexport const ADD_NEW_TRACK = 'ADD_NEW_TRACK';\nexport const UPDATE_TRACK = 'UPDATE_TRACK';\nexport const GET_ONE_TRACK = 'GET_ONE_TRACK';\nexport const REMOVE_CURRENT_TRACK = 'REMOVE_CURRENT_TRACK';\n\n// preloader actions\nexport const SET_LOADING = 'SET_LOADING';\n","import loginService from '../services/login';\nimport programService from '../services/programs';\nimport reportService from '../services/reports';\nimport searchService from '../services/search';\nimport trackService from '../services/tracks';\nimport userService from '../services/users';\nimport {\n  INIT_USER,\n  LOGIN,\n  LOGOUT,\n  LOGIN_ERROR,\n  SET_LOADING\n} from '../actions/types';\n\nexport const initializeUser = () => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const loggedUserJSON = window.localStorage.getItem('loggedUser');\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      // set token for logged in user\n      userService.setToken(user.token);\n      reportService.setToken(user.token);\n      programService.setToken(user.token);\n      searchService.setToken(user.token);\n      trackService.setToken(user.token);\n      dispatch({\n        type: INIT_USER,\n        data: user\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: LOGIN_ERROR,\n      payload: err.response.statusText\n    });\n  }\n};\n\nexport const newLogin = user => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const newUser = await loginService.login(user);\n    window.localStorage.setItem('loggedUser', JSON.stringify(newUser));\n    // set token for logged in user\n    // blogService.setToken(newUser.token);\n    dispatch({\n      type: LOGIN,\n      data: newUser,\n      loading: false\n    });\n  } catch (exception) {\n    const content = {\n      message: 'wrong username or password',\n      type: 'fail'\n    };\n    dispatch({\n      type: 'SET_NOTIFICATION',\n      data: content\n    });\n    setTimeout(() => {\n      dispatch({\n        type: 'CLEAR_NOTIFICATION'\n      });\n    }, 3000);\n  }\n};\n\nexport const logout = () => async dispatch => {\n  window.localStorage.removeItem('loggedUser');\n  dispatch({\n    type: LOGOUT\n  });\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { logout } from '../../actions/loginActions';\nimport { Link } from 'react-router-dom';\nimport { Menu, Image, Dropdown, Icon } from 'semantic-ui-react';\nimport logo from '../../img/logo.png';\n\nconst Navbar = props => {\n  const handleLogoutClick = () => {\n    console.log('klikd logout');\n    props.logout();\n  };\n  const trigger = (\n    <span>\n      <Icon color=\"pink\" name=\"user\" size=\"large\" /> {props.first_name}{' '}\n      {props.last_name}\n    </span>\n  );\n  const options = [\n    {\n      key: 'user',\n      text: 'Omat tiedot',\n      icon: 'user'\n    },\n    {\n      key: 'sign-out',\n      text: 'Kirjaudu ulos',\n      icon: 'sign out',\n      onClick: handleLogoutClick\n    }\n  ];\n\n  return (\n    <Menu pointing stackable inverted>\n      <Menu.Item link>\n        <Link to=\"/\">\n          <Image alt=\"logo\" src={logo} size=\"small\" />\n        </Link>\n      </Menu.Item>\n\n      <Menu.Item link>\n        <Link to=\"/reports\">\n          <h4>RAPORTIT</h4>\n        </Link>\n      </Menu.Item>\n      <Menu.Item link>\n        <Link to=\"/\">\n          <h4>TOP 100</h4>\n        </Link>\n      </Menu.Item>\n      <Menu.Item link>\n        <Link to=\"/\">\n          <h4>HAKU</h4>\n        </Link>\n      </Menu.Item>\n      <Menu.Item link>\n        <Link to=\"/transfer\">\n          <h4>SIIRTOTIEDOSTOT</h4>\n        </Link>\n      </Menu.Item>\n      <Menu.Item link>\n        <Link to=\"/users\">\n          <h4>KÄYTTÄJÄT</h4>\n        </Link>\n      </Menu.Item>\n      <Menu.Item link>\n        <Link to=\"/programs\">\n          <h4>OHJELMAT</h4>\n        </Link>\n      </Menu.Item>\n      <Menu.Item style={{ align: 'right' }}>\n        <Dropdown\n          trigger={trigger}\n          options={options}\n          pointing=\"top left\"\n          icon={null}\n        />\n      </Menu.Item>\n    </Menu>\n  );\n};\n\nexport default connect(\n  null,\n  { logout }\n)(Navbar);\n","import {\n  GET_ONE_REPORT,\n  GET_REPORT_DETAILS,\n  CREATE_REPORT,\n  UPDATE_REPORT,\n  CHECK_FOR_DELETE,\n  UNCHECK_FOR_DELETE,\n  CREATE_NEW_PROGRAM,\n  SET_LOADING\n} from '../actions/types';\nimport reportService from '../services/reports';\nimport programService from '../services/programs';\n\n// get one report with tracks by report id\nexport const getOneReport = id => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const report = await reportService.getOne(id);\n    // console.log('reportreducer', report);\n    dispatch({\n      type: GET_ONE_REPORT,\n      data: report,\n      id\n    });\n  } catch (error) {\n    console.log(error);\n    // dispatch({\n    //   type: REPORT_ERROR,\n    //   payload: error.response.data\n    // });\n  }\n};\n\n// add track to a report\nexport const addTrackToReport = trackToAdd => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    let track = await reportService.addTrackToReport(trackToAdd);\n    console.log('add track to report track', track);\n    const report = await reportService.getOne(track.report_id);\n    console.log('reportactions', report);\n    dispatch({\n      type: GET_ONE_REPORT,\n      data: report\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// delete track from report¨\nexport const deleteTrackFromReport = params => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    let deletedTrack = await reportService.deleteTrackFromReport(\n      params.report_track_id\n    );\n    const updateSortableRank = await reportService.updateSortableRank(\n      params.remainingTracks\n    );\n    console.log(updateSortableRank);\n    console.log(deletedTrack);\n    const report = await reportService.getOne(params.report_id);\n    console.log('reportactions', report);\n    dispatch({\n      type: GET_ONE_REPORT,\n      data: report\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// get report details by report id\nexport const getReportDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    let report = await reportService.getReportDetails(id);\n    report = report[0];\n    console.log('report actions report', report);\n    dispatch({\n      type: GET_REPORT_DETAILS,\n      data: report,\n      id\n    });\n  } catch (error) {\n    console.log(error);\n    // dispatch({\n    //   type: REPORT_ERROR,\n    //   payload: error.response.data\n    // });\n  }\n};\n\n// create new report\nexport const createReport = newReport => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    if (newReport.program_id === '' && newReport.new_program_name !== '') {\n      const newProgram = {\n        name: newReport.new_program_name,\n        user_id: newReport.user_id\n      };\n      const program = await programService.createProgram(newProgram);\n      dispatch({\n        type: CREATE_NEW_PROGRAM,\n        data: program\n      });\n      const newReportWithNewProgram = {\n        ...newReport,\n        program_id: program.id,\n        display: 1\n      };\n      console.log('new report with new program', newReportWithNewProgram);\n      const report = await reportService.createReport(newReportWithNewProgram);\n      dispatch({\n        type: CREATE_REPORT,\n        data: report\n      });\n    }\n    const report = await reportService.createReport(newReport);\n    dispatch({\n      type: CREATE_REPORT,\n      data: report\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updateReport = updatedReport => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const report = await reportService.updateReport(updatedReport);\n    dispatch({\n      type: UPDATE_REPORT,\n      data: report\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const checkForDelete = id => async dispatch => {\n  try {\n    console.log('id to add to delete tracks', id);\n    dispatch({\n      type: CHECK_FOR_DELETE,\n      data: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const unCheckForDelete = id => async dispatch => {\n  try {\n    console.log('uncheckd id to add to delete tracks', id);\n    dispatch({\n      type: UNCHECK_FOR_DELETE,\n      data: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deleteChecked = (\n  idsToDelete,\n  report_id,\n  remainingTracks\n) => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    idsToDelete.forEach(async id => {\n      let deletedTrack = await reportService.deleteTrackFromReport(id);\n      console.log(deletedTrack);\n    });\n    const updateSortableRank = await reportService.updateSortableRank(\n      remainingTracks\n    );\n    console.log(updateSortableRank);\n    console.log('array of ids to delete from report', idsToDelete);\n    const report = await reportService.getOne(report_id);\n    console.log('reportactions', report);\n    dispatch({\n      type: GET_ONE_REPORT,\n      data: report\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updateSortableRank = (newOrder, report_id) => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const updateSortableRank = await reportService.updateSortableRank(newOrder);\n    console.log(updateSortableRank);\n    const report = await reportService.getOne(report_id);\n    console.log('reportactions', report);\n    dispatch({\n      type: GET_ONE_REPORT,\n      data: report\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n","const initialState = {\n  message: null,\n  type: null\n};\n\nconst notificationReducer = (state = initialState, action) => {\n  console.log('action', action);\n  console.log(state);\n  switch (action.type) {\n    case 'SET_NOTIFICATION':\n      return action.data;\n\n    case 'CLEAR_NOTIFICATION':\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n\nexport const setNotification = (message, type) => {\n  console.log(message);\n  console.log(type);\n  const content = {\n    message,\n    type\n  };\n  return async dispatch => {\n    dispatch({\n      type: 'SET_NOTIFICATION',\n      data: content\n    });\n    setTimeout(() => {\n      dispatch({\n        type: 'CLEAR_NOTIFICATION'\n      });\n    }, 3000);\n  };\n};\n\n// const setNotification = (id, message) => {\n//   console.log(message);\n//   return dispatch => {\n//     dispatch({\n//       type: 'NOTIFICATION',\n//       id,\n//       message\n//     });\n//   };\n// };\n\n// const clearNotification = id => {\n//   return {\n//     type: 'CLEAR',\n//     id\n//   };\n// };\n\n// let nextNotificationId = 0;\n// export function showNotificationWithTimeout(text, duration) {\n//   duration = duration * 1000;\n//   return function(dispatch) {\n//     const id = nextNotificationId++;\n//     dispatch(setNotification(id, text));\n\n//     setTimeout(() => {\n//       dispatch(clearNotification(id));\n//     }, duration);\n//   };\n// }\n\nexport default notificationReducer;\n","import React, { useState } from 'react';\nimport { Button } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nconst Togglable = props => {\n  const [visible, setVisible] = useState(false);\n\n  const hideWhenVisible = { display: visible ? 'none' : '' };\n  const showWhenVisible = { display: visible ? '' : 'none' };\n\n  const toggleVisibility = () => {\n    setVisible(!visible);\n  };\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <Button\n          size={props.size}\n          style={props.style}\n          color={props.color}\n          onClick={toggleVisibility}\n        >\n          {props.buttonLabel}\n        </Button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <Button\n          size={props.size}\n          style={props.style}\n          color={props.color}\n          onClick={toggleVisibility}\n        >\n          Piilota\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n};\n\nexport default Togglable;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { createReport } from '../../actions/reportActions';\nimport { setNotification } from '../../reducers/notificationReducer';\nimport Togglable from '../layout/Togglable';\nimport {\n  Header,\n  Form,\n  Button,\n  Input,\n  Dropdown,\n  Container,\n  Grid\n} from 'semantic-ui-react';\nimport DatePicker from 'react-datepicker';\nimport moment from 'moment';\n\nconst CreateNewReportForm = props => {\n  const [programId, setProgramId] = useState('');\n  const [programNumber, setProgramNumber] = useState('');\n  const [dj, setDj] = useState(\n    `${props.login.first_name} ${props.login.last_name}`\n  );\n  const [newProgramName, setNewProgramName] = useState('');\n  const [programDate, setProgramDate] = useState(new Date());\n  const [programStartTime, setProgramStartTime] = useState('');\n  const [programEndTime, setProgramEndTime] = useState('');\n  const [redirect, setRedirect] = useState(false);\n\n  // if (props.programs.allPrograms === null) {\n  //   return <div>loafing</div>;\n  // }\n\n  console.log('create new report form props', props);\n\n  // list of programoptions for select\n  let programOptions = props.programs.allPrograms.map(program => ({\n    key: program.id,\n    text: program.name,\n    value: program.id\n  }));\n  const getProgram = (event, { value }) => {\n    event.preventDefault();\n    setProgramId(value);\n    console.log(programId);\n  };\n\n  // list of program start time options\n  const startTimeOptions = [\n    {\n      key: '00:00',\n      text: '00:00',\n      value: '00:00'\n    },\n    {\n      key: '01:00',\n      text: '01:00',\n      value: '01:00'\n    },\n    {\n      key: '02:00',\n      text: '02:00',\n      value: '02:00'\n    },\n    {\n      key: '03:00',\n      text: '03:00',\n      value: '03:00'\n    },\n    {\n      key: '04:00',\n      text: '04:00',\n      value: '04:00'\n    },\n    {\n      key: '05:00',\n      text: '05:00',\n      value: '05:00'\n    },\n    {\n      key: '06:00',\n      text: '06:00',\n      value: '06:00'\n    },\n    {\n      key: '07:00',\n      text: '07:00',\n      value: '07:00'\n    },\n    {\n      key: '08:00',\n      text: '08:00',\n      value: '08:00'\n    },\n    {\n      key: '09:00',\n      text: '09:00',\n      value: '09:00'\n    },\n    {\n      key: '10:00',\n      text: '10:00',\n      value: '10:00'\n    },\n    {\n      key: '11:00',\n      text: '11:00',\n      value: '11:00'\n    },\n    {\n      key: '12:00',\n      text: '12:00',\n      value: '12:00'\n    },\n    {\n      key: '13:00',\n      text: '13:00',\n      value: '13:00'\n    },\n    {\n      key: '14:00',\n      text: '14:00',\n      value: '14:00'\n    },\n    {\n      key: '15:00',\n      text: '15:00',\n      value: '15:00'\n    },\n    {\n      key: '16:00',\n      text: '16:00',\n      value: '16:00'\n    },\n    {\n      key: '17:00',\n      text: '17:00',\n      value: '17:00'\n    },\n    {\n      key: '18:00',\n      text: '18:00',\n      value: '18:00'\n    },\n    {\n      key: '19:00',\n      text: '19:00',\n      value: '19:00'\n    },\n    {\n      key: '20:00',\n      text: '20:00',\n      value: '20:00'\n    },\n    {\n      key: '21:00',\n      text: '21:00',\n      value: '21:00'\n    },\n    {\n      key: '22:00',\n      text: '22:00',\n      value: '22:00'\n    },\n    {\n      key: '23:00',\n      text: '23:00',\n      value: '23:00'\n    }\n  ];\n  const getStartTime = (event, { value }) => {\n    event.preventDefault();\n    setProgramStartTime(value);\n    console.log(programStartTime);\n  };\n\n  // list of program end time options\n  const endTimeOptions = [\n    {\n      key: '01:00',\n      text: '01:00',\n      value: '01:00'\n    },\n    {\n      key: '02:00',\n      text: '02:00',\n      value: '02:00'\n    },\n    {\n      key: '03:00',\n      text: '03:00',\n      value: '03:00'\n    },\n    {\n      key: '04:00',\n      text: '04:00',\n      value: '04:00'\n    },\n    {\n      key: '05:00',\n      text: '05:00',\n      value: '05:00'\n    },\n    {\n      key: '06:00',\n      text: '06:00',\n      value: '06:00'\n    },\n    {\n      key: '07:00',\n      text: '07:00',\n      value: '07:00'\n    },\n    {\n      key: '08:00',\n      text: '08:00',\n      value: '08:00'\n    },\n    {\n      key: '09:00',\n      text: '09:00',\n      value: '09:00'\n    },\n    {\n      key: '10:00',\n      text: '10:00',\n      value: '10:00'\n    },\n    {\n      key: '11:00',\n      text: '11:00',\n      value: '11:00'\n    },\n    {\n      key: '12:00',\n      text: '12:00',\n      value: '12:00'\n    },\n    {\n      key: '13:00',\n      text: '13:00',\n      value: '13:00'\n    },\n    {\n      key: '14:00',\n      text: '14:00',\n      value: '14:00'\n    },\n    {\n      key: '15:00',\n      text: '15:00',\n      value: '15:00'\n    },\n    {\n      key: '16:00',\n      text: '16:00',\n      value: '16:00'\n    },\n    {\n      key: '17:00',\n      text: '17:00',\n      value: '17:00'\n    },\n    {\n      key: '18:00',\n      text: '18:00',\n      value: '18:00'\n    },\n    {\n      key: '19:00',\n      text: '19:00',\n      value: '19:00'\n    },\n    {\n      key: '20:00',\n      text: '20:00',\n      value: '20:00'\n    },\n    {\n      key: '21:00',\n      text: '21:00',\n      value: '21:00'\n    },\n    {\n      key: '22:00',\n      text: '22:00',\n      value: '22:00'\n    },\n    {\n      key: '23:00',\n      text: '23:00',\n      value: '23:00'\n    },\n    {\n      key: '23:59',\n      text: '23:59',\n      value: '23:59'\n    }\n  ];\n  const getEndTime = (event, { value }) => {\n    event.preventDefault();\n    setProgramEndTime(value);\n    console.log(programEndTime);\n  };\n\n  const createReport = () => {\n    const newReport = {\n      user_id: props.login.id,\n      program_id: programId,\n      new_program_name: newProgramName,\n      program_date: moment(programDate).format('YYYY-MM-DD'),\n      program_start_time: programStartTime,\n      program_end_time: programEndTime,\n      program_no: programNumber,\n      program_dj: dj,\n      status: 0,\n      rerun: null\n    };\n    console.log(parseInt(programEndTime));\n    if (\n      parseInt(newReport.program_end_time) <=\n      parseInt(newReport.program_start_time)\n    ) {\n      props.setNotification('Tarkista ohjelman alku- ja loppuaika!', 'fail');\n    } else {\n      props.createReport(newReport);\n      console.log(\n        'create report button click pros',\n        props.report.reportDetails\n      );\n      console.log('creating report:', newReport);\n      setRedirect(true);\n    }\n  };\n\n  if (redirect && props.report.newReport !== null) {\n    console.log('create new report for after submit props', props);\n    console.log('redirecting to id', props.report.newReport.id);\n    return <Redirect to={`reports/${props.report.newReport.id}`} />;\n  }\n\n  return (\n    <React.Fragment>\n      <Grid.Column>\n        <Container>\n          <Header>Luo uusi raportti</Header>\n          <Form>\n            <Form.Field>\n              <label>\n                Ohjelma - jos ohjemasi ei löydy listalta, luo uusi ohjelma\n              </label>\n              <Dropdown\n                placeholder=\"Valitse ohjelma\"\n                openOnFocus\n                selection\n                search\n                options={programOptions}\n                onChange={getProgram}\n              />{' '}\n              <Togglable\n                style={{ marginTop: '0.5rem' }}\n                size=\"tiny\"\n                buttonLabel=\"Luo uusi ohjelma\"\n              >\n                <Form.Field>\n                  <label>Uusi ohjelma</label>\n                  <Input\n                    type=\"text\"\n                    value={newProgramName}\n                    onChange={e => setNewProgramName(e.target.value)}\n                  />{' '}\n                </Form.Field>\n              </Togglable>\n            </Form.Field>\n            <Form.Field>\n              <label>Ohjelmanumero</label>\n              <Input\n                type=\"number\"\n                value={programNumber}\n                onChange={e => setProgramNumber(e.target.value)}\n              />{' '}\n            </Form.Field>\n            <Form.Field>\n              <label>DJ</label>\n              <Input\n                type=\"text\"\n                value={dj}\n                onChange={e => setDj(e.target.value)}\n              />{' '}\n            </Form.Field>\n\n            <Form.Group widths=\"equal\">\n              <Form.Field>\n                <label>Ohjelman päivä</label>\n                <DatePicker\n                  selected={programDate}\n                  dateFormat=\"yyyy-MM-dd\"\n                  onChange={date => setProgramDate(date)}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Alkaa kello</label>\n                <Dropdown\n                  placeholder=\"hh:mm\"\n                  openOnFocus\n                  selection\n                  search\n                  options={startTimeOptions}\n                  onChange={getStartTime}\n                />{' '}\n              </Form.Field>\n              <Form.Field>\n                <label>Päättyy kello</label>\n                <Dropdown\n                  placeholder=\"hh:mm\"\n                  openOnFocus\n                  selection\n                  search\n                  options={endTimeOptions}\n                  onChange={getEndTime}\n                />{' '}\n              </Form.Field>\n            </Form.Group>\n            <Form.Group widths=\"equal\">\n              <Button\n                // disabled={\n                //   !programId ||\n                //   !programDate ||\n                //   !programStartTime ||\n                //   !programEndTime ||\n                //   !dj\n                // }\n                color=\"green\"\n                onClick={createReport}\n              >\n                Jatka\n              </Button>\n            </Form.Group>\n          </Form>\n        </Container>\n      </Grid.Column>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('report details state to props', state);\n  return {\n    report: state.report,\n    reportsList: state.reportsList,\n    programs: state.programs,\n    notification: state.notification,\n    users: state.users,\n    login: state.login\n  };\n};\n\nconst connectedCreateNewReportForm = connect(\n  mapStateToProps,\n  { createReport, setNotification }\n)(CreateNewReportForm);\n\nexport default connectedCreateNewReportForm;\n","import {\n  GET_ALL_REPORTS_BY_DATE,\n  GET_ALL_IN_PROGRESS,\n  SET_LOADING,\n  CLEAR_CURRENT_REPORT,\n  SORT_BY_USER_ID,\n  SORT_BY_STATUS,\n  FILTER_BY_TEXT\n} from './types';\nimport reportService from '../services/reports';\n// get a list of reports by user_id, date\n\n// get a list of reports by date\nexport const getAllReportsByDate = date => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    dispatch({\n      type: CLEAR_CURRENT_REPORT\n    });\n    const reports = await reportService.getAllByDate(date);\n    // console.log('reportreducer', report);\n    dispatch({\n      type: GET_ALL_REPORTS_BY_DATE,\n      data: reports,\n      date\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getAllInProgress = id => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    dispatch({\n      type: CLEAR_CURRENT_REPORT\n    });\n    const reports = await reportService.getAllInProgress(id);\n    // console.log('reportreducer', report);\n    dispatch({\n      type: GET_ALL_IN_PROGRESS,\n      data: reports\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deleteInProgressReport = params => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const deletedReport = await reportService.deleteReport(params.report_id);\n    console.log(deletedReport);\n    const reports = await reportService.getAllInProgress(params.user_id);\n    dispatch({\n      type: GET_ALL_IN_PROGRESS,\n      data: reports\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const sortByUserId = id => dispatch => {\n  console.log('id to filter', id);\n  dispatch({\n    type: SORT_BY_USER_ID,\n    data: id\n  });\n};\n\nexport const sortByStatus = status => dispatch => {\n  console.log('status to filter', status);\n  dispatch({\n    type: SORT_BY_STATUS,\n    data: status\n  });\n};\n\nexport const filterByText = text => async dispatch => {\n  console.log('text to filter', text);\n  dispatch({\n    type: FILTER_BY_TEXT,\n    data: text\n  });\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { deleteInProgressReport } from '../../actions/reportsListActions';\nimport { setNotification } from '../../reducers/notificationReducer';\nimport { Table, Icon, Loader, Dimmer } from 'semantic-ui-react';\n\nconst inProgressReportListItem = ({\n  report,\n  reportsList,\n  login,\n  deleteInProgressReport,\n  setNotification\n}) => {\n  if (reportsList.loading === true) {\n    return (\n      <Dimmer active inverted>\n        <Loader inverted />\n      </Dimmer>\n    );\n  }\n  const onDelete = () => {\n    const params = {\n      report_id: report.id,\n      user_id: login.id\n    };\n    console.log(`klikd delete on report`, params);\n    deleteInProgressReport(params);\n    setNotification(\n      `Raportti ${report.name} ${report.program_date} poistettu`,\n      'success'\n    );\n  };\n  console.log(report, login, reportsList);\n  return (\n    <React.Fragment>\n      <Table.Row>\n        <Table.Cell>\n          <Link to={`reports/${report.id}`}>{report.name}</Link>\n        </Table.Cell>\n        <Table.Cell>{report.program_date}</Table.Cell>\n        <Table.Cell>{report.program_no}</Table.Cell>\n        <Table.Cell>\n          {' '}\n          <Icon color=\"red\" onClick={onDelete} name=\"delete\" />\n        </Table.Cell>\n      </Table.Row>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    reportsList: state.reportsList,\n    login: state.login\n  };\n};\n\nconst connectedInProgressReportListItem = connect(\n  mapStateToProps,\n  { deleteInProgressReport, setNotification }\n)(inProgressReportListItem);\n\nexport default connectedInProgressReportListItem;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport InProgressReportListItem from './InProgressReportListItem';\nimport { getAllInProgress } from '../../actions/reportsListActions';\nimport { Table, Grid, Container, Header } from 'semantic-ui-react';\n\nconst InProgressReportsList = props => {\n  console.log(props);\n  useEffect(() => {\n    props.getAllInProgress(props.login.id);\n    // eslint-disable-next-line\n  }, []);\n\n  // if (props.reportsList.inProgress === null) {\n  //   return <div>loading</div>;\n  // }\n  // if (props.reportsList.loading) {\n  //   return <div>loading</div>;\n  // }\n  if (props.reportsList.inProgress === null) {\n    return null;\n  }\n  if (props.reportsList.inProgress.length === 0) {\n    return (\n      <Grid.Column>\n        <Container>\n          <Header>Omat keskeneräiset raportit</Header>\n          ei keskeneräisiä raportteja\n        </Container>\n      </Grid.Column>\n    );\n  }\n  return (\n    <React.Fragment>\n      <Grid.Column>\n        <Container>\n          <Header>Omat keskeneräiset raportit</Header>\n          <Table striped>\n            <Table.Header>\n              <Table.Row>\n                <Table.Cell>Nimi</Table.Cell>\n                <Table.Cell>Aika</Table.Cell>\n                <Table.Cell>Nro</Table.Cell>\n                <Table.Cell></Table.Cell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {props.reportsList.inProgress.map(r => (\n                <InProgressReportListItem key={r.id} report={r} />\n              ))}\n            </Table.Body>\n          </Table>\n        </Container>\n      </Grid.Column>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    reportsList: state.reportsList,\n    login: state.login\n  };\n};\n\nconst connectedInProgressReportsList = connect(\n  mapStateToProps,\n  { getAllInProgress }\n)(InProgressReportsList);\n\nexport default connectedInProgressReportsList;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Message } from 'semantic-ui-react';\n\nconst Notification = ({ notification }) => {\n  if (notification.message === null) {\n    return null;\n  }\n\n  if (notification.type === 'success') {\n    return (\n      <Message\n        success\n        header={notification.message}\n        // content=\"You may now log-in with the username you have chosen\"\n      />\n    );\n  }\n\n  if (notification.type === 'fail') {\n    return (\n      <Message\n        negative\n        header={notification.message}\n        // content=\"You may now log-in with the username you have chosen\"\n      />\n    );\n  }\n\n  return null;\n};\n\nconst mapStateToProps = state => {\n  return {\n    notification: state.notification\n  };\n};\n\nexport default connect(mapStateToProps)(Notification);\n","import React, { useEffect } from 'react';\nimport { Container, Grid, Dimmer, Loader } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport CreateNewReportForm from '../report/CreateNewReportForm';\nimport InProgressReportsList from '../report/InProgressReportsList';\nimport Notification from '../layout/Notification';\nimport { getAllInProgress } from '../../actions/reportsListActions';\n\nconst Home = props => {\n  console.log('home props', props);\n  // useEffect(() => {\n  //   props.getAllInProgress(props.login.id);\n  //   // eslint-disable-next-line\n  // }, []);\n  if (\n    props.programs.allPrograms === null\n    // props.reportsList.inProgress === null\n  ) {\n    return (\n      <Container>\n        <h2>Radio Helsinki teostoraportointi</h2>\n        <Dimmer active>\n          <Loader>Loading</Loader>\n        </Dimmer>{' '}\n      </Container>\n    );\n  }\n  return (\n    <Container>\n      <h2>Radio Helsinki teostoraportointi</h2>\n      <Notification />\n      <Grid divided=\"vertically\">\n        <Grid.Row columns={2}>\n          <CreateNewReportForm />\n          <InProgressReportsList />\n        </Grid.Row>\n      </Grid>\n    </Container>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('report details state to props', state);\n  return {\n    report: state.report,\n    reportsList: state.reportsList,\n    programs: state.programs,\n    notification: state.notification,\n    users: state.users,\n    login: state.login\n  };\n};\n\nconst connectedHome = connect(\n  mapStateToProps,\n  { getAllInProgress }\n)(Home);\n\nexport default connectedHome;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst ModalNotification = ({ notification }) => {\n  if (notification.message === null) {\n    return null;\n  }\n  if (notification.type === 'success') {\n    return <span style={{ color: 'green' }}>{notification.message}</span>;\n  }\n  if (notification.type === 'fail') {\n    return <span style={{ color: 'red' }}>{notification.message}</span>;\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    notification: state.notification\n  };\n};\n\nconst connectedModalNotification = connect(\n  mapStateToProps,\n  null\n)(ModalNotification);\n\nexport default connectedModalNotification;\n","import React, { useState } from 'react';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport ModalNotification from '../layout/ModalNotification';\nimport { setNotification } from '../../reducers/notificationReducer';\nimport { setCurrent, updateUser } from '../../actions/userActions';\nimport {\n  Table,\n  Modal,\n  Header,\n  Form,\n  Button,\n  Input,\n  Icon\n} from 'semantic-ui-react';\n\nconst User = props => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [firstName, setFirstName] = useState(props.user.first_name);\n  const [lastName, setLastName] = useState(props.user.last_name);\n  const [email, setEmail] = useState(props.user.email);\n  const [level, setLevel] = useState(props.user.level);\n  const [status, setStatus] = useState(props.user.status);\n\n  const handleOpen = () => {\n    props.setCurrent(props.user);\n    setModalOpen(true);\n  };\n  const handleClose = () => {\n    setModalOpen(false);\n  };\n\n  const onDelete = () => {\n    console.log(`klikd delete on user ${props.user.id}`);\n  };\n\n  const updateUserClick = e => {\n    e.preventDefault();\n    if (password !== confirmPassword || password.length <= 3) {\n      props.setNotification('Tarkasta salasanat!', 'fail');\n    }\n    if (!firstName || !lastName) {\n      props.setNotification(\n        'Etunimi ja sukunimi ovat pakollisia tietoja',\n        'fail'\n      );\n    }\n    const userToUpdate = {\n      id: props.user.id,\n      password,\n      first_name: firstName,\n      last_name: lastName,\n      email,\n      level,\n      status\n    };\n    console.log('updting info', userToUpdate);\n    handleClose();\n\n    props.updateUser(userToUpdate);\n  };\n\n  let userLevelOutPrint;\n  if (level === 1) {\n    userLevelOutPrint = 'DJ';\n  } else if (level === 2) {\n    userLevelOutPrint = 'Toimitus';\n  } else {\n    userLevelOutPrint = 'Admin';\n  }\n\n  let userStatusOutPrint;\n  if (status === null) {\n    userStatusOutPrint = 'Hyllyllä';\n  } else if (status === 1) {\n    userStatusOutPrint = 'Käytössä';\n  }\n\n  return (\n    <Table.Row>\n      <Table.Cell>\n        <Modal\n          trigger={\n            <a href=\"#!\" onClick={handleOpen}>\n              {props.user.username}\n            </a>\n          }\n          closeIcon\n          open={modalOpen}\n          onClose={handleClose}\n        >\n          <Header content=\"Muokkaa käyttäjän tietoja\" />\n          <Modal.Content>\n            <Form onSubmit={updateUserClick}>\n              <Form.Field>\n                <label>Käyttäjätunnus</label>\n                <Input\n                  value={props.user.username}\n                  type=\"text\"\n                  placeholder=\"Käyttäjätunnus...\"\n                  disabled\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Salasana - syötä vaihtaaksesi</label>\n                <Input\n                  focus\n                  type=\"password\"\n                  placeholder=\"Salasana...\"\n                  onChange={e => setPassword(e.target.value)}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Salasana uudelleen</label>\n                <Input\n                  focus\n                  type=\"password\"\n                  placeholder=\"Vahvista salasana...\"\n                  onChange={e => setConfirmPassword(e.target.value)}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Etunimi</label>\n                <Input\n                  focus\n                  value={firstName}\n                  type=\"text\"\n                  placeholder=\"Etunimi...\"\n                  onChange={e => setFirstName(e.target.value)}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Sukunimi</label>\n                <Input\n                  focus\n                  value={lastName}\n                  type=\"text\"\n                  placeholder=\"Sukunimi...\"\n                  onChange={e => setLastName(e.target.value)}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Email</label>\n                <Input\n                  focus\n                  value={email}\n                  type=\"email\"\n                  placeholder=\"Email...\"\n                  onChange={e => setEmail(e.target.value)}\n                />\n              </Form.Field>\n              <Form.Field\n                label=\"Taso\"\n                control=\"select\"\n                value={level}\n                onChange={e => setLevel(e.target.value)}\n              >\n                <option value=\"1\">DJ</option>\n                <option value=\"2\">Toimitus</option>\n                <option value=\"3\">Admin</option>\n              </Form.Field>\n              <Form.Field\n                label=\"Tila\"\n                control=\"select\"\n                value={status}\n                onChange={e => setStatus(e.target.value)}\n              >\n                <option value=\"1\">Käytössä</option>\n                <option value={null}>Hyllyllä</option>\n              </Form.Field>\n              <Button\n                color=\"green\"\n                type=\"submit\"\n                disabled={!email || !firstName || !lastName}\n              >\n                Tallenna\n              </Button>\n              <ModalNotification />\n            </Form>\n          </Modal.Content>\n        </Modal>\n      </Table.Cell>\n      <Table.Cell>\n        {props.user.first_name} {props.user.last_name}\n      </Table.Cell>\n      <Table.Cell>\n        <Moment format=\"MMMM Do YYYY, h:mm:ss a\">{props.user.last_seen}</Moment>\n      </Table.Cell>\n      <Table.Cell>{userStatusOutPrint}</Table.Cell>\n      <Table.Cell>{userLevelOutPrint}</Table.Cell>\n      <Table.Cell>\n        <Icon color=\"red\" onClick={onDelete} name=\"delete\" />\n      </Table.Cell>\n    </Table.Row>\n  );\n};\n\nconst mapDispatchToProps = {\n  setCurrent,\n  setNotification,\n  updateUser\n};\n\nconst connectedUser = connect(\n  null,\n  mapDispatchToProps\n)(User);\n\nexport default connectedUser;\n","import {\n  INIT_USERS_LIST,\n  SET_LOADING,\n  SET_CURRENT,\n  UPDATE_USER\n} from '../actions/types';\nimport userService from '../services/users';\n\nexport const initializeUsers = () => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const users = await userService.getAll();\n    dispatch({\n      type: INIT_USERS_LIST,\n      data: users\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n// Set current user for editing\nexport const setCurrent = user => {\n  return {\n    type: SET_CURRENT,\n    payload: user\n  };\n};\n\nexport const updateUser = userToUpdate => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const updated = await userService.updateUser(userToUpdate);\n    const users = await userService.getAll();\n    console.log(updated);\n    dispatch({\n      type: UPDATE_USER,\n      data: users\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport User from './User';\nimport { Container, Dimmer, Loader } from 'semantic-ui-react';\nimport { Table } from 'semantic-ui-react';\n\nconst UserList = props => {\n  if (props.users.users === null || props.users.loading === true) {\n    return (\n      <Container>\n        <Dimmer active inverted>\n          <Loader size=\"medium\">Haetaan käyttäjiä...</Loader>\n        </Dimmer>\n      </Container>\n    );\n  }\n\n  console.log('userlist props', props);\n  return (\n    <Container>\n      <h3>Käyttäjät</h3>\n      <Table striped>\n        <Table.Header>\n          <Table.Row>\n            <Table.Cell>Käyttäjätunnus</Table.Cell>\n            <Table.Cell>Nimi</Table.Cell>\n            <Table.Cell>Viimeisin kirjautuminen</Table.Cell>\n            <Table.Cell>Tila</Table.Cell>\n            <Table.Cell>Taso</Table.Cell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {props.users.users.map(user => (\n            <User user={user} key={user.id} />\n          ))}\n        </Table.Body>\n      </Table>\n    </Container>\n  );\n};\n\nconst mapStateToProps = state => ({\n  users: state.users,\n  login: state.login\n});\n\nconst connectedUserList = connect(\n  mapStateToProps,\n  null\n)(UserList);\n\nexport default connectedUserList;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { getOneReport } from '../../actions/reportActions';\nimport {\n  getAllReportsByDate,\n  sortByUserId,\n  sortByStatus,\n  filterByText\n} from '../../actions/reportsListActions';\nimport { Dropdown, Button, Form, Input } from 'semantic-ui-react';\n\nconst ReportFilterForm = props => {\n  const [reportMonth, setReportMonth] = useState('');\n  const [reportYear, setReportYear] = useState('');\n  const [userId, setUserId] = useState('');\n  const [status, setStatus] = useState('');\n  const [filterText, setFilterText] = useState('');\n  // console.log(filterText);\n\n  if (props.users.users === null) {\n    return <div>loading</div>;\n  }\n  // const teststatus = 0;\n\n  // const reports = props.reportsList.reportsList.filter(\n  //   r => r.status === teststatus\n  // );\n  // console.log(reports);\n  // month options\n  const monthOptions = [\n    {\n      key: '01',\n      text: 'Tammikuu',\n      value: '01'\n    },\n    {\n      key: '02',\n      text: 'Helmikuu',\n      value: '02'\n    },\n    {\n      key: '03',\n      text: 'Maaliskuu',\n      value: '03'\n    },\n    {\n      key: '04',\n      text: 'Huhtikuu',\n      value: '04'\n    },\n    {\n      key: '05',\n      text: 'Toukokuu',\n      value: '05'\n    },\n    {\n      key: '06',\n      text: 'Kesäkuu',\n      value: '06'\n    },\n    {\n      key: '07',\n      text: 'Heinäkuu',\n      value: '07'\n    },\n    {\n      key: '08',\n      text: 'Elokuu',\n      value: '08'\n    },\n    {\n      key: '09',\n      text: 'Syyskuu',\n      value: '09'\n    },\n    {\n      key: '10',\n      text: 'Lokakuu',\n      value: '10'\n    },\n    {\n      key: '11',\n      text: 'Marraskuu',\n      value: '11'\n    },\n    {\n      key: '12',\n      text: 'Joulukuu',\n      value: '12'\n    }\n  ];\n  // year options\n  const date = new Date().getFullYear() + 1;\n  const years = [];\n  for (var i = 2001; i <= date; i++) {\n    years.push(i);\n  }\n  let yearOptions = years.map(option => ({\n    key: option,\n    text: option,\n    value: option\n  }));\n  yearOptions = yearOptions.reverse();\n  const userOptions = props.users.users.map(user => ({\n    key: user.id,\n    text: `${user.first_name} ${user.last_name}`,\n    value: user.id\n  }));\n  const addAllToUserOptions = [\n    {\n      key: 0,\n      text: 'Kaikki',\n      value: 0\n    },\n    ...userOptions\n  ];\n  // status options\n  const statusOptions = [\n    {\n      key: '2',\n      text: 'Kaikki',\n      value: ''\n    },\n    {\n      key: '0',\n      text: 'Keskeneräinen',\n      value: '0'\n    },\n    {\n      key: '1',\n      text: 'Valmis',\n      value: '1'\n    }\n  ];\n\n  const getReportsByMonth = () => {\n    const date = reportYear + '-' + reportMonth;\n    console.log(date);\n    console.log('klik');\n    props.getAllReportsByDate(date);\n  };\n\n  // get month from dropdown\n  const getMonth = (event, { value }) => {\n    event.preventDefault();\n    setReportMonth(value);\n    console.log(reportMonth);\n  };\n\n  // get year from dropdown\n  const getYear = (event, { value }) => {\n    event.preventDefault();\n    setReportYear(value);\n  };\n  const getUser = (event, { value }) => {\n    event.preventDefault();\n    setUserId(value);\n    console.log('user id', userId);\n    props.sortByUserId(userId);\n  };\n  const getStatus = (event, { value }) => {\n    event.preventDefault();\n    setStatus(value);\n    console.log('tila', status);\n    props.sortByStatus(status);\n  };\n  const getFilteredByText = (event, { value }) => {\n    event.preventDefault();\n    setFilterText(value);\n    props.filterByText(filterText);\n  };\n  return (\n    <React.Fragment>\n      <Form>\n        <h2>Hae raportit ajalta:</h2>\n\n        <Form.Group widths=\"equal\">\n          <Form.Field>\n            <Dropdown\n              placeholder=\"Kuukausi\"\n              openOnFocus={false}\n              selection\n              options={monthOptions}\n              onChange={getMonth}\n            />\n          </Form.Field>\n          <Form.Field>\n            <Dropdown\n              placeholder=\"Vuosi\"\n              openOnFocus\n              selection\n              options={yearOptions}\n              onChange={getYear}\n            />{' '}\n          </Form.Field>\n        </Form.Group>\n\n        <Form.Field>\n          <Button color=\"blue\" onClick={() => getReportsByMonth()}>\n            HAE\n          </Button>\n        </Form.Field>\n        <h4>Suodata:</h4>\n\n        <Form.Group widths=\"equal\">\n          <Form.Field>\n            <Dropdown\n              placeholder=\"Käyttäjä\"\n              openOnFocus={false}\n              search\n              selection\n              options={addAllToUserOptions}\n              onChange={getUser}\n            />\n          </Form.Field>\n          <Form.Field>\n            <Dropdown\n              placeholder=\"Tila\"\n              openOnFocus\n              selection\n              search\n              options={statusOptions}\n              onChange={getStatus}\n            />{' '}\n          </Form.Field>\n          <Form.Field>\n            <Input\n              type=\"text\"\n              placeholder=\"Tekstisuodatus\"\n              onChange={getFilteredByText}\n            />\n          </Form.Field>\n        </Form.Group>\n      </Form>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('reportfilterform state to props', state);\n  return {\n    report: state.report,\n    reportsList: state.reportsList,\n    notification: state.notification,\n    users: state.users,\n    login: state.login\n  };\n};\n\nconst mapDispatchToProps = {\n  getOneReport,\n  getAllReportsByDate,\n  sortByUserId,\n  sortByStatus,\n  filterByText\n};\n\nconst connectedReportFilterForm = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ReportFilterForm);\n\nexport default connectedReportFilterForm;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Table } from 'semantic-ui-react';\nimport { getOneReport } from '../../actions/reportActions';\n\nconst ReportListItem = props => {\n  let reportStatusOutPrint;\n  let className;\n\n  if (props.report.status === 1) {\n    reportStatusOutPrint = 'Valmis';\n  } else if (props.report.status === 0) {\n    reportStatusOutPrint = 'Keskeneräinen';\n  } else if (props.report.status === 9) {\n    reportStatusOutPrint = 'Poistettu';\n    return null;\n  }\n  if (props.report.rerun === 1) {\n    className = 'rerun';\n  }\n  return (\n    <React.Fragment>\n      <Table.Row className={className}>\n        <Table.Cell>{props.report.program_no}</Table.Cell>\n        <Table.Cell>\n          <Link className={className} to={`reports/${props.report.id}`}>\n            {props.report.name}\n          </Link>\n        </Table.Cell>\n        <Table.Cell>\n          {props.report.program_date} {props.report.program_start_time} -{' '}\n          {props.report.program_end_time}\n        </Table.Cell>\n        <Table.Cell>{reportStatusOutPrint}</Table.Cell>\n        <Table.Cell></Table.Cell>\n      </Table.Row>\n    </React.Fragment>\n  );\n};\n\n// const mapStateToProps = state => ({\n//   report: state.report\n// });\n\nconst connectedReportListItem = connect(\n  null,\n  { getOneReport }\n)(ReportListItem);\n\nexport default connectedReportListItem;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport ReportFilterForm from './ReportFilterForm';\nimport ReportListItem from './ReportListItem';\nimport Notification from '../layout/Notification';\nimport { getOneReport } from '../../actions/reportActions';\nimport { getAllReportsByDate } from '../../actions/reportsListActions';\nimport { setNotification } from '../../reducers/notificationReducer';\nimport { Container, Table, Dimmer, Segment, Loader } from 'semantic-ui-react';\nimport moment from 'moment';\n\nconst ReportList = props => {\n  // initial reports list\n  useEffect(() => {\n    if (props.reportsList.reportListDate === null) {\n      props.getAllReportsByDate(moment().format('YYYY-MM'));\n    } else {\n      props.getAllReportsByDate(props.reportsList.reportListDate);\n    }\n    // eslint-disable-next-line\n  }, []);\n  console.log('Reportlist props', props);\n\n  if (props.reportsList.reportsList === null || props.reportsList.loading) {\n    return (\n      <Segment>\n        <Dimmer active inverted>\n          <Loader inverted content=\"Ladataan...\" />\n        </Dimmer>\n      </Segment>\n    );\n  }\n\n  if (props.reportsList.reportsList.length === 0) {\n    return (\n      <Container>\n        <h2>Ei raportteja valittuna ajankohtana. Valitse vuosi ja kuukausi</h2>\n        <ReportFilterForm />\n      </Container>\n    );\n  }\n\n  return (\n    <Container>\n      <Notification />\n      <ReportFilterForm />\n      <Table striped>\n        <Table.Header>\n          <Table.Row>\n            <Table.Cell>Ohjelmanro</Table.Cell>\n            <Table.Cell>Nimi</Table.Cell>\n            <Table.Cell>Aika</Table.Cell>\n            <Table.Cell>Tila</Table.Cell>\n            <Table.Cell></Table.Cell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {props.reportsList.reportsList.map(r => (\n            <ReportListItem key={r.id} report={r} />\n          ))}\n        </Table.Body>\n      </Table>\n    </Container>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('report list state to props', state);\n  return {\n    report: state.report,\n    reportsList: state.reportsList,\n    notification: state.notification,\n    login: state.login\n  };\n};\n\nconst mapDispatchToProps = {\n  getAllReportsByDate,\n  getOneReport,\n  setNotification\n};\n\nconst connectedReportList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ReportList);\n\nexport default connectedReportList;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport ModalNotification from '../layout/ModalNotification';\nimport { setNotification } from '../../reducers/notificationReducer';\nimport {\n  Table,\n  Container,\n  Dimmer,\n  Loader,\n  Modal,\n  Header,\n  Form,\n  Button,\n  Input,\n  Icon\n} from 'semantic-ui-react';\n\nconst ProgramListItem = props => {\n  console.log('program list item props', props);\n  const onDelete = () => {\n    console.log('klikd delete');\n  };\n  if (props.program === null) {\n    return (\n      <Container>\n        <Dimmer active inverted>\n          <Loader size=\"medium\">Haetaan Ohjelmia...</Loader>\n        </Dimmer>\n      </Container>\n    );\n  }\n  return (\n    <Table.Row>\n      <Table.Cell>{props.program.id}</Table.Cell>\n      <Table.Cell>{props.program.name}</Table.Cell>\n      <Table.Cell>{props.program.identifier}</Table.Cell>\n      <Table.Cell>\n        <Icon color=\"red\" onClick={onDelete} name=\"delete\" />\n      </Table.Cell>\n    </Table.Row>\n  );\n};\n\nconst connectedProgramListItem = connect(\n  null,\n  null\n)(ProgramListItem);\n\nexport default connectedProgramListItem;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ProgramListItem from './ProgramListItem';\nimport { Container, Dimmer, Loader } from 'semantic-ui-react';\nimport { Table } from 'semantic-ui-react';\n\nconst ProgramList = props => {\n  if (props.programs.allPrograms === null || props.programs.loading === true) {\n    return (\n      <Container>\n        <Dimmer active inverted>\n          <Loader size=\"medium\">Haetaan ohjelmia...</Loader>\n        </Dimmer>\n      </Container>\n    );\n  }\n  return (\n    <Container>\n      <h3>Ohjelmat</h3>\n      <Table striped>\n        <Table.Header>\n          <Table.Row>\n            <Table.Cell>ID</Table.Cell>\n            <Table.Cell>Nimi</Table.Cell>\n            <Table.Cell>Tarkenne</Table.Cell>\n            <Table.Cell></Table.Cell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {props.programs.allPrograms.map(program => (\n            <ProgramListItem program={program} key={program.id} />\n          ))}\n        </Table.Body>\n      </Table>\n    </Container>\n  );\n};\n\nconst mapStateToProps = state => ({\n  programs: state.programs,\n  login: state.login\n});\n\nconst connectedProgramList = connect(\n  mapStateToProps,\n  null\n)(ProgramList);\n\nexport default connectedProgramList;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Notification from '../layout/Notification';\nimport { Form, Button } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { newLogin } from '../../actions/loginActions';\nimport { setNotification } from '../../reducers/notificationReducer';\n\nconst LoginForm = ({ newLogin }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  // handle login redux\n  const handleLogin = async event => {\n    event.preventDefault();\n    const user = {\n      username,\n      password\n    };\n    console.log(user);\n    newLogin(user);\n  };\n  return (\n    <div>\n      <Notification />\n      <Form onSubmit={handleLogin}>\n        <Form.Field>\n          <label>Käyttäjätunnus</label>\n          <input\n            type=\"text\"\n            placeholder=\"Käyttäjätunnus...\"\n            onChange={e => setUsername(e.target.value)}\n          />\n        </Form.Field>\n        <Form.Field>\n          <label>Salasana</label>\n          <input\n            type=\"password\"\n            placeholder=\"Salasana...\"\n            onChange={e => setPassword(e.target.value)}\n          />\n        </Form.Field>\n        <Button color=\"green\" type=\"submit\">\n          Kirjaudu\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nLoginForm.propTypes = {\n  newLogin: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { newLogin, setNotification }\n)(LoginForm);\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Button,\n  Form,\n  Header,\n  Container,\n  Dimmer,\n  Loader\n} from 'semantic-ui-react';\nimport DatePicker from 'react-datepicker';\nimport { getAllReportsByDate } from '../../actions/reportsListActions';\nimport { generateReportTransfer } from '../../actions/reportTransferActions';\nimport moment from 'moment';\n\nconst ReportTransferOptions = props => {\n  console.log('report transfer options props', props);\n  const [pickerDate, setPickerDate] = useState(new Date());\n  // initial reports list\n  useEffect(() => {\n    props.getAllReportsByDate(moment(pickerDate).format('YYYY-MM'));\n    // eslint-disable-next-line\n  }, [pickerDate]);\n  const getTransferFile = () => {\n    console.log(\n      'transferring file from ',\n      moment(pickerDate).format('YYYY-MM')\n    );\n    const params = {\n      user_id: props.login.id,\n      status: 1,\n      period: moment(pickerDate).format('YYYY-MM'),\n      filename: moment(new Date()).format('YYYYMMDDhhmmss') + '.txt'\n    };\n    console.log(params);\n    props.generateReportTransfer(params);\n  };\n\n  if (props.reportsList.reportsList === null) {\n    return (\n      <Container>\n        <Dimmer active inverted>\n          <Loader size=\"medium\">Ladataan...</Loader>\n        </Dimmer>\n      </Container>\n    );\n  }\n\n  if (props.reportsList.loading === true) {\n    return (\n      <Container>\n        <Dimmer active inverted>\n          <Loader size=\"medium\">Ladataan...</Loader>\n        </Dimmer>\n      </Container>\n    );\n  }\n\n  return (\n    <div>\n      <Header>Hae siirtotiedosto ajalta:</Header>\n      <Form>\n        <Form.Field>\n          <DatePicker\n            selected={pickerDate}\n            dateFormat=\"MMMM yyyy\"\n            onChange={date => setPickerDate(date)}\n            showMonthYearPicker\n          />\n        </Form.Field>\n        <Form.Field>\n          {/* löytyi {props.reportsList.reportsList.length} raporttia */}\n        </Form.Field>\n        <Form.Field>\n          <Button color=\"blue\" onClick={getTransferFile}>\n            HAE\n          </Button>\n        </Form.Field>\n      </Form>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('report transfer options state to props', state);\n  return {\n    reportsList: state.reportsList,\n    notification: state.notification,\n    login: state.login\n  };\n};\n\nconst connectedReportTransferOptions = connect(\n  mapStateToProps,\n  { getAllReportsByDate, generateReportTransfer }\n)(ReportTransferOptions);\n\nexport default connectedReportTransferOptions;\n","import {\n  GET_ALL_REPORT_TRANSFERS,\n  GENERATE_REPORT_TRANSFER,\n  SET_LOADING\n} from './types';\nimport reportService from '../services/reports';\n\n// get a list of reports by date\nexport const getAllTransfers = () => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const reports = await reportService.getAllTransfers();\n    // console.log('reportreducer', report);\n    dispatch({\n      type: GET_ALL_REPORT_TRANSFERS,\n      data: reports\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const generateReportTransfer = params => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const transferredReport = await reportService.generateReportDownload(\n      params\n    );\n    console.log(transferredReport);\n    const reports = await reportService.getAllTransfers();\n    dispatch({\n      type: GET_ALL_REPORT_TRANSFERS,\n      data: reports\n    });\n    dispatch({\n      type: GENERATE_REPORT_TRANSFER,\n      data: transferredReport\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Table } from 'semantic-ui-react';\nimport { downloadReport } from '../../services/reports';\n\nconst ReportTransferListItem = props => {\n  const downloadTransfer = filename => {\n    downloadReport(filename);\n  };\n  return (\n    <Table.Row>\n      <Table.Cell>{props.item.created_at}</Table.Cell>\n      <Table.Cell>\n        {props.item.first_name} {props.item.last_name}\n      </Table.Cell>\n      <Table.Cell>{props.item.period}</Table.Cell>\n      <Table.Cell>\n        <Link to=\"#\" onClick={() => downloadTransfer(props.item.filename)}>\n          {props.item.filename}\n        </Link>\n      </Table.Cell>\n    </Table.Row>\n  );\n};\n\nconst connectedReportTransferListItem = connect(\n  null,\n  { downloadReport }\n)(ReportTransferListItem);\n\nexport default connectedReportTransferListItem;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport ReportTransferOptions from './ReportTransferOptions';\nimport ReportTransferListItem from './ReportTransferListItem';\nimport { Container, Table, Dimmer, Loader } from 'semantic-ui-react';\nimport { getAllTransfers } from '../../actions/reportTransferActions';\n\nconst ReportTransferList = props => {\n  console.log('report transfer list props', props);\n  useEffect(() => {\n    props.getAllTransfers();\n    // eslint-disable-next-line\n  }, [props.reportsList.lastReport]);\n\n  if (props.reportsList.reportTransferList === null) {\n    return (\n      <Container>\n        <Dimmer active inverted>\n          <Loader size=\"medium\">Ladataan...</Loader>\n        </Dimmer>\n      </Container>\n    );\n  }\n\n  return (\n    <Container>\n      <h1>Siirtotiedostot</h1>\n      <ReportTransferOptions />\n      <Table>\n        <Table.Header>\n          <Table.Row>\n            <Table.Cell>Luontipäivämäärä</Table.Cell>\n            <Table.Cell>Käyttäjä</Table.Cell>\n            <Table.Cell>Raportin ajankohta</Table.Cell>\n            <Table.Cell>Siirtotiedosto</Table.Cell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {props.reportsList.reportTransferList.map(item => (\n            <ReportTransferListItem key={item.id} item={item} />\n          ))}\n        </Table.Body>\n      </Table>\n    </Container>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('report list state to props', state);\n  return {\n    report: state.report,\n    reportsList: state.reportsList,\n    notification: state.notification,\n    login: state.login\n  };\n};\n\nconst mapDispatchToProps = {\n  getAllTransfers\n};\n\nconst connectedReportTransferList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ReportTransferList);\n\nexport default connectedReportTransferList;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  getOneTrack,\n  removeCurrentTrack,\n  updateTrack\n} from '../../actions/trackActions';\nimport { setNotification } from '../../reducers/notificationReducer';\nimport {\n  Modal,\n  Header,\n  Form,\n  Button,\n  Input,\n  TextArea,\n  Dropdown,\n  Icon\n} from 'semantic-ui-react';\n\nconst EditTrackModal = props => {\n  console.log(props);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [artist, setArtist] = useState('');\n  const [album, setAlbum] = useState('');\n  const [track, setTrack] = useState('');\n  const [min, setMin] = useState('');\n  const [sec, setSec] = useState('');\n  const [country, setCountry] = useState('');\n  const [recordCountry, setRecordCountry] = useState('');\n  const [people, setPeople] = useState('');\n  const [discNo, setDiscNo] = useState('');\n  const [trackNo, setTrackNo] = useState('');\n  const [year, setYear] = useState('');\n  const [label, setLabel] = useState('');\n  const [catId, setCatId] = useState('');\n  const [isrc, setIsrc] = useState('');\n  const [comment, setComment] = useState('');\n\n  useEffect(() => {\n    if (props.report.currentTrack !== null) {\n      let minutes = Math.floor(props.report.currentTrack[0].length / 60);\n      let seconds = props.report.currentTrack[0].length % 60;\n      setArtist(props.report.currentTrack[0].artist);\n      setAlbum(props.report.currentTrack[0].album);\n      setTrack(props.report.currentTrack[0].track_title);\n      setMin(minutes);\n      setSec(seconds);\n      setCountry(props.report.currentTrack[0].country);\n      setRecordCountry(props.report.currentTrack[0].record_country);\n      setDiscNo(props.report.currentTrack[0].disc_no);\n      setTrackNo(props.report.currentTrack[0].track_no);\n      setYear(props.report.currentTrack[0].year);\n      setLabel(props.report.currentTrack[0].label);\n      setCatId(props.report.currentTrack[0].cat_id);\n      setIsrc(props.report.currentTrack[0].isrc);\n      setComment(props.report.currentTrack[0].comment);\n      setPeople(props.report.currentTrack[0].people);\n    }\n    // eslint-disable-next-line\n  }, [props.report.currentTrack]);\n  const handleOpen = () => {\n    props.getOneTrack(props.id);\n    setModalOpen(true);\n  };\n\n  if (props.report.currentTrack === null) {\n    return (\n      <Icon\n        style={{ cursor: 'pointer' }}\n        color=\"blue\"\n        onClick={handleOpen}\n        name=\"edit\"\n      />\n    );\n  }\n\n  if (props.report.loading) {\n    return (\n      <Modal\n        open={modalOpen}\n        closeIcon\n        trigger={\n          <Icon\n            style={{ cursor: 'pointer' }}\n            color=\"blue\"\n            onClick={handleOpen}\n            name=\"edit\"\n          />\n        }\n        onClose={handleClose}\n      >\n        <Header content=\"Muokkaa biisin tietoja\" />\n        <Modal.Content>ladataan</Modal.Content>\n      </Modal>\n    );\n  }\n\n  const submitTrack = () => {\n    console.log('klikd submit track');\n    // artist name validation\n    if (artist === null) {\n      props.setNotification('Artisti on pakollinen tieto', 'fail');\n    }\n    let length = parseInt(min) * 60 + parseInt(sec);\n    const trackToEdit = {\n      artist_name: artist,\n      album_name: album,\n      track_title: track,\n      length,\n      country,\n      record_country: recordCountry,\n      people,\n      disc_no: discNo,\n      track_no: trackNo,\n      year,\n      label,\n      cat_id: catId,\n      isrc,\n      comment,\n      user_id: props.login.id,\n      artist_id: props.report.currentTrack[0].artist_id,\n      album_id: props.report.currentTrack[0].album_id,\n      track_id: props.report.currentTrack[0].track_id,\n      sortable_rank: props.sortable_rank,\n      report_track_id: props.report_track_id\n    };\n    console.log('updating track', trackToEdit);\n    props.updateTrack(trackToEdit);\n    handleClose();\n    setArtist(null);\n    setAlbum(null);\n    setTrack(null);\n    setMin(null);\n    setSec(null);\n    setCountry(null);\n    setRecordCountry(null);\n    setDiscNo(null);\n    setTrackNo(null);\n    setYear(null);\n    setLabel(null);\n    setCatId(null);\n    setIsrc(null);\n    setComment(null);\n    setPeople(null);\n  };\n\n  const countryOptions = [\n    {\n      key: 1,\n      text: 'Suomi',\n      value: 1\n    },\n    {\n      key: 2,\n      text: 'Muu',\n      value: 2\n    },\n    {\n      key: null,\n      text: 'Ei tietoa',\n      value: null\n    }\n  ];\n  const getCountry = (event, { value }) => {\n    event.preventDefault();\n    setCountry(value);\n  };\n  const recordCountryOptions = [\n    { text: 'Finland', value: 'FI' },\n    { text: 'United Kingdom', value: 'GB' },\n    { text: 'United States', value: 'US' },\n    { text: 'Afghanistan', value: 'AF' },\n    { text: 'Åland Islands', value: 'AX' },\n    { text: 'Albania', value: 'AL' },\n    { text: 'Algeria', value: 'DZ' },\n    { text: 'American Samoa', value: 'AS' },\n    { text: 'AndorrA', value: 'AD' },\n    { text: 'Angola', value: 'AO' },\n    { text: 'Anguilla', value: 'AI' },\n    { text: 'Antarctica', value: 'AQ' },\n    { text: 'Antigua and Barbuda', value: 'AG' },\n    { text: 'Argentina', value: 'AR' },\n    { text: 'Armenia', value: 'AM' },\n    { text: 'Aruba', value: 'AW' },\n    { text: 'Australia', value: 'AU' },\n    { text: 'Austria', value: 'AT' },\n    { text: 'Azerbaijan', value: 'AZ' },\n    { text: 'Bahamas', value: 'BS' },\n    { text: 'Bahrain', value: 'BH' },\n    { text: 'Bangladesh', value: 'BD' },\n    { text: 'Barbados', value: 'BB' },\n    { text: 'Belarus', value: 'BY' },\n    { text: 'Belgium', value: 'BE' },\n    { text: 'Belize', value: 'BZ' },\n    { text: 'Benin', value: 'BJ' },\n    { text: 'Bermuda', value: 'BM' },\n    { text: 'Bhutan', value: 'BT' },\n    { text: 'Bolivia', value: 'BO' },\n    { text: 'Bosnia and Herzegovina', value: 'BA' },\n    { text: 'Botswana', value: 'BW' },\n    { text: 'Bouvet Island', value: 'BV' },\n    { text: 'Brazil', value: 'BR' },\n    { text: 'British Indian Ocean Territory', value: 'IO' },\n    { text: 'Brunei Darussalam', value: 'BN' },\n    { text: 'Bulgaria', value: 'BG' },\n    { text: 'Burkina Faso', value: 'BF' },\n    { text: 'Burundi', value: 'BI' },\n    { text: 'Cambodia', value: 'KH' },\n    { text: 'Cameroon', value: 'CM' },\n    { text: 'Canada', value: 'CA' },\n    { text: 'Cape Verde', value: 'CV' },\n    { text: 'Cayman Islands', value: 'KY' },\n    { text: 'Central African Republic', value: 'CF' },\n    { text: 'Chad', value: 'TD' },\n    { text: 'Chile', value: 'CL' },\n    { text: 'China', value: 'CN' },\n    { text: 'Christmas Island', value: 'CX' },\n    { text: 'Cocos (Keeling) Islands', value: 'CC' },\n    { text: 'Colombia', value: 'CO' },\n    { text: 'Comoros', value: 'KM' },\n    { text: 'Congo', value: 'CG' },\n    { text: 'Congo, The Democratic Republic of the', value: 'CD' },\n    { text: 'Cook Islands', value: 'CK' },\n    { text: 'Costa Rica', value: 'CR' },\n    { text: \"Cote D'Ivoire\", value: 'CI' },\n    { text: 'Croatia', value: 'HR' },\n    { text: 'Cuba', value: 'CU' },\n    { text: 'Cyprus', value: 'CY' },\n    { text: 'Czech Republic', value: 'CZ' },\n    { text: 'Denmark', value: 'DK' },\n    { text: 'Djibouti', value: 'DJ' },\n    { text: 'Dominica', value: 'DM' },\n    { text: 'Dominican Republic', value: 'DO' },\n    { text: 'Ecuador', value: 'EC' },\n    { text: 'Egypt', value: 'EG' },\n    { text: 'El Salvador', value: 'SV' },\n    { text: 'Equatorial Guinea', value: 'GQ' },\n    { text: 'Eritrea', value: 'ER' },\n    { text: 'Estonia', value: 'EE' },\n    { text: 'Ethiopia', value: 'ET' },\n    { text: 'Falkland Islands (Malvinas)', value: 'FK' },\n    { text: 'Faroe Islands', value: 'FO' },\n    { text: 'Fiji', value: 'FJ' },\n    { text: 'France', value: 'FR' },\n    { text: 'French Guiana', value: 'GF' },\n    { text: 'French Polynesia', value: 'PF' },\n    { text: 'French Southern Territories', value: 'TF' },\n    { text: 'Gabon', value: 'GA' },\n    { text: 'Gambia', value: 'GM' },\n    { text: 'Georgia', value: 'GE' },\n    { text: 'Germany', value: 'DE' },\n    { text: 'Ghana', value: 'GH' },\n    { text: 'Gibraltar', value: 'GI' },\n    { text: 'Greece', value: 'GR' },\n    { text: 'Greenland', value: 'GL' },\n    { text: 'Grenada', value: 'GD' },\n    { text: 'Guadeloupe', value: 'GP' },\n    { text: 'Guam', value: 'GU' },\n    { text: 'Guatemala', value: 'GT' },\n    { text: 'Guernsey', value: 'GG' },\n    { text: 'Guinea', value: 'GN' },\n    { text: 'Guinea-Bissau', value: 'GW' },\n    { text: 'Guyana', value: 'GY' },\n    { text: 'Haiti', value: 'HT' },\n    { text: 'Heard Island and Mcdonald Islands', value: 'HM' },\n    { text: 'Holy See (Vatican City State)', value: 'VA' },\n    { text: 'Honduras', value: 'HN' },\n    { text: 'Hong Kong', value: 'HK' },\n    { text: 'Hungary', value: 'HU' },\n    { text: 'Iceland', value: 'IS' },\n    { text: 'India', value: 'IN' },\n    { text: 'Indonesia', value: 'ID' },\n    { text: 'Iran, Islamic Republic Of', value: 'IR' },\n    { text: 'Iraq', value: 'IQ' },\n    { text: 'Ireland', value: 'IE' },\n    { text: 'Isle of Man', value: 'IM' },\n    { text: 'Israel', value: 'IL' },\n    { text: 'Italy', value: 'IT' },\n    { text: 'Jamaica', value: 'JM' },\n    { text: 'Japan', value: 'JP' },\n    { text: 'Jersey', value: 'JE' },\n    { text: 'Jordan', value: 'JO' },\n    { text: 'Kazakhstan', value: 'KZ' },\n    { text: 'Kenya', value: 'KE' },\n    { text: 'Kiribati', value: 'KI' },\n    { text: \"Korea, Democratic People's Republic of\", value: 'KP' },\n    { text: 'Korea, Republic of', value: 'KR' },\n    { text: 'Kuwait', value: 'KW' },\n    { text: 'Kyrgyzstan', value: 'KG' },\n    { text: \"Lao People's Democratic Republic\", value: 'LA' },\n    { text: 'Latvia', value: 'LV' },\n    { text: 'Lebanon', value: 'LB' },\n    { text: 'Lesotho', value: 'LS' },\n    { text: 'Liberia', value: 'LR' },\n    { text: 'Libyan Arab Jamahiriya', value: 'LY' },\n    { text: 'Liechtenstein', value: 'LI' },\n    { text: 'Lithuania', value: 'LT' },\n    { text: 'Luxembourg', value: 'LU' },\n    { text: 'Macao', value: 'MO' },\n    { text: 'Macedonia, The Former Yugoslav Republic of', value: 'MK' },\n    { text: 'Madagascar', value: 'MG' },\n    { text: 'Malawi', value: 'MW' },\n    { text: 'Malaysia', value: 'MY' },\n    { text: 'Maldives', value: 'MV' },\n    { text: 'Mali', value: 'ML' },\n    { text: 'Malta', value: 'MT' },\n    { text: 'Marshall Islands', value: 'MH' },\n    { text: 'Martinique', value: 'MQ' },\n    { text: 'Mauritania', value: 'MR' },\n    { text: 'Mauritius', value: 'MU' },\n    { text: 'Mayotte', value: 'YT' },\n    { text: 'Mexico', value: 'MX' },\n    { text: 'Micronesia, Federated States of', value: 'FM' },\n    { text: 'Moldova, Republic of', value: 'MD' },\n    { text: 'Monaco', value: 'MC' },\n    { text: 'Mongolia', value: 'MN' },\n    { text: 'Montenegro', value: 'ME' },\n    { text: 'Montserrat', value: 'MS' },\n    { text: 'Morocco', value: 'MA' },\n    { text: 'Mozambique', value: 'MZ' },\n    { text: 'Myanmar', value: 'MM' },\n    { text: 'Namibia', value: 'NA' },\n    { text: 'Nauru', value: 'NR' },\n    { text: 'Nepal', value: 'NP' },\n    { text: 'Netherlands', value: 'NL' },\n    { text: 'Netherlands Antilles', value: 'AN' },\n    { text: 'New Caledonia', value: 'NC' },\n    { text: 'New Zealand', value: 'NZ' },\n    { text: 'Nicaragua', value: 'NI' },\n    { text: 'Niger', value: 'NE' },\n    { text: 'Nigeria', value: 'NG' },\n    { text: 'Niue', value: 'NU' },\n    { text: 'Norfolk Island', value: 'NF' },\n    { text: 'Northern Mariana Islands', value: 'MP' },\n    { text: 'Norway', value: 'NO' },\n    { text: 'Oman', value: 'OM' },\n    { text: 'Pakistan', value: 'PK' },\n    { text: 'Palau', value: 'PW' },\n    { text: 'Palestinian Territory, Occupied', value: 'PS' },\n    { text: 'Panama', value: 'PA' },\n    { text: 'Papua New Guinea', value: 'PG' },\n    { text: 'Paraguay', value: 'PY' },\n    { text: 'Peru', value: 'PE' },\n    { text: 'Philippines', value: 'PH' },\n    { text: 'Poland', value: 'PL' },\n    { text: 'Portugal', value: 'PT' },\n    { text: 'Puerto Rico', value: 'PR' },\n    { text: 'Qatar', value: 'QA' },\n    { text: 'Romania', value: 'RO' },\n    { text: 'Russian Federation', value: 'RU' },\n    { text: 'RWANDA', value: 'RW' },\n    { text: 'Saint Helena', value: 'SH' },\n    { text: 'Saint Kitts and Nevis', value: 'KN' },\n    { text: 'Saint Lucia', value: 'LC' },\n    { text: 'Saint Pierre and Miquelon', value: 'PM' },\n    { text: 'Saint Vincent and the Grenadines', value: 'VC' },\n    { text: 'Samoa', value: 'WS' },\n    { text: 'San Marino', value: 'SM' },\n    { text: 'Sao Tome and Principe', value: 'ST' },\n    { text: 'Saudi Arabia', value: 'SA' },\n    { text: 'Senegal', value: 'SN' },\n    { text: 'Serbia', value: 'RS' },\n    { text: 'Seychelles', value: 'SC' },\n    { text: 'Sierra Leone', value: 'SL' },\n    { text: 'Singapore', value: 'SG' },\n    { text: 'Slovakia', value: 'SK' },\n    { text: 'Slovenia', value: 'SI' },\n    { text: 'Solomon Islands', value: 'SB' },\n    { text: 'Somalia', value: 'SO' },\n    { text: 'South Africa', value: 'ZA' },\n    { text: 'South Georgia and the South Sandwich Islands', value: 'GS' },\n    { text: 'Spain', value: 'ES' },\n    { text: 'Sri Lanka', value: 'LK' },\n    { text: 'Sudan', value: 'SD' },\n    { text: 'Suriname', value: 'SR' },\n    { text: 'Svalbard and Jan Mayen', value: 'SJ' },\n    { text: 'Swaziland', value: 'SZ' },\n    { text: 'Sweden', value: 'SE' },\n    { text: 'Switzerland', value: 'CH' },\n    { text: 'Syrian Arab Republic', value: 'SY' },\n    { text: 'Taiwan, Province of China', value: 'TW' },\n    { text: 'Tajikistan', value: 'TJ' },\n    { text: 'Tanzania, United Republic of', value: 'TZ' },\n    { text: 'Thailand', value: 'TH' },\n    { text: 'Timor-Leste', value: 'TL' },\n    { text: 'Togo', value: 'TG' },\n    { text: 'Tokelau', value: 'TK' },\n    { text: 'Tonga', value: 'TO' },\n    { text: 'Trinidad and Tobago', value: 'TT' },\n    { text: 'Tunisia', value: 'TN' },\n    { text: 'Turkey', value: 'TR' },\n    { text: 'Turkmenistan', value: 'TM' },\n    { text: 'Turks and Caicos Islands', value: 'TC' },\n    { text: 'Tuvalu', value: 'TV' },\n    { text: 'Uganda', value: 'UG' },\n    { text: 'Ukraine', value: 'UA' },\n    { text: 'United Arab Emirates', value: 'AE' },\n    { text: 'United States Minor Outlying Islands', value: 'UM' },\n    { text: 'Uruguay', value: 'UY' },\n    { text: 'Uzbekistan', value: 'UZ' },\n    { text: 'Vanuatu', value: 'VU' },\n    { text: 'Venezuela', value: 'VE' },\n    { text: 'Viet Nam', value: 'VN' },\n    { text: 'Virgin Islands, British', value: 'VG' },\n    { text: 'Virgin Islands, U.S.', value: 'VI' },\n    { text: 'Wallis and Futuna', value: 'WF' },\n    { text: 'Western Sahara', value: 'EH' },\n    { text: 'Yemen', value: 'YE' },\n    { text: 'Zambia', value: 'ZM' },\n    { text: 'Zimbabwe', value: 'ZW' }\n  ];\n  const getRecordCountry = (event, { value }) => {\n    event.preventDefault();\n    setRecordCountry(value);\n  };\n\n  const handleClose = () => {\n    props.removeCurrentTrack();\n\n    setModalOpen(false);\n  };\n  let minutes = Math.floor(props.report.currentTrack[0].length / 60);\n  let seconds = props.report.currentTrack[0].length % 60;\n  console.log(minutes);\n  console.log(seconds);\n  return (\n    <Modal\n      open={modalOpen}\n      closeIcon\n      trigger={\n        <Icon\n          style={{ cursor: 'pointer' }}\n          color=\"blue\"\n          onClick={handleOpen}\n          name=\"edit\"\n        />\n      }\n      onClose={handleClose}\n    >\n      <Header content=\"Muokkaa biisin tietoja\" />\n      <Modal.Content>\n        <Form onSubmit={submitTrack}>\n          <Form.Field required>\n            <label>Artisti</label>\n            <Input\n              defaultValue={props.report.currentTrack[0].artist}\n              // value={artist}\n              type=\"text\"\n              placeholder={artist}\n              onChange={e => setArtist(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field required>\n            <label>Albumi</label>\n            <Input\n              defaultValue={props.report.currentTrack[0].album}\n              type=\"text\"\n              placeholder=\"Albumi...\"\n              onChange={e => setAlbum(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field required>\n            <label>Biisi</label>\n            <Input\n              defaultValue={props.report.currentTrack[0].track_title}\n              type=\"text\"\n              placeholder=\"Biisi...\"\n              onChange={e => setTrack(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Group widths=\"equal\">\n            <Form.Field required>\n              <label>Kesto - minuutit</label>\n              <Input\n                maxLength={4}\n                defaultValue={minutes}\n                type=\"number\"\n                placeholder=\"Minuuttia...\"\n                onChange={e => setMin(e.target.value)}\n              />\n            </Form.Field>\n            <Form.Field required>\n              <label>Kesto - sekunnit</label>\n              <Input\n                defaultValue={seconds}\n                maxLength={2}\n                type=\"number\"\n                placeholder=\"Sekuntia...\"\n                onChange={e => setSec(e.target.value)}\n              />\n            </Form.Field>\n          </Form.Group>\n          <Form.Group widths=\"equal\">\n            <Form.Field required>\n              <label>Levy#</label>\n              <Input\n                maxLength={2}\n                defaultValue={props.report.currentTrack[0].disc_no}\n                type=\"number\"\n                placeholder=\"CD1=1, CD2=2, A1=1, A2=2...\"\n                onChange={e => setDiscNo(e.target.value)}\n              />\n            </Form.Field>\n            <Form.Field required>\n              <label>Biisi#</label>\n              <Input\n                defaultValue={props.report.currentTrack[0].track_no}\n                maxLength={2}\n                type=\"number\"\n                placeholder=\"Biisi #...\"\n                onChange={e => setTrackNo(e.target.value)}\n              />\n            </Form.Field>\n          </Form.Group>\n          <Form.Field>\n            <label>Tekijät - max 5kpl, yksi per rivi, SUKUNIMI ETUNIMI</label>\n            <TextArea\n              defaultValue={props.report.currentTrack[0].people}\n              onChange={e => setPeople(e.target.value)}\n              placeholder=\"Tekijät - max 5kpl\"\n            />\n          </Form.Field>\n          <Form.Group widths=\"equal\">\n            <Form.Field\n              defaultValue={props.report.currentTrack[0].country}\n              required\n            >\n              <label>Säveltäjän kotimaa</label>\n              <Dropdown\n                placeholder=\"Suomi, muu, ei tietoa...\"\n                openOnFocus={false}\n                defaultValue={props.report.currentTrack[0].country}\n                selection\n                options={countryOptions}\n                onChange={getCountry}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Tallennusmaa</label>\n              <Dropdown\n                placeholder=\"Valitse tallennusmaa...\"\n                openOnFocus={false}\n                defaultValue={props.report.currentTrack[0].record_country}\n                selection\n                search\n                options={recordCountryOptions}\n                onChange={getRecordCountry}\n              />\n            </Form.Field>\n          </Form.Group>\n          <Form.Field required>\n            <label>Levymerkki</label>\n            <Input\n              defaultValue={props.report.currentTrack[0].label}\n              type=\"text\"\n              placeholder=\"Levymerkki...\"\n              onChange={e => setLabel(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field required>\n            <label>Levykoodi</label>\n            <Input\n              defaultValue={props.report.currentTrack[0].cat_id}\n              type=\"text\"\n              placeholder=\"Levykoodi...\"\n              onChange={e => setCatId(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>ISRC</label>\n            <Input\n              defaultValue={props.report.currentTrack[0].isrc}\n              maxLength={12}\n              type=\"text\"\n              placeholder=\"ISRC...\"\n              onChange={e => setIsrc(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field required>\n            <label>Vuosi</label>\n            <Input\n              defaultValue={props.report.currentTrack[0].year}\n              maxLength={4}\n              type=\"number\"\n              placeholder=\"Vuosi...\"\n              onChange={e => setYear(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Lisätietoa</label>\n            <TextArea\n              defaultValue={props.report.currentTrack[0].comment}\n              onChange={e => setComment(e.target.value)}\n              placeholder=\"Lisätietoa...\"\n            />\n          </Form.Field>\n          <Button\n            // disabled={\n            //   !artist ||\n            //   !album ||\n            //   !track ||\n            //   !trackNo ||\n            //   !discNo ||\n            //   !min ||\n            //   !sec ||\n            //   !label ||\n            //   !catId ||\n            //   !year\n            // }\n            color=\"green\"\n            type=\"submit\"\n          >\n            Tallenna tiedot\n          </Button>\n        </Form>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    report: state.report,\n    reportsList: state.reportsList,\n    login: state.login\n  };\n};\nconst connectedEditTrackModal = connect(\n  mapStateToProps,\n  { setNotification, getOneTrack, removeCurrentTrack, updateTrack }\n)(EditTrackModal);\n\nexport default connectedEditTrackModal;\n","import {\n  GET_DJONLINE_TRACKS,\n  ADD_NEW_TRACK,\n  UPDATE_TRACK,\n  SET_LOADING,\n  GET_ONE_TRACK,\n  REMOVE_CURRENT_TRACK\n} from './types';\nimport trackService from '../services/tracks';\n\nexport const getDjonlineTracks = searchParams => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const tracks = await trackService.checkDjonlineTracks(searchParams);\n    dispatch({\n      type: GET_DJONLINE_TRACKS,\n      data: tracks\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const addNewTrack = trackToAdd => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const track = await trackService.addNewTrack(trackToAdd);\n    console.log(track);\n    dispatch({\n      type: ADD_NEW_TRACK,\n      data: track\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updateTrack = trackToUpdate => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const updatedTrack = await trackService.updateTrack(trackToUpdate);\n    console.log(updatedTrack);\n    dispatch({\n      type: UPDATE_TRACK,\n      data: updatedTrack\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getOneTrack = id => async dispatch => {\n  try {\n    // dispatch({\n    //   type: SET_LOADING\n    // });\n    const track = await trackService.getOneTrack(id);\n    dispatch({\n      type: GET_ONE_TRACK,\n      data: track\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const removeCurrentTrack = () => async dispatch => {\n  dispatch({\n    type: REMOVE_CURRENT_TRACK\n  });\n};\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Table, Icon, Checkbox } from 'semantic-ui-react';\nimport EditTrackModal from '../track/EditTrackModal';\nimport {\n  deleteTrackFromReport,\n  checkForDelete,\n  unCheckForDelete\n} from '../../actions/reportActions';\n\nconst ReportWithTracksItem = props => {\n  const [checked, setChecked] = useState(false);\n  // console.log('report with tracks item props', props);\n  const onDelete = () => {\n    const remainingTracks = props.report.report.filter(\n      t => t.report_track_id !== props.track.report_track_id\n    );\n    const params = {\n      report_track_id: props.track.report_track_id,\n      report_id: props.report.reportDetails.id,\n      remainingTracks\n    };\n    console.log(params);\n    props.deleteTrackFromReport(params);\n    console.log('klikd delete');\n  };\n  const onEdit = () => {\n    console.log('klikd edit');\n  };\n\n  const checkedClick = () => {\n    setChecked(!checked);\n    if (checked === true) {\n      console.log('removing id from delete array', props.track.report_track_id);\n      props.unCheckForDelete(props.track.report_track_id);\n    } else {\n      console.log('checked for delete id', props.track.report_track_id);\n      props.checkForDelete(props.track.report_track_id);\n    }\n  };\n  let minutes = Math.floor(props.track.length / 60);\n  minutes = minutes.toString();\n  let seconds = props.track.length - minutes * 60;\n  if (seconds.toString().length === 1) {\n    seconds = '0' + seconds.toString();\n  }\n  seconds = seconds.toString();\n\n  return (\n    <Table.Row>\n      <Table.Cell>\n        <Checkbox onChange={checkedClick} checked={checked} />\n        <Icon\n          style={{ marginLeft: '1.5rem', cursor: 'pointer' }}\n          onClick={onEdit}\n          name=\"arrows alternate\"\n        />\n      </Table.Cell>\n      <Table.Cell>{props.track.sortable_rank}</Table.Cell>\n      <Table.Cell>{props.track.artist_name}</Table.Cell>\n      <Table.Cell>{props.track.track_title}</Table.Cell>\n      <Table.Cell>\n        {minutes}:{seconds}\n      </Table.Cell>\n      <Table.Cell>\n        <Icon\n          style={{ cursor: 'pointer' }}\n          color=\"red\"\n          onClick={onDelete}\n          name=\"delete\"\n        />\n      </Table.Cell>\n      <Table.Cell>\n        {/* <Icon\n          style={{ cursor: 'pointer' }}\n          color=\"blue\"\n          onClick={onEdit}\n          name=\"edit\"\n        /> */}\n        <EditTrackModal\n          id={props.track.track_id}\n          sortable_rank={props.track.sortable_rank}\n          report_track_id={props.track.report_track_id}\n        />\n      </Table.Cell>\n    </Table.Row>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    report: state.report,\n    reportsList: state.reportsList,\n    notification: state.notification\n  };\n};\n\nconst connectedReportWithTracksItem = connect(\n  mapStateToProps,\n  { deleteTrackFromReport, checkForDelete, unCheckForDelete }\n)(ReportWithTracksItem);\n\nexport default connectedReportWithTracksItem;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { setNotification } from '../../reducers/notificationReducer';\nimport { addNewTrack } from '../../actions/trackActions';\nimport {\n  Modal,\n  Header,\n  Form,\n  Button,\n  Input,\n  TextArea,\n  Dropdown\n} from 'semantic-ui-react';\n\nconst AddTrackModal = props => {\n  console.log('add track modal props', props);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [artist, setArtist] = useState('');\n  const [album, setAlbum] = useState('');\n  const [track, setTrack] = useState('');\n  const [min, setMin] = useState('');\n  const [sec, setSec] = useState('');\n  const [country, setCountry] = useState('');\n  const [recordCountry, setRecordCountry] = useState('');\n  const [people, setPeople] = useState('');\n  const [discNo, setDiscNo] = useState('');\n  const [trackNo, setTrackNo] = useState('');\n  const [year, setYear] = useState('');\n  const [label, setLabel] = useState('');\n  const [catId, setCatId] = useState('');\n  const [isrc, setIsrc] = useState('');\n  const [comment, setComment] = useState('');\n\n  const submitTrack = () => {\n    console.log('klikd submit track');\n    // artist name validation\n    if (artist === null) {\n      props.setNotification('Artisti on pakollinen tieto', 'fail');\n    }\n    let length = parseInt(min) * 60 + parseInt(sec);\n    const trackToAdd = {\n      artist_name: artist,\n      album_name: album,\n      track_title: track,\n      length,\n      country,\n      record_country: recordCountry,\n      people,\n      disc_no: discNo,\n      track_no: trackNo,\n      year,\n      label,\n      cat_id: catId,\n      isrc,\n      comment,\n      report_id: props.report.reportDetails.id,\n      user_id: props.login.id,\n      sortable_rank: props.report.report.length + 1\n    };\n    console.log(trackToAdd);\n    props.addNewTrack(trackToAdd);\n    handleClose();\n  };\n\n  const countryOptions = [\n    {\n      key: 1,\n      text: 'Suomi',\n      value: 1\n    },\n    {\n      key: 2,\n      text: 'Muu',\n      value: 2\n    },\n    {\n      key: 0,\n      text: 'Ei tietoa',\n      value: null\n    }\n  ];\n  const getCountry = (event, { value }) => {\n    event.preventDefault();\n    setCountry(value);\n  };\n  const recordCountryOptions = [\n    { text: 'Finland', value: 'FI' },\n    { text: 'United Kingdom', value: 'GB' },\n    { text: 'United States', value: 'US' },\n    { text: 'Afghanistan', value: 'AF' },\n    { text: 'Åland Islands', value: 'AX' },\n    { text: 'Albania', value: 'AL' },\n    { text: 'Algeria', value: 'DZ' },\n    { text: 'American Samoa', value: 'AS' },\n    { text: 'AndorrA', value: 'AD' },\n    { text: 'Angola', value: 'AO' },\n    { text: 'Anguilla', value: 'AI' },\n    { text: 'Antarctica', value: 'AQ' },\n    { text: 'Antigua and Barbuda', value: 'AG' },\n    { text: 'Argentina', value: 'AR' },\n    { text: 'Armenia', value: 'AM' },\n    { text: 'Aruba', value: 'AW' },\n    { text: 'Australia', value: 'AU' },\n    { text: 'Austria', value: 'AT' },\n    { text: 'Azerbaijan', value: 'AZ' },\n    { text: 'Bahamas', value: 'BS' },\n    { text: 'Bahrain', value: 'BH' },\n    { text: 'Bangladesh', value: 'BD' },\n    { text: 'Barbados', value: 'BB' },\n    { text: 'Belarus', value: 'BY' },\n    { text: 'Belgium', value: 'BE' },\n    { text: 'Belize', value: 'BZ' },\n    { text: 'Benin', value: 'BJ' },\n    { text: 'Bermuda', value: 'BM' },\n    { text: 'Bhutan', value: 'BT' },\n    { text: 'Bolivia', value: 'BO' },\n    { text: 'Bosnia and Herzegovina', value: 'BA' },\n    { text: 'Botswana', value: 'BW' },\n    { text: 'Bouvet Island', value: 'BV' },\n    { text: 'Brazil', value: 'BR' },\n    { text: 'British Indian Ocean Territory', value: 'IO' },\n    { text: 'Brunei Darussalam', value: 'BN' },\n    { text: 'Bulgaria', value: 'BG' },\n    { text: 'Burkina Faso', value: 'BF' },\n    { text: 'Burundi', value: 'BI' },\n    { text: 'Cambodia', value: 'KH' },\n    { text: 'Cameroon', value: 'CM' },\n    { text: 'Canada', value: 'CA' },\n    { text: 'Cape Verde', value: 'CV' },\n    { text: 'Cayman Islands', value: 'KY' },\n    { text: 'Central African Republic', value: 'CF' },\n    { text: 'Chad', value: 'TD' },\n    { text: 'Chile', value: 'CL' },\n    { text: 'China', value: 'CN' },\n    { text: 'Christmas Island', value: 'CX' },\n    { text: 'Cocos (Keeling) Islands', value: 'CC' },\n    { text: 'Colombia', value: 'CO' },\n    { text: 'Comoros', value: 'KM' },\n    { text: 'Congo', value: 'CG' },\n    { text: 'Congo, The Democratic Republic of the', value: 'CD' },\n    { text: 'Cook Islands', value: 'CK' },\n    { text: 'Costa Rica', value: 'CR' },\n    { text: \"Cote D'Ivoire\", value: 'CI' },\n    { text: 'Croatia', value: 'HR' },\n    { text: 'Cuba', value: 'CU' },\n    { text: 'Cyprus', value: 'CY' },\n    { text: 'Czech Republic', value: 'CZ' },\n    { text: 'Denmark', value: 'DK' },\n    { text: 'Djibouti', value: 'DJ' },\n    { text: 'Dominica', value: 'DM' },\n    { text: 'Dominican Republic', value: 'DO' },\n    { text: 'Ecuador', value: 'EC' },\n    { text: 'Egypt', value: 'EG' },\n    { text: 'El Salvador', value: 'SV' },\n    { text: 'Equatorial Guinea', value: 'GQ' },\n    { text: 'Eritrea', value: 'ER' },\n    { text: 'Estonia', value: 'EE' },\n    { text: 'Ethiopia', value: 'ET' },\n    { text: 'Falkland Islands (Malvinas)', value: 'FK' },\n    { text: 'Faroe Islands', value: 'FO' },\n    { text: 'Fiji', value: 'FJ' },\n    { text: 'France', value: 'FR' },\n    { text: 'French Guiana', value: 'GF' },\n    { text: 'French Polynesia', value: 'PF' },\n    { text: 'French Southern Territories', value: 'TF' },\n    { text: 'Gabon', value: 'GA' },\n    { text: 'Gambia', value: 'GM' },\n    { text: 'Georgia', value: 'GE' },\n    { text: 'Germany', value: 'DE' },\n    { text: 'Ghana', value: 'GH' },\n    { text: 'Gibraltar', value: 'GI' },\n    { text: 'Greece', value: 'GR' },\n    { text: 'Greenland', value: 'GL' },\n    { text: 'Grenada', value: 'GD' },\n    { text: 'Guadeloupe', value: 'GP' },\n    { text: 'Guam', value: 'GU' },\n    { text: 'Guatemala', value: 'GT' },\n    { text: 'Guernsey', value: 'GG' },\n    { text: 'Guinea', value: 'GN' },\n    { text: 'Guinea-Bissau', value: 'GW' },\n    { text: 'Guyana', value: 'GY' },\n    { text: 'Haiti', value: 'HT' },\n    { text: 'Heard Island and Mcdonald Islands', value: 'HM' },\n    { text: 'Holy See (Vatican City State)', value: 'VA' },\n    { text: 'Honduras', value: 'HN' },\n    { text: 'Hong Kong', value: 'HK' },\n    { text: 'Hungary', value: 'HU' },\n    { text: 'Iceland', value: 'IS' },\n    { text: 'India', value: 'IN' },\n    { text: 'Indonesia', value: 'ID' },\n    { text: 'Iran, Islamic Republic Of', value: 'IR' },\n    { text: 'Iraq', value: 'IQ' },\n    { text: 'Ireland', value: 'IE' },\n    { text: 'Isle of Man', value: 'IM' },\n    { text: 'Israel', value: 'IL' },\n    { text: 'Italy', value: 'IT' },\n    { text: 'Jamaica', value: 'JM' },\n    { text: 'Japan', value: 'JP' },\n    { text: 'Jersey', value: 'JE' },\n    { text: 'Jordan', value: 'JO' },\n    { text: 'Kazakhstan', value: 'KZ' },\n    { text: 'Kenya', value: 'KE' },\n    { text: 'Kiribati', value: 'KI' },\n    { text: \"Korea, Democratic People's Republic of\", value: 'KP' },\n    { text: 'Korea, Republic of', value: 'KR' },\n    { text: 'Kuwait', value: 'KW' },\n    { text: 'Kyrgyzstan', value: 'KG' },\n    { text: \"Lao People's Democratic Republic\", value: 'LA' },\n    { text: 'Latvia', value: 'LV' },\n    { text: 'Lebanon', value: 'LB' },\n    { text: 'Lesotho', value: 'LS' },\n    { text: 'Liberia', value: 'LR' },\n    { text: 'Libyan Arab Jamahiriya', value: 'LY' },\n    { text: 'Liechtenstein', value: 'LI' },\n    { text: 'Lithuania', value: 'LT' },\n    { text: 'Luxembourg', value: 'LU' },\n    { text: 'Macao', value: 'MO' },\n    { text: 'Macedonia, The Former Yugoslav Republic of', value: 'MK' },\n    { text: 'Madagascar', value: 'MG' },\n    { text: 'Malawi', value: 'MW' },\n    { text: 'Malaysia', value: 'MY' },\n    { text: 'Maldives', value: 'MV' },\n    { text: 'Mali', value: 'ML' },\n    { text: 'Malta', value: 'MT' },\n    { text: 'Marshall Islands', value: 'MH' },\n    { text: 'Martinique', value: 'MQ' },\n    { text: 'Mauritania', value: 'MR' },\n    { text: 'Mauritius', value: 'MU' },\n    { text: 'Mayotte', value: 'YT' },\n    { text: 'Mexico', value: 'MX' },\n    { text: 'Micronesia, Federated States of', value: 'FM' },\n    { text: 'Moldova, Republic of', value: 'MD' },\n    { text: 'Monaco', value: 'MC' },\n    { text: 'Mongolia', value: 'MN' },\n    { text: 'Montenegro', value: 'ME' },\n    { text: 'Montserrat', value: 'MS' },\n    { text: 'Morocco', value: 'MA' },\n    { text: 'Mozambique', value: 'MZ' },\n    { text: 'Myanmar', value: 'MM' },\n    { text: 'Namibia', value: 'NA' },\n    { text: 'Nauru', value: 'NR' },\n    { text: 'Nepal', value: 'NP' },\n    { text: 'Netherlands', value: 'NL' },\n    { text: 'Netherlands Antilles', value: 'AN' },\n    { text: 'New Caledonia', value: 'NC' },\n    { text: 'New Zealand', value: 'NZ' },\n    { text: 'Nicaragua', value: 'NI' },\n    { text: 'Niger', value: 'NE' },\n    { text: 'Nigeria', value: 'NG' },\n    { text: 'Niue', value: 'NU' },\n    { text: 'Norfolk Island', value: 'NF' },\n    { text: 'Northern Mariana Islands', value: 'MP' },\n    { text: 'Norway', value: 'NO' },\n    { text: 'Oman', value: 'OM' },\n    { text: 'Pakistan', value: 'PK' },\n    { text: 'Palau', value: 'PW' },\n    { text: 'Palestinian Territory, Occupied', value: 'PS' },\n    { text: 'Panama', value: 'PA' },\n    { text: 'Papua New Guinea', value: 'PG' },\n    { text: 'Paraguay', value: 'PY' },\n    { text: 'Peru', value: 'PE' },\n    { text: 'Philippines', value: 'PH' },\n    { text: 'Poland', value: 'PL' },\n    { text: 'Portugal', value: 'PT' },\n    { text: 'Puerto Rico', value: 'PR' },\n    { text: 'Qatar', value: 'QA' },\n    { text: 'Romania', value: 'RO' },\n    { text: 'Russian Federation', value: 'RU' },\n    { text: 'RWANDA', value: 'RW' },\n    { text: 'Saint Helena', value: 'SH' },\n    { text: 'Saint Kitts and Nevis', value: 'KN' },\n    { text: 'Saint Lucia', value: 'LC' },\n    { text: 'Saint Pierre and Miquelon', value: 'PM' },\n    { text: 'Saint Vincent and the Grenadines', value: 'VC' },\n    { text: 'Samoa', value: 'WS' },\n    { text: 'San Marino', value: 'SM' },\n    { text: 'Sao Tome and Principe', value: 'ST' },\n    { text: 'Saudi Arabia', value: 'SA' },\n    { text: 'Senegal', value: 'SN' },\n    { text: 'Serbia', value: 'RS' },\n    { text: 'Seychelles', value: 'SC' },\n    { text: 'Sierra Leone', value: 'SL' },\n    { text: 'Singapore', value: 'SG' },\n    { text: 'Slovakia', value: 'SK' },\n    { text: 'Slovenia', value: 'SI' },\n    { text: 'Solomon Islands', value: 'SB' },\n    { text: 'Somalia', value: 'SO' },\n    { text: 'South Africa', value: 'ZA' },\n    { text: 'South Georgia and the South Sandwich Islands', value: 'GS' },\n    { text: 'Spain', value: 'ES' },\n    { text: 'Sri Lanka', value: 'LK' },\n    { text: 'Sudan', value: 'SD' },\n    { text: 'Suriname', value: 'SR' },\n    { text: 'Svalbard and Jan Mayen', value: 'SJ' },\n    { text: 'Swaziland', value: 'SZ' },\n    { text: 'Sweden', value: 'SE' },\n    { text: 'Switzerland', value: 'CH' },\n    { text: 'Syrian Arab Republic', value: 'SY' },\n    { text: 'Taiwan, Province of China', value: 'TW' },\n    { text: 'Tajikistan', value: 'TJ' },\n    { text: 'Tanzania, United Republic of', value: 'TZ' },\n    { text: 'Thailand', value: 'TH' },\n    { text: 'Timor-Leste', value: 'TL' },\n    { text: 'Togo', value: 'TG' },\n    { text: 'Tokelau', value: 'TK' },\n    { text: 'Tonga', value: 'TO' },\n    { text: 'Trinidad and Tobago', value: 'TT' },\n    { text: 'Tunisia', value: 'TN' },\n    { text: 'Turkey', value: 'TR' },\n    { text: 'Turkmenistan', value: 'TM' },\n    { text: 'Turks and Caicos Islands', value: 'TC' },\n    { text: 'Tuvalu', value: 'TV' },\n    { text: 'Uganda', value: 'UG' },\n    { text: 'Ukraine', value: 'UA' },\n    { text: 'United Arab Emirates', value: 'AE' },\n    { text: 'United States Minor Outlying Islands', value: 'UM' },\n    { text: 'Uruguay', value: 'UY' },\n    { text: 'Uzbekistan', value: 'UZ' },\n    { text: 'Vanuatu', value: 'VU' },\n    { text: 'Venezuela', value: 'VE' },\n    { text: 'Viet Nam', value: 'VN' },\n    { text: 'Virgin Islands, British', value: 'VG' },\n    { text: 'Virgin Islands, U.S.', value: 'VI' },\n    { text: 'Wallis and Futuna', value: 'WF' },\n    { text: 'Western Sahara', value: 'EH' },\n    { text: 'Yemen', value: 'YE' },\n    { text: 'Zambia', value: 'ZM' },\n    { text: 'Zimbabwe', value: 'ZW' }\n  ];\n  const getRecordCountry = (event, { value }) => {\n    event.preventDefault();\n    setRecordCountry(value);\n  };\n  const handleOpen = () => {\n    setModalOpen(true);\n  };\n  const handleClose = () => {\n    setModalOpen(false);\n  };\n  return (\n    <Modal\n      open={modalOpen}\n      closeIcon\n      trigger={\n        <Button color=\"blue\" onClick={handleOpen}>\n          Lisää uusi biisi\n        </Button>\n      }\n      onClose={handleClose}\n    >\n      <Header content=\"Lisää uusi biisi\" />\n      <Modal.Content>\n        <Form onSubmit={submitTrack}>\n          <Form.Field>\n            <label>\n              Artisti{' '}\n              <span style={{ color: 'red' }}>\n                <strong>*</strong>\n              </span>\n            </label>\n            <Input\n              value={artist}\n              type=\"text\"\n              placeholder=\"Artisti...\"\n              onChange={e => setArtist(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>\n              Albumi\n              <span style={{ color: 'red' }}>\n                <strong>*</strong>\n              </span>\n            </label>\n            <Input\n              value={album}\n              type=\"text\"\n              placeholder=\"Albumi...\"\n              onChange={e => setAlbum(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>\n              Biisi\n              <span style={{ color: 'red' }}>\n                <strong>*</strong>\n              </span>\n            </label>\n            <Input\n              value={track}\n              type=\"text\"\n              placeholder=\"Biisi...\"\n              onChange={e => setTrack(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Group widths=\"equal\">\n            <Form.Field>\n              <label>\n                Kesto - minuutit\n                <span style={{ color: 'red' }}>\n                  <strong>*</strong>\n                </span>\n              </label>\n              <Input\n                maxLength={4}\n                value={min}\n                type=\"number\"\n                placeholder=\"Minuuttia...\"\n                onChange={e => setMin(e.target.value)}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>\n                Kesto - sekunnit\n                <span style={{ color: 'red' }}>\n                  <strong>*</strong>\n                </span>\n              </label>\n              <Input\n                value={sec}\n                maxLength={2}\n                type=\"number\"\n                placeholder=\"Sekuntia...\"\n                onChange={e => setSec(e.target.value)}\n              />\n            </Form.Field>\n          </Form.Group>\n          <Form.Group widths=\"equal\">\n            <Form.Field>\n              <label>\n                Levy#\n                <span style={{ color: 'red' }}>\n                  <strong>*</strong>\n                </span>\n              </label>\n              <Input\n                maxLength={2}\n                value={discNo}\n                type=\"number\"\n                placeholder=\"CD1=1, CD2=2, A1=1, A2=2...\"\n                onChange={e => setDiscNo(e.target.value)}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>\n                Biisi#\n                <span style={{ color: 'red' }}>\n                  <strong>*</strong>\n                </span>\n              </label>\n              <Input\n                value={trackNo}\n                maxLength={2}\n                type=\"number\"\n                placeholder=\"Biisi #...\"\n                onChange={e => setTrackNo(e.target.value)}\n              />\n            </Form.Field>\n          </Form.Group>\n          <Form.Field>\n            <label>Tekijät - max 5kpl, yksi per rivi, SUKUNIMI ETUNIMI</label>\n            <TextArea\n              onChange={e => setPeople(e.target.value)}\n              placeholder=\"Tekijät - max 5kpl\"\n            />\n          </Form.Field>\n          <Form.Group widths=\"equal\">\n            <Form.Field>\n              <label>\n                Säveltäjän kotimaa\n                <span style={{ color: 'red' }}>\n                  <strong>*</strong>\n                </span>\n              </label>\n              <Dropdown\n                placeholder=\"Suomi, muu, ei tietoa...\"\n                openOnFocus={false}\n                value={country}\n                selection\n                options={countryOptions}\n                onChange={getCountry}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Tallennusmaa</label>\n              <Dropdown\n                placeholder=\"Valitse tallennusmaa...\"\n                openOnFocus={false}\n                value={recordCountry}\n                selection\n                search\n                options={recordCountryOptions}\n                onChange={getRecordCountry}\n              />\n            </Form.Field>\n          </Form.Group>\n          <Form.Field>\n            <label>\n              Levymerkki\n              <span style={{ color: 'red' }}>\n                <strong>*</strong>\n              </span>\n            </label>\n            <Input\n              value={label}\n              type=\"text\"\n              placeholder=\"Levymerkki...\"\n              onChange={e => setLabel(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>\n              Levykoodi\n              <span style={{ color: 'red' }}>\n                <strong>*</strong>\n              </span>\n            </label>\n            <Input\n              value={catId}\n              type=\"text\"\n              placeholder=\"Levykoodi...\"\n              onChange={e => setCatId(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>ISRC</label>\n            <Input\n              value={isrc}\n              maxLength={12}\n              type=\"text\"\n              placeholder=\"ISRC...\"\n              onChange={e => setIsrc(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>\n              Vuosi\n              <span style={{ color: 'red' }}>\n                <strong>*</strong>\n              </span>\n            </label>\n            <Input\n              value={year}\n              maxLength={4}\n              type=\"number\"\n              placeholder=\"Vuosi...\"\n              onChange={e => setYear(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Lisätietoa</label>\n            <TextArea\n              onChange={e => setComment(e.target.value)}\n              placeholder=\"Lisätietoa...\"\n            />\n          </Form.Field>\n          <Button\n            disabled={\n              !artist ||\n              !album ||\n              !track ||\n              !trackNo ||\n              !discNo ||\n              !min ||\n              !sec ||\n              !label ||\n              !catId ||\n              !year\n            }\n            color=\"green\"\n            type=\"submit\"\n          >\n            Tallenna ja lisää raporttiin\n          </Button>\n        </Form>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    report: state.report,\n    reportsList: state.reportsList,\n    login: state.login\n  };\n};\nconst connectedAddTrackModal = connect(\n  mapStateToProps,\n  { setNotification, addNewTrack }\n)(AddTrackModal);\n\nexport default connectedAddTrackModal;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Search, Button, Grid, Header } from 'semantic-ui-react';\nimport { getAutocompleteResults } from '../../actions/searchActions';\nimport { addTrackToReport } from '../../actions/reportActions';\nimport AddTrackModal from './AddTrackModal';\n\nconst SearchTrack = ({\n  search,\n  report,\n  getAutocompleteResults,\n  addTrackToReport\n}) => {\n  console.log('search track props', search);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [trackToSave, setTrackToSave] = useState(null);\n\n  useEffect(() => {\n    if (searchQuery.length >= 3) {\n      let timeout = null;\n      console.log('fire when typed to search', searchQuery);\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        getAutocompleteResults(searchQuery);\n      }, 1000);\n    }\n    // eslint-disable-next-line\n  }, [searchQuery]);\n\n  const handleResultSelect = (e, { result }) => {\n    const trackToSave = {\n      track_id: result.value,\n      report_id: report.reportDetails.id,\n      length: result.length,\n      sortable_rank: report.report.length + 1\n    };\n    console.log('handling result select', trackToSave);\n    setTrackToSave(trackToSave);\n  };\n\n  const saveClick = () => {\n    console.log('klikd save', trackToSave);\n    addTrackToReport(trackToSave);\n    setSearchQuery('');\n    setTrackToSave(null);\n  };\n\n  const onSearchChange = (e, { value }) => {\n    setSearchQuery(value);\n    // if (searchQuery.length >= 3) {\n    //   setTimeout(() => {\n    //     getAutocompleteResults(searchQuery);\n    //   }, 300);\n    // }\n  };\n\n  let results = search.searchResults.map(result => ({\n    key: result.track_id,\n    title: result.track_title + ' ' + result.artist,\n    length: result.length,\n    value: result.track_id\n  }));\n\n  return (\n    <div style={{ marginLeft: '1rem', marginBottom: '1rem' }}>\n      <Grid divided=\"vertically\">\n        <Grid.Row columns=\"2\">\n          <Form>\n            <Header>Hae</Header>\n            <Form.Group widths=\"equal\">\n              <Form.Field>\n                <Search\n                  loading={search.loading}\n                  onResultSelect={handleResultSelect}\n                  onSearchChange={onSearchChange}\n                  onSelectionChange={handleResultSelect}\n                  results={results}\n\n                  // value={value}\n                />\n              </Form.Field>\n              <Form.Field>\n                <Button color=\"green\" onClick={saveClick}>\n                  Lisää biisi raporttiin\n                </Button>\n              </Form.Field>\n            </Form.Group>\n            <Form.Group widths=\"equal\">\n              <Form.Field>\n                {' '}\n                <Button color=\"blue\">Tarkennettu haku</Button>\n              </Form.Field>\n              <Form.Field>\n                {' '}\n                <AddTrackModal />\n              </Form.Field>\n            </Form.Group>\n          </Form>\n        </Grid.Row>\n      </Grid>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('search track state to props', state);\n  return {\n    search: state.search,\n    report: state.report\n  };\n};\nconst connectedSearchTrack = connect(\n  mapStateToProps,\n  { getAutocompleteResults, addTrackToReport }\n)(SearchTrack);\n\nexport default connectedSearchTrack;\n","import { AUTOCOMPLETE_RESULTS, SET_SEARCH_LOADING } from './types';\nimport searchService from '../services/search';\n\nexport const getAutocompleteResults = query => async dispatch => {\n  try {\n    dispatch({\n      type: SET_SEARCH_LOADING\n    });\n    const results = await searchService.getTracksForSearch(query);\n    console.log(results);\n    dispatch({\n      type: AUTOCOMPLETE_RESULTS,\n      data: results\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React, { useState } from 'react';\nimport { getDjonlineTracks } from '../../actions/trackActions';\nimport { connect } from 'react-redux';\nimport { Form, Button, Dropdown, Grid, Header } from 'semantic-ui-react';\nimport DatePicker from 'react-datepicker';\nimport moment from 'moment';\n\nconst GetDjOnlineTracks = props => {\n  const [date, setDate] = useState(new Date());\n  const [studioId, setStudioId] = useState('928');\n  const [startTime, setStartTime] = useState('');\n  const [endTime, setEndTime] = useState('');\n\n  const getStudioId = (e, { value }) => {\n    e.preventDefault();\n    setStudioId(value);\n  };\n\n  const studioOptions = [\n    {\n      key: '928',\n      text: 'Studio 1',\n      value: '928'\n    },\n    {\n      key: '1047',\n      text: 'Studio 2',\n      value: '1047'\n    }\n  ];\n\n  // list of program start time options\n  const startTimeOptions = [\n    {\n      key: '00:00',\n      text: '00:00',\n      value: '00'\n    },\n    {\n      key: '01:00',\n      text: '01:00',\n      value: '01'\n    },\n    {\n      key: '02:00',\n      text: '02:00',\n      value: '02'\n    },\n    {\n      key: '03:00',\n      text: '03:00',\n      value: '03'\n    },\n    {\n      key: '04:00',\n      text: '04:00',\n      value: '04'\n    },\n    {\n      key: '05:00',\n      text: '05:00',\n      value: '05'\n    },\n    {\n      key: '06:00',\n      text: '06:00',\n      value: '06'\n    },\n    {\n      key: '07:00',\n      text: '07:00',\n      value: '07'\n    },\n    {\n      key: '08:00',\n      text: '08:00',\n      value: '08'\n    },\n    {\n      key: '09:00',\n      text: '09:00',\n      value: '09'\n    },\n    {\n      key: '10:00',\n      text: '10:00',\n      value: '10'\n    },\n    {\n      key: '11:00',\n      text: '11:00',\n      value: '11'\n    },\n    {\n      key: '12:00',\n      text: '12:00',\n      value: '12'\n    },\n    {\n      key: '13:00',\n      text: '13:00',\n      value: '13'\n    },\n    {\n      key: '14:00',\n      text: '14:00',\n      value: '14'\n    },\n    {\n      key: '15:00',\n      text: '15:00',\n      value: '15'\n    },\n    {\n      key: '16:00',\n      text: '16:00',\n      value: '16'\n    },\n    {\n      key: '17:00',\n      text: '17:00',\n      value: '17'\n    },\n    {\n      key: '18:00',\n      text: '18:00',\n      value: '18'\n    },\n    {\n      key: '19:00',\n      text: '19:00',\n      value: '19'\n    },\n    {\n      key: '20:00',\n      text: '20:00',\n      value: '20'\n    },\n    {\n      key: '21:00',\n      text: '21:00',\n      value: '21'\n    },\n    {\n      key: '22:00',\n      text: '22:00',\n      value: '22'\n    },\n    {\n      key: '23:00',\n      text: '23:00',\n      value: '23'\n    }\n  ];\n  const getStartTime = (event, { value }) => {\n    event.preventDefault();\n    setStartTime(value);\n  };\n\n  // list of program end time options\n  const endTimeOptions = [\n    {\n      key: '01:00',\n      text: '01:00',\n      value: '01'\n    },\n    {\n      key: '02:00',\n      text: '02:00',\n      value: '02'\n    },\n    {\n      key: '03:00',\n      text: '03:00',\n      value: '03'\n    },\n    {\n      key: '04:00',\n      text: '04:00',\n      value: '04'\n    },\n    {\n      key: '05:00',\n      text: '05:00',\n      value: '05'\n    },\n    {\n      key: '06:00',\n      text: '06:00',\n      value: '06'\n    },\n    {\n      key: '07:00',\n      text: '07:00',\n      value: '07'\n    },\n    {\n      key: '08:00',\n      text: '08:00',\n      value: '08'\n    },\n    {\n      key: '09:00',\n      text: '09:00',\n      value: '09'\n    },\n    {\n      key: '10:00',\n      text: '10:00',\n      value: '10'\n    },\n    {\n      key: '11:00',\n      text: '11:00',\n      value: '11'\n    },\n    {\n      key: '12:00',\n      text: '12:00',\n      value: '12'\n    },\n    {\n      key: '13:00',\n      text: '13:00',\n      value: '13'\n    },\n    {\n      key: '14:00',\n      text: '14:00',\n      value: '14'\n    },\n    {\n      key: '15:00',\n      text: '15:00',\n      value: '15'\n    },\n    {\n      key: '16:00',\n      text: '16:00',\n      value: '16'\n    },\n    {\n      key: '17:00',\n      text: '17:00',\n      value: '17'\n    },\n    {\n      key: '18:00',\n      text: '18:00',\n      value: '18'\n    },\n    {\n      key: '19:00',\n      text: '19:00',\n      value: '19'\n    },\n    {\n      key: '20:00',\n      text: '20:00',\n      value: '20'\n    },\n    {\n      key: '21:00',\n      text: '21:00',\n      value: '21'\n    },\n    {\n      key: '22:00',\n      text: '22:00',\n      value: '22'\n    },\n    {\n      key: '23:00',\n      text: '23:00',\n      value: '23'\n    },\n    {\n      key: '24:00',\n      text: '24:00',\n      value: '24'\n    }\n  ];\n  const getEndTime = (event, { value }) => {\n    event.preventDefault();\n    setEndTime(value);\n  };\n\n  const GetTracksFromApi = () => {\n    const searchParams = {\n      studioId,\n      date: moment(date).format('YYYY-MM-DD'),\n      startTime,\n      endTime,\n      report_id: props.report.reportDetails.id,\n      sortable_rank_start: props.report.report.length\n    };\n    props.getDjonlineTracks(searchParams);\n  };\n\n  return (\n    <div style={{ marginLeft: '1rem', marginBottom: '1rem' }}>\n      <Grid divided=\"vertically\">\n        <Grid.Row columns={2}>\n          <Form>\n            <Header>Hae biisit DJOnlinesta</Header>\n            <Form.Group widths=\"equal\">\n              <Form.Field>\n                <label>Valitse päivä</label>\n                <DatePicker\n                  selected={date}\n                  dateFormat=\"yyyy-MM-dd\"\n                  onChange={date => setDate(date)}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Valitse studio</label>\n                <Dropdown\n                  placeholder=\"Studio 1\"\n                  openOnFocus\n                  selection\n                  options={studioOptions}\n                  onChange={getStudioId}\n                />{' '}\n              </Form.Field>\n            </Form.Group>\n            <Form.Group widths=\"equal\">\n              <Form.Field>\n                <label>Alkaen kello</label>\n                <Dropdown\n                  placeholder=\"Alkaen HH:MM\"\n                  openOnFocus\n                  selection\n                  search\n                  options={startTimeOptions}\n                  onChange={getStartTime}\n                />{' '}\n              </Form.Field>\n              <Form.Field>\n                <label>Päättyen kello</label>\n                <Dropdown\n                  placeholder=\"Päättyen HH:MM\"\n                  openOnFocus\n                  selection\n                  search\n                  options={endTimeOptions}\n                  onChange={getEndTime}\n                />{' '}\n              </Form.Field>\n            </Form.Group>\n            <Button color=\"green\" onClick={GetTracksFromApi}>\n              Hae\n            </Button>\n          </Form>\n        </Grid.Row>\n      </Grid>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('getdjonlinetracks state to props', state);\n  return {\n    report: state.report,\n    reportsList: state.reportsList,\n    programs: state.programs,\n    notification: state.notification,\n    users: state.users,\n    login: state.login\n  };\n};\n\nconst connectedGetDjOnlineTracks = connect(\n  mapStateToProps,\n  { getDjonlineTracks }\n)(GetDjOnlineTracks);\n\nexport default connectedGetDjOnlineTracks;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Header,\n  Form,\n  Button,\n  Dropdown,\n  Segment,\n  Grid,\n  Dimmer,\n  Loader\n} from 'semantic-ui-react';\nimport DatePicker from 'react-datepicker';\nimport moment from 'moment';\nimport SearchTrack from '../track/SearchTrack';\nimport GetDjOnlineTracks from '../track/GetDjOnlineTracks';\nimport Togglable from '../layout/Togglable';\nimport { updateReport } from '../../actions/reportActions';\n\nconst ReportDetails = props => {\n  const [programId, setProgramId] = useState('');\n  const [programNumber, setProgramNumber] = useState('');\n  const [dj, setDj] = useState('');\n  const [programDate, setProgramDate] = useState('');\n  const [programStartTime, setProgramStartTime] = useState('');\n  const [programEndTime, setProgramEndTime] = useState('');\n  const [status, setStatus] = useState('');\n  const [userId, setUserId] = useState('');\n  const [rerun, setRerun] = useState(null);\n\n  console.log('report detauls props', props);\n  useEffect(() => {\n    if (props.report.reportDetails !== null) {\n      setUserId(props.report.reportDetails.user_id);\n      setProgramId(props.report.reportDetails.program_id);\n      setDj(props.report.reportDetails.program_dj);\n      setProgramNumber(props.report.reportDetails.program_no);\n      setProgramDate(new Date(props.report.reportDetails.program_date));\n      setProgramStartTime(props.report.reportDetails.program_start_time);\n      setProgramEndTime(props.report.reportDetails.program_end_time);\n      setStatus(props.report.reportDetails.status);\n      setRerun(props.report.reportDetails.rerun);\n    }\n  }, [props.report.reportDetails]);\n\n  if (props.report.reportDetails === null || props.users.users === null) {\n    return (\n      <Segment>\n        <Dimmer active inverted>\n          <Loader inverted content=\"Ladataan...\" />\n        </Dimmer>\n      </Segment>\n    );\n  }\n\n  let programOptions = props.programs.allPrograms.map(program => ({\n    key: program.id,\n    text: program.name,\n    value: program.id\n  }));\n  let userOptions = props.users.users.map(user => ({\n    key: user.id,\n    text: `${user.first_name} ${user.last_name}`,\n    value: user.id\n  }));\n  const getProgram = (event, { value }) => {\n    event.preventDefault();\n    setProgramId(value);\n  };\n  const getUser = (event, { value }) => {\n    event.preventDefault();\n    setUserId(value);\n  };\n  // list of program start time options\n  const startTimeOptions = [\n    {\n      key: '00:00',\n      text: '00:00',\n      value: '00:00'\n    },\n    {\n      key: '01:00',\n      text: '01:00',\n      value: '01:00'\n    },\n    {\n      key: '02:00',\n      text: '02:00',\n      value: '02:00'\n    },\n    {\n      key: '03:00',\n      text: '03:00',\n      value: '03:00'\n    },\n    {\n      key: '04:00',\n      text: '04:00',\n      value: '04:00'\n    },\n    {\n      key: '05:00',\n      text: '05:00',\n      value: '05:00'\n    },\n    {\n      key: '06:00',\n      text: '06:00',\n      value: '06:00'\n    },\n    {\n      key: '07:00',\n      text: '07:00',\n      value: '07:00'\n    },\n    {\n      key: '08:00',\n      text: '08:00',\n      value: '08:00'\n    },\n    {\n      key: '09:00',\n      text: '09:00',\n      value: '09:00'\n    },\n    {\n      key: '10:00',\n      text: '10:00',\n      value: '10:00'\n    },\n    {\n      key: '11:00',\n      text: '11:00',\n      value: '11:00'\n    },\n    {\n      key: '12:00',\n      text: '12:00',\n      value: '12:00'\n    },\n    {\n      key: '13:00',\n      text: '13:00',\n      value: '13:00'\n    },\n    {\n      key: '14:00',\n      text: '14:00',\n      value: '14:00'\n    },\n    {\n      key: '15:00',\n      text: '15:00',\n      value: '15:00'\n    },\n    {\n      key: '16:00',\n      text: '16:00',\n      value: '16:00'\n    },\n    {\n      key: '17:00',\n      text: '17:00',\n      value: '17:00'\n    },\n    {\n      key: '18:00',\n      text: '18:00',\n      value: '18:00'\n    },\n    {\n      key: '19:00',\n      text: '19:00',\n      value: '19:00'\n    },\n    {\n      key: '20:00',\n      text: '20:00',\n      value: '20:00'\n    },\n    {\n      key: '21:00',\n      text: '21:00',\n      value: '21:00'\n    },\n    {\n      key: '22:00',\n      text: '22:00',\n      value: '22:00'\n    },\n    {\n      key: '23:00',\n      text: '23:00',\n      value: '23:00'\n    }\n  ];\n  const getStartTime = (event, { value }) => {\n    event.preventDefault();\n    setProgramStartTime(value);\n  };\n\n  // list of program end time options\n  const endTimeOptions = [\n    {\n      key: '01:00',\n      text: '01:00',\n      value: '01:00'\n    },\n    {\n      key: '02:00',\n      text: '02:00',\n      value: '02:00'\n    },\n    {\n      key: '03:00',\n      text: '03:00',\n      value: '03:00'\n    },\n    {\n      key: '04:00',\n      text: '04:00',\n      value: '04:00'\n    },\n    {\n      key: '05:00',\n      text: '05:00',\n      value: '05:00'\n    },\n    {\n      key: '06:00',\n      text: '06:00',\n      value: '06:00'\n    },\n    {\n      key: '07:00',\n      text: '07:00',\n      value: '07:00'\n    },\n    {\n      key: '08:00',\n      text: '08:00',\n      value: '08:00'\n    },\n    {\n      key: '09:00',\n      text: '09:00',\n      value: '09:00'\n    },\n    {\n      key: '10:00',\n      text: '10:00',\n      value: '10:00'\n    },\n    {\n      key: '11:00',\n      text: '11:00',\n      value: '11:00'\n    },\n    {\n      key: '12:00',\n      text: '12:00',\n      value: '12:00'\n    },\n    {\n      key: '13:00',\n      text: '13:00',\n      value: '13:00'\n    },\n    {\n      key: '14:00',\n      text: '14:00',\n      value: '14:00'\n    },\n    {\n      key: '15:00',\n      text: '15:00',\n      value: '15:00'\n    },\n    {\n      key: '16:00',\n      text: '16:00',\n      value: '16:00'\n    },\n    {\n      key: '17:00',\n      text: '17:00',\n      value: '17:00'\n    },\n    {\n      key: '18:00',\n      text: '18:00',\n      value: '18:00'\n    },\n    {\n      key: '19:00',\n      text: '19:00',\n      value: '19:00'\n    },\n    {\n      key: '20:00',\n      text: '20:00',\n      value: '20:00'\n    },\n    {\n      key: '21:00',\n      text: '21:00',\n      value: '21:00'\n    },\n    {\n      key: '22:00',\n      text: '22:00',\n      value: '22:00'\n    },\n    {\n      key: '23:00',\n      text: '23:00',\n      value: '23:00'\n    },\n    {\n      key: '23:59',\n      text: '23:59',\n      value: '23:59'\n    }\n  ];\n  const getEndTime = (event, { value }) => {\n    event.preventDefault();\n    setProgramEndTime(value);\n  };\n\n  // list of program status options\n  const statusOptions = [\n    {\n      key: '0',\n      text: 'Keskeneräinen',\n      value: '0'\n    },\n    {\n      key: '1',\n      text: 'Valmis',\n      value: '1'\n    },\n    {\n      key: '9',\n      text: 'Poistettu',\n      value: '9'\n    }\n  ];\n  const getStatus = (event, { value }) => {\n    event.preventDefault();\n    setStatus(value);\n  };\n\n  // status placeholder\n  let statusPlaceholder;\n  if (status === 0) {\n    statusPlaceholder = 'Keskeneräinen';\n  } else if (status === 1) {\n    statusPlaceholder = 'Valmis';\n  } else if (statusPlaceholder === 9) {\n    statusPlaceholder = 'Poistettu';\n  }\n\n  const getRerun = () => {\n    console.log('getting rerun');\n    if (rerun === null) {\n      setRerun(1);\n    } else {\n      setRerun(null);\n    }\n  };\n\n  // save changes to db\n  const saveChanges = e => {\n    e.preventDefault();\n    const updatedReportDetails = {\n      id: props.report.reportDetails.id,\n      user_id: userId,\n      program_id: programId,\n      program_date: moment(programDate).format('YYYY-MM-DD'),\n      program_start_time: programStartTime,\n      program_end_time: programEndTime,\n      program_no: programNumber,\n      program_dj: dj,\n      status: status,\n      rerun: rerun\n    };\n    console.log('saving changes...', updatedReportDetails);\n    props.updateReport(updatedReportDetails);\n  };\n\n  // copy report for rerun\n  const copyReport = e => {\n    e.preventDefault();\n    console.log('klikd copy');\n  };\n  return (\n    <div>\n      <Header>Lisää biisi raporttiin:</Header>\n      <Segment.Group horizontal>\n        <Segment>\n          <Togglable color=\"blue\" buttonLabel=\"Pikahaku\">\n            <SearchTrack />\n          </Togglable>\n        </Segment>\n        <Segment>\n          <Togglable color=\"blue\" buttonLabel=\"Hae biisit DJonlinesta\">\n            <GetDjOnlineTracks />\n          </Togglable>\n        </Segment>\n      </Segment.Group>\n\n      <Grid divided=\"vertically\">\n        <Grid.Row columns={2}>\n          <Grid.Column>\n            <Header>Raportin tiedot:</Header>\n            <Form>\n              <Form.Field>\n                <label>Ohjelma</label>\n                <Dropdown\n                  placeholder=\"Ohjelma\"\n                  openOnFocus\n                  selection\n                  value={programId}\n                  search\n                  options={programOptions}\n                  onChange={getProgram}\n                />{' '}\n              </Form.Field>\n              <Form.Field>\n                <label>Ohjelmanumero</label>\n                <Form.Input\n                  value={programNumber}\n                  onChange={e => setProgramNumber(e.target.value)}\n                />{' '}\n              </Form.Field>\n              <Form.Field>\n                <label>DJ</label>\n                <Form.Input\n                  value={dj}\n                  onChange={e => setDj(e.target.value)}\n                />{' '}\n              </Form.Field>\n\n              <Form.Group widths=\"equal\">\n                <Form.Field>\n                  <label>Ohjelman päivä</label>\n\n                  <DatePicker\n                    selected={programDate}\n                    dateFormat=\"yyyy-MM-dd\"\n                    onChange={date => setProgramDate(date)}\n                  />\n                </Form.Field>\n\n                <Form.Field>\n                  <label>Alkaa kello</label>\n                  <Dropdown\n                    placeholder={programStartTime}\n                    openOnFocus\n                    selection\n                    search\n                    options={startTimeOptions}\n                    onChange={getStartTime}\n                  />{' '}\n                </Form.Field>\n\n                <Form.Field>\n                  <label>Päättyy kello</label>\n                  <Dropdown\n                    placeholder={programEndTime}\n                    openOnFocus\n                    selection\n                    search\n                    options={endTimeOptions}\n                    onChange={getEndTime}\n                  />{' '}\n                </Form.Field>\n              </Form.Group>\n              <Form.Field>\n                <label>Raportin tila</label>\n                <Dropdown\n                  placeholder={statusPlaceholder}\n                  openOnFocus\n                  selection\n                  options={statusOptions}\n                  onChange={getStatus}\n                  value={status}\n                />{' '}\n              </Form.Field>\n              <Form.Field>\n                <label>Käyttäjä</label>\n                <Dropdown\n                  placeholder=\"Käyttäjä\"\n                  openOnFocus={false}\n                  value={userId}\n                  selection\n                  search\n                  options={userOptions}\n                  onChange={getUser}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Uusinta</label>\n                <Form.Checkbox\n                  name=\"rerun\"\n                  onChange={getRerun}\n                  checked={rerun ? true : false}\n                />\n              </Form.Field>\n              <Form.Group widths=\"equal\">\n                <Button color=\"green\" onClick={saveChanges}>\n                  Tallenna\n                </Button>\n                <Button onClick={copyReport}>Monista</Button>\n              </Form.Group>\n            </Form>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('report details state to props', state);\n  return {\n    report: state.report,\n    reportsList: state.reportsList,\n    programs: state.programs,\n    notification: state.notification,\n    users: state.users,\n    login: state.login\n  };\n};\n\nconst connectedReportDetails = connect(\n  mapStateToProps,\n  { updateReport }\n)(ReportDetails);\n\nexport default connectedReportDetails;\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport ReactDragListView from 'react-drag-listview/lib/index.js';\nimport {\n  Container,\n  Table,\n  Segment,\n  Dimmer,\n  Loader,\n  Button,\n  Header\n} from 'semantic-ui-react';\nimport {\n  getOneReport,\n  getReportDetails,\n  deleteChecked,\n  updateSortableRank\n} from '../../actions/reportActions';\nimport ReportWithTracksItem from './ReportWithTracksItem';\nimport ReportDetails from './ReportDetails';\n\nconst ReportWithTracks = props => {\n  const [dragState, setDragState] = useState(null);\n  console.log(dragState);\n  // get report tracks by report id\n  useEffect(() => {\n    setTimeout(() => {\n      if (props.id === undefined) {\n        props.getOneReport(props.report.reportDetails.id);\n      } else {\n        props.getOneReport(props.id);\n      }\n    }, 1000);\n    // tää efekti uusiks sit kun hakutuloksista lisää biisin listaan\n    // eslint-disable-next-line\n  }, [props.report.djonline]);\n  // get report details by report id\n  useEffect(() => {\n    if (props.id === undefined) {\n      props.getReportDetails(props.report.reportDetails.id);\n    } else {\n      console.log('get details of report ', props.id);\n      props.getReportDetails(props.id);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  // fetch tracks after sorting changes\n  useEffect(() => {\n    console.log('array state changed', dragState);\n    props.updateSortableRank(dragState, props.id);\n    // eslint-disable-next-line\n  }, [dragState]);\n\n  const array = props.report.report;\n  console.log('array', array);\n\n  const deleteChecked = () => {\n    console.log('klikd delete checkd');\n\n    let remainingTracks = props.report.report.filter(function(e) {\n      return this.indexOf(e.report_track_id) < 0;\n    }, props.report.checkedForDelete);\n    console.log(remainingTracks);\n    props.deleteChecked(\n      props.report.checkedForDelete,\n      props.id,\n      remainingTracks\n    );\n  };\n\n  const dragProps = {\n    onDragEnd(fromIndex, toIndex) {\n      console.log(dragState);\n      const item = array.splice(fromIndex, 1)[0];\n      console.log(item);\n      console.log(dragState);\n      array.splice(toIndex, 0, item);\n      setDragState(array);\n    },\n    nodeSelector: 'tr',\n    handleSelector: 'i.arrows'\n  };\n\n  console.log('report with tracks props', props);\n\n  if (props.report.report === null || props.report.reportDetails === null) {\n    return (\n      <Segment>\n        <Dimmer active inverted>\n          <Loader inverted content=\"Ladataan...\" />\n        </Dimmer>\n      </Segment>\n    );\n  }\n  if (props.report.loading) {\n    return (\n      <Segment>\n        <Dimmer active inverted>\n          <Loader inverted content=\"Ladataan...\" />\n        </Dimmer>\n      </Segment>\n    );\n  }\n  if (props.report.report.length === 0) {\n    return (\n      <Container>\n        <Header>Ei lisättyjä kappaleita. Lisää biisit alta</Header>\n        <ReportDetails report={props.report.reportDetails} />\n      </Container>\n    );\n  }\n\n  return (\n    <Container>\n      <h3>Raportti</h3>\n      <ReactDragListView {...dragProps}>\n        <Table striped>\n          <Table.Header>\n            <Table.Row>\n              <Table.Cell></Table.Cell>\n              <Table.Cell>#</Table.Cell>\n              <Table.Cell>Artisti</Table.Cell>\n              <Table.Cell>Biisi</Table.Cell>\n              <Table.Cell>Kesto</Table.Cell>\n              <Table.Cell></Table.Cell>\n              <Table.Cell></Table.Cell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {props.report.report.map(track => (\n              <ReportWithTracksItem key={track.report_track_id} track={track} />\n            ))}\n          </Table.Body>\n          <Table.Footer>\n            <Table.Row></Table.Row>\n          </Table.Footer>\n        </Table>\n      </ReactDragListView>\n\n      <Button\n        color=\"red\"\n        onClick={deleteChecked}\n        style={{ marginLeft: '1rem', marginBottom: '1rem' }}\n      >\n        Poista valitut\n      </Button>\n      <ReportDetails report={props.report.reportDetails} />\n    </Container>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('reportwithtracks state', state);\n  return {\n    report: state.report,\n    reportsList: state.reportsList\n  };\n};\n\nconst connectedReportWithTracks = connect(\n  mapStateToProps,\n  { getOneReport, getReportDetails, deleteChecked, updateSortableRank }\n)(ReportWithTracks);\n\nexport default connectedReportWithTracks;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './App.css';\nimport Navbar from './components/layout/Navbar';\nimport Home from './components/layout/Home';\nimport UserList from './components/user/UserList';\nimport ReportList from './components/report/ReportList';\nimport ProgramList from './components/program/ProgramList';\nimport LoginForm from './components/login/LoginForm';\nimport ReportTransferList from './components/report/ReportTransferList';\nimport { Container } from 'semantic-ui-react';\nimport { initializeUser, logout } from './actions/loginActions';\nimport { initializeUsers } from './actions/userActions';\nimport { initializePrograms } from './actions/programActions';\nimport ReportWithTracks from './components/report/ReportWithTracks';\n\nconst App = props => {\n  // initial logged in user, programs list, users list\n  useEffect(() => {\n    props.initializeUser();\n    props.initializePrograms();\n    props.initializeUsers();\n    // eslint-disable-next-line\n  }, [props.login.token]);\n\n  // handle logout redux\n  const handleLogout = () => {\n    props.logout();\n  };\n\n  console.log('app 74', props);\n  if (props.login.user === null) {\n    return (\n      <Container>\n        <LoginForm />\n      </Container>\n    );\n  }\n  if (props.login.status === null) {\n    return (\n      <Container>\n        <div>Tunnukset hyllyllä. Ota yhteys ylläpitoon.</div>\n        <LoginForm />\n      </Container>\n    );\n  }\n  return (\n    <Router>\n      <div>\n        {/* Logged in as {props.login.username}\n        <button onClick={handleLogout}>logout</button> */}\n        <Navbar\n          first_name={props.login.first_name}\n          last_name={props.login.last_name}\n        />\n      </div>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/reports\" component={ReportList} />\n        <Route exact path=\"/transfer\" component={ReportTransferList} />\n        <Route\n          path=\"/reports/:id\"\n          render={({ match }) => {\n            console.log('*');\n            return <ReportWithTracks id={match.params.id} />;\n          }}\n        />\n        <Route exact path=\"/programs\" component={ProgramList} />\n        <Route exact path=\"/users\" component={UserList} />\n      </Switch>\n    </Router>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('app state', state);\n  return {\n    report: state.report,\n    reportsList: state.reportsList,\n    login: state.login,\n    users: state.users,\n    programs: state.programs\n  };\n};\n\nconst mapDispatchToProps = {\n  initializeUser,\n  logout,\n  initializePrograms,\n  initializeUsers\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import {\n  GET_ALL_PROGRAMS,\n  GET_ONE_PROGRAM,\n  SET_LOADING\n} from '../actions/types';\nimport programService from '../services/programs';\n\n// get all programs\nexport const initializePrograms = () => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const programs = await programService.getAll();\n    dispatch({\n      type: GET_ALL_PROGRAMS,\n      data: programs\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n// get one program by id\nexport const getOneProgram = id => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const program = await programService.getOne(id);\n    dispatch({\n      type: GET_ONE_PROGRAM,\n      data: program,\n      id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import {\n  INIT_USER,\n  LOGIN,\n  LOGOUT,\n  LOGIN_ERROR,\n  SET_LOADING\n} from '../actions/types';\n\nconst initialState = {\n  user: null,\n  loading: false,\n  error: null\n};\n\nconst loginReducer = (state = initialState, action) => {\n  // console.log('loginreducer state', state);\n  // console.log('loginreducer action', action);\n\n  switch (action.type) {\n    case INIT_USER:\n      return action.data;\n\n    case LOGOUT:\n      return initialState;\n\n    case LOGIN:\n      return action.data;\n\n    case LOGIN_ERROR:\n      console.error(action.payload);\n      return {\n        ...state,\n        error: action.payload\n      };\n\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default loginReducer;\n","import {\n  GET_ONE_REPORT,\n  GET_REPORT_DETAILS,\n  GET_DJONLINE_TRACKS,\n  ADD_NEW_TRACK,\n  UPDATE_TRACK,\n  GET_ONE_TRACK,\n  REMOVE_CURRENT_TRACK,\n  DELETE_TRACK_FROM_REPORT,\n  CHECK_FOR_DELETE,\n  UNCHECK_FOR_DELETE,\n  CREATE_REPORT,\n  UPDATE_REPORT,\n  CLEAR_CURRENT_REPORT,\n  SET_LOADING,\n  REPORT_ERROR\n} from '../actions/types';\n\nconst initialState = {\n  report: [],\n  djonline: null,\n  reportDetails: null,\n  newReport: null,\n  loading: false,\n  checkedForDelete: [],\n  currentTrack: null,\n  error: null\n};\n\nconst reportReducer = (state = initialState, action) => {\n  console.log('reportreducer state now: ', state);\n  console.log('reportreducer action', action);\n  console.log(action.type);\n\n  switch (action.type) {\n    case GET_ONE_REPORT:\n      return {\n        ...state,\n        report: action.data,\n        loading: false\n      };\n    case GET_DJONLINE_TRACKS:\n      return {\n        ...state,\n        report: [...state.report, action.data.map(track => track)],\n        djonline: action.data,\n        loading: false\n      };\n    case ADD_NEW_TRACK:\n      return {\n        ...state,\n        report: [...state.report, action.data],\n        loading: false\n      };\n    case UPDATE_TRACK:\n      return {\n        ...state,\n        report: state.report.map(track =>\n          track.track_id === action.data.track_id ? action.data : track\n        ),\n        loading: false\n      };\n    case GET_ONE_TRACK:\n      return {\n        ...state,\n        currentTrack: action.data,\n        loading: false\n      };\n    case REMOVE_CURRENT_TRACK:\n      return {\n        ...state,\n        currentTrack: null\n      };\n    case GET_REPORT_DETAILS:\n      return {\n        ...state,\n        reportDetails: action.data,\n        newReport: null\n        // loading: false\n      };\n    case CREATE_REPORT: {\n      return {\n        ...state,\n        newReport: action.data,\n        loading: false\n      };\n    }\n    case UPDATE_REPORT:\n      return {\n        ...state,\n        reportDetails: action.data,\n        newReport: null,\n        loading: false\n      };\n\n    case DELETE_TRACK_FROM_REPORT:\n      return {\n        ...state,\n        report: state.report.filter(\n          track => track.report_track_id !== action.id\n        )\n      };\n    case CHECK_FOR_DELETE:\n      return {\n        ...state,\n        checkedForDelete: [action.data, ...state.checkedForDelete]\n      };\n    case UNCHECK_FOR_DELETE:\n      console.log(action.data);\n      console.log(typeof state.checkedForDelete);\n      console.log(state.checkedForDelete);\n      return {\n        ...state,\n        checkedForDelete: state.checkedForDelete.filter(\n          id => id !== action.data\n        )\n      };\n    case CLEAR_CURRENT_REPORT:\n      return {\n        ...state,\n        report: []\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    case REPORT_ERROR:\n      console.error(action.payload);\n      return {\n        ...state,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reportReducer;\n","import {\n  INIT_USERS_LIST,\n  SET_LOADING,\n  SET_CURRENT,\n  UPDATE_USER\n} from '../actions/types';\n\nconst initialState = {\n  users: null,\n  current: null,\n  loading: false\n};\nconst userReducer = (state = initialState, action) => {\n  // console.log('userreducer state now: ', state);\n  // console.log('userreducer action', action.data);\n\n  switch (action.type) {\n    case INIT_USERS_LIST:\n      return {\n        ...state,\n        users: action.data,\n        loading: false\n      };\n\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: false\n      };\n    case SET_CURRENT:\n      return {\n        ...state,\n        current: action.payload,\n        loading: false\n      };\n    case UPDATE_USER:\n      return {\n        ...state,\n        users: action.data,\n        loading: false\n      };\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import {\n  GET_ALL_REPORTS_BY_DATE,\n  GET_ALL_IN_PROGRESS,\n  GET_ALL_REPORT_TRANSFERS,\n  GENERATE_REPORT_TRANSFER,\n  SORT_BY_USER_ID,\n  SORT_BY_STATUS,\n  FILTER_BY_TEXT,\n  SET_LOADING,\n  REPORT_ERROR\n} from '../actions/types';\n\nconst initialState = {\n  inProgress: null,\n  reportsList: null,\n  reportListDate: null,\n  reportTransferList: null,\n  lastTransfer: null,\n  loading: false,\n  filterStatusValue: null,\n  filterUserValue: null,\n  filterByText: null,\n  error: null\n};\n\nconst reportListReducer = (state = initialState, action) => {\n  console.log('report list reducer state now: ', state);\n  console.log('report list reducer action', action);\n  console.log(action.type);\n\n  switch (action.type) {\n    // date is YYYY-MM\n    case GET_ALL_REPORTS_BY_DATE:\n      return {\n        ...state,\n        reportsList: action.data,\n        reportListDate: action.date,\n        loading: false\n      };\n    case GET_ALL_IN_PROGRESS:\n      return {\n        ...state,\n        inProgress: action.data,\n        loading: false\n      };\n    case GET_ALL_REPORT_TRANSFERS:\n      return {\n        ...state,\n        reportTransferList: action.data,\n        loading: false\n      };\n    case GENERATE_REPORT_TRANSFER:\n      return {\n        ...state,\n        lastTransfer: action.data,\n        loading: false\n      };\n    case SORT_BY_USER_ID:\n      console.log('action id', action.data);\n      console.log('report list reducer state after sort by id action', state);\n      return {\n        ...state,\n        filterUserValue: action.data,\n        filterStatusValue: null\n      };\n    case SORT_BY_STATUS:\n      console.log('action id', action.data);\n      console.log('report list reducer state after sort by id action', state);\n      return {\n        ...state,\n        filterUserValue: null,\n        filterStatusValue: action.data\n      };\n    case FILTER_BY_TEXT: {\n      return {\n        ...state,\n        filterByText: action.data\n      };\n    }\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    case REPORT_ERROR:\n      console.error(action.payload);\n      return {\n        ...state,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reportListReducer;\n","import {\n  GET_ONE_PROGRAM,\n  GET_ALL_PROGRAMS,\n  CREATE_NEW_PROGRAM\n} from '../actions/types';\n\nconst initialState = {\n  allPrograms: null,\n  program: null,\n  loading: false\n};\n\nconst programReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_ALL_PROGRAMS:\n      return {\n        ...state,\n        allPrograms: action.data,\n        loading: false\n      };\n    case GET_ONE_PROGRAM:\n      return {\n        ...state,\n        program: action.data,\n        loading: false\n      };\n    case CREATE_NEW_PROGRAM:\n      return {\n        ...state,\n        allPrograms: [...state.allPrograms, action.data],\n        loading: false\n      };\n    default:\n      return state;\n  }\n};\n\nexport default programReducer;\n","import { AUTOCOMPLETE_RESULTS, SET_SEARCH_LOADING } from '../actions/types';\n\nconst initialState = {\n  searchResults: [],\n  trackResults: null,\n  artistResults: null,\n  albumResults: null,\n  loading: false,\n  error: null\n};\n\nconst searchReducer = (state = initialState, action) => {\n  console.log('searchReducer state now: ', state);\n  console.log('searchReducer action', action);\n  console.log('searchReducer action.type', action.type);\n\n  switch (action.type) {\n    case AUTOCOMPLETE_RESULTS:\n      return {\n        ...state,\n        searchResults: action.data,\n        loading: false\n      };\n    case SET_SEARCH_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n};\n\nexport default searchReducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport loginReducer from './reducers/loginReducer';\nimport notificationReducer from './reducers/notificationReducer';\nimport reportReducer from './reducers/reportReducer';\nimport userReducer from './reducers/userReducer';\nimport reportsListReducer from './reducers/reportsListReducer';\nimport programReducer from './reducers/programReducer';\nimport searchReducer from './reducers/searchReducer';\n\nconst reducer = combineReducers({\n  login: loginReducer,\n  notification: notificationReducer,\n  report: reportReducer,\n  reportsList: reportsListReducer,\n  programs: programReducer,\n  search: searchReducer,\n  users: userReducer\n});\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}