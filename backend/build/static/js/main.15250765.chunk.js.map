{"version":3,"sources":["img/logo.png","components/layout/ModalNotification.js","actions/types.js","services/users.js","actions/userActions.js","services/login.js","services/artists.js","services/albums.js","services/programs.js","services/reports.js","services/search.js","services/tracks.js","actions/loginActions.js","reducers/notificationReducer.js","components/user/LoggedInUserInfo.js","components/layout/Navbar.js","components/layout/Footer.js","actions/reportActions.js","components/layout/Togglable.js","components/report/CreateNewReportForm.js","actions/reportsListActions.js","components/report/InProgressReportListItem.js","components/report/InProgressReportsList.js","components/layout/Notification.js","components/layout/Home.js","components/user/AddUserModal.js","components/user/EditUserModal.js","components/user/UserListItem.js","components/user/UserList.js","components/report/ReportFilterForm.js","components/report/FilterReportList.js","components/report/ReportListItem.js","components/report/ReportList.js","components/program/EditProgramModal.js","actions/programActions.js","components/program/ProgramListItem.js","components/program/AddProgramModal.js","components/program/ProgramList.js","actions/albumActions.js","components/artist/MergeAlbumsModal.js","components/artist/AlbumsByArtistItem.js","components/artist/AlbumsByArtist.js","components/artist/ArtistDetailsForm.js","actions/artistActions.js","components/artist/ArtistDetails.js","components/album/AlbumDetailsForm.js","actions/trackActions.js","components/album/MergeAlbumTracksModal.js","components/album/TracksInAnAlbumItem.js","components/album/TracksInAnAlbum.js","components/album/AlbumDetails.js","components/track/ChangeAlbumModal.js","hooks/changeAlbumOptionsHook.js","components/track/ChangeArtistModal.js","hooks/changeArtistOptionsHook.js","components/track/TrackDetailsForm.js","components/track/PlayHistoryItem.js","components/track/PlayHistory.js","components/track/TrackDetails.js","components/login/LoginForm.js","components/report/ReportTransferOptions.js","actions/reportTransferActions.js","components/report/ReportTransferListItem.js","components/report/ReportTransferList.js","actions/searchActions.js","components/track/AddTrackModal.js","components/search/SearchForm.js","components/search/MergeArtists.js","components/search/MergeAlbums.js","components/search/MergeTracks.js","components/search/SearchResultItem.js","components/search/SearchResults.js","components/search/Search.js","components/top100/Top100SearchForm.js","components/top100/Top100List.js","components/track/EditTrackModal.js","components/report/ReportWithTracksItem.js","components/track/SearchTrack.js","hooks/searchTracksHook.js","components/track/GetDjOnlineTracks.js","components/report/ReportDetails.js","components/report/ReportWithTracks.js","App.js","reducers/artistReducer.js","reducers/albumReducer.js","reducers/trackReducer.js","reducers/loginReducer.js","reducers/reportReducer.js","reducers/userReducer.js","reducers/reportsListReducer.js","reducers/programReducer.js","reducers/searchReducer.js","store.js","index.js"],"names":["module","exports","connectedModalNotification","connect","state","notification","message","type","style","color","SET_LOADING","token","getAll","a","config","headers","Authorization","axios","get","req","data","setToken","newToken","createUser","userToAdd","post","request","updateUser","userToUpdate","put","id","response","dispatch","userService","updated","users","console","log","login","credentials","res","getOneArtist","getAlbumsByArtist","updateArtist","artistToUpdate","getOneAlbum","getTracklistOfAlbum","updateAlbum","albumToUpdate","getAllActive","getOne","createProgram","newProgram","updateProgram","updatedProgram","download","require","getAllByDate","date","getAllInProgress","getAllTransfers","addTrackToReport","trackToAdd","deleteTrackFromReport","delete","deleteReport","updateSortableRank","remainingTracks","forEach","track","index","trackToUpdate","sortable_rank","report_track_id","getReportDetails","createReport","newReport","updateReport","updatedReport","generateReportDownload","params","responseType","downloadReport","filename","getTracksForSearch","query","getCatIdFromDiscogs","artist","album","process","getTop100","list","start_date","end_date","advancedSearch","searchParams","kind","merge","mergeParams","changeArtistOptions","changeAlbumOptions","checkDjonlineTracks","studioId","prop","tracks","arr","push","reverse","newArr","hours","charAt","parseInt","length","split","seconds","startTime","endTime","album_name","artist_name","cat_id","matrix","disc_no","side","track_no","tracknumber","isrc","record_country","recording_country","country","play_time","djonline_id","label","track_title","song","year","report_id","newerArr","sortable_rank_start","returnArr","addNewTrack","updateTrack","updateAlbumId","updateArtistId","getOneTrack","getOneTrackHistory","logout","window","localStorage","removeItem","initialState","setNotification","content","setTimeout","notificationReducer","action","connectedLoggedInUserModal","updateCurrentUser","error","props","useState","modalOpen","setModalOpen","password","setPassword","confirmPassword","setConfirmPassword","first_name","firstName","setFirstName","last_name","lastName","setLastName","email","setEmail","handleClose","Modal","trigger","onClick","closeIcon","open","onClose","Header","Content","Form","onSubmit","Field","Input","focus","placeholder","onChange","e","target","value","defaultValue","Button","disabled","Icon","name","size","options","key","text","LoggedInUserInfo","icon","marginBottom","Menu","pointing","stackable","inverted","Item","link","to","Image","alt","src","logo","align","Dropdown","Footer","marginTop","textAlign","Date","getFullYear","href","rel","getOneReport","reportService","report","Togglable","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","buttonLabel","children","connectedCreateNewReportForm","reportsList","programs","program_id","new_program_name","user_id","programService","program","newReportWithNewProgram","programId","setProgramId","programNumber","setProgramNumber","dj","setDj","newProgramName","setNewProgramName","programDate","setProgramDate","programStartTime","setProgramStartTime","programEndTime","setProgramEndTime","redirect","setRedirect","programOptions","activePrograms","map","borderRadius","opacity","padding","Fragment","Grid","Column","Container","Popup","openOnFocus","selection","search","event","preventDefault","float","Group","widths","selected","dateFormat","program_date","moment","format","program_start_time","program_end_time","program_no","program_dj","status","rerun","reportDetails","getAllReportsByDate","reports","filterByUserId","filterByStatus","filterByText","connectedInProgressReportListItem","deleteInProgressReport","deletedReport","setOpen","loading","Dimmer","active","Loader","Table","Row","Cell","Confirm","onCancel","onConfirm","connectedInProgressReportsList","useEffect","inProgress","striped","Body","r","className","Message","floating","success","header","negative","connectedHome","divided","columns","connectedAddUserModal","newUser","username","setUsername","level","setLevel","setStatus","floated","control","connectedEditUserModal","user","Checkbox","checked","mapDispatchToProps","setCurrent","payload","connectedUser","userLevelOutPrint","userStatusOutPrint","last_seen","connectedUserList","connectedReportFilterForm","reportMonth","setReportMonth","reportYear","setReportYear","years","i","yearOptions","option","getReportsByMonth","connectedFilterReportList","userId","setUserId","filterText","setFilterText","userOptions","addAllToUserOptions","connectedReportListItem","reportStatusOutPrint","connectedReportList","reportListDate","reportListTimeDate","reportsToShow","filter","toLowerCase","includes","filterUserValue","filterStatusValue","connectedEditProgramModal","setName","identifier","setIdentifier","setDisplay","site","setSite","connectedProgramListItem","connectedAddProgramModal","createNewProgram","programToAdd","connectedProgramList","getAllPrograms","allPrograms","mergeAlbumFunction","searchService","mergeAction","albumService","mergeTo","tracklist","connectedMergeAlbumsModal","albumToMerge","setAlbumToMerge","handleOpen","mergeOptions","albumList","album_id","AlbumsByArtistItem","track_count","report_occurrence","AlbumsByArtist","connectedArtistDetailsForm","artistService","updatedArtist","currentArtist","setArtist","spotify_id","spotifyId","setSpotifyId","connectedArtistDetails","connectedAlbumDetailsForm","updatedAlbum","currentAlbum","setLabel","catId","setCatId","setYear","artist_id","trackService","updatedTrack","mergeTrackFunction","history","connectedMergeAlbumTracksModal","trackToMerge","setTrackToMerge","track_id","TracksInAnAlbumItem","TracksInAnAlbum","connectedAlbumDetails","connectedChangeAlbumModal","changeAlbumId","inputText","setInputText","debouncedSearchTrack","useConstant","AwesomeDebouncePromise","useAsync","useChangeAlbumOptionsHook","albumToChange","setAlbumToChange","results","undefined","result","title","description","handleResultSelect","currentTrack","onResultSelect","onSearchChange","onSelectionChange","changedAlbum","connectedChangeArtistModal","changeArtistId","useChangeArtistOptionsHook","artistToChange","setArtistToChange","changedArtist","connectedTrackDetailsForm","setAlbum","setTrack","Math","floor","min","setMin","sec","setSec","setCountry","recordCountry","setRecordCountry","people","setPeople","discNo","setDiscNo","trackNo","setTrackNo","setIsrc","comment","setComment","replace","required","cursor","fontSize","marginRight","maxLength","TextArea","PlayHistoryItem","pgm","program_name","PlayHistory","playhistory","connectedTrackDetails","newLogin","loginService","setItem","JSON","stringify","handleLogin","connectedReportTransferOptions","generateReportTransfer","transferredReport","pickerDate","setPickerDate","showMonthYearPicker","period","connectedReportTransferListItem","item","created_at","connectedReportTransferList","lastReport","reportTransferList","catno","clearDiscogsCatId","connectedAddTrackModal","discogsCatId","getDiscogs","connectedSearchForm","searchString","setSearchString","searchTarget","setSearchTarget","sortBy","setSortBy","connectedMergeArtists","mergeArtistFunction","artistToMerge","setArtistToMerge","Array","from","Set","advancedResults","find","mergeInto","connectedMergeAlbums","connectedMergeTracks","SearchResultItem","connectedSearchResults","connectedSearch","connectedTop100SearchForm","now","startDate","setStartDate","endDate","setEndDate","setList","disabledKeyboardNavigation","connectedTop100List","top100Query","top100","t","count","connectedEditTrackModal","removeCurrentTrack","trackToEdit","connectedReportWithTracksItem","deletedTrack","checkForDelete","unCheckForDelete","setChecked","minutes","toString","marginLeft","connectedSearchTrack","getAutocompleteResults","trackToSave","setTrackToSave","useSearchTracksHook","connectedGetDjOnlineTracks","getDjonlineTracks","setDate","setStudioId","setStartTime","setEndTime","connectedReportDetails","copyReport","reportDetailsToCopy","reportTracksToCopy","newTrack","setRerun","Segment","statusPlaceholder","horizontal","updatedReportDetails","connectedReportWithTracks","deleteChecked","idsToDelete","newOrder","dragState","setDragState","djonline","array","dragProps","onDragEnd","fromIndex","toIndex","splice","nodeSelector","handleSelector","this","indexOf","checkedForDelete","initializeUser","loggedUserJSON","getItem","parse","err","statusText","initializePrograms","initializeUsers","exact","path","component","Home","ReportList","ReportTransferList","render","match","ProgramList","Search","Top100List","UserList","artistReducer","albumReducer","trackReducer","loginReducer","editTrackId","reportReducer","current","userReducer","lastTransfer","reportListReducer","programReducer","searchResults","searchReducer","reducer","combineReducers","reportsListReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.15250765.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.fa00af7b.png\";","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst ModalNotification = ({ notification }) => {\n  if (notification.message === null) {\n    return null;\n  }\n  if (notification.type === 'success') {\n    return <span style={{ color: 'green' }}>{notification.message}</span>;\n  }\n  if (notification.type === 'fail') {\n    return <span style={{ color: 'red' }}>{notification.message}</span>;\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    notification: state.notification\n  };\n};\n\nconst connectedModalNotification = connect(\n  mapStateToProps,\n  null\n)(ModalNotification);\n\nexport default connectedModalNotification;\n","// Login actions:\nexport const INIT_USER = 'INIT_USER';\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\n\n// user actions\nexport const INIT_USERS_LIST = 'INIT_USERS_LIST';\nexport const USER_ERROR = 'USER_ERROR';\nexport const SET_CURRENT = 'SET_CURRENT';\nexport const CREATE_USER = 'CREATE_USER';\nexport const UPDATE_USER = 'UPDATE_USER';\nexport const UPDATE_CURRENT_USER = 'UPDATE_CURRENT_USER';\n\n// report actions\nexport const GET_ONE_REPORT = 'GET_ONE_REPORT';\nexport const GET_REPORT_DETAILS = 'GET_REPORT_DETAILS';\nexport const GET_ALL_REPORTS_BY_DATE = 'GET_ALL_REPORTS_BY_DATE';\nexport const GET_ALL_IN_PROGRESS = 'GET_ALL_IN_PROGRESS';\nexport const GET_ALL_REPORT_TRANSFERS = 'GET_ALL_REPORT_TRANSFERS';\nexport const GENERATE_REPORT_TRANSFER = 'GENERATE_REPORT_TRANSFER';\nexport const CREATE_REPORT = 'CREATE_REPORT';\nexport const UPDATE_REPORT = 'UPDATE_REPORT';\nexport const DELETE_REPORT = 'DELETE_REPORT';\nexport const GET_DJONLINE_TRACKS = 'GET_DJONLINE_TRACKS';\nexport const REPORT_ERROR = 'REPORT_ERROR';\nexport const CLEAR_CURRENT_REPORT = 'CLEAR_CURRENT_REPORT';\nexport const DELETE_TRACK_FROM_REPORT = 'DELETE_TRACK_FROM_REPORT';\nexport const CHECK_FOR_DELETE = 'CHECK_FOR_DELETE';\nexport const UNCHECK_FOR_DELETE = 'UNCHECK_FOR_DELETE';\nexport const DOWNLOAD_REPORT = 'DOWNLOAD_REPORT';\nexport const FILTER_BY_USER_ID = 'FILTER_BY_USER_ID';\nexport const FILTER_BY_STATUS = 'FILTER_BY_STATUS';\nexport const FILTER_BY_TEXT = 'FILTER_BY_TEXT';\nexport const SET_EDIT_TRACK_ID = 'SET_EDIT_TRACK_ID';\n\n// program actions\nexport const GET_ALL_PROGRAMS = 'GET_ALL_PROGRAMS';\nexport const GET_ALL_ACTIVE_PROGRAMS = 'GET_ALL_ACTIVE_PROGRAMS';\nexport const GET_ONE_PROGRAM = 'GET_ONE_PROGRAM';\nexport const CREATE_NEW_PROGRAM = 'CREATE_NEW_PROGRAM';\nexport const UPDATE_PROGRAM = 'UPDATE_PROGRAM';\n\n// search actions\nexport const AUTOCOMPLETE_RESULTS = 'AUTOCOMPLETE_RESULTS';\nexport const ADVANCED_RESULTS = 'ADVANCED_RESULTS';\nexport const SET_SEARCH_LOADING = 'SET_SEARCH_LOADING';\nexport const GET_DISCOGS_CATID = 'GET_DISCOGS_CATID';\nexport const CLEAR_DISCOGS_CATID = 'CLEAR_DISCOGS_CATID';\nexport const TOP_100 = 'TOP_100';\nexport const TOP_100_QUERY = 'TOP_100_QUERY';\nexport const GET_CHANGE_ALBUM_OPTIONS = 'GET_CHANGE_ALBUM_OPTIONS';\nexport const GET_CHANGE_ARTIST_OPTIONS = 'GET_CHANGE_ARTIST_OPTIONS';\nexport const RESET_CHANGE_ALBUM_OPTIONS = 'RESET_CHANGE_ALBUM_OPTIONS';\nexport const RESET_CHANGE_ARTIST_OPTIONS = 'RESET_CHANGE_ARTIST_OPTIONS';\n\n// track actions\nexport const ADD_NEW_TRACK = 'ADD_NEW_TRACK';\nexport const UPDATE_TRACK = 'UPDATE_TRACK';\nexport const GET_ONE_TRACK = 'GET_ONE_TRACK';\nexport const GET_ONE_TRACK_HISTORY = 'GET_ONE_TRACK_HISTORY';\nexport const CLEAR_CURRENT_TRACK = 'CLEAR_CURRENT_TRACK';\nexport const REMOVE_CURRENT_TRACK = 'REMOVE_CURRENT_TRACK';\nexport const CHANGE_ALBUM = 'CHANGE_ALBUM';\nexport const CHANGE_ARTIST = 'CHANGE_ARTIST';\n\n// artist actions\nexport const GET_ONE_ARTIST = 'GET_ONE_ARTIST';\nexport const GET_ALBUM_LIST_BY_ARTIST = 'GET_ALBUM_LIST_BY_ARTIST';\nexport const CLEAR_CURRENT_ARTIST = 'CLEAR_CURRENT_ARTIST';\n\n// album actions\nexport const GET_ONE_ALBUM = 'GET_ONE_ALBUM';\nexport const GET_TRACKLIST_OF_ALBUM = 'GET_TRACKLIST_OF_ALBUM';\nexport const CLEAR_CURRENT_ALBUM = 'CLEAR_CURRENT_ALBUM';\n\n// preloader actions\nexport const SET_LOADING = 'SET_LOADING';\n","import axios from 'axios';\nconst baseUrl = '/api/users';\n\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = async () => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const req = await axios.get(baseUrl, config);\n  return req.data;\n};\n\nconst createUser = async userToAdd => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const request = await axios.post(baseUrl, userToAdd, config);\n  return request.data;\n};\n\nconst updateUser = async userToUpdate => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const response = await axios.put(\n    `${baseUrl}/${userToUpdate.id}`,\n    userToUpdate,\n    config\n  );\n  return response.data;\n};\n\nexport default { getAll, setToken, createUser, updateUser };\n","import {\n  INIT_USERS_LIST,\n  SET_LOADING,\n  SET_CURRENT,\n  CREATE_USER,\n  UPDATE_USER\n} from '../actions/types';\nimport userService from '../services/users';\n\nexport const initializeUsers = () => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const users = await userService.getAll();\n    dispatch({\n      type: INIT_USERS_LIST,\n      data: users\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n// Set current user for editing\nexport const setCurrent = user => {\n  return {\n    type: SET_CURRENT,\n    payload: user\n  };\n};\n\nexport const createUser = userToAdd => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const newUser = await userService.createUser(userToAdd);\n    dispatch({\n      type: CREATE_USER,\n      data: newUser\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updateUser = userToUpdate => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const updated = await userService.updateUser(userToUpdate);\n    const users = await userService.getAll();\n    console.log(updated);\n    dispatch({\n      type: UPDATE_USER,\n      data: users\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import axios from 'axios';\nconst baseUrl = '/api/login';\n\nconst login = async credentials => {\n  const res = await axios.post(baseUrl, credentials);\n  return res.data;\n};\n\nexport default { login };\n","import axios from 'axios';\nconst baseUrl = '/api/artists';\n\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\n// get artist details\nconst getOneArtist = async id => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const response = await axios.get(`${baseUrl}/details/${id}`, config);\n  return response.data;\n};\n\nconst getAlbumsByArtist = async id => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const response = await axios.get(`${baseUrl}/albumsby/${id}`, config);\n  return response.data;\n};\n\nconst updateArtist = async artistToUpdate => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  console.log('artistservice updated track', artistToUpdate);\n  const response = await axios.put(\n    `${baseUrl}/details/${artistToUpdate.id}`,\n    artistToUpdate,\n    config\n  );\n  console.log(response.data);\n  return response.data;\n};\n\nexport default {\n  setToken,\n  updateArtist,\n  getOneArtist,\n  getAlbumsByArtist\n};\n","import axios from 'axios';\nconst baseUrl = '/api/albums';\n\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\nconst getOneAlbum = async id => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const response = await axios.get(`${baseUrl}/albumdetails/${id}`, config);\n  return response.data;\n};\n\nconst getTracklistOfAlbum = async id => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const response = await axios.get(`${baseUrl}/tracklist/${id}`, config);\n  return response.data;\n};\n\nconst updateAlbum = async albumToUpdate => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  console.log('albumservice updated album', albumToUpdate);\n  console.log('album to update', albumToUpdate);\n  const response = await axios.put(\n    `${baseUrl}/albumdetails/${albumToUpdate.id}`,\n    albumToUpdate,\n    config\n  );\n  console.log(response.data);\n  return response.data;\n};\n\nexport default {\n  setToken,\n  updateAlbum,\n  getOneAlbum,\n  getTracklistOfAlbum\n};\n","import axios from 'axios';\nconst baseUrl = '/api/programs';\n\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\n// get all active programs\nconst getAllActive = async () => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const req = await axios.get(`${baseUrl}/active`, config);\n  return req.data;\n};\n\n// get all programs\nconst getAll = async () => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const req = await axios.get(`${baseUrl}/all`, config);\n  return req.data;\n};\n\n// get one program\nconst getOne = async id => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  console.log('program req id', id);\n  const request = await axios.get(`${baseUrl}/getone/${id}`, config);\n  console.log('programservice get one program data', request.data);\n  return request.data;\n};\n\nconst createProgram = async newProgram => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const request = await axios.post(baseUrl, newProgram, config);\n  return request.data;\n};\n\nconst updateProgram = async updatedProgram => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const request = await axios.put(baseUrl, updatedProgram, config);\n  return request.data;\n};\n\nexport default {\n  getAllActive,\n  getAll,\n  getOne,\n  createProgram,\n  updateProgram,\n  setToken\n};\n","import axios from 'axios';\nconst baseUrl = '/api/reports';\nconst download = require('downloadjs');\n\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\n// get a list of reports by date\nconst getAllByDate = async date => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  // notice baseurl is different here!\n  console.log('getting reports from', date);\n\n  const request = await axios.get(`/api/reportslist/date/${date}`, config);\n  console.log('reportservice get one report-track data', request.data);\n  return request.data;\n};\n\n// get all in progress reports of one user\nconst getAllInProgress = async id => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  // notice baseurl is different here!\n  console.log('getting reports from id', id);\n\n  const request = await axios.get(`/api/reportslist/user/${id}`, config);\n  console.log('reportservice get all in progress by user id', request.data);\n  return request.data;\n};\n// get a list of reports by user_id, date\n\n// get one report with tracks\nconst getOne = async id => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  console.log('report req id', id);\n  const request = await axios.get(`${baseUrl}/${id}`, config);\n  console.log('reportservice get one report-track data', request.data);\n  return request.data;\n};\n\nconst getAllTransfers = async () => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const request = await axios.get('/api/reporttransfer', config);\n  console.log('reportservice get all transfers data', request.data);\n  return request.data;\n};\n\nconst addTrackToReport = async trackToAdd => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const request = await axios.post(`${baseUrl}`, trackToAdd, config);\n  console.log('reportservice add track to report', request.data);\n  return request.data;\n};\n\nconst deleteTrackFromReport = async id => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const request = await axios.delete(`${baseUrl}/${id}`, config);\n  return request.data;\n};\n\nconst deleteReport = async id => {\n  const config = {\n    headers: { Authorization: token }\n  };\n\n  const request = await axios.delete(`/api/reportslist/${id}`, config);\n  return request.data;\n};\n\nconst updateSortableRank = async remainingTracks => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  remainingTracks.forEach(async (track, index) => {\n    const trackToUpdate = {\n      sortable_rank: index + 1\n    };\n    const request = await axios.put(\n      `${baseUrl}/${track.report_track_id}`,\n      trackToUpdate,\n      config\n    );\n    return request.data;\n  });\n};\n\nconst getReportDetails = async id => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  console.log('reportdetails req id ', id);\n  const request = await axios.get(`/api/reportdetails/details/${id}`, config);\n  console.log('reportservice get report details res data', request.data);\n  return request.data;\n};\n\n// create new report\nconst createReport = async newReport => {\n  const config = {\n    headers: { Authorization: token }\n  };\n\n  const response = await axios.post('/api/reportdetails', newReport, config);\n  console.log(response.data);\n  return response.data;\n};\n\n// update existing report details\nconst updateReport = async updatedReport => {\n  const config = {\n    headers: { Authorization: token }\n  };\n\n  console.log('reportservice report to update', updatedReport);\n  const request = axios.put(\n    `/api/reportdetails/update/${updatedReport.id}`,\n    updatedReport,\n    config\n  );\n  console.log(request.data);\n  return updatedReport;\n};\n\n// generate text file for download\nexport const generateReportDownload = async params => {\n  try {\n    const config = {\n      headers: { Authorization: token, responseType: 'blob' }\n    };\n    const request = await axios.post('/api/reporttransfer', params, config);\n    return request.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// download report\nexport const downloadReport = async filename => {\n  try {\n    const config = {\n      headers: { Authorization: token, responseType: 'blob' }\n    };\n    const response = await axios.get(`/api/reporttransfer/${filename}`, config);\n    download(response.data, filename);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default {\n  setToken,\n  addTrackToReport,\n  deleteTrackFromReport,\n  deleteReport,\n  updateSortableRank,\n  getOne,\n  getAllByDate,\n  getAllInProgress,\n  getAllTransfers,\n  getReportDetails,\n  createReport,\n  updateReport,\n  generateReportDownload,\n  downloadReport\n};\n","import axios from 'axios';\nconst baseUrl = '/api/search';\n\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\nconst getTracksForSearch = async query => {\n  const config = {\n    headers: { Authorization: token }\n  };\n\n  console.log('autocomplete search query', query);\n  const request = await axios.get(`${baseUrl}/autocomplete/${query}`, config);\n  console.log('search service get autocomplete tracks req data', request.data);\n  return request.data;\n};\n\nconst getCatIdFromDiscogs = async query => {\n  const request = await axios.get(\n    `https://api.discogs.com/database/search?artist=${query.artist}&release_title=${query.album}&token=${process.env.REACT_APP_DISCOGS_TOKEN}`\n  );\n  return request.data;\n};\n\nconst getTop100 = async query => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const request = await axios.get(\n    `/api/top100?list=${query.list}&start_date=${query.start_date}&end_date=${query.end_date}`,\n    config\n  );\n  return request.data;\n};\n\nconst advancedSearch = async searchParams => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const request = await axios.get(\n    `${baseUrl}/advanced?kind=${searchParams.kind}&query=${searchParams.query}`,\n    config\n  );\n  return request.data;\n};\n\nconst merge = async mergeParams => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  console.log(mergeParams);\n  const request = await axios.put(`${baseUrl}/advanced`, mergeParams, config);\n  return request.data;\n};\n\nconst changeArtistOptions = async query => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const request = await axios.get(`${baseUrl}/changeartist/${query}`, config);\n  return request.data;\n};\n\nconst changeAlbumOptions = async query => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const request = await axios.get(`${baseUrl}/changealbum/${query}`, config);\n  return request.data;\n};\n\nexport default {\n  setToken,\n  getTracksForSearch,\n  advancedSearch,\n  getCatIdFromDiscogs,\n  getTop100,\n  merge,\n  changeArtistOptions,\n  changeAlbumOptions\n};\n","import axios from 'axios';\nconst baseUrl = '/api/tracks';\n\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\nconst checkDjonlineTracks = async searchParams => {\n  // TODO - Handle sortable_rank\n  const tracks = await axios.get(\n    `${process.env.REACT_APP_PLAYLOG_URL}?id=${searchParams.studioId}&date=${searchParams.date}`\n  );\n  let arr = [];\n  for (const prop in tracks.data) {\n    arr.push(tracks.data[prop]);\n  }\n  arr = arr.reverse();\n  let newArr = [];\n  arr.forEach((track, index) => {\n    let hours = track.date.charAt(11) + track.date.charAt(12);\n    hours = parseInt(hours);\n    let a = track.length.split(':');\n    let seconds = parseInt(a[0]) * 60 + parseInt(a[1]);\n    // make loop skip the songs not matching the start time - end time -window\n    if (\n      hours < parseInt(searchParams.startTime) ||\n      hours >= parseInt(searchParams.endTime)\n    ) {\n      return;\n    }\n    newArr.push({\n      album_name: track.album,\n      artist_name: track.artist,\n      cat_id: track.matrix,\n      disc_no: track.side,\n      track_no: track.tracknumber,\n      isrc: track.isrc,\n      record_country: track.recording_country,\n      country: null,\n      play_time: track.date,\n      djonline_id: track.id,\n      label: track.label,\n      length: seconds,\n      track_title: track.song,\n      year: track.year,\n      // sortable_rank: searchParams.sortable_rank_start + index + 1,\n      report_id: searchParams.report_id\n    });\n  });\n  const config = {\n    headers: { Authorization: token }\n  };\n  console.log('array of tracks going to backend', newArr);\n  const newerArr = [];\n  newArr.forEach((track, index) => {\n    newerArr.push({\n      ...track,\n      sortable_rank: searchParams.sortable_rank_start + index + 1\n    });\n  });\n  let returnArr = [];\n  console.log('new arr to backend with sortable ranks', newerArr);\n  newerArr.forEach(async track => {\n    const request = await axios.post(`${baseUrl}/djonline`, track, config);\n    returnArr.push(request.data);\n  });\n  console.log('returned array from backend', returnArr);\n  return returnArr;\n};\n\nconst addNewTrack = async trackToAdd => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const response = await axios.post(baseUrl, trackToAdd, config);\n  console.log(response.data);\n  return response.data;\n};\n\nconst updateTrack = async trackToUpdate => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  console.log('trackservices updated track', trackToUpdate);\n  const response = await axios.put(baseUrl, trackToUpdate, config);\n  console.log(response.data);\n  return response.data;\n};\n\nconst updateAlbumId = async albumToUpdate => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const response = await axios.put(\n    `/api/tracks/updatealbum`,\n    albumToUpdate,\n    config\n  );\n  return response.data;\n};\n\nconst updateArtistId = async artistToUpdate => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const response = await axios.put(\n    `/api/tracks/updateartist`,\n    artistToUpdate,\n    config\n  );\n  return response.data;\n};\n\nconst getOneTrack = async id => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const response = await axios.get(`${baseUrl}/details/${id}`, config);\n  return response.data;\n};\n\nconst getOneTrackHistory = async id => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const response = await axios.get(`${baseUrl}/history/${id}`, config);\n  return response.data;\n};\n\nexport default {\n  setToken,\n  checkDjonlineTracks,\n  addNewTrack,\n  updateTrack,\n  getOneTrack,\n  getOneTrackHistory,\n  updateAlbumId,\n  updateArtistId\n};\n","import loginService from '../services/login';\nimport artistService from '../services/artists';\nimport albumService from '../services/albums';\nimport programService from '../services/programs';\nimport reportService from '../services/reports';\nimport searchService from '../services/search';\nimport trackService from '../services/tracks';\nimport userService from '../services/users';\nimport {\n  INIT_USER,\n  LOGIN,\n  LOGOUT,\n  LOGIN_ERROR,\n  UPDATE_CURRENT_USER,\n  SET_LOADING\n} from '../actions/types';\n\nexport const initializeUser = () => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const loggedUserJSON = window.localStorage.getItem('loggedUser');\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      // set token for logged in user\n      userService.setToken(user.token);\n      reportService.setToken(user.token);\n      programService.setToken(user.token);\n      searchService.setToken(user.token);\n      trackService.setToken(user.token);\n      artistService.setToken(user.token);\n      albumService.setToken(user.token);\n      dispatch({\n        type: INIT_USER,\n        data: user\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: LOGIN_ERROR,\n      payload: err.response.statusText\n    });\n  }\n};\n\nexport const newLogin = user => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const newUser = await loginService.login(user);\n    window.localStorage.setItem('loggedUser', JSON.stringify(newUser));\n    // set token for logged in user\n    // blogService.setToken(newUser.token);\n    dispatch({\n      type: LOGIN,\n      data: newUser,\n      loading: false\n    });\n  } catch (exception) {\n    const content = {\n      message: 'wrong username or password',\n      type: 'fail'\n    };\n    dispatch({\n      type: 'SET_NOTIFICATION',\n      data: content\n    });\n    setTimeout(() => {\n      dispatch({\n        type: 'CLEAR_NOTIFICATION'\n      });\n    }, 3000);\n  }\n};\n\nexport const updateCurrentUser = userToUpdate => async dispatch => {\n  try {\n    dispatch({\n      type: UPDATE_CURRENT_USER,\n      data: userToUpdate\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const logout = () => async dispatch => {\n  window.localStorage.removeItem('loggedUser');\n  dispatch({\n    type: LOGOUT\n  });\n};\n","const initialState = {\n  message: null,\n  type: null\n};\n\nconst notificationReducer = (state = initialState, action) => {\n  console.log('action', action);\n  console.log(state);\n  switch (action.type) {\n    case 'SET_NOTIFICATION':\n      return action.data;\n\n    case 'CLEAR_NOTIFICATION':\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n\nexport const setNotification = (message, type) => {\n  console.log(message);\n  console.log(type);\n  const content = {\n    message,\n    type\n  };\n  return async dispatch => {\n    dispatch({\n      type: 'SET_NOTIFICATION',\n      data: content\n    });\n    setTimeout(() => {\n      dispatch({\n        type: 'CLEAR_NOTIFICATION'\n      });\n    }, 3000);\n  };\n};\n\n// const setNotification = (id, message) => {\n//   console.log(message);\n//   return dispatch => {\n//     dispatch({\n//       type: 'NOTIFICATION',\n//       id,\n//       message\n//     });\n//   };\n// };\n\n// const clearNotification = id => {\n//   return {\n//     type: 'CLEAR',\n//     id\n//   };\n// };\n\n// let nextNotificationId = 0;\n// export function showNotificationWithTimeout(text, duration) {\n//   duration = duration * 1000;\n//   return function(dispatch) {\n//     const id = nextNotificationId++;\n//     dispatch(setNotification(id, text));\n\n//     setTimeout(() => {\n//       dispatch(clearNotification(id));\n//     }, duration);\n//   };\n// }\n\nexport default notificationReducer;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport ModalNotification from '../layout/ModalNotification';\nimport { updateUser } from '../../actions/userActions';\nimport { updateCurrentUser } from '../../actions/loginActions';\nimport { setNotification } from '../../reducers/notificationReducer';\nimport { Modal, Header, Form, Button, Input } from 'semantic-ui-react';\n\nconst LoggedInUserModal = props => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [firstName, setFirstName] = useState(props.login.first_name);\n  const [lastName, setLastName] = useState(props.login.last_name);\n  const [email, setEmail] = useState(props.login.email);\n\n  const handleOpen = () => {\n    setModalOpen(true);\n  };\n  const handleClose = () => {\n    setModalOpen(false);\n  };\n\n  const updateUserClick = () => {\n    if (password.length === 0 && confirmPassword.length === 0) {\n      const userToUpdate = {\n        id: props.login.id,\n        first_name: firstName,\n        last_name: lastName,\n        email\n      };\n      console.log('updting info', userToUpdate);\n      props.updateCurrentUser(userToUpdate);\n      props.updateUser(userToUpdate);\n      props.setNotification('Omat tiedot päivitetty!', 'success');\n      handleClose();\n    } else if (password !== confirmPassword || password.length <= 3) {\n      props.setNotification('Tarkasta salasanat!', 'fail');\n    } else {\n      const userToUpdate = {\n        id: props.login.id,\n        password,\n        first_name: firstName,\n        last_name: lastName,\n        email\n      };\n      console.log('updting info', userToUpdate);\n      handleClose();\n      props.updateCurrentUser(userToUpdate);\n      props.updateUser(userToUpdate);\n      props.setNotification('Omat tiedot päivitetty!', 'success');\n    }\n  };\n\n  return (\n    <Modal\n      trigger={<span onClick={handleOpen}>Omat tiedot</span>}\n      closeIcon\n      open={modalOpen}\n      onClose={handleClose}\n    >\n      <Header content=\"Muokkaa tietoja\" />\n      <Modal.Content>\n        <Form onSubmit={updateUserClick}>\n          <Form.Field>\n            <ModalNotification />\n            <label>Salasana - syötä vaihtaaksesi</label>\n            <Input\n              focus\n              type=\"password\"\n              placeholder=\"Salasana...\"\n              onChange={e => setPassword(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Salasana uudelleen</label>\n            <Input\n              focus\n              type=\"password\"\n              placeholder=\"Vahvista salasana...\"\n              onChange={e => setConfirmPassword(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <ModalNotification />\n            <label>Etunimi</label>\n            <Input\n              focus\n              defaultValue={firstName}\n              type=\"text\"\n              placeholder=\"Etunimi...\"\n              onChange={e => setFirstName(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Sukunimi</label>\n            <Input\n              focus\n              defaultValue={lastName}\n              type=\"text\"\n              placeholder=\"Sukunimi...\"\n              onChange={e => setLastName(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Email</label>\n            <Input\n              focus\n              defaultValue={email}\n              type=\"email\"\n              placeholder=\"Email...\"\n              onChange={e => setEmail(e.target.value)}\n            />\n          </Form.Field>\n          <Button\n            color=\"green\"\n            type=\"submit\"\n            disabled={!email || !firstName || !lastName}\n          >\n            Tallenna\n          </Button>\n          <ModalNotification />\n        </Form>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('app state', state);\n  return {\n    login: state.login\n  };\n};\n\nconst connectedLoggedInUserModal = connect(\n  mapStateToProps,\n  { setNotification, updateUser, updateCurrentUser }\n)(LoggedInUserModal);\n\nexport default connectedLoggedInUserModal;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport LoggedInUserInfo from '../user/LoggedInUserInfo';\nimport { logout } from '../../actions/loginActions';\nimport { Link } from 'react-router-dom';\nimport { Menu, Image, Dropdown, Icon } from 'semantic-ui-react';\nimport logo from '../../img/logo.png';\n\nconst Navbar = props => {\n  const getLoggedInUserInfo = () => {\n    return <LoggedInUserInfo />;\n  };\n  const handleLogoutClick = () => {\n    console.log('klikd logout');\n    props.logout();\n  };\n  const trigger = (\n    <span>\n      <Icon color=\"pink\" name=\"user\" size=\"large\" /> {props.first_name}{' '}\n      {props.last_name}\n    </span>\n  );\n  const options = [\n    {\n      key: 'user',\n      text: <LoggedInUserInfo />,\n      icon: 'user',\n      onClick: getLoggedInUserInfo\n    },\n    {\n      key: 'sign-out',\n      text: 'Kirjaudu ulos',\n      icon: 'sign out',\n      onClick: handleLogoutClick\n    }\n  ];\n\n  return (\n    <div style={{ marginBottom: '1.5rem' }}>\n      <Menu pointing stackable inverted>\n        <Menu.Item link>\n          <Link to=\"/\">\n            <Image alt=\"logo\" src={logo} size=\"small\" />\n          </Link>\n        </Menu.Item>\n\n        <Menu.Item link>\n          <Link to=\"/reports\">\n            <h4>RAPORTIT</h4>\n          </Link>\n        </Menu.Item>\n        <Menu.Item link>\n          <Link to=\"/top100\">\n            <h4>TOP 100</h4>\n          </Link>\n        </Menu.Item>\n        <Menu.Item link>\n          <Link to=\"/search\">\n            <h4>HAKU</h4>\n          </Link>\n        </Menu.Item>\n        <Menu.Item link>\n          <Link to=\"/transfer\">\n            <h4>SIIRTOTIEDOSTOT</h4>\n          </Link>\n        </Menu.Item>\n        <Menu.Item link>\n          <Link to=\"/users\">\n            <h4>KÄYTTÄJÄT</h4>\n          </Link>\n        </Menu.Item>\n        <Menu.Item link>\n          <Link to=\"/programs\">\n            <h4>OHJELMAT</h4>\n          </Link>\n        </Menu.Item>\n        <Menu.Item style={{ align: 'right' }}>\n          <Dropdown\n            trigger={trigger}\n            options={options}\n            pointing=\"top left\"\n            icon={null}\n          />\n        </Menu.Item>\n      </Menu>\n    </div>\n  );\n};\n\nexport default connect(\n  null,\n  { logout }\n)(Navbar);\n","import React from 'react';\n\nconst Footer = () => {\n  return (\n    <div\n      style={{ marginTop: '5rem', marginBottom: '2rem', textAlign: 'center' }}\n    >\n      <br />\n      <em>\n        {' '}\n        &copy; {new Date().getFullYear()}{' '}\n        <a\n          href=\"https://www.radiohelsinki.fi\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {' '}\n          Radio Helsinki{' '}\n        </a>{' '}\n      </em>\n    </div>\n  );\n};\n\nexport default Footer;\n","import {\n  GET_ONE_REPORT,\n  GET_REPORT_DETAILS,\n  SET_EDIT_TRACK_ID,\n  CREATE_REPORT,\n  UPDATE_REPORT,\n  CHECK_FOR_DELETE,\n  UNCHECK_FOR_DELETE,\n  CREATE_NEW_PROGRAM,\n  SET_LOADING\n} from '../actions/types';\nimport reportService from '../services/reports';\nimport programService from '../services/programs';\n\n// get one report with tracks by report id\nexport const getOneReport = id => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const report = await reportService.getOne(id);\n    // console.log('reportreducer', report);\n    dispatch({\n      type: GET_ONE_REPORT,\n      data: report,\n      id\n    });\n  } catch (error) {\n    console.log(error);\n    // dispatch({\n    //   type: REPORT_ERROR,\n    //   payload: error.response.data\n    // });\n  }\n};\n\nexport const setEditTrackId = id => async dispatch => {\n  dispatch({\n    type: SET_EDIT_TRACK_ID,\n    data: id\n  });\n};\n\n// add track to a report\nexport const addTrackToReport = trackToAdd => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    let track = await reportService.addTrackToReport(trackToAdd);\n    console.log('add track to report track', track);\n    const report = await reportService.getOne(track.report_id);\n    console.log('reportactions', report);\n    dispatch({\n      type: GET_ONE_REPORT,\n      data: report\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// delete track from report¨\nexport const deleteTrackFromReport = params => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    let deletedTrack = await reportService.deleteTrackFromReport(\n      params.report_track_id\n    );\n    const updateSortableRank = await reportService.updateSortableRank(\n      params.remainingTracks\n    );\n    console.log(updateSortableRank);\n    console.log(deletedTrack);\n    const report = await reportService.getOne(params.report_id);\n    console.log('reportactions', report);\n    dispatch({\n      type: GET_ONE_REPORT,\n      data: report\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// get report details by report id\nexport const getReportDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    let report = await reportService.getReportDetails(id);\n    report = report[0];\n    console.log('report actions report', report);\n    dispatch({\n      type: GET_REPORT_DETAILS,\n      data: report,\n      id\n    });\n  } catch (error) {\n    console.log(error);\n    // dispatch({\n    //   type: REPORT_ERROR,\n    //   payload: error.response.data\n    // });\n  }\n};\n\n// create new report\nexport const createReport = newReport => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    if (newReport.program_id === '' && newReport.new_program_name !== '') {\n      const newProgram = {\n        name: newReport.new_program_name,\n        user_id: newReport.user_id\n      };\n      const program = await programService.createProgram(newProgram);\n      dispatch({\n        type: CREATE_NEW_PROGRAM,\n        data: program\n      });\n      const newReportWithNewProgram = {\n        ...newReport,\n        program_id: program.id,\n        display: 1\n      };\n      console.log('new report with new program', newReportWithNewProgram);\n      const report = await reportService.createReport(newReportWithNewProgram);\n      dispatch({\n        type: CREATE_REPORT,\n        data: report\n      });\n    }\n    const report = await reportService.createReport(newReport);\n    dispatch({\n      type: CREATE_REPORT,\n      data: report\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const copyReport = (\n  reportDetailsToCopy,\n  reportTracksToCopy\n) => async dispatch => {\n  dispatch({\n    type: SET_LOADING\n  });\n  const report = await reportService.createReport(reportDetailsToCopy);\n  dispatch({\n    type: CREATE_REPORT,\n    data: report\n  });\n  reportTracksToCopy.forEach(async track => {\n    const trackToAdd = {\n      ...track,\n      report_id: report.id,\n      report_track_id: null\n    };\n    let newTrack = await reportService.addTrackToReport(trackToAdd);\n    console.log('add track to report track', newTrack);\n  });\n  const newReport = await reportService.getOne(report.id);\n  console.log('reportactions', report);\n  dispatch({\n    type: GET_ONE_REPORT,\n    data: newReport\n  });\n};\n\nexport const updateReport = updatedReport => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const report = await reportService.updateReport(updatedReport);\n    dispatch({\n      type: UPDATE_REPORT,\n      data: report\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const checkForDelete = id => async dispatch => {\n  try {\n    console.log('id to add to delete tracks', id);\n    dispatch({\n      type: CHECK_FOR_DELETE,\n      data: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const unCheckForDelete = id => async dispatch => {\n  try {\n    console.log('uncheckd id to add to delete tracks', id);\n    dispatch({\n      type: UNCHECK_FOR_DELETE,\n      data: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deleteChecked = (\n  idsToDelete,\n  report_id,\n  remainingTracks\n) => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    idsToDelete.forEach(async id => {\n      let deletedTrack = await reportService.deleteTrackFromReport(id);\n      console.log(deletedTrack);\n    });\n    const updateSortableRank = await reportService.updateSortableRank(\n      remainingTracks\n    );\n    console.log(updateSortableRank);\n    console.log('array of ids to delete from report', idsToDelete);\n    const report = await reportService.getOne(report_id);\n    console.log('reportactions', report);\n    dispatch({\n      type: GET_ONE_REPORT,\n      data: report\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updateSortableRank = (newOrder, report_id) => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const updateSortableRank = await reportService.updateSortableRank(newOrder);\n    console.log(updateSortableRank);\n    const report = await reportService.getOne(report_id);\n    console.log('reportactions', report);\n    dispatch({\n      type: GET_ONE_REPORT,\n      data: report\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React, { useState } from 'react';\nimport { Button } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nconst Togglable = props => {\n  const [visible, setVisible] = useState(false);\n\n  const hideWhenVisible = { display: visible ? 'none' : '' };\n  const showWhenVisible = { display: visible ? '' : 'none' };\n\n  const toggleVisibility = () => {\n    setVisible(!visible);\n  };\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <Button\n          size={props.size}\n          style={props.style}\n          color={props.color}\n          onClick={toggleVisibility}\n        >\n          {props.buttonLabel}\n        </Button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <Button\n          size={props.size}\n          style={props.style}\n          color={props.color}\n          onClick={toggleVisibility}\n        >\n          Piilota\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n};\n\nexport default Togglable;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { createReport } from '../../actions/reportActions';\nimport { setNotification } from '../../reducers/notificationReducer';\nimport Togglable from '../layout/Togglable';\nimport {\n  Form,\n  Button,\n  Input,\n  Dropdown,\n  Container,\n  Grid,\n  Popup,\n  Icon\n} from 'semantic-ui-react';\nimport DatePicker from 'react-datepicker';\nimport moment from 'moment';\n\nconst CreateNewReportForm = props => {\n  const [programId, setProgramId] = useState('');\n  const [programNumber, setProgramNumber] = useState('');\n  const [dj, setDj] = useState(\n    `${props.login.first_name} ${props.login.last_name}`\n  );\n  const [newProgramName, setNewProgramName] = useState('');\n  const [programDate, setProgramDate] = useState(new Date());\n  const [programStartTime, setProgramStartTime] = useState('');\n  const [programEndTime, setProgramEndTime] = useState('');\n  const [redirect, setRedirect] = useState(false);\n\n  // if (props.programs.allPrograms === null) {\n  //   return <div>loafing</div>;\n  // }\n\n  console.log('create new report form props', props);\n\n  // list of programoptions for select\n  let programOptions = props.programs.activePrograms.map(program => ({\n    key: program.id,\n    text: program.name,\n    value: program.id\n  }));\n  const getProgram = (event, { value }) => {\n    event.preventDefault();\n    setProgramId(value);\n    console.log(programId);\n  };\n\n  // list of program start time options\n  const startTimeOptions = [\n    {\n      key: '00:00',\n      text: '00:00',\n      value: '00:00'\n    },\n    {\n      key: '01:00',\n      text: '01:00',\n      value: '01:00'\n    },\n    {\n      key: '02:00',\n      text: '02:00',\n      value: '02:00'\n    },\n    {\n      key: '03:00',\n      text: '03:00',\n      value: '03:00'\n    },\n    {\n      key: '04:00',\n      text: '04:00',\n      value: '04:00'\n    },\n    {\n      key: '05:00',\n      text: '05:00',\n      value: '05:00'\n    },\n    {\n      key: '06:00',\n      text: '06:00',\n      value: '06:00'\n    },\n    {\n      key: '07:00',\n      text: '07:00',\n      value: '07:00'\n    },\n    {\n      key: '08:00',\n      text: '08:00',\n      value: '08:00'\n    },\n    {\n      key: '09:00',\n      text: '09:00',\n      value: '09:00'\n    },\n    {\n      key: '10:00',\n      text: '10:00',\n      value: '10:00'\n    },\n    {\n      key: '11:00',\n      text: '11:00',\n      value: '11:00'\n    },\n    {\n      key: '12:00',\n      text: '12:00',\n      value: '12:00'\n    },\n    {\n      key: '13:00',\n      text: '13:00',\n      value: '13:00'\n    },\n    {\n      key: '14:00',\n      text: '14:00',\n      value: '14:00'\n    },\n    {\n      key: '15:00',\n      text: '15:00',\n      value: '15:00'\n    },\n    {\n      key: '16:00',\n      text: '16:00',\n      value: '16:00'\n    },\n    {\n      key: '17:00',\n      text: '17:00',\n      value: '17:00'\n    },\n    {\n      key: '18:00',\n      text: '18:00',\n      value: '18:00'\n    },\n    {\n      key: '19:00',\n      text: '19:00',\n      value: '19:00'\n    },\n    {\n      key: '20:00',\n      text: '20:00',\n      value: '20:00'\n    },\n    {\n      key: '21:00',\n      text: '21:00',\n      value: '21:00'\n    },\n    {\n      key: '22:00',\n      text: '22:00',\n      value: '22:00'\n    },\n    {\n      key: '23:00',\n      text: '23:00',\n      value: '23:00'\n    }\n  ];\n  const getStartTime = (event, { value }) => {\n    event.preventDefault();\n    setProgramStartTime(value);\n    console.log(programStartTime);\n  };\n\n  // list of program end time options\n  const endTimeOptions = [\n    {\n      key: '01:00',\n      text: '01:00',\n      value: '01:00'\n    },\n    {\n      key: '02:00',\n      text: '02:00',\n      value: '02:00'\n    },\n    {\n      key: '03:00',\n      text: '03:00',\n      value: '03:00'\n    },\n    {\n      key: '04:00',\n      text: '04:00',\n      value: '04:00'\n    },\n    {\n      key: '05:00',\n      text: '05:00',\n      value: '05:00'\n    },\n    {\n      key: '06:00',\n      text: '06:00',\n      value: '06:00'\n    },\n    {\n      key: '07:00',\n      text: '07:00',\n      value: '07:00'\n    },\n    {\n      key: '08:00',\n      text: '08:00',\n      value: '08:00'\n    },\n    {\n      key: '09:00',\n      text: '09:00',\n      value: '09:00'\n    },\n    {\n      key: '10:00',\n      text: '10:00',\n      value: '10:00'\n    },\n    {\n      key: '11:00',\n      text: '11:00',\n      value: '11:00'\n    },\n    {\n      key: '12:00',\n      text: '12:00',\n      value: '12:00'\n    },\n    {\n      key: '13:00',\n      text: '13:00',\n      value: '13:00'\n    },\n    {\n      key: '14:00',\n      text: '14:00',\n      value: '14:00'\n    },\n    {\n      key: '15:00',\n      text: '15:00',\n      value: '15:00'\n    },\n    {\n      key: '16:00',\n      text: '16:00',\n      value: '16:00'\n    },\n    {\n      key: '17:00',\n      text: '17:00',\n      value: '17:00'\n    },\n    {\n      key: '18:00',\n      text: '18:00',\n      value: '18:00'\n    },\n    {\n      key: '19:00',\n      text: '19:00',\n      value: '19:00'\n    },\n    {\n      key: '20:00',\n      text: '20:00',\n      value: '20:00'\n    },\n    {\n      key: '21:00',\n      text: '21:00',\n      value: '21:00'\n    },\n    {\n      key: '22:00',\n      text: '22:00',\n      value: '22:00'\n    },\n    {\n      key: '23:00',\n      text: '23:00',\n      value: '23:00'\n    },\n    {\n      key: '23:59',\n      text: '23:59',\n      value: '23:59'\n    }\n  ];\n  const getEndTime = (event, { value }) => {\n    event.preventDefault();\n    setProgramEndTime(value);\n    console.log(programEndTime);\n  };\n\n  const createReport = () => {\n    const newReport = {\n      user_id: props.login.id,\n      program_id: programId,\n      new_program_name: newProgramName,\n      program_date: moment(programDate).format('YYYY-MM-DD'),\n      program_start_time: programStartTime,\n      program_end_time: programEndTime,\n      program_no: programNumber,\n      program_dj: dj,\n      status: 0,\n      rerun: null\n    };\n    console.log(parseInt(programEndTime));\n    if (\n      parseInt(newReport.program_end_time) <=\n      parseInt(newReport.program_start_time)\n    ) {\n      props.setNotification('Tarkista ohjelman alku- ja loppuaika!', 'fail');\n    } else {\n      props.createReport(newReport);\n      console.log(\n        'create report button click pros',\n        props.report.reportDetails\n      );\n      console.log('creating report:', newReport);\n      setRedirect(true);\n    }\n  };\n\n  const style = {\n    borderRadius: 0,\n    display: 'block',\n    opacity: 0.9,\n    padding: '2em'\n  };\n\n  if (redirect && props.report.newReport !== null) {\n    console.log('create new report for after submit props', props);\n    console.log('redirecting to id', props.report.newReport.id);\n    return <Redirect to={`reports/${props.report.newReport.id}`} />;\n  }\n\n  return (\n    <React.Fragment>\n      <Grid.Column>\n        <Container>\n          <h3>Luo uusi raportti</h3>\n          <Form>\n            <Form.Field>\n              <label>\n                Ohjelma{' '}\n                <Popup\n                  trigger={\n                    <Icon\n                      style={{ display: 'inline' }}\n                      name=\"question circle\"\n                    />\n                  }\n                  content=\"Valitse ohjelma listalta. Jos ohjelmaasi ei löydy listalta niin klikkaa Luo uusi ohjelma, kirjoita ohjelmasi nimi ja jatka\"\n                  style={style}\n                  inverted\n                />\n              </label>\n              <Dropdown\n                placeholder=\"Valitse ohjelma\"\n                openOnFocus\n                selection\n                search\n                options={programOptions}\n                onChange={getProgram}\n              />{' '}\n              <Togglable\n                style={{ marginTop: '0.5rem', float: 'right' }}\n                size=\"tiny\"\n                buttonLabel=\"Luo uusi ohjelma\"\n              >\n                <Form.Field>\n                  <label>Uusi ohjelma</label>\n                  <Input\n                    type=\"text\"\n                    value={newProgramName}\n                    onChange={e => setNewProgramName(e.target.value)}\n                  />{' '}\n                </Form.Field>\n              </Togglable>\n            </Form.Field>\n            <Form.Field>\n              <label>\n                Ohjelmanumero{' '}\n                <Popup\n                  trigger={\n                    <Icon\n                      style={{ display: 'inline' }}\n                      name=\"question circle\"\n                    />\n                  }\n                  content=\"Tsekkaa ohjelmasi numero viikon ohjelmakartasta.\"\n                  style={style}\n                  inverted\n                />\n              </label>\n              <Input\n                type=\"number\"\n                value={programNumber}\n                onChange={e => setProgramNumber(e.target.value)}\n              />{' '}\n            </Form.Field>\n            <Form.Field>\n              <label>DJ</label>\n              <Input\n                type=\"text\"\n                value={dj}\n                onChange={e => setDj(e.target.value)}\n              />{' '}\n            </Form.Field>\n\n            <Form.Group widths=\"equal\">\n              <Form.Field>\n                <label>Ohjelman päivä</label>\n                <DatePicker\n                  selected={programDate}\n                  dateFormat=\"yyyy-MM-dd\"\n                  onChange={date => setProgramDate(date)}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Alkaa kello</label>\n                <Dropdown\n                  placeholder=\"hh:mm\"\n                  openOnFocus\n                  selection\n                  search\n                  options={startTimeOptions}\n                  onChange={getStartTime}\n                />{' '}\n              </Form.Field>\n              <Form.Field>\n                <label>Päättyy kello</label>\n                <Dropdown\n                  placeholder=\"hh:mm\"\n                  openOnFocus\n                  selection\n                  search\n                  options={endTimeOptions}\n                  onChange={getEndTime}\n                />{' '}\n              </Form.Field>\n            </Form.Group>\n            <Form.Group widths=\"equal\">\n              <Button\n                disabled={\n                  !programId ||\n                  !programDate ||\n                  !programStartTime ||\n                  !programEndTime ||\n                  !dj\n                }\n                color=\"green\"\n                onClick={createReport}\n              >\n                Jatka\n              </Button>\n            </Form.Group>\n          </Form>\n        </Container>\n      </Grid.Column>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('report details state to props', state);\n  return {\n    report: state.report,\n    reportsList: state.reportsList,\n    programs: state.programs,\n    notification: state.notification,\n    users: state.users,\n    login: state.login\n  };\n};\n\nconst connectedCreateNewReportForm = connect(\n  mapStateToProps,\n  { createReport, setNotification }\n)(CreateNewReportForm);\n\nexport default connectedCreateNewReportForm;\n","import {\n  GET_ALL_REPORTS_BY_DATE,\n  GET_ALL_IN_PROGRESS,\n  SET_LOADING,\n  CLEAR_CURRENT_REPORT,\n  DELETE_REPORT,\n  FILTER_BY_USER_ID,\n  FILTER_BY_STATUS,\n  FILTER_BY_TEXT\n} from './types';\nimport reportService from '../services/reports';\n// get a list of reports by user_id, date\n\n// get a list of reports by date\nexport const getAllReportsByDate = date => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    dispatch({\n      type: CLEAR_CURRENT_REPORT\n    });\n    const reports = await reportService.getAllByDate(date);\n    // console.log('reportreducer', report);\n    dispatch({\n      type: GET_ALL_REPORTS_BY_DATE,\n      data: reports,\n      date\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getAllInProgress = id => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    dispatch({\n      type: CLEAR_CURRENT_REPORT\n    });\n    const reports = await reportService.getAllInProgress(id);\n    // console.log('reportreducer', report);\n    dispatch({\n      type: GET_ALL_IN_PROGRESS,\n      data: reports\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deleteInProgressReport = params => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const deletedReport = await reportService.deleteReport(params.report_id);\n    console.log(deletedReport);\n    const reports = await reportService.getAllInProgress(params.user_id);\n    dispatch({\n      type: GET_ALL_IN_PROGRESS,\n      data: reports\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deleteReport = id => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const deletedReport = await reportService.deleteReport(id);\n    console.log(deletedReport);\n    dispatch({\n      type: DELETE_REPORT,\n      data: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const filterByUserId = id => dispatch => {\n  console.log('id to filter', id);\n  dispatch({\n    type: FILTER_BY_USER_ID,\n    data: id\n  });\n};\n\nexport const filterByStatus = status => dispatch => {\n  console.log('status to filter', status);\n  dispatch({\n    type: FILTER_BY_STATUS,\n    data: status\n  });\n};\n\nexport const filterByText = text => async dispatch => {\n  console.log('text to filter', text);\n  dispatch({\n    type: FILTER_BY_TEXT,\n    data: text\n  });\n};\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { deleteInProgressReport } from '../../actions/reportsListActions';\nimport { setNotification } from '../../reducers/notificationReducer';\nimport { Table, Icon, Loader, Dimmer, Confirm } from 'semantic-ui-react';\n\nconst InProgressReportListItem = ({\n  report,\n  reportsList,\n  login,\n  deleteInProgressReport,\n  setNotification\n}) => {\n  const [open, setOpen] = useState(false);\n  if (reportsList.loading === true) {\n    return (\n      <Dimmer active inverted>\n        <Loader inverted />\n      </Dimmer>\n    );\n  }\n\n  const cancelDelete = () => {\n    setOpen(false);\n  };\n  const confirmDelete = () => {\n    setOpen(false);\n    const params = {\n      report_id: report.id,\n      user_id: login.id\n    };\n    console.log(`klikd delete on report`, params);\n    deleteInProgressReport(params);\n    console.log('clikd delete on report', report.id);\n    setNotification(\n      `${report.name} ${report.program_date} poistettu!`,\n      'success'\n    );\n  };\n\n  console.log(report, login, reportsList);\n  return (\n    <React.Fragment>\n      <Table.Row>\n        <Table.Cell>\n          <Link to={`reports/${report.id}`}>{report.name}</Link>\n        </Table.Cell>\n        <Table.Cell>{report.program_date}</Table.Cell>\n        <Table.Cell>{report.program_no}</Table.Cell>\n        <Table.Cell>\n          {' '}\n          <Icon color=\"red\" onClick={() => setOpen(true)} name=\"delete\" />\n          <Confirm\n            content={`Haluatko varmasti poistaa raportin ${report.name} ${report.program_date}`}\n            open={open}\n            onCancel={cancelDelete}\n            onConfirm={confirmDelete}\n          />\n        </Table.Cell>\n      </Table.Row>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    reportsList: state.reportsList,\n    login: state.login\n  };\n};\n\nconst connectedInProgressReportListItem = connect(\n  mapStateToProps,\n  { deleteInProgressReport, setNotification }\n)(InProgressReportListItem);\n\nexport default connectedInProgressReportListItem;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport InProgressReportListItem from './InProgressReportListItem';\nimport { getAllInProgress } from '../../actions/reportsListActions';\nimport { Table, Grid, Container, Header } from 'semantic-ui-react';\n\nconst InProgressReportsList = props => {\n  console.log(props);\n  useEffect(() => {\n    props.getAllInProgress(props.login.id);\n    // eslint-disable-next-line\n  }, []);\n\n  // if (props.reportsList.inProgress === null) {\n  //   return <div>loading</div>;\n  // }\n  // if (props.reportsList.loading) {\n  //   return <div>loading</div>;\n  // }\n  if (props.reportsList.inProgress === null) {\n    return null;\n  }\n  if (props.reportsList.inProgress.length === 0) {\n    return (\n      <Grid.Column>\n        <Container>\n          <h3>Omat keskeneräiset raportit</h3>\n          ei keskeneräisiä raportteja\n        </Container>\n      </Grid.Column>\n    );\n  }\n  return (\n    <React.Fragment>\n      <Grid.Column>\n        <Container>\n          <Header>Omat keskeneräiset raportit</Header>\n          <Table striped>\n            <Table.Header>\n              <Table.Row>\n                <Table.Cell>Nimi</Table.Cell>\n                <Table.Cell>Aika</Table.Cell>\n                <Table.Cell>Nro</Table.Cell>\n                <Table.Cell></Table.Cell>\n              </Table.Row>\n            </Table.Header>\n            <Table.Body>\n              {props.reportsList.inProgress.map(r => (\n                <InProgressReportListItem key={r.id} report={r} />\n              ))}\n            </Table.Body>\n          </Table>\n        </Container>\n      </Grid.Column>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    reportsList: state.reportsList,\n    login: state.login\n  };\n};\n\nconst connectedInProgressReportsList = connect(\n  mapStateToProps,\n  { getAllInProgress }\n)(InProgressReportsList);\n\nexport default connectedInProgressReportsList;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Message } from 'semantic-ui-react';\n\nconst Notification = ({ notification }) => {\n  if (notification.message === null) {\n    return null;\n  }\n\n  if (notification.type === 'success') {\n    return (\n      <div className=\"fixedTop\">\n        <Message\n          floating\n          success\n          header={notification.message}\n          // content=\"You may now log-in with the username you have chosen\"\n        />\n      </div>\n    );\n  }\n\n  if (notification.type === 'fail') {\n    return (\n      <div className=\"fixedTop\">\n        <Message\n          floating\n          negative\n          header={notification.message}\n          // content=\"You may now log-in with the username you have chosen\"\n        />\n      </div>\n    );\n  }\n\n  return null;\n};\n\nconst mapStateToProps = state => {\n  return {\n    notification: state.notification\n  };\n};\n\nexport default connect(mapStateToProps)(Notification);\n","import React from 'react';\nimport { Container, Grid, Dimmer, Loader } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport CreateNewReportForm from '../report/CreateNewReportForm';\nimport InProgressReportsList from '../report/InProgressReportsList';\nimport Notification from '../layout/Notification';\nimport { getAllInProgress } from '../../actions/reportsListActions';\n\nconst Home = props => {\n  console.log('home props', props);\n\n  // useEffect(() => {\n  //   props.getAllInProgress(props.login.id);\n  //   // eslint-disable-next-line\n  // }, []);\n  if (\n    props.programs.activePrograms === null\n    // props.reportsList.inProgress === null\n  ) {\n    return (\n      <Container>\n        <h2>Radio Helsinki teostoraportointi</h2>\n        <Dimmer active>\n          <Loader>Loading</Loader>\n        </Dimmer>{' '}\n      </Container>\n    );\n  }\n  return (\n    <Container>\n      <h2>Radio Helsinki teostoraportointi</h2>\n      <Notification />\n      <Grid divided=\"vertically\">\n        <Grid.Row columns={2}>\n          <CreateNewReportForm />\n          <InProgressReportsList />\n        </Grid.Row>\n      </Grid>\n    </Container>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('report details state to props', state);\n  return {\n    report: state.report,\n    reportsList: state.reportsList,\n    programs: state.programs,\n    notification: state.notification,\n    users: state.users,\n    login: state.login\n  };\n};\n\nconst connectedHome = connect(\n  mapStateToProps,\n  { getAllInProgress }\n)(Home);\n\nexport default connectedHome;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { createUser } from '../../actions/userActions';\nimport { setNotification } from '../../reducers/notificationReducer';\nimport { Modal, Header, Form, Button, Input, Icon } from 'semantic-ui-react';\n\nconst AddUserModal = props => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [level, setLevel] = useState('');\n  const [status, setStatus] = useState('');\n\n  const handleOpen = () => {\n    setModalOpen(true);\n  };\n  const handleClose = () => {\n    setModalOpen(false);\n  };\n\n  const createUser = () => {\n    if (password !== confirmPassword) {\n      props.setNotification(`Salasanat eivät täsmää!`, 'fail');\n    }\n    const userToAdd = {\n      username,\n      password,\n      first_name: firstName,\n      last_name: lastName,\n      email,\n      level,\n      status\n    };\n    console.log('klikd create user', userToAdd);\n    props.createUser(userToAdd);\n    props.setNotification(`${userToAdd.username} lisätty!`, 'success');\n    handleClose();\n  };\n\n  return (\n    <Modal\n      trigger={\n        <Button\n          style={{ marginBottom: '0.5rem' }}\n          onClick={handleOpen}\n          floated=\"right\"\n          color=\"green\"\n        >\n          <Icon name=\"add\" />\n          LUO UUSI KÄYTTÄJÄ\n        </Button>\n      }\n      closeIcon\n      open={modalOpen}\n      onClose={handleClose}\n    >\n      <Header content=\"Luo uusi käyttäjä\" />\n      <Modal.Content>\n        <Form onSubmit={createUser}>\n          <Form.Field>\n            <label>Käyttäjätunnus</label>\n            <Input\n              type=\"text\"\n              placeholder=\"Käyttäjätunnus...\"\n              onChange={e => setUsername(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Salasana</label>\n            <Input\n              focus\n              type=\"password\"\n              placeholder=\"Salasana...\"\n              onChange={e => setPassword(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Salasana uudelleen</label>\n            <Input\n              focus\n              type=\"password\"\n              placeholder=\"Vahvista salasana...\"\n              onChange={e => setConfirmPassword(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Etunimi</label>\n            <Input\n              focus\n              type=\"text\"\n              placeholder=\"Etunimi...\"\n              onChange={e => setFirstName(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Sukunimi</label>\n            <Input\n              focus\n              type=\"text\"\n              placeholder=\"Sukunimi...\"\n              onChange={e => setLastName(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Email</label>\n            <Input\n              focus\n              type=\"email\"\n              placeholder=\"Email...\"\n              onChange={e => setEmail(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field\n            label=\"Taso\"\n            control=\"select\"\n            onChange={e => setLevel(e.target.value)}\n          >\n            <option value=\"1\">DJ</option>\n            <option value=\"2\">Toimitus</option>\n            <option value=\"3\">Admin</option>\n          </Form.Field>\n          <Form.Field\n            label=\"Tila\"\n            control=\"select\"\n            onChange={e => setStatus(e.target.value)}\n          >\n            <option value=\"1\">Käytössä</option>\n            <option value={null}>Hyllyllä</option>\n          </Form.Field>\n          <Button\n            color=\"green\"\n            type=\"submit\"\n            disabled={\n              !username ||\n              !password ||\n              !confirmPassword ||\n              !email ||\n              !firstName ||\n              !lastName\n            }\n          >\n            Tallenna\n          </Button>\n        </Form>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nconst connectedAddUserModal = connect(\n  null,\n  { setNotification, createUser }\n)(AddUserModal);\n\nexport default connectedAddUserModal;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { updateUser } from '../../actions/userActions';\nimport { setNotification } from '../../reducers/notificationReducer';\nimport ModalNotification from '../layout/ModalNotification';\n\nimport {\n  Modal,\n  Header,\n  Form,\n  Button,\n  Input,\n  Dropdown\n} from 'semantic-ui-react';\n\nconst EditUserModal = props => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [firstName, setFirstName] = useState(props.user.first_name);\n  const [lastName, setLastName] = useState(props.user.last_name);\n  const [email, setEmail] = useState(props.user.email);\n  const [level, setLevel] = useState(props.user.level);\n  const [status, setStatus] = useState(props.user.status);\n\n  const handleOpen = () => {\n    setModalOpen(true);\n  };\n  const handleClose = () => {\n    setModalOpen(false);\n  };\n\n  const updateUserClick = () => {\n    if (password.length === 0 && confirmPassword.length === 0) {\n      const userToUpdate = {\n        id: props.user.id,\n        first_name: firstName,\n        last_name: lastName,\n        email,\n        level,\n        status\n      };\n      console.log('updting info', userToUpdate);\n      props.updateUser(userToUpdate);\n      handleClose();\n    } else if (password !== confirmPassword || password.length <= 3) {\n      props.setNotification('Tarkasta salasanat!', 'fail');\n    } else {\n      const userToUpdate = {\n        id: props.user.id,\n        password,\n        first_name: firstName,\n        last_name: lastName,\n        email,\n        level,\n        status\n      };\n      console.log('updting info', userToUpdate);\n      props.updateUser(userToUpdate);\n      handleClose();\n    }\n    // if (!firstName || !lastName) {\n    //   props.setNotification(\n    //     'Etunimi ja sukunimi ovat pakollisia tietoja',\n    //     'fail'\n    //   );\n    // }\n\n    // props.updateUser(userToUpdate);\n  };\n\n  const levelOptions = [\n    {\n      key: 1,\n      text: 'DJ',\n      value: 1\n    },\n    {\n      key: 2,\n      text: 'Toimitus',\n      value: 2\n    },\n    {\n      key: 3,\n      text: 'Admin',\n      value: 3\n    }\n  ];\n  const getLevel = (event, { value }) => {\n    event.preventDefault();\n    setLevel(value);\n  };\n\n  const getStatus = () => {\n    console.log('getting status');\n    if (status === null) {\n      setStatus(1);\n    } else {\n      setStatus(null);\n    }\n  };\n\n  return (\n    <Modal\n      trigger={\n        <a href=\"#!\" onClick={handleOpen}>\n          {props.user.username}\n        </a>\n      }\n      closeIcon\n      open={modalOpen}\n      onClose={handleClose}\n    >\n      <Header content=\"Muokkaa käyttäjän tietoja\" />\n      <Modal.Content>\n        <Form onSubmit={updateUserClick}>\n          <Form.Field>\n            <label>Käyttäjätunnus</label>\n            <Input\n              defaultValue={props.user.username}\n              type=\"text\"\n              placeholder=\"Käyttäjätunnus...\"\n              disabled\n            />\n          </Form.Field>\n          <Form.Field>\n            <ModalNotification />\n            <label>Salasana - syötä vaihtaaksesi</label>\n            <Input\n              focus\n              type=\"password\"\n              placeholder=\"Salasana...\"\n              onChange={e => setPassword(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Salasana uudelleen</label>\n            <Input\n              focus\n              type=\"password\"\n              placeholder=\"Vahvista salasana...\"\n              onChange={e => setConfirmPassword(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <ModalNotification />\n            <label>Etunimi</label>\n            <Input\n              focus\n              defaultValue={firstName}\n              type=\"text\"\n              placeholder=\"Etunimi...\"\n              onChange={e => setFirstName(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Sukunimi</label>\n            <Input\n              focus\n              defaultValue={lastName}\n              type=\"text\"\n              placeholder=\"Sukunimi...\"\n              onChange={e => setLastName(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Email</label>\n            <Input\n              focus\n              defaultValue={email}\n              type=\"email\"\n              placeholder=\"Email...\"\n              onChange={e => setEmail(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Taso</label>\n            <Dropdown\n              selection\n              defaultValue={props.user.level}\n              options={levelOptions}\n              onChange={getLevel}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Tunnus käytössä</label>\n            <Form.Checkbox\n              name=\"active\"\n              onChange={getStatus}\n              checked={status ? true : false}\n            />\n          </Form.Field>\n          {/* <Form.Field>\n            <label>Tila</label>\n            <Dropdown\n              selection\n              defaultValue={props.user.status}\n              options={statusOptions}\n              onChange={getStatus}\n            />\n          </Form.Field> */}\n          <Button\n            color=\"green\"\n            type=\"submit\"\n            disabled={!email || !firstName || !lastName}\n          >\n            Tallenna\n          </Button>\n          <ModalNotification />\n        </Form>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('app state', state);\n  return {\n    login: state.login\n  };\n};\n\nconst connectedEditUserModal = connect(\n  mapStateToProps,\n  { setNotification, updateUser }\n)(EditUserModal);\n\nexport default connectedEditUserModal;\n","import React from 'react';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport EditUserModal from './EditUserModal';\nimport { setNotification } from '../../reducers/notificationReducer';\nimport { setCurrent, updateUser } from '../../actions/userActions';\nimport { Table, Icon } from 'semantic-ui-react';\n\nconst UserListItem = props => {\n  const onDelete = () => {\n    console.log(`klikd delete on user ${props.user.id}`);\n  };\n\n  let userLevelOutPrint;\n  if (props.user.level === 1) {\n    userLevelOutPrint = 'DJ';\n  } else if (props.user.level === 2) {\n    userLevelOutPrint = 'Toimitus';\n  } else {\n    userLevelOutPrint = 'Admin';\n  }\n\n  let userStatusOutPrint;\n  if (props.user.status === null) {\n    userStatusOutPrint = 'Hyllyllä';\n  } else if (props.user.status === 1) {\n    userStatusOutPrint = 'Käytössä';\n  }\n\n  return (\n    <Table.Row>\n      <Table.Cell>\n        <EditUserModal user={props.user} />\n      </Table.Cell>\n      <Table.Cell>\n        {props.user.first_name} {props.user.last_name}\n      </Table.Cell>\n      <Table.Cell>\n        <Moment format=\"MMMM Do YYYY, h:mm:ss a\">{props.user.last_seen}</Moment>\n      </Table.Cell>\n      <Table.Cell>{userStatusOutPrint}</Table.Cell>\n      <Table.Cell>{userLevelOutPrint}</Table.Cell>\n      <Table.Cell>\n        <Icon color=\"red\" onClick={onDelete} name=\"delete\" />\n      </Table.Cell>\n    </Table.Row>\n  );\n};\n\nconst mapDispatchToProps = {\n  setCurrent,\n  setNotification,\n  updateUser\n};\n\nconst connectedUser = connect(\n  null,\n  mapDispatchToProps\n)(UserListItem);\n\nexport default connectedUser;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport AddUserModal from './AddUserModal';\nimport User from './UserListItem';\nimport Notification from '../layout/Notification';\nimport { Container, Dimmer, Loader } from 'semantic-ui-react';\nimport { Table } from 'semantic-ui-react';\n\nconst UserList = props => {\n  if (props.users.users === null || props.users.loading === true) {\n    return (\n      <Container>\n        <Dimmer active inverted>\n          <Loader size=\"medium\">Haetaan käyttäjiä...</Loader>\n        </Dimmer>\n      </Container>\n    );\n  }\n\n  console.log('userlist props', props);\n  return (\n    <Container>\n      <div style={{ marginTop: '1rem', marginBottom: '1rem' }}>\n        <h3 style={{ display: 'inline' }}>Käyttäjät</h3>\n        <AddUserModal />\n      </div>\n      <Notification />\n      <Table striped>\n        <Table.Header>\n          <Table.Row>\n            <Table.Cell>Käyttäjätunnus</Table.Cell>\n            <Table.Cell>Nimi</Table.Cell>\n            <Table.Cell>Viimeisin kirjautuminen</Table.Cell>\n            <Table.Cell>Tila</Table.Cell>\n            <Table.Cell>Taso</Table.Cell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {props.users.users.map(user => (\n            <User user={user} key={user.id} />\n          ))}\n        </Table.Body>\n      </Table>\n    </Container>\n  );\n};\n\nconst mapStateToProps = state => ({\n  users: state.users,\n  login: state.login\n});\n\nconst connectedUserList = connect(\n  mapStateToProps,\n  null\n)(UserList);\n\nexport default connectedUserList;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { getOneReport } from '../../actions/reportActions';\nimport {\n  getAllReportsByDate,\n  filterByUserId,\n  filterByStatus,\n  filterByText\n} from '../../actions/reportsListActions';\nimport { Dropdown, Button, Form } from 'semantic-ui-react';\n\nconst ReportFilterForm = props => {\n  const [reportMonth, setReportMonth] = useState('');\n  const [reportYear, setReportYear] = useState('');\n\n  if (props.users.users === null) {\n    return <div>loading</div>;\n  }\n\n  // const teststatus = 0;\n\n  // const reports = props.reportsList.reportsList.filter(\n  //   r => r.status === teststatus\n  // );\n  // console.log(reports);\n  // month options\n  const monthOptions = [\n    {\n      key: '01',\n      text: 'Tammikuu',\n      value: '01'\n    },\n    {\n      key: '02',\n      text: 'Helmikuu',\n      value: '02'\n    },\n    {\n      key: '03',\n      text: 'Maaliskuu',\n      value: '03'\n    },\n    {\n      key: '04',\n      text: 'Huhtikuu',\n      value: '04'\n    },\n    {\n      key: '05',\n      text: 'Toukokuu',\n      value: '05'\n    },\n    {\n      key: '06',\n      text: 'Kesäkuu',\n      value: '06'\n    },\n    {\n      key: '07',\n      text: 'Heinäkuu',\n      value: '07'\n    },\n    {\n      key: '08',\n      text: 'Elokuu',\n      value: '08'\n    },\n    {\n      key: '09',\n      text: 'Syyskuu',\n      value: '09'\n    },\n    {\n      key: '10',\n      text: 'Lokakuu',\n      value: '10'\n    },\n    {\n      key: '11',\n      text: 'Marraskuu',\n      value: '11'\n    },\n    {\n      key: '12',\n      text: 'Joulukuu',\n      value: '12'\n    }\n  ];\n  // year options\n  const date = new Date().getFullYear() + 1;\n  const years = [];\n  for (var i = 2001; i <= date; i++) {\n    years.push(i);\n  }\n  let yearOptions = years.map(option => ({\n    key: option,\n    text: option,\n    value: option\n  }));\n  yearOptions = yearOptions.reverse();\n\n  const getReportsByMonth = () => {\n    const date = reportYear + '-' + reportMonth;\n    console.log(date);\n    console.log('klik');\n    props.getAllReportsByDate(date);\n  };\n\n  // get month from dropdown\n  const getMonth = (event, { value }) => {\n    event.preventDefault();\n    setReportMonth(value);\n    console.log(reportMonth);\n  };\n\n  // get year from dropdown\n  const getYear = (event, { value }) => {\n    event.preventDefault();\n    setReportYear(value);\n  };\n\n  return (\n    <React.Fragment>\n      <Form>\n        <h2>Hae raportit ajalta:</h2>\n        <Form.Group widths=\"equal\">\n          <Form.Field>\n            <Dropdown\n              placeholder=\"Kuukausi\"\n              openOnFocus={false}\n              selection\n              options={monthOptions}\n              onChange={getMonth}\n            />\n          </Form.Field>\n          <Form.Field>\n            <Dropdown\n              placeholder=\"Vuosi\"\n              openOnFocus\n              selection\n              options={yearOptions}\n              onChange={getYear}\n            />{' '}\n          </Form.Field>\n          <Form.Field>\n            <Button color=\"blue\" onClick={() => getReportsByMonth()}>\n              HAE\n            </Button>\n          </Form.Field>\n          <Form.Field></Form.Field>\n        </Form.Group>\n      </Form>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('reportfilterform state to props', state);\n  return {\n    report: state.report,\n    reportsList: state.reportsList,\n    notification: state.notification,\n    users: state.users,\n    login: state.login\n  };\n};\n\nconst mapDispatchToProps = {\n  getOneReport,\n  getAllReportsByDate,\n  filterByUserId,\n  filterByStatus,\n  filterByText\n};\n\nconst connectedReportFilterForm = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ReportFilterForm);\n\nexport default connectedReportFilterForm;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  filterByUserId,\n  filterByStatus,\n  filterByText\n} from '../../actions/reportsListActions';\nimport { Dropdown, Form, Input } from 'semantic-ui-react';\n\nconst FilterReportList = props => {\n  const [userId, setUserId] = useState(null);\n  const [status, setStatus] = useState(null);\n  const [filterText, setFilterText] = useState('');\n\n  useEffect(() => {\n    props.filterByUserId(userId);\n    props.filterByStatus(status);\n    props.filterByText(filterText);\n    console.log('user id', userId);\n    console.log('filterText', filterText);\n    console.log('status', status);\n    // eslint-disable-next-line\n  }, [userId, status, filterText]);\n\n  const userOptions = props.users.users.map(user => ({\n    key: user.id,\n    text: `${user.first_name} ${user.last_name}`,\n    value: user.id\n  }));\n\n  const addAllToUserOptions = [\n    {\n      key: 0,\n      text: 'Kaikki',\n      value: null\n    },\n    ...userOptions\n  ];\n  // status options\n  const statusOptions = [\n    {\n      key: '2',\n      text: 'Kaikki',\n      value: null\n    },\n    {\n      key: '0',\n      text: 'Keskeneräinen',\n      value: 0\n    },\n    {\n      key: '1',\n      text: 'Valmis',\n      value: 1\n    }\n  ];\n\n  const getUser = (e, { value }) => {\n    e.preventDefault();\n    setUserId(value);\n    // console.log('user id', userId);\n    // props.filterByUserId(userId);\n  };\n  const getStatus = (event, { value }) => {\n    event.preventDefault();\n    setStatus(value);\n    console.log('tila', status);\n    props.filterByStatus(status);\n  };\n  const getFilteredByText = (event, { value }) => {\n    event.preventDefault();\n    setFilterText(value);\n    props.filterByText(filterText);\n  };\n\n  return (\n    <Form>\n      <Form.Group widths=\"equal\">\n        <Form.Field>\n          <Input\n            type=\"text\"\n            placeholder=\"Tekstisuodatus\"\n            onChange={getFilteredByText}\n          />\n        </Form.Field>\n        <Form.Field>\n          <Dropdown\n            placeholder=\"Käyttäjä\"\n            openOnFocus\n            search\n            selection\n            options={addAllToUserOptions}\n            onChange={getUser}\n          />\n        </Form.Field>\n        <Form.Field>\n          <Dropdown\n            placeholder=\"Tila\"\n            openOnFocus\n            selection\n            search\n            options={statusOptions}\n            onChange={getStatus}\n          />{' '}\n        </Form.Field>\n        <Form.Field></Form.Field>\n      </Form.Group>\n    </Form>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('reportfilterform state to props', state);\n  return {\n    report: state.report,\n    reportsList: state.reportsList,\n    notification: state.notification,\n    users: state.users,\n    login: state.login\n  };\n};\n\nconst mapDispatchToProps = {\n  filterByUserId,\n  filterByStatus,\n  filterByText\n};\n\nconst connectedFilterReportList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FilterReportList);\n\nexport default connectedFilterReportList;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Table, Icon, Confirm } from 'semantic-ui-react';\nimport { getOneReport } from '../../actions/reportActions';\nimport { deleteReport } from '../../actions/reportsListActions';\nimport { setNotification } from '../../reducers/notificationReducer';\nimport moment from 'moment';\n\nconst ReportListItem = props => {\n  const [open, setOpen] = useState(false);\n  const cancelDelete = () => {\n    setOpen(false);\n  };\n  const confirmDelete = () => {\n    setOpen(false);\n    console.log('clikd delete on report', props.report.id);\n    props.deleteReport(props.report.id);\n    props.setNotification(\n      `${props.report.name} ${props.report.program_date} poistettu!`,\n      'success'\n    );\n  };\n  let reportStatusOutPrint;\n  let className;\n\n  if (props.report.status === 1) {\n    reportStatusOutPrint = 'Valmis';\n  } else if (props.report.status === 0) {\n    reportStatusOutPrint = 'Keskeneräinen';\n  } else if (props.report.status === 9) {\n    reportStatusOutPrint = 'Poistettu';\n    return null;\n  }\n  if (props.report.rerun === 1) {\n    className = 'rerun';\n  }\n  return (\n    <React.Fragment>\n      <Table.Row className={className}>\n        <Table.Cell>{props.report.program_no}</Table.Cell>\n        <Table.Cell>\n          <Link className={className} to={`reports/${props.report.id}`}>\n            {props.report.name}\n          </Link>\n        </Table.Cell>\n        <Table.Cell>\n          {moment(props.report.program_date).format('DD-MM-YYYY')}\n        </Table.Cell>\n        <Table.Cell>\n          {props.report.program_start_time} - {props.report.program_end_time}\n        </Table.Cell>\n        <Table.Cell>{reportStatusOutPrint}</Table.Cell>\n        <Table.Cell>\n          <Icon\n            style={{ color: 'red' }}\n            name=\"delete\"\n            onClick={() => setOpen(true)}\n          />\n          <Confirm\n            content={`Haluatko varmasti poistaa raportin ${props.report.name} ${props.report.program_date}`}\n            open={open}\n            onCancel={cancelDelete}\n            onConfirm={confirmDelete}\n          />\n        </Table.Cell>\n      </Table.Row>\n    </React.Fragment>\n  );\n};\n\n// const mapStateToProps = state => ({\n//   report: state.report\n// });\n\nconst connectedReportListItem = connect(\n  null,\n  { getOneReport, deleteReport, setNotification }\n)(ReportListItem);\n\nexport default connectedReportListItem;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport ReportFilterForm from './ReportFilterForm';\nimport FilterReportList from './FilterReportList';\nimport ReportListItem from './ReportListItem';\nimport Notification from '../layout/Notification';\nimport { getOneReport } from '../../actions/reportActions';\nimport { getAllReportsByDate } from '../../actions/reportsListActions';\nimport { setNotification } from '../../reducers/notificationReducer';\nimport { Container, Table, Dimmer, Loader } from 'semantic-ui-react';\nimport moment from 'moment';\n\nconst ReportList = props => {\n  // initial reports list\n  useEffect(() => {\n    if (props.reportsList.reportListDate === null) {\n      props.getAllReportsByDate(moment().format('YYYY-MM'));\n    } else {\n      props.getAllReportsByDate(props.reportsList.reportListDate);\n    }\n    // eslint-disable-next-line\n  }, []);\n  console.log('Reportlist props', props);\n\n  if (props.reportsList.reportsList === null || props.reportsList.loading) {\n    return (\n      <Dimmer active inverted>\n        <Loader inverted content=\"Ladataan...\" />\n      </Dimmer>\n    );\n  }\n\n  if (props.reportsList.reportsList.length === 0) {\n    return (\n      <Container>\n        <h2>Ei raportteja valittuna ajankohtana. Valitse vuosi ja kuukausi</h2>\n        <ReportFilterForm />\n      </Container>\n    );\n  }\n\n  let reportListTimeDate;\n  if (props.reportsList.reportListDate === null) {\n    reportListTimeDate = moment().format('MMMM YYYY');\n  } else {\n    reportListTimeDate = moment(props.reportsList.reportListDate).format(\n      'MMMM YYYY'\n    );\n  }\n\n  let reportsToShow = props.reportsList.reportsList;\n\n  reportsToShow =\n    props.reportsList.filterByText === 0\n      ? reportsToShow\n      : (reportsToShow = reportsToShow.filter(report =>\n          report.name\n            .toLowerCase()\n            .includes(props.reportsList.filterByText.toLowerCase())\n        ));\n  reportsToShow =\n    props.reportsList.filterUserValue === null\n      ? reportsToShow\n      : (reportsToShow = reportsToShow.filter(\n          report => report.user_id === props.reportsList.filterUserValue\n        ));\n  reportsToShow =\n    props.reportsList.filterStatusValue === null\n      ? reportsToShow\n      : (reportsToShow = reportsToShow.filter(\n          report => report.status === props.reportsList.filterStatusValue\n        ));\n\n  return (\n    <Container>\n      <ReportFilterForm />\n      <Notification />\n      <h3>Raportit {reportListTimeDate}</h3>\n      <FilterReportList />\n      <Table striped>\n        <Table.Header>\n          <Table.Row>\n            <Table.Cell>Ohjelmanro</Table.Cell>\n            <Table.Cell>Nimi</Table.Cell>\n            <Table.Cell>Aika</Table.Cell>\n            <Table.Cell>Kello</Table.Cell>\n            <Table.Cell>Tila</Table.Cell>\n            <Table.Cell></Table.Cell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {reportsToShow.map(r => (\n            <ReportListItem key={r.id} report={r} />\n          ))}\n        </Table.Body>\n      </Table>\n    </Container>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('report list state to props', state);\n  return {\n    report: state.report,\n    reportsList: state.reportsList,\n    notification: state.notification,\n    login: state.login\n  };\n};\n\nconst mapDispatchToProps = {\n  getAllReportsByDate,\n  getOneReport,\n  setNotification\n};\n\nconst connectedReportList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ReportList);\n\nexport default connectedReportList;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { updateProgram } from '../../actions/programActions';\nimport { setNotification } from '../../reducers/notificationReducer';\nimport {\n  Modal,\n  Header,\n  Form,\n  Button,\n  Input,\n  Popup,\n  Icon\n} from 'semantic-ui-react';\n\nconst EditProgramModal = props => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [name, setName] = useState(props.program.name);\n  const [identifier, setIdentifier] = useState(props.program.identifier);\n  const [display, setDisplay] = useState(props.program.display);\n  const [site, setSite] = useState(props.program.site);\n\n  const handleOpen = () => {\n    setModalOpen(true);\n  };\n  const handleClose = () => {\n    setModalOpen(false);\n  };\n\n  const updateProgram = () => {\n    const updatedProgram = {\n      id: props.program.id,\n      display,\n      identifier,\n      name,\n      site,\n      user_id: props.program.user_id\n    };\n    console.log('klikd update program', updatedProgram);\n    props.updateProgram(updatedProgram);\n    props.setNotification(`${updatedProgram.name} päivitetty!`, 'success');\n    handleClose();\n  };\n\n  const getDisplay = () => {\n    console.log('getting display');\n    if (display === null) {\n      setDisplay(1);\n    } else {\n      setDisplay(null);\n    }\n  };\n\n  const getSite = () => {\n    console.log('getting display');\n    if (site === null) {\n      setSite(1);\n    } else {\n      setSite(null);\n    }\n  };\n\n  return (\n    <Modal\n      trigger={\n        <a href=\"#!\" onClick={handleOpen}>\n          {props.program.name}\n        </a>\n      }\n      closeIcon\n      open={modalOpen}\n      onClose={handleClose}\n    >\n      <Header content=\"Muokkaa ohjelman tietoja\" />\n      <Modal.Content>\n        <Form onSubmit={updateProgram}>\n          <Form.Field>\n            <label>Ohjelman nimi</label>\n            <Input\n              focus\n              type=\"text\"\n              defaultValue={name}\n              onChange={e => setName(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Ohjelman lisätieto</label>\n            <Input\n              focus\n              type=\"text\"\n              defaultValue={identifier}\n              onChange={e => setIdentifier(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>\n              Aktiivinen{' '}\n              <Popup\n                trigger={\n                  <Icon style={{ display: 'inline' }} name=\"question circle\" />\n                }\n                content=\"Aktiiviset ohjelmat näkyy Luo uusi raportti -sivun ohjelmalistalla\"\n                style={style}\n                inverted\n              />\n            </label>\n            <Form.Checkbox\n              name=\"active\"\n              onChange={getDisplay}\n              checked={display ? true : false}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>\n              Näytä saitin hakulistassa{' '}\n              <Popup\n                trigger={\n                  <Icon style={{ display: 'inline' }} name=\"question circle\" />\n                }\n                content=\"Liittyy vanhaan saittiin jossa pääsi selaamaan raportteja per ohjelma\"\n                style={style}\n                inverted\n              />\n            </label>\n            <Form.Checkbox\n              name=\"active\"\n              onChange={getSite}\n              checked={site ? true : false}\n            />\n          </Form.Field>\n          <Button color=\"green\" type=\"submit\" disabled={!name}>\n            Tallenna\n          </Button>\n        </Form>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nconst style = {\n  borderRadius: 0,\n  display: 'block',\n  opacity: 0.9,\n  padding: '2em'\n};\n\nconst mapStateToProps = state => {\n  return {\n    programs: state.programs\n  };\n};\n\nconst connectedEditProgramModal = connect(\n  mapStateToProps,\n  { setNotification, updateProgram }\n)(EditProgramModal);\n\nexport default connectedEditProgramModal;\n","import {\n  GET_ALL_PROGRAMS,\n  GET_ALL_ACTIVE_PROGRAMS,\n  GET_ONE_PROGRAM,\n  CREATE_NEW_PROGRAM,\n  UPDATE_PROGRAM,\n  SET_LOADING\n} from '../actions/types';\nimport programService from '../services/programs';\n\n// get program list fo\nexport const getAllPrograms = () => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const programs = await programService.getAll();\n    dispatch({\n      type: GET_ALL_PROGRAMS,\n      data: programs\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n// get all active programs\nexport const initializePrograms = () => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const programs = await programService.getAllActive();\n    dispatch({\n      type: GET_ALL_ACTIVE_PROGRAMS,\n      data: programs\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n// get one program by id\nexport const getOneProgram = id => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const program = await programService.getOne(id);\n    dispatch({\n      type: GET_ONE_PROGRAM,\n      data: program,\n      id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// create new program\nexport const createNewProgram = programToAdd => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const program = await programService.createProgram(programToAdd);\n    dispatch({\n      type: CREATE_NEW_PROGRAM,\n      data: program\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// update program\nexport const updateProgram = updatedProgram => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const updated = await programService.updateProgram(updatedProgram);\n    console.log(updated);\n    dispatch({\n      type: UPDATE_PROGRAM,\n      data: updatedProgram\n    });\n    // const programs = await programService.getAll();\n    // dispatch({\n    //   type: GET_ALL_PROGRAMS,\n    //   data: programs\n    // });\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport EditProgramModal from './EditProgramModal';\nimport { setNotification } from '../../reducers/notificationReducer';\nimport { Table, Container, Dimmer, Loader } from 'semantic-ui-react';\n\nconst ProgramListItem = props => {\n  if (props.program === null) {\n    return (\n      <Container>\n        <Dimmer active inverted>\n          <Loader size=\"medium\">Haetaan Ohjelmia...</Loader>\n        </Dimmer>\n      </Container>\n    );\n  }\n\n  let className;\n  if (props.program.display === 1) {\n    className = 'active-program';\n  }\n\n  return (\n    <Table.Row className={className}>\n      <Table.Cell>{props.program.id}</Table.Cell>\n      {/* <Table.Cell>{props.program.name}</Table.Cell> */}\n      <Table.Cell>\n        <EditProgramModal program={props.program} />\n      </Table.Cell>\n      <Table.Cell>{props.program.identifier}</Table.Cell>\n    </Table.Row>\n  );\n};\n\nconst connectedProgramListItem = connect(\n  null,\n  { setNotification }\n)(ProgramListItem);\n\nexport default connectedProgramListItem;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { createNewProgram } from '../../actions/programActions';\nimport { setNotification } from '../../reducers/notificationReducer';\nimport {\n  Modal,\n  Header,\n  Form,\n  Button,\n  Input,\n  Popup,\n  Icon\n} from 'semantic-ui-react';\n\nconst AddProgramModal = props => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [name, setName] = useState('');\n  const [identifier, setIdentifier] = useState('');\n  const [display, setDisplay] = useState(false);\n  const [site, setSite] = useState(false);\n\n  const handleOpen = () => {\n    setModalOpen(true);\n  };\n  const handleClose = () => {\n    setModalOpen(false);\n  };\n\n  const addProgram = () => {\n    const programToAdd = {\n      display,\n      identifier,\n      name,\n      site,\n      user_id: props.login.id\n    };\n    console.log('klikd add program', programToAdd);\n    props.createNewProgram(programToAdd);\n    props.setNotification(`${programToAdd.name} lisätty!`, 'success');\n    handleClose();\n  };\n\n  return (\n    <Modal\n      trigger={\n        <Button onClick={handleOpen} floated=\"right\" color=\"green\">\n          Luo uusi ohjelma\n        </Button>\n      }\n      closeIcon\n      open={modalOpen}\n      onClose={handleClose}\n    >\n      <Header content=\"Lisää ohjelma\" />\n      <Modal.Content>\n        <Form onSubmit={addProgram}>\n          <Form.Field>\n            <label>Ohjelman nimi</label>\n            <Input\n              focus\n              type=\"text\"\n              placeholder=\"Ohjelman nimi...\"\n              onChange={e => setName(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Ohjelman tarkenne</label>\n            <Input\n              focus\n              type=\"text\"\n              placeholder=\"Ohjelman tarkenne...\"\n              onChange={e => setIdentifier(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>\n              Aktiivinen{' '}\n              <Popup\n                trigger={\n                  <Icon style={{ display: 'inline' }} name=\"question circle\" />\n                }\n                content=\"Aktiiviset ohjelmat näkyy Luo uusi raportti -sivun ohjelmalistalla\"\n                style={style}\n                inverted\n              />\n            </label>\n            <Form.Checkbox\n              name=\"active\"\n              onChange={() => setDisplay(!display)}\n              checked={display ? true : false}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>\n              Näytä saitin hakulistassa{' '}\n              <Popup\n                trigger={\n                  <Icon style={{ display: 'inline' }} name=\"question circle\" />\n                }\n                content=\"Liittyy vanhaan saittiin jossa pääsi selaamaan raportteja per ohjelma\"\n                style={style}\n                inverted\n              />\n            </label>\n            <Form.Checkbox\n              name=\"site\"\n              onChange={() => setSite(!site)}\n              checked={site ? true : false}\n            />\n          </Form.Field>\n          <Button color=\"green\" type=\"submit\" disabled={!name}>\n            Tallenna\n          </Button>\n        </Form>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nconst style = {\n  borderRadius: 0,\n  display: 'block',\n  opacity: 0.9,\n  padding: '2em'\n};\n\nconst mapStateToProps = state => {\n  return {\n    login: state.login\n  };\n};\nconst connectedAddProgramModal = connect(\n  mapStateToProps,\n  { setNotification, createNewProgram }\n)(AddProgramModal);\n\nexport default connectedAddProgramModal;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport ProgramListItem from './ProgramListItem';\nimport AddProgramModal from './AddProgramModal';\nimport Notification from '../layout/Notification';\nimport { getAllPrograms } from '../../actions/programActions';\nimport { Container, Dimmer, Loader } from 'semantic-ui-react';\nimport { Table } from 'semantic-ui-react';\n\nconst ProgramList = props => {\n  useEffect(() => {\n    props.getAllPrograms();\n    //eslint-disable-next-line\n  }, []);\n  if (props.programs.allPrograms === null || props.programs.loading === true) {\n    return (\n      <Container>\n        <Dimmer active inverted>\n          <Loader size=\"medium\">Haetaan ohjelmia...</Loader>\n        </Dimmer>\n      </Container>\n    );\n  }\n  return (\n    <Container>\n      <div style={{ marginTop: '1rem', marginBottom: '1rem' }}>\n        <h3 style={{ display: 'inline' }}>Ohjelmat</h3>\n        <AddProgramModal />\n      </div>\n\n      <Notification />\n      <Table>\n        <Table.Header>\n          <Table.Row>\n            <Table.Cell>ID</Table.Cell>\n            <Table.Cell>Nimi</Table.Cell>\n            <Table.Cell>Tarkenne</Table.Cell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {props.programs.allPrograms.map(program => (\n            <ProgramListItem program={program} key={program.id} />\n          ))}\n        </Table.Body>\n      </Table>\n    </Container>\n  );\n};\n\nconst mapStateToProps = state => ({\n  programs: state.programs,\n  login: state.login\n});\n\nconst connectedProgramList = connect(\n  mapStateToProps,\n  { getAllPrograms }\n)(ProgramList);\n\nexport default connectedProgramList;\n","import {\n  GET_ONE_ALBUM,\n  GET_TRACKLIST_OF_ALBUM,\n  CLEAR_CURRENT_ALBUM,\n  SET_LOADING\n} from './types';\nimport albumService from '../services/albums';\nimport searchService from '../services/search';\n\nexport const getOneAlbum = id => async dispatch => {\n  try {\n    dispatch({\n      type: CLEAR_CURRENT_ALBUM\n    });\n    dispatch({\n      type: SET_LOADING\n    });\n    const album = await albumService.getOneAlbum(id);\n    dispatch({\n      type: GET_ONE_ALBUM,\n      data: album\n    });\n    const tracklist = await albumService.getTracklistOfAlbum(id);\n    dispatch({\n      type: GET_TRACKLIST_OF_ALBUM,\n      data: tracklist\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updateAlbum = albumToUpdate => async dispatch => {\n  dispatch({\n    type: SET_LOADING\n  });\n  console.log('artist to update', albumToUpdate);\n  const updateAlbum = await albumService.updateAlbum(albumToUpdate);\n  console.log(updateAlbum);\n  const updatedAlbum = await albumService.getOneAlbum(albumToUpdate.id);\n  dispatch({\n    type: GET_ONE_ALBUM,\n    data: updatedAlbum\n  });\n};\n\nexport const mergeAlbumFunction = mergeParams => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const mergeAction = await searchService.merge(mergeParams);\n    console.log(mergeAction);\n    const album = await albumService.getOneAlbum(mergeParams.mergeTo);\n    dispatch({\n      type: GET_ONE_ALBUM,\n      data: album\n    });\n    const tracklist = await albumService.getTracklistOfAlbum(\n      mergeParams.mergeTo\n    );\n    dispatch({\n      type: GET_TRACKLIST_OF_ALBUM,\n      data: tracklist\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, Header, Form, Button, Dropdown } from 'semantic-ui-react';\nimport { mergeAlbumFunction } from '../../actions/albumActions';\n\nconst MergeAlbumsModal = props => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [albumToMerge, setAlbumToMerge] = useState(null);\n  const handleOpen = () => {\n    setModalOpen(true);\n    console.log(modalOpen);\n  };\n  const handleClose = () => {\n    setModalOpen(false);\n  };\n  if (!modalOpen) {\n    return (\n      <button className=\"link-btn\" onClick={handleOpen}>\n        {props.album_id}\n      </button>\n    );\n  } else {\n    const onSubmit = () => {\n      const mergeParams = {\n        type: 'album',\n        merge: albumToMerge,\n        mergeTo: props.album_id\n      };\n      console.log(mergeParams);\n      props.mergeAlbumFunction(mergeParams);\n    };\n\n    const mergeOptions = props.artist.albumList.map(album => ({\n      key: album.album_id,\n      text: `${album.album_id} - ${album.name}`,\n      value: album.album_id\n    }));\n    const getAlbumToMerge = (e, { value }) => {\n      e.preventDefault();\n      setAlbumToMerge(value);\n    };\n    return (\n      <Modal\n        open={modalOpen}\n        closeIcon\n        onClose={handleClose}\n        trigger={\n          <button className=\"link-btn\" onClick={handleOpen}>\n            {props.album_id}\n          </button>\n        }\n      >\n        <Header>\n          Yhdistä albumiin {props.album_id} - {props.album_name} tiedot\n        </Header>\n        <Modal.Content>\n          <Form onSubmit={onSubmit}>\n            <Form.Field>\n              <Dropdown\n                onChange={getAlbumToMerge}\n                selection\n                search\n                options={mergeOptions}\n              />\n            </Form.Field>\n            <Form.Field>\n              <Button type=\"submit\">Yhdistä</Button>\n            </Form.Field>\n          </Form>\n        </Modal.Content>\n      </Modal>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  console.log('MergeAlbumsModal state', state);\n  return {\n    artist: state.artist\n  };\n};\n\nconst connectedMergeAlbumsModal = connect(\n  mapStateToProps,\n  { mergeAlbumFunction }\n)(MergeAlbumsModal);\n\nexport default connectedMergeAlbumsModal;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Table } from 'semantic-ui-react';\nimport MergeAlbumsModal from './MergeAlbumsModal';\n\nconst AlbumsByArtistItem = props => {\n  console.log(props);\n  return (\n    <Table.Row>\n      <Table.Cell>\n        <MergeAlbumsModal\n          album_name={props.album.name}\n          album_id={props.album.album_id}\n        />\n      </Table.Cell>\n      <Table.Cell>\n        <Link to={`/album/${props.album.album_id}`}>{props.album.name}</Link>\n      </Table.Cell>\n      <Table.Cell>{props.album.identifier}</Table.Cell>\n      <Table.Cell>{props.album.track_count}</Table.Cell>\n      <Table.Cell>{props.album.report_occurrence}</Table.Cell>\n    </Table.Row>\n  );\n};\n\nexport default AlbumsByArtistItem;\n","import React from 'react';\nimport { Table } from 'semantic-ui-react';\nimport AlbumsByArtistItem from './AlbumsByArtistItem';\n\nconst AlbumsByArtist = props => {\n  console.log('albumbyartist props', props);\n  if (props.albumList === null) {\n    return <span>loading</span>;\n  }\n  return (\n    <React.Fragment>\n      <h4>Albumit</h4>\n      <Table striped>\n        <Table.Header>\n          <Table.Row>\n            <Table.Cell>ID#</Table.Cell>\n            <Table.Cell>Nimi</Table.Cell>\n            <Table.Cell>Levykoodi</Table.Cell>\n            <Table.Cell>Biisejä</Table.Cell>\n            <Table.Cell>Raportit</Table.Cell>\n            <Table.Cell></Table.Cell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {props.albumList.map(album => (\n            <AlbumsByArtistItem key={album.album_id} album={album} />\n          ))}\n        </Table.Body>\n      </Table>\n    </React.Fragment>\n  );\n};\n\nexport default AlbumsByArtist;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Input, Button, Grid, Dimmer, Loader } from 'semantic-ui-react';\nimport Notification from '../layout/Notification';\nimport { updateArtist } from '../../actions/artistActions';\nimport { setNotification } from '../../reducers/notificationReducer';\n\nconst ArtistDetailsForm = props => {\n  console.log(props);\n  const [artist, setArtist] = useState(props.currentArtist.name);\n  const [spotifyId, setSpotifyId] = useState(props.currentArtist.spotify_id);\n  if (props.currentArtist === null) {\n    return (\n      <Dimmer>\n        <Loader>Ladataan...</Loader>\n      </Dimmer>\n    );\n  }\n\n  const saveChanges = () => {\n    console.log('klikd save artist');\n    const artistToUpdate = {\n      id: props.currentArtist.id,\n      name: artist,\n      spotify_id: spotifyId\n    };\n    console.log(artistToUpdate);\n    props.updateArtist(artistToUpdate);\n    props.setNotification(\n      `Artistin ${artistToUpdate.name} tiedot päivitetty!`,\n      'success'\n    );\n  };\n  return (\n    <Grid columns={2}>\n      <Grid.Column>\n        <h2>Artistin tiedot</h2>\n        <Notification />\n        <Form>\n          <Form.Field>\n            <label>Artistin nimi</label>\n            <Input\n              type=\"text\"\n              defaultValue={artist}\n              onChange={e => setArtist(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Spotify id</label>\n            <Input\n              type=\"text\"\n              defaultValue={spotifyId}\n              onChange={e => setSpotifyId(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <Button onClick={saveChanges} color=\"green\">\n              Tallenna muutokset\n            </Button>\n          </Form.Field>\n        </Form>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nconst connectedArtistDetailsForm = connect(\n  null,\n  { updateArtist, setNotification }\n)(ArtistDetailsForm);\n\nexport default connectedArtistDetailsForm;\n","import {\n  GET_ONE_ARTIST,\n  SET_LOADING,\n  GET_ALBUM_LIST_BY_ARTIST,\n  CLEAR_CURRENT_ARTIST\n} from './types';\nimport artistService from '../services/artists';\nimport searchService from '../services/search';\n\nexport const getOneArtist = id => async dispatch => {\n  try {\n    dispatch({\n      type: CLEAR_CURRENT_ARTIST\n    });\n    dispatch({\n      type: SET_LOADING\n    });\n    const artist = await artistService.getOneArtist(id);\n    dispatch({\n      type: GET_ONE_ARTIST,\n      data: artist\n    });\n    const albumList = await artistService.getAlbumsByArtist(id);\n    dispatch({\n      type: GET_ALBUM_LIST_BY_ARTIST,\n      data: albumList\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const updateArtist = artistToUpdate => async dispatch => {\n  dispatch({\n    type: SET_LOADING\n  });\n  console.log('artist to update', artistToUpdate);\n  const updateArtist = await artistService.updateArtist(artistToUpdate);\n  console.log(updateArtist);\n  const updatedArtist = await artistService.getOneArtist(artistToUpdate.id);\n  dispatch({\n    type: GET_ONE_ARTIST,\n    data: updatedArtist\n  });\n};\n\nexport const mergeArtistFunction = mergeParams => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const mergeAction = await searchService.merge(mergeParams);\n    console.log(mergeAction);\n    const artist = await artistService.getOneArtist(mergeParams.mergeTo);\n    dispatch({\n      type: GET_ONE_ARTIST,\n      data: artist\n    });\n    const albumList = await artistService.getAlbumsByArtist(\n      mergeParams.mergeTo\n    );\n    dispatch({\n      type: GET_ALBUM_LIST_BY_ARTIST,\n      data: albumList\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Dimmer, Loader } from 'semantic-ui-react';\nimport { getOneArtist } from '../../actions/artistActions';\nimport AlbumsByArtist from './AlbumsByArtist';\nimport ArtistDetailsForm from './ArtistDetailsForm';\n\nconst ArtistDetails = props => {\n  console.log('artist detail props', props);\n\n  useEffect(() => {\n    props.getOneArtist(props.id);\n    // eslint-disable-next-line\n  }, [props.id]);\n\n  if (props.artist.currentArtist === null) {\n    return (\n      <Container>\n        <Dimmer>\n          <Loader>Ladataan...</Loader>\n        </Dimmer>\n      </Container>\n    );\n  }\n\n  return (\n    <Container>\n      <ArtistDetailsForm currentArtist={props.artist.currentArtist} />\n      <AlbumsByArtist albumList={props.artist.albumList} />\n    </Container>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    artist: state.artist\n  };\n};\n\nconst connectedArtistDetails = connect(\n  mapStateToProps,\n  { getOneArtist }\n)(ArtistDetails);\nexport default connectedArtistDetails;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Input, Button, Grid, Dimmer, Loader } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport Notification from '../layout/Notification';\nimport { updateAlbum } from '../../actions/albumActions';\nimport { setNotification } from '../../reducers/notificationReducer';\n\nconst AlbumDetailsForm = props => {\n  console.log(props);\n  const [name, setName] = useState(props.currentAlbum[0].album_name);\n  const [label, setLabel] = useState(props.currentAlbum[0].label);\n  const [catId, setCatId] = useState(props.currentAlbum[0].cat_id);\n  const [year, setYear] = useState(null);\n  const [spotifyId, setSpotifyId] = useState(props.currentAlbum[0].spotify_id);\n  useEffect(() => {\n    if (props.currentAlbum[0].year === null) {\n      setYear(null);\n    } else {\n      setYear(parseInt(props.currentAlbum[0].year));\n    }\n  }, [props.currentAlbum[0].year]);\n  if (props.currentAlbum === null) {\n    return (\n      <Dimmer>\n        <Loader>Ladataan...</Loader>\n      </Dimmer>\n    );\n  }\n\n  const saveChanges = () => {\n    console.log('klikd save album');\n    const albumToUpdate = {\n      id: props.album_id,\n      name,\n      label,\n      cat_id: catId,\n      year,\n      spotify_id: spotifyId\n    };\n    console.log('album details form albumtoupdate', albumToUpdate);\n    props.updateAlbum(albumToUpdate);\n    props.setNotification(\n      `Albumin ${albumToUpdate.name} tiedot päivitetty!`,\n      'success'\n    );\n  };\n  return (\n    <Grid columns={2}>\n      <Grid.Column>\n        <h2>Albumin tiedot</h2>\n        <Notification />\n        <Form>\n          <Form.Field>\n            <label>Artistin nimi</label>\n            <Input\n              disabled\n              type=\"text\"\n              defaultValue={props.currentAlbum[0].artist_name}\n            />\n            <span>\n              <a href=\"!#\">Vaihda esittäjää</a> {'  '}\n              <Link to={`../artist/${props.currentAlbum[0].artist_id}`}>\n                Muokkaa esittäjän tietoja\n              </Link>\n            </span>\n          </Form.Field>\n          <Form.Field>\n            <label>Albumi</label>\n            <Input\n              type=\"text\"\n              defaultValue={name}\n              onChange={e => setName(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Levymerkki</label>\n            <Input\n              type=\"text\"\n              defaultValue={label}\n              onChange={e => setLabel(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Levykoodi</label>\n            <Input\n              type=\"text\"\n              defaultValue={catId}\n              onChange={e => setCatId(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Vuosi</label>\n            <Input\n              type=\"number\"\n              defaultValue={year}\n              onChange={e => setYear(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Spotify id</label>\n            <Input\n              type=\"text\"\n              defaultValue={spotifyId}\n              onChange={e => setSpotifyId(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <Button onClick={saveChanges} color=\"green\">\n              Tallenna muutokset\n            </Button>\n          </Form.Field>\n        </Form>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nconst connectedAlbumDetailsForm = connect(\n  null,\n  { updateAlbum, setNotification }\n)(AlbumDetailsForm);\n\nexport default connectedAlbumDetailsForm;\n","import {\n  GET_DJONLINE_TRACKS,\n  ADD_NEW_TRACK,\n  UPDATE_TRACK,\n  SET_LOADING,\n  GET_ONE_TRACK,\n  GET_ONE_TRACK_HISTORY,\n  CLEAR_CURRENT_TRACK,\n  REMOVE_CURRENT_TRACK,\n  CHANGE_ALBUM,\n  CHANGE_ARTIST\n} from './types';\nimport trackService from '../services/tracks';\nimport searchService from '../services/search';\n\nexport const getDjonlineTracks = searchParams => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const tracks = await trackService.checkDjonlineTracks(searchParams);\n    dispatch({\n      type: GET_DJONLINE_TRACKS,\n      data: tracks\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const addNewTrack = trackToAdd => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const track = await trackService.addNewTrack(trackToAdd);\n    console.log(track);\n    dispatch({\n      type: ADD_NEW_TRACK,\n      data: track\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updateTrack = trackToUpdate => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const updatedTrack = await trackService.updateTrack(trackToUpdate);\n    console.log('updated track', updatedTrack);\n    dispatch({\n      type: UPDATE_TRACK,\n      data: updatedTrack\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getOneTrack = id => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const track = await trackService.getOneTrack(id);\n    dispatch({\n      type: GET_ONE_TRACK,\n      data: track\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getOneTrackHistory = id => async dispatch => {\n  try {\n    dispatch({\n      type: CLEAR_CURRENT_TRACK\n    });\n    dispatch({\n      type: SET_LOADING\n    });\n    const history = await trackService.getOneTrackHistory(id);\n    dispatch({\n      type: GET_ONE_TRACK_HISTORY,\n      data: history\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const removeCurrentTrack = () => async dispatch => {\n  dispatch({\n    type: REMOVE_CURRENT_TRACK\n  });\n};\n\nexport const mergeTrackFunction = mergeParams => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const mergeAction = await searchService.merge(mergeParams);\n    console.log(mergeAction);\n    const track = await trackService.getOneTrack(mergeParams.mergeTo);\n    dispatch({\n      type: GET_ONE_TRACK,\n      data: track\n    });\n    const history = await trackService.getOneTrackHistory(mergeParams.mergeTo);\n    dispatch({\n      type: GET_ONE_TRACK_HISTORY,\n      data: history\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const changeAlbumId = albumToUpdate => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const updateAlbum = await trackService.updateAlbumId(albumToUpdate);\n    console.log(updateAlbum);\n    dispatch({\n      type: CHANGE_ALBUM,\n      data: albumToUpdate\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const changeArtistId = artistToUpdate => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const updateArtist = await trackService.updateArtistId(artistToUpdate);\n    console.log(updateArtist);\n    dispatch({\n      type: CHANGE_ARTIST,\n      data: artistToUpdate\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, Header, Form, Button, Dropdown } from 'semantic-ui-react';\nimport { mergeTrackFunction } from '../../actions/trackActions';\n\nconst MergeAlbumTracksModal = props => {\n  console.log('merge album tracks modal props', props);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [trackToMerge, setTrackToMerge] = useState(null);\n  const handleOpen = () => {\n    setModalOpen(true);\n    console.log(modalOpen);\n  };\n  const handleClose = () => {\n    setModalOpen(false);\n  };\n\n  if (!modalOpen) {\n    return (\n      <button className=\"link-btn\" onClick={handleOpen}>\n        {props.track_id}\n      </button>\n    );\n  } else {\n    const onSubmit = () => {\n      const mergeParams = {\n        type: 'track',\n        merge: trackToMerge,\n        mergeTo: props.track_id\n      };\n      mergeTrackFunction(mergeParams);\n    };\n\n    const mergeOptions = props.album.tracklist.map(track => ({\n      key: track.track_id,\n      text: `${track.track_id} - ${track.track_title}`,\n      value: track.track_id\n    }));\n    const getTrackToMerge = (e, { value }) => {\n      e.preventDefault();\n      setTrackToMerge(value);\n    };\n    return (\n      <Modal\n        open={modalOpen}\n        closeIcon\n        onClose={handleClose}\n        trigger={\n          <button className=\"link-btn\" onClick={handleOpen}>\n            {props.track_id}\n          </button>\n        }\n      >\n        <Header>\n          Yhdistä biisiin {props.track_id} - {props.track_title} tiedot\n        </Header>\n        <Modal.Content>\n          <Form onSubmit={onSubmit}>\n            <Form.Field>\n              <Dropdown\n                onChange={getTrackToMerge}\n                selection\n                search\n                options={mergeOptions}\n              />\n            </Form.Field>\n            <Form.Field>\n              <Button type=\"submit\">Yhdistä</Button>\n            </Form.Field>\n          </Form>\n        </Modal.Content>\n      </Modal>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  console.log('MergeAlbumTracksModal state', state);\n  return {\n    album: state.album\n  };\n};\n\nconst connectedMergeAlbumTracksModal = connect(\n  mapStateToProps,\n  { mergeTrackFunction }\n)(MergeAlbumTracksModal);\n\nexport default connectedMergeAlbumTracksModal;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Table } from 'semantic-ui-react';\nimport MergeAlbumTracksModal from './MergeAlbumTracksModal';\n\nconst TracksInAnAlbumItem = props => {\n  console.log(props);\n  return (\n    <Table.Row>\n      <Table.Cell>\n        <MergeAlbumTracksModal\n          track_id={props.track.track_id}\n          track_title={props.track.track_title}\n        />\n      </Table.Cell>\n      <Table.Cell>\n        <Link to={`/track/${props.track.track_id}`}>\n          {props.track.artist_name} - {props.track.track_title}{' '}\n        </Link>\n      </Table.Cell>\n      <Table.Cell>\n        {props.track.track_no} / {props.track.disc_no}\n      </Table.Cell>\n      <Table.Cell>{props.track.isrc}</Table.Cell>\n      <Table.Cell>{props.track.report_occurrence}</Table.Cell>\n      <Table.Cell></Table.Cell>\n    </Table.Row>\n  );\n};\n\nexport default TracksInAnAlbumItem;\n","import React from 'react';\nimport { Table } from 'semantic-ui-react';\nimport TracksInAnAlbumItem from './TracksInAnAlbumItem';\n\nconst TracksInAnAlbum = props => {\n  console.log('albumbyartist props', props);\n  if (props.tracklist === null) {\n    return <span>loading</span>;\n  }\n  return (\n    <React.Fragment>\n      <h4>Biisit</h4>\n      <Table striped>\n        <Table.Header>\n          <Table.Row>\n            <Table.Cell>ID#</Table.Cell>\n            <Table.Cell>ESITTÄJÄ - Biisi</Table.Cell>\n            <Table.Cell>Biisi# / Levy#</Table.Cell>\n            <Table.Cell>ISRC</Table.Cell>\n            <Table.Cell>Raportit</Table.Cell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {props.tracklist.map(track => (\n            <TracksInAnAlbumItem key={track.track_id} track={track} />\n          ))}\n        </Table.Body>\n      </Table>\n    </React.Fragment>\n  );\n};\n\nexport default TracksInAnAlbum;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Dimmer, Loader } from 'semantic-ui-react';\nimport AlbumDetailsForm from './AlbumDetailsForm';\nimport { getOneAlbum } from '../../actions/albumActions';\nimport TracksInAnAlbum from './TracksInAnAlbum';\n\nconst AlbumDetails = props => {\n  console.log('album detail props', props);\n\n  useEffect(() => {\n    props.getOneAlbum(props.id);\n    // eslint-disable-next-line\n  }, [props.id]);\n\n  if (props.album.currentAlbum === null) {\n    return (\n      <Container>\n        <Dimmer>\n          <Loader>Ladataan...</Loader>\n        </Dimmer>\n      </Container>\n    );\n  }\n\n  return (\n    <Container>\n      <AlbumDetailsForm\n        album_id={props.id}\n        currentAlbum={props.album.currentAlbum}\n      />\n      <TracksInAnAlbum tracklist={props.album.tracklist} />\n    </Container>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    album: state.album\n  };\n};\n\nconst connectedAlbumDetails = connect(\n  mapStateToProps,\n  { getOneAlbum }\n)(AlbumDetails);\nexport default connectedAlbumDetails;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, Header, Form, Button, Search } from 'semantic-ui-react';\nimport { changeAlbumId } from '../../actions/trackActions';\nimport { setNotification } from '../../reducers/notificationReducer';\nimport { useChangeAlbumOptionsHook } from '../../hooks/changeAlbumOptionsHook';\n\nconst ChangeAlbumModal = props => {\n  console.log('change album modal props', props);\n  const { setInputText, search } = useChangeAlbumOptionsHook();\n  console.log(search);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [albumToChange, setAlbumToChange] = useState(null);\n  const handleOpen = () => {\n    setModalOpen(true);\n  };\n  const handleClose = () => {\n    setModalOpen(false);\n  };\n  if (!modalOpen) {\n    return (\n      <button className=\"link-btn\" onClick={handleOpen}>\n        Vaihda albumi\n      </button>\n    );\n  } else {\n    let results = [];\n    if (search.result === undefined) {\n      results = [];\n    } else {\n      results = search.result.map(result => ({\n        key: result.album_id,\n        title: `#${result.album_id}: ${result.album_name}`,\n        description: result.artist_name,\n        length: result.length,\n        value: result.album_id,\n        album_name: result.album_name\n      }));\n    }\n    const onSubmit = () => {\n      console.log('klikd submit change album');\n      console.log(\n        'inserting into track id ',\n        props.currentTrack.track_id,\n        'album id',\n        albumToChange.value,\n        albumToChange.album_name\n      );\n      const changedAlbum = {\n        track_id: props.currentTrack.track_id,\n        album_id: albumToChange.value,\n        album_name: albumToChange.album_name\n      };\n      console.log(changedAlbum);\n      props.changeAlbumId(changedAlbum);\n      props.setNotification(\n        `${props.currentTrack.track_title} -biisin albumi vaihdettu!`,\n        'success'\n      );\n      handleClose();\n    };\n\n    const handleResultSelect = (e, { result }) => {\n      e.preventDefault();\n      setAlbumToChange(result);\n    };\n\n    return (\n      <Modal\n        open={modalOpen}\n        closeIcon\n        onClose={handleClose}\n        trigger={\n          <button className=\"link-btn\" onClick={handleOpen}>\n            Vaihda albumi\n          </button>\n        }\n      >\n        <Header>\n          Vaihda biisin {props.currentTrack.track_title} albumiksi:\n        </Header>\n        <Modal.Content>\n          <Form.Field>\n            <div className=\"searchResults\">\n              <Search\n                loading={search.loading}\n                onResultSelect={handleResultSelect}\n                onSearchChange={e => setInputText(e.target.value)}\n                onSelectionChange={handleResultSelect}\n                results={results}\n\n                // value={value}\n              />\n            </div>\n          </Form.Field>\n          <Form.Field>\n            <Button onClick={onSubmit}>Vaihda</Button>\n          </Form.Field>\n        </Modal.Content>\n      </Modal>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  console.log('change album modal state', state);\n  return {\n    search: state.search\n  };\n};\n\nconst connectedChangeAlbumModal = connect(\n  mapStateToProps,\n  { changeAlbumId, setNotification }\n)(ChangeAlbumModal);\n\nexport default connectedChangeAlbumModal;\n","import { useState } from 'react';\nimport AwesomeDebouncePromise from 'awesome-debounce-promise';\nimport useConstant from 'use-constant';\nimport { useAsync } from 'react-async-hook';\nimport searchService from '../services/search';\n\nexport const useChangeAlbumOptionsHook = () => {\n  const [inputText, setInputText] = useState('');\n\n  // Debounce the original search async function\n  const debouncedSearchTrack = useConstant(() =>\n    AwesomeDebouncePromise(searchService.changeAlbumOptions, 400)\n  );\n  const search = useAsync(\n    async () => {\n      if (inputText.length === 0) {\n        return [];\n      } else {\n        return debouncedSearchTrack(inputText);\n      }\n    },\n    // Ensure a new request is made everytime the text changes (even if it's debounced)\n    [inputText]\n  );\n  return {\n    inputText,\n    setInputText,\n    search\n  };\n};\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, Header, Form, Button, Search } from 'semantic-ui-react';\nimport { changeArtistId } from '../../actions/trackActions';\nimport { setNotification } from '../../reducers/notificationReducer';\nimport { useChangeArtistOptionsHook } from '../../hooks/changeArtistOptionsHook';\n\nconst ChangeArtistModal = props => {\n  console.log('change artist modal props', props);\n  const { setInputText, search } = useChangeArtistOptionsHook();\n  const [modalOpen, setModalOpen] = useState(false);\n  const [artistToChange, setArtistToChange] = useState(null);\n  const handleOpen = () => {\n    setModalOpen(true);\n  };\n  const handleClose = () => {\n    setModalOpen(false);\n  };\n  if (!modalOpen) {\n    return (\n      <button className=\"link-btn\" onClick={handleOpen}>\n        Vaihda artisti\n      </button>\n    );\n  } else {\n    let results = [];\n    if (search.result === undefined) {\n      results = [];\n    } else {\n      results = search.result.map(result => ({\n        key: result.artist_id,\n        title: `#${result.artist_id}: ${result.artist_name}`,\n        description: result.artist_name,\n        value: result.artist_id,\n        artist_name: result.artist_name\n      }));\n    }\n\n    const onSubmit = () => {\n      console.log('klikd submit change artist');\n      console.log(\n        'inserting into track id ',\n        props.currentTrack.track_id,\n        'artist id',\n        artistToChange.value,\n        artistToChange.artist_name\n      );\n      const changedArtist = {\n        track_id: props.currentTrack.track_id,\n        artist_id: artistToChange.value,\n        artist_name: artistToChange.artist_name\n      };\n      console.log(changedArtist);\n      props.changeArtistId(changedArtist);\n      props.setNotification(\n        `${props.currentTrack.track_title} -biisin artisti vaihdettu!`,\n        'success'\n      );\n      handleClose();\n    };\n\n    const handleResultSelect = (e, { result }) => {\n      e.preventDefault();\n      setArtistToChange(result);\n    };\n\n    return (\n      <Modal\n        open={modalOpen}\n        closeIcon\n        onClose={handleClose}\n        trigger={\n          <button className=\"link-btn\" onClick={handleOpen}>\n            Vaihda artisti\n          </button>\n        }\n      >\n        <Header>\n          Vaihda biisin {props.currentTrack.track_title} artistiksi:\n        </Header>\n        <Modal.Content>\n          <Form.Field>\n            <div className=\"searchResults\">\n              <Search\n                loading={search.loading}\n                onResultSelect={handleResultSelect}\n                onSearchChange={e => setInputText(e.target.value)}\n                onSelectionChange={handleResultSelect}\n                results={results}\n\n                // value={value}\n              />\n            </div>\n          </Form.Field>\n          <Form.Field>\n            <Button onClick={onSubmit}>Vaihda</Button>\n          </Form.Field>\n        </Modal.Content>\n      </Modal>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  console.log('change album modal state', state);\n  return {\n    search: state.search\n  };\n};\n\nconst connectedChangeArtistModal = connect(\n  mapStateToProps,\n  { changeArtistId, setNotification }\n)(ChangeArtistModal);\n\nexport default connectedChangeArtistModal;\n","import { useState } from 'react';\nimport AwesomeDebouncePromise from 'awesome-debounce-promise';\nimport useConstant from 'use-constant';\nimport { useAsync } from 'react-async-hook';\nimport searchService from '../services/search';\n\nexport const useChangeArtistOptionsHook = () => {\n  const [inputText, setInputText] = useState('');\n\n  // Debounce the original search async function\n  const debouncedSearchTrack = useConstant(() =>\n    AwesomeDebouncePromise(searchService.changeArtistOptions, 400)\n  );\n  const search = useAsync(\n    async () => {\n      if (inputText.length === 0) {\n        return [];\n      } else {\n        return debouncedSearchTrack(inputText);\n      }\n    },\n    // Ensure a new request is made everytime the text changes (even if it's debounced)\n    [inputText]\n  );\n  return {\n    inputText,\n    setInputText,\n    search\n  };\n};\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {\n  Form,\n  Input,\n  Button,\n  Grid,\n  Dimmer,\n  Loader,\n  TextArea,\n  Dropdown\n} from 'semantic-ui-react';\nimport { updateTrack } from '../../actions/trackActions';\nimport { setNotification } from '../../reducers/notificationReducer';\nimport ChangeAlbumModal from './ChangeAlbumModal';\nimport ChangeArtistModal from './ChangeArtistModal';\n\nconst TrackDetailsForm = props => {\n  console.log('track details form props', props);\n  const [artist, setArtist] = useState(props.currentTrack.artist);\n  const [album, setAlbum] = useState(props.currentTrack.album);\n  const [track, setTrack] = useState(props.currentTrack.track_title);\n  const [min, setMin] = useState(Math.floor(props.currentTrack.length / 60));\n  const [sec, setSec] = useState(props.currentTrack.length % 60);\n  const [country, setCountry] = useState(props.currentTrack.country);\n  const [recordCountry, setRecordCountry] = useState(\n    props.currentTrack.record_country\n  );\n  const [people, setPeople] = useState(null);\n  const [discNo, setDiscNo] = useState(props.currentTrack.disc_no);\n  const [trackNo, setTrackNo] = useState(props.currentTrack.track_no);\n  const [year, setYear] = useState(null);\n  const [isrc, setIsrc] = useState(props.currentTrack.isrc);\n  const [comment, setComment] = useState(props.currentTrack.comment);\n\n  useEffect(() => {\n    if (props.currentTrack.year === null) {\n      setYear(null);\n    } else {\n      setYear(parseInt(props.currentTrack.year));\n    }\n  }, [props.currentTrack.year]);\n\n  useEffect(() => {\n    if (props.currentTrack.people === null) {\n      setPeople(null);\n    } else {\n      setPeople(\n        props.currentTrack.people\n          .replace(/\\| /, '')\n          .replace(/\\| /g, '\\n')\n          .replace(/ \\|/, '')\n      );\n    }\n  }, [props.currentTrack.people]);\n\n  const countryOptions = [\n    {\n      key: 1,\n      text: 'Suomi',\n      value: 1\n    },\n    {\n      key: 2,\n      text: 'Muu',\n      value: 2\n    },\n    {\n      key: 0,\n      text: 'Ei tietoa',\n      value: null\n    }\n  ];\n  const getCountry = (event, { value }) => {\n    event.preventDefault();\n    setCountry(value);\n  };\n  const recordCountryOptions = [\n    { text: 'Finland', value: 'FI' },\n    { text: 'United Kingdom', value: 'GB' },\n    { text: 'United States', value: 'US' },\n    { text: 'Afghanistan', value: 'AF' },\n    { text: 'Åland Islands', value: 'AX' },\n    { text: 'Albania', value: 'AL' },\n    { text: 'Algeria', value: 'DZ' },\n    { text: 'American Samoa', value: 'AS' },\n    { text: 'AndorrA', value: 'AD' },\n    { text: 'Angola', value: 'AO' },\n    { text: 'Anguilla', value: 'AI' },\n    { text: 'Antarctica', value: 'AQ' },\n    { text: 'Antigua and Barbuda', value: 'AG' },\n    { text: 'Argentina', value: 'AR' },\n    { text: 'Armenia', value: 'AM' },\n    { text: 'Aruba', value: 'AW' },\n    { text: 'Australia', value: 'AU' },\n    { text: 'Austria', value: 'AT' },\n    { text: 'Azerbaijan', value: 'AZ' },\n    { text: 'Bahamas', value: 'BS' },\n    { text: 'Bahrain', value: 'BH' },\n    { text: 'Bangladesh', value: 'BD' },\n    { text: 'Barbados', value: 'BB' },\n    { text: 'Belarus', value: 'BY' },\n    { text: 'Belgium', value: 'BE' },\n    { text: 'Belize', value: 'BZ' },\n    { text: 'Benin', value: 'BJ' },\n    { text: 'Bermuda', value: 'BM' },\n    { text: 'Bhutan', value: 'BT' },\n    { text: 'Bolivia', value: 'BO' },\n    { text: 'Bosnia and Herzegovina', value: 'BA' },\n    { text: 'Botswana', value: 'BW' },\n    { text: 'Bouvet Island', value: 'BV' },\n    { text: 'Brazil', value: 'BR' },\n    { text: 'British Indian Ocean Territory', value: 'IO' },\n    { text: 'Brunei Darussalam', value: 'BN' },\n    { text: 'Bulgaria', value: 'BG' },\n    { text: 'Burkina Faso', value: 'BF' },\n    { text: 'Burundi', value: 'BI' },\n    { text: 'Cambodia', value: 'KH' },\n    { text: 'Cameroon', value: 'CM' },\n    { text: 'Canada', value: 'CA' },\n    { text: 'Cape Verde', value: 'CV' },\n    { text: 'Cayman Islands', value: 'KY' },\n    { text: 'Central African Republic', value: 'CF' },\n    { text: 'Chad', value: 'TD' },\n    { text: 'Chile', value: 'CL' },\n    { text: 'China', value: 'CN' },\n    { text: 'Christmas Island', value: 'CX' },\n    { text: 'Cocos (Keeling) Islands', value: 'CC' },\n    { text: 'Colombia', value: 'CO' },\n    { text: 'Comoros', value: 'KM' },\n    { text: 'Congo', value: 'CG' },\n    { text: 'Congo, The Democratic Republic of the', value: 'CD' },\n    { text: 'Cook Islands', value: 'CK' },\n    { text: 'Costa Rica', value: 'CR' },\n    { text: \"Cote D'Ivoire\", value: 'CI' },\n    { text: 'Croatia', value: 'HR' },\n    { text: 'Cuba', value: 'CU' },\n    { text: 'Cyprus', value: 'CY' },\n    { text: 'Czech Republic', value: 'CZ' },\n    { text: 'Denmark', value: 'DK' },\n    { text: 'Djibouti', value: 'DJ' },\n    { text: 'Dominica', value: 'DM' },\n    { text: 'Dominican Republic', value: 'DO' },\n    { text: 'Ecuador', value: 'EC' },\n    { text: 'Egypt', value: 'EG' },\n    { text: 'El Salvador', value: 'SV' },\n    { text: 'Equatorial Guinea', value: 'GQ' },\n    { text: 'Eritrea', value: 'ER' },\n    { text: 'Estonia', value: 'EE' },\n    { text: 'Ethiopia', value: 'ET' },\n    { text: 'Falkland Islands (Malvinas)', value: 'FK' },\n    { text: 'Faroe Islands', value: 'FO' },\n    { text: 'Fiji', value: 'FJ' },\n    { text: 'France', value: 'FR' },\n    { text: 'French Guiana', value: 'GF' },\n    { text: 'French Polynesia', value: 'PF' },\n    { text: 'French Southern Territories', value: 'TF' },\n    { text: 'Gabon', value: 'GA' },\n    { text: 'Gambia', value: 'GM' },\n    { text: 'Georgia', value: 'GE' },\n    { text: 'Germany', value: 'DE' },\n    { text: 'Ghana', value: 'GH' },\n    { text: 'Gibraltar', value: 'GI' },\n    { text: 'Greece', value: 'GR' },\n    { text: 'Greenland', value: 'GL' },\n    { text: 'Grenada', value: 'GD' },\n    { text: 'Guadeloupe', value: 'GP' },\n    { text: 'Guam', value: 'GU' },\n    { text: 'Guatemala', value: 'GT' },\n    { text: 'Guernsey', value: 'GG' },\n    { text: 'Guinea', value: 'GN' },\n    { text: 'Guinea-Bissau', value: 'GW' },\n    { text: 'Guyana', value: 'GY' },\n    { text: 'Haiti', value: 'HT' },\n    { text: 'Heard Island and Mcdonald Islands', value: 'HM' },\n    { text: 'Holy See (Vatican City State)', value: 'VA' },\n    { text: 'Honduras', value: 'HN' },\n    { text: 'Hong Kong', value: 'HK' },\n    { text: 'Hungary', value: 'HU' },\n    { text: 'Iceland', value: 'IS' },\n    { text: 'India', value: 'IN' },\n    { text: 'Indonesia', value: 'ID' },\n    { text: 'Iran, Islamic Republic Of', value: 'IR' },\n    { text: 'Iraq', value: 'IQ' },\n    { text: 'Ireland', value: 'IE' },\n    { text: 'Isle of Man', value: 'IM' },\n    { text: 'Israel', value: 'IL' },\n    { text: 'Italy', value: 'IT' },\n    { text: 'Jamaica', value: 'JM' },\n    { text: 'Japan', value: 'JP' },\n    { text: 'Jersey', value: 'JE' },\n    { text: 'Jordan', value: 'JO' },\n    { text: 'Kazakhstan', value: 'KZ' },\n    { text: 'Kenya', value: 'KE' },\n    { text: 'Kiribati', value: 'KI' },\n    { text: \"Korea, Democratic People's Republic of\", value: 'KP' },\n    { text: 'Korea, Republic of', value: 'KR' },\n    { text: 'Kuwait', value: 'KW' },\n    { text: 'Kyrgyzstan', value: 'KG' },\n    { text: \"Lao People's Democratic Republic\", value: 'LA' },\n    { text: 'Latvia', value: 'LV' },\n    { text: 'Lebanon', value: 'LB' },\n    { text: 'Lesotho', value: 'LS' },\n    { text: 'Liberia', value: 'LR' },\n    { text: 'Libyan Arab Jamahiriya', value: 'LY' },\n    { text: 'Liechtenstein', value: 'LI' },\n    { text: 'Lithuania', value: 'LT' },\n    { text: 'Luxembourg', value: 'LU' },\n    { text: 'Macao', value: 'MO' },\n    { text: 'Macedonia, The Former Yugoslav Republic of', value: 'MK' },\n    { text: 'Madagascar', value: 'MG' },\n    { text: 'Malawi', value: 'MW' },\n    { text: 'Malaysia', value: 'MY' },\n    { text: 'Maldives', value: 'MV' },\n    { text: 'Mali', value: 'ML' },\n    { text: 'Malta', value: 'MT' },\n    { text: 'Marshall Islands', value: 'MH' },\n    { text: 'Martinique', value: 'MQ' },\n    { text: 'Mauritania', value: 'MR' },\n    { text: 'Mauritius', value: 'MU' },\n    { text: 'Mayotte', value: 'YT' },\n    { text: 'Mexico', value: 'MX' },\n    { text: 'Micronesia, Federated States of', value: 'FM' },\n    { text: 'Moldova, Republic of', value: 'MD' },\n    { text: 'Monaco', value: 'MC' },\n    { text: 'Mongolia', value: 'MN' },\n    { text: 'Montenegro', value: 'ME' },\n    { text: 'Montserrat', value: 'MS' },\n    { text: 'Morocco', value: 'MA' },\n    { text: 'Mozambique', value: 'MZ' },\n    { text: 'Myanmar', value: 'MM' },\n    { text: 'Namibia', value: 'NA' },\n    { text: 'Nauru', value: 'NR' },\n    { text: 'Nepal', value: 'NP' },\n    { text: 'Netherlands', value: 'NL' },\n    { text: 'Netherlands Antilles', value: 'AN' },\n    { text: 'New Caledonia', value: 'NC' },\n    { text: 'New Zealand', value: 'NZ' },\n    { text: 'Nicaragua', value: 'NI' },\n    { text: 'Niger', value: 'NE' },\n    { text: 'Nigeria', value: 'NG' },\n    { text: 'Niue', value: 'NU' },\n    { text: 'Norfolk Island', value: 'NF' },\n    { text: 'Northern Mariana Islands', value: 'MP' },\n    { text: 'Norway', value: 'NO' },\n    { text: 'Oman', value: 'OM' },\n    { text: 'Pakistan', value: 'PK' },\n    { text: 'Palau', value: 'PW' },\n    { text: 'Palestinian Territory, Occupied', value: 'PS' },\n    { text: 'Panama', value: 'PA' },\n    { text: 'Papua New Guinea', value: 'PG' },\n    { text: 'Paraguay', value: 'PY' },\n    { text: 'Peru', value: 'PE' },\n    { text: 'Philippines', value: 'PH' },\n    { text: 'Poland', value: 'PL' },\n    { text: 'Portugal', value: 'PT' },\n    { text: 'Puerto Rico', value: 'PR' },\n    { text: 'Qatar', value: 'QA' },\n    { text: 'Romania', value: 'RO' },\n    { text: 'Russian Federation', value: 'RU' },\n    { text: 'RWANDA', value: 'RW' },\n    { text: 'Saint Helena', value: 'SH' },\n    { text: 'Saint Kitts and Nevis', value: 'KN' },\n    { text: 'Saint Lucia', value: 'LC' },\n    { text: 'Saint Pierre and Miquelon', value: 'PM' },\n    { text: 'Saint Vincent and the Grenadines', value: 'VC' },\n    { text: 'Samoa', value: 'WS' },\n    { text: 'San Marino', value: 'SM' },\n    { text: 'Sao Tome and Principe', value: 'ST' },\n    { text: 'Saudi Arabia', value: 'SA' },\n    { text: 'Senegal', value: 'SN' },\n    { text: 'Serbia', value: 'RS' },\n    { text: 'Seychelles', value: 'SC' },\n    { text: 'Sierra Leone', value: 'SL' },\n    { text: 'Singapore', value: 'SG' },\n    { text: 'Slovakia', value: 'SK' },\n    { text: 'Slovenia', value: 'SI' },\n    { text: 'Solomon Islands', value: 'SB' },\n    { text: 'Somalia', value: 'SO' },\n    { text: 'South Africa', value: 'ZA' },\n    { text: 'South Georgia and the South Sandwich Islands', value: 'GS' },\n    { text: 'Spain', value: 'ES' },\n    { text: 'Sri Lanka', value: 'LK' },\n    { text: 'Sudan', value: 'SD' },\n    { text: 'Suriname', value: 'SR' },\n    { text: 'Svalbard and Jan Mayen', value: 'SJ' },\n    { text: 'Swaziland', value: 'SZ' },\n    { text: 'Sweden', value: 'SE' },\n    { text: 'Switzerland', value: 'CH' },\n    { text: 'Syrian Arab Republic', value: 'SY' },\n    { text: 'Taiwan, Province of China', value: 'TW' },\n    { text: 'Tajikistan', value: 'TJ' },\n    { text: 'Tanzania, United Republic of', value: 'TZ' },\n    { text: 'Thailand', value: 'TH' },\n    { text: 'Timor-Leste', value: 'TL' },\n    { text: 'Togo', value: 'TG' },\n    { text: 'Tokelau', value: 'TK' },\n    { text: 'Tonga', value: 'TO' },\n    { text: 'Trinidad and Tobago', value: 'TT' },\n    { text: 'Tunisia', value: 'TN' },\n    { text: 'Turkey', value: 'TR' },\n    { text: 'Turkmenistan', value: 'TM' },\n    { text: 'Turks and Caicos Islands', value: 'TC' },\n    { text: 'Tuvalu', value: 'TV' },\n    { text: 'Uganda', value: 'UG' },\n    { text: 'Ukraine', value: 'UA' },\n    { text: 'United Arab Emirates', value: 'AE' },\n    { text: 'United States Minor Outlying Islands', value: 'UM' },\n    { text: 'Uruguay', value: 'UY' },\n    { text: 'Uzbekistan', value: 'UZ' },\n    { text: 'Vanuatu', value: 'VU' },\n    { text: 'Venezuela', value: 'VE' },\n    { text: 'Viet Nam', value: 'VN' },\n    { text: 'Virgin Islands, British', value: 'VG' },\n    { text: 'Virgin Islands, U.S.', value: 'VI' },\n    { text: 'Wallis and Futuna', value: 'WF' },\n    { text: 'Western Sahara', value: 'EH' },\n    { text: 'Yemen', value: 'YE' },\n    { text: 'Zambia', value: 'ZM' },\n    { text: 'Zimbabwe', value: 'ZW' }\n  ];\n  const getRecordCountry = (event, { value }) => {\n    event.preventDefault();\n    setRecordCountry(value);\n  };\n  const submitTrack = () => {\n    console.log('klikd submit track');\n    // artist name validation\n    if (artist === null) {\n      props.setNotification('Artisti on pakollinen tieto', 'fail');\n    }\n    let length = parseInt(min) * 60 + parseInt(sec);\n    const trackToUpdate = {\n      artist_name: artist,\n      album_name: album,\n      artist_id: props.currentTrack.artist_id,\n      album_id: props.currentTrack.album_id,\n      track_id: props.currentTrack.track_id,\n      track_title: track,\n      length,\n      country,\n      record_country: recordCountry,\n      people: `| ${people.replace(/\\n/g, ' | ')} |`,\n      disc_no: discNo,\n      track_no: trackNo,\n      year,\n      isrc,\n      comment\n    };\n    console.log(trackToUpdate);\n    props.updateTrack(trackToUpdate);\n    props.setNotification(\n      `Biisin ${trackToUpdate.track_title} tiedot päivitetty!`,\n      'success'\n    );\n  };\n  if (props.currentTrack === null) {\n    return (\n      <Dimmer>\n        <Loader>Ladataan...</Loader>\n      </Dimmer>\n    );\n  }\n  console.log(people);\n  console.log(year);\n  return (\n    <Grid columns={2}>\n      <Grid.Column>\n        <h2>Biisin tiedot</h2>\n        <Form>\n          <Form.Field required>\n            <label>Artisti</label>\n            <Input\n              disabled\n              value={props.track.currentTrack[0].artist}\n              type=\"text\"\n              placeholder={artist}\n              onChange={e => setArtist(e.target.value)}\n            />\n            <span>\n              <Link\n                style={{\n                  cursor: 'pointer',\n                  fontSize: '0.8rem',\n                  color: 'teal',\n                  marginRight: '1rem'\n                }}\n                to={`../artist/${props.currentTrack.artist_id}`}\n              >\n                Muokkaa artistin tietoja\n              </Link>\n            </span>\n            <span>\n              <ChangeArtistModal currentTrack={props.currentTrack} />\n            </span>\n          </Form.Field>\n          <Form.Field required>\n            <label>Albumi</label>\n            <Input\n              disabled\n              value={props.track.currentTrack[0].album}\n              type=\"text\"\n              placeholder=\"Albumi...\"\n              onChange={e => setAlbum(e.target.value)}\n            />\n            <span>\n              <Link\n                style={{\n                  cursor: 'pointer',\n                  fontSize: '0.8rem',\n                  color: 'teal',\n                  marginRight: '1rem'\n                }}\n                to={`../album/${props.currentTrack.album_id}`}\n              >\n                Muokkaa albumin tietoja\n              </Link>\n            </span>\n            <span>\n              <ChangeAlbumModal currentTrack={props.currentTrack} />\n            </span>\n          </Form.Field>\n          <Form.Field required>\n            <label>Biisi</label>\n            <Input\n              defaultValue={track}\n              type=\"text\"\n              placeholder=\"Biisi...\"\n              onChange={e => setTrack(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Group widths=\"equal\">\n            <Form.Field required>\n              <label>Kesto - minuutit</label>\n              <Input\n                maxLength={4}\n                defaultValue={min}\n                type=\"number\"\n                placeholder=\"Minuuttia...\"\n                onChange={e => setMin(e.target.value)}\n              />\n            </Form.Field>\n            <Form.Field required>\n              <label>Kesto - sekunnit</label>\n              <Input\n                defaultValue={sec}\n                maxLength={2}\n                type=\"number\"\n                placeholder=\"Sekuntia...\"\n                onChange={e => setSec(e.target.value)}\n              />\n            </Form.Field>\n          </Form.Group>\n          <Form.Group widths=\"equal\">\n            <Form.Field required>\n              <label>Levy#</label>\n              <Input\n                maxLength={2}\n                defaultValue={discNo}\n                type=\"number\"\n                placeholder=\"CD1=1, CD2=2, A1=1, A2=2...\"\n                onChange={e => setDiscNo(e.target.value)}\n              />\n            </Form.Field>\n            <Form.Field required>\n              <label>Biisi#</label>\n              <Input\n                defaultValue={trackNo}\n                maxLength={2}\n                type=\"number\"\n                placeholder=\"Biisi #...\"\n                onChange={e => setTrackNo(e.target.value)}\n              />\n            </Form.Field>\n          </Form.Group>\n          <Form.Field>\n            <label>Tekijät - max 5kpl, yksi per rivi, SUKUNIMI ETUNIMI</label>\n            <TextArea\n              value={people}\n              onChange={e => setPeople(e.target.value)}\n              placeholder=\"Tekijät - max 5kpl\"\n            />\n          </Form.Field>\n          <Form.Group widths=\"equal\">\n            <Form.Field required>\n              <label>Säveltäjän kotimaa</label>\n              <Dropdown\n                placeholder=\"Suomi, muu, ei tietoa...\"\n                openOnFocus={false}\n                defaultValue={country}\n                selection\n                options={countryOptions}\n                onChange={getCountry}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Tallennusmaa</label>\n              <Dropdown\n                placeholder=\"Valitse tallennusmaa...\"\n                openOnFocus={false}\n                defaultValue={recordCountry}\n                selection\n                search\n                options={recordCountryOptions}\n                onChange={getRecordCountry}\n              />\n            </Form.Field>\n          </Form.Group>\n          <Form.Field>\n            <label>ISRC</label>\n            <Input\n              defaultValue={isrc}\n              maxLength={12}\n              type=\"text\"\n              placeholder=\"ISRC...\"\n              onChange={e => setIsrc(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field required>\n            <label>Vuosi</label>\n            <Input\n              defaultValue={year}\n              maxLength={4}\n              type=\"number\"\n              placeholder=\"Vuosi...\"\n              onChange={e => setYear(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Lisätietoa</label>\n            <TextArea\n              defaultValue={comment}\n              onChange={e => setComment(e.target.value)}\n              placeholder=\"Lisätietoa...\"\n            />\n          </Form.Field>\n          <Button\n            // disabled={\n            //   !artist ||\n            //   !album ||\n            //   !track ||\n            //   !trackNo ||\n            //   !discNo ||\n            //   !min ||\n            //   !sec ||\n            //   !label ||\n            //   !catId ||\n            //   !year\n            // }\n            color=\"green\"\n            onClick={submitTrack}\n          >\n            Tallenna muutokset\n          </Button>\n        </Form>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    track: state.track\n  };\n};\n\nconst connectedTrackDetailsForm = connect(\n  mapStateToProps,\n  { setNotification, updateTrack }\n)(TrackDetailsForm);\n\nexport default connectedTrackDetailsForm;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Table } from 'semantic-ui-react';\n\nconst PlayHistoryItem = props => {\n  console.log('playhistoryitem props', props);\n  return (\n    <Table.Row>\n      <Table.Cell>{props.pgm.program_date}</Table.Cell>\n      <Table.Cell>\n        <Link to={`/reports/${props.pgm.report_id}`}>\n          {props.pgm.program_name}\n        </Link>\n      </Table.Cell>\n    </Table.Row>\n  );\n};\n\nexport default PlayHistoryItem;\n","import React from 'react';\nimport { Table, Dimmer, Loader } from 'semantic-ui-react';\nimport PlayHistoryItem from './PlayHistoryItem';\n\nconst PlayHistory = props => {\n  console.log('playhistory props', props);\n  if (props.playhistory === null) {\n    return (\n      <Dimmer>\n        <Loader>Ladataan...</Loader>\n      </Dimmer>\n    );\n  }\n  return (\n    <React.Fragment>\n      <h4>Soittohistoria</h4>\n      <Table striped>\n        <Table.Header>\n          <Table.Row>\n            <Table.Cell>Päivämäärä</Table.Cell>\n            <Table.Cell>Ohjelma</Table.Cell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {props.playhistory.map(pgm => (\n            <PlayHistoryItem key={pgm.report_id} pgm={pgm} />\n          ))}\n        </Table.Body>\n      </Table>\n    </React.Fragment>\n  );\n};\n\nexport default PlayHistory;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Dimmer, Loader } from 'semantic-ui-react';\nimport TrackDetailsForm from './TrackDetailsForm';\nimport PlayHistory from './PlayHistory';\nimport Notification from '../layout/Notification';\nimport { getOneTrack, getOneTrackHistory } from '../../actions/trackActions';\n\nconst TrackDetails = props => {\n  console.log('track detail props', props);\n  useEffect(() => {\n    props.getOneTrackHistory(props.id);\n    props.getOneTrack(props.id);\n    // eslint-disable-next-line\n  }, []);\n\n  if (props.track.currentTrack === null || props.track.playhistory === null) {\n    return (\n      <Container>\n        <Dimmer>\n          <Loader>Ladataan...</Loader>\n        </Dimmer>\n      </Container>\n    );\n  }\n\n  return (\n    <Container>\n      <Notification />\n      <TrackDetailsForm currentTrack={props.track.currentTrack[0]} />\n      <PlayHistory playhistory={props.track.playhistory} />\n    </Container>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    track: state.track\n  };\n};\n\nconst connectedTrackDetails = connect(\n  mapStateToProps,\n  { getOneTrack, getOneTrackHistory }\n)(TrackDetails);\nexport default connectedTrackDetails;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Notification from '../layout/Notification';\nimport { Form, Button } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { newLogin } from '../../actions/loginActions';\nimport { setNotification } from '../../reducers/notificationReducer';\n\nconst LoginForm = ({ newLogin }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  // handle login redux\n  const handleLogin = async event => {\n    event.preventDefault();\n    const user = {\n      username,\n      password\n    };\n    console.log(user);\n    newLogin(user);\n  };\n  return (\n    <div>\n      <h1>RADIO HELSINKI - TEOSTORAPORTOINTI</h1>\n      <h3>Kirjaudu sisään</h3>\n      <Notification />\n      <Form onSubmit={handleLogin}>\n        <Form.Field>\n          <label>Käyttäjätunnus</label>\n          <input\n            type=\"text\"\n            placeholder=\"Käyttäjätunnus...\"\n            onChange={e => setUsername(e.target.value)}\n          />\n        </Form.Field>\n        <Form.Field>\n          <label>Salasana</label>\n          <input\n            type=\"password\"\n            placeholder=\"Salasana...\"\n            onChange={e => setPassword(e.target.value)}\n          />\n        </Form.Field>\n        <Button color=\"green\" type=\"submit\">\n          Kirjaudu\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nLoginForm.propTypes = {\n  newLogin: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { newLogin, setNotification }\n)(LoginForm);\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Button,\n  Form,\n  Header,\n  Container,\n  Dimmer,\n  Loader\n} from 'semantic-ui-react';\nimport DatePicker from 'react-datepicker';\nimport { getAllReportsByDate } from '../../actions/reportsListActions';\nimport { generateReportTransfer } from '../../actions/reportTransferActions';\nimport moment from 'moment';\n\nconst ReportTransferOptions = props => {\n  console.log('report transfer options props', props);\n  const [pickerDate, setPickerDate] = useState(new Date());\n  // initial reports list\n  useEffect(() => {\n    props.getAllReportsByDate(moment(pickerDate).format('YYYY-MM'));\n    // eslint-disable-next-line\n  }, [pickerDate]);\n  const getTransferFile = () => {\n    console.log(\n      'transferring file from ',\n      moment(pickerDate).format('YYYY-MM')\n    );\n    const params = {\n      user_id: props.login.id,\n      status: 1,\n      period: moment(pickerDate).format('YYYY-MM'),\n      filename: moment(new Date()).format('YYYYMMDDhhmmss') + '.txt'\n    };\n    console.log(params);\n    props.generateReportTransfer(params);\n  };\n\n  if (props.reportsList.reportsList === null) {\n    return (\n      <Container>\n        <Dimmer active inverted>\n          <Loader size=\"medium\">Ladataan...</Loader>\n        </Dimmer>\n      </Container>\n    );\n  }\n\n  if (props.reportsList.loading === true) {\n    return (\n      <Container>\n        <Dimmer active inverted>\n          <Loader size=\"medium\">Ladataan...</Loader>\n        </Dimmer>\n      </Container>\n    );\n  }\n\n  return (\n    <div>\n      <Header>Hae siirtotiedosto ajalta:</Header>\n      <Form>\n        <Form.Field>\n          <DatePicker\n            selected={pickerDate}\n            dateFormat=\"MMMM yyyy\"\n            onChange={date => setPickerDate(date)}\n            showMonthYearPicker\n          />\n        </Form.Field>\n        <Form.Field>\n          {/* löytyi {props.reportsList.reportsList.length} raporttia */}\n        </Form.Field>\n        <Form.Field>\n          <Button color=\"blue\" onClick={getTransferFile}>\n            HAE\n          </Button>\n        </Form.Field>\n      </Form>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('report transfer options state to props', state);\n  return {\n    reportsList: state.reportsList,\n    notification: state.notification,\n    login: state.login\n  };\n};\n\nconst connectedReportTransferOptions = connect(\n  mapStateToProps,\n  { getAllReportsByDate, generateReportTransfer }\n)(ReportTransferOptions);\n\nexport default connectedReportTransferOptions;\n","import {\n  GET_ALL_REPORT_TRANSFERS,\n  GENERATE_REPORT_TRANSFER,\n  SET_LOADING\n} from './types';\nimport reportService from '../services/reports';\n\n// get a list of reports by date\nexport const getAllTransfers = () => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const reports = await reportService.getAllTransfers();\n    // console.log('reportreducer', report);\n    dispatch({\n      type: GET_ALL_REPORT_TRANSFERS,\n      data: reports\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const generateReportTransfer = params => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const transferredReport = await reportService.generateReportDownload(\n      params\n    );\n    console.log(transferredReport);\n    const reports = await reportService.getAllTransfers();\n    dispatch({\n      type: GET_ALL_REPORT_TRANSFERS,\n      data: reports\n    });\n    dispatch({\n      type: GENERATE_REPORT_TRANSFER,\n      data: transferredReport\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Table } from 'semantic-ui-react';\nimport { downloadReport } from '../../services/reports';\n\nconst ReportTransferListItem = props => {\n  const downloadTransfer = filename => {\n    downloadReport(filename);\n  };\n  return (\n    <Table.Row>\n      <Table.Cell>{props.item.created_at}</Table.Cell>\n      <Table.Cell>\n        {props.item.first_name} {props.item.last_name}\n      </Table.Cell>\n      <Table.Cell>{props.item.period}</Table.Cell>\n      <Table.Cell>\n        <Link to=\"#\" onClick={() => downloadTransfer(props.item.filename)}>\n          {props.item.filename}\n        </Link>\n      </Table.Cell>\n    </Table.Row>\n  );\n};\n\nconst connectedReportTransferListItem = connect(\n  null,\n  { downloadReport }\n)(ReportTransferListItem);\n\nexport default connectedReportTransferListItem;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport ReportTransferOptions from './ReportTransferOptions';\nimport ReportTransferListItem from './ReportTransferListItem';\nimport { Container, Table, Dimmer, Loader } from 'semantic-ui-react';\nimport { getAllTransfers } from '../../actions/reportTransferActions';\n\nconst ReportTransferList = props => {\n  console.log('report transfer list props', props);\n  useEffect(() => {\n    props.getAllTransfers();\n    // eslint-disable-next-line\n  }, [props.reportsList.lastReport]);\n\n  if (props.reportsList.reportTransferList === null) {\n    return (\n      <Container>\n        <Dimmer active inverted>\n          <Loader size=\"medium\">Ladataan...</Loader>\n        </Dimmer>\n      </Container>\n    );\n  }\n\n  return (\n    <Container>\n      <h1>Siirtotiedostot</h1>\n      <ReportTransferOptions />\n      <Table>\n        <Table.Header>\n          <Table.Row>\n            <Table.Cell>Luontipäivämäärä</Table.Cell>\n            <Table.Cell>Käyttäjä</Table.Cell>\n            <Table.Cell>Raportin ajankohta</Table.Cell>\n            <Table.Cell>Siirtotiedosto</Table.Cell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {props.reportsList.reportTransferList.map(item => (\n            <ReportTransferListItem key={item.id} item={item} />\n          ))}\n        </Table.Body>\n      </Table>\n    </Container>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('report list state to props', state);\n  return {\n    report: state.report,\n    reportsList: state.reportsList,\n    notification: state.notification,\n    login: state.login\n  };\n};\n\nconst mapDispatchToProps = {\n  getAllTransfers\n};\n\nconst connectedReportTransferList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ReportTransferList);\n\nexport default connectedReportTransferList;\n","import {\n  AUTOCOMPLETE_RESULTS,\n  SET_SEARCH_LOADING,\n  TOP_100,\n  GET_DISCOGS_CATID,\n  CLEAR_DISCOGS_CATID,\n  ADVANCED_RESULTS,\n  GET_CHANGE_ALBUM_OPTIONS,\n  GET_CHANGE_ARTIST_OPTIONS,\n  RESET_CHANGE_ARTIST_OPTIONS,\n  RESET_CHANGE_ALBUM_OPTIONS\n} from './types';\nimport searchService from '../services/search';\n\nexport const getAutocompleteResults = query => async dispatch => {\n  try {\n    dispatch({\n      type: SET_SEARCH_LOADING\n    });\n    const results = await searchService.getTracksForSearch(query);\n    console.log(results);\n    dispatch({\n      type: AUTOCOMPLETE_RESULTS,\n      data: results\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const advancedSearch = searchParams => async dispatch => {\n  try {\n    dispatch({\n      type: SET_SEARCH_LOADING\n    });\n    const results = await searchService.advancedSearch(searchParams);\n    console.log(results);\n    dispatch({\n      type: ADVANCED_RESULTS,\n      data: results\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getCatIdFromDiscogs = query => async dispatch => {\n  try {\n    let catId;\n    const results = await searchService.getCatIdFromDiscogs(query);\n    console.log(results.results);\n    if (results.results === undefined) {\n      catId = 'EI ILMOITETTU';\n    } else if (results.results[0].catno !== 'none') {\n      catId = results.results[0].catno;\n    } else if (results.results[1].catno !== 'none') {\n      catId = results.results[1].catno;\n    } else if (results.results[2].catno !== 'none') {\n      catId = results.results[2].catno;\n    } else if (results.results[3].catno !== 'none') {\n      catId = results.results[3].catno;\n    } else if (results.results[4].catno !== 'none') {\n      catId = results.results[4].catno;\n    } else {\n      catId = 'EI ILMOITETTU';\n    }\n    console.log(catId);\n    dispatch({\n      type: GET_DISCOGS_CATID,\n      data: catId\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const clearDiscogsCatId = () => async dispatch => {\n  try {\n    dispatch({\n      type: CLEAR_DISCOGS_CATID\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getTop100 = query => async dispatch => {\n  try {\n    dispatch({\n      type: SET_SEARCH_LOADING\n    });\n    const results = await searchService.getTop100(query);\n    dispatch({\n      type: TOP_100,\n      data: results,\n      query\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getChangeAlbumOptions = query => async dispatch => {\n  try {\n    dispatch({\n      type: RESET_CHANGE_ALBUM_OPTIONS\n    });\n    dispatch({\n      type: SET_SEARCH_LOADING\n    });\n    const results = await searchService.changeAlbumOptions(query);\n    dispatch({\n      type: GET_CHANGE_ALBUM_OPTIONS,\n      data: results\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getChangeArtistOptions = query => async dispatch => {\n  try {\n    dispatch({\n      type: RESET_CHANGE_ARTIST_OPTIONS\n    });\n    dispatch({\n      type: SET_SEARCH_LOADING\n    });\n    const results = await searchService.changeArtistOptions(query);\n    dispatch({\n      type: GET_CHANGE_ARTIST_OPTIONS,\n      data: results\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  getCatIdFromDiscogs,\n  clearDiscogsCatId\n} from '../../actions/searchActions';\nimport { setNotification } from '../../reducers/notificationReducer';\nimport { addNewTrack } from '../../actions/trackActions';\nimport {\n  Modal,\n  Header,\n  Form,\n  Button,\n  Input,\n  TextArea,\n  Dropdown\n} from 'semantic-ui-react';\n\nconst AddTrackModal = props => {\n  console.log('add track modal props', props);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [artist, setArtist] = useState('');\n  const [album, setAlbum] = useState('');\n  const [track, setTrack] = useState('');\n  const [min, setMin] = useState('');\n  const [sec, setSec] = useState('');\n  const [country, setCountry] = useState('');\n  const [recordCountry, setRecordCountry] = useState('');\n  const [people, setPeople] = useState('');\n  const [discNo, setDiscNo] = useState('');\n  const [trackNo, setTrackNo] = useState('');\n  const [year, setYear] = useState('');\n  const [label, setLabel] = useState('');\n  const [catId, setCatId] = useState('');\n  const [isrc, setIsrc] = useState('');\n  const [comment, setComment] = useState('');\n  useEffect(() => {\n    if (props.search.discogsCatId === null) {\n      setCatId('');\n    } else {\n      setCatId(props.search.discogsCatId);\n    }\n  }, [props.search.discogsCatId]);\n\n  const submitTrack = () => {\n    console.log('klikd submit track');\n    // artist name validation\n    if (artist === null) {\n      props.setNotification('Artisti on pakollinen tieto', 'fail');\n    }\n    let length = parseInt(min) * 60 + parseInt(sec);\n    const trackToAdd = {\n      artist_name: artist,\n      album_name: album,\n      track_title: track,\n      length,\n      country,\n      record_country: recordCountry,\n      people: `| ${people.replace(/\\n/g, ' | ')} |`,\n      disc_no: discNo,\n      track_no: trackNo,\n      year,\n      label,\n      cat_id: catId,\n      isrc,\n      comment,\n      report_id: props.report.reportDetails.id,\n      user_id: props.login.id,\n      sortable_rank: props.report.report.length + 1\n    };\n    console.log(trackToAdd);\n    props.addNewTrack(trackToAdd);\n    handleClose();\n  };\n\n  const countryOptions = [\n    {\n      key: 1,\n      text: 'Suomi',\n      value: 1\n    },\n    {\n      key: 2,\n      text: 'Muu',\n      value: 2\n    },\n    {\n      key: 0,\n      text: 'Ei tietoa',\n      value: null\n    }\n  ];\n  const getCountry = (event, { value }) => {\n    event.preventDefault();\n    setCountry(value);\n  };\n  const recordCountryOptions = [\n    { text: 'Finland', value: 'FI' },\n    { text: 'United Kingdom', value: 'GB' },\n    { text: 'United States', value: 'US' },\n    { text: 'Afghanistan', value: 'AF' },\n    { text: 'Åland Islands', value: 'AX' },\n    { text: 'Albania', value: 'AL' },\n    { text: 'Algeria', value: 'DZ' },\n    { text: 'American Samoa', value: 'AS' },\n    { text: 'AndorrA', value: 'AD' },\n    { text: 'Angola', value: 'AO' },\n    { text: 'Anguilla', value: 'AI' },\n    { text: 'Antarctica', value: 'AQ' },\n    { text: 'Antigua and Barbuda', value: 'AG' },\n    { text: 'Argentina', value: 'AR' },\n    { text: 'Armenia', value: 'AM' },\n    { text: 'Aruba', value: 'AW' },\n    { text: 'Australia', value: 'AU' },\n    { text: 'Austria', value: 'AT' },\n    { text: 'Azerbaijan', value: 'AZ' },\n    { text: 'Bahamas', value: 'BS' },\n    { text: 'Bahrain', value: 'BH' },\n    { text: 'Bangladesh', value: 'BD' },\n    { text: 'Barbados', value: 'BB' },\n    { text: 'Belarus', value: 'BY' },\n    { text: 'Belgium', value: 'BE' },\n    { text: 'Belize', value: 'BZ' },\n    { text: 'Benin', value: 'BJ' },\n    { text: 'Bermuda', value: 'BM' },\n    { text: 'Bhutan', value: 'BT' },\n    { text: 'Bolivia', value: 'BO' },\n    { text: 'Bosnia and Herzegovina', value: 'BA' },\n    { text: 'Botswana', value: 'BW' },\n    { text: 'Bouvet Island', value: 'BV' },\n    { text: 'Brazil', value: 'BR' },\n    { text: 'British Indian Ocean Territory', value: 'IO' },\n    { text: 'Brunei Darussalam', value: 'BN' },\n    { text: 'Bulgaria', value: 'BG' },\n    { text: 'Burkina Faso', value: 'BF' },\n    { text: 'Burundi', value: 'BI' },\n    { text: 'Cambodia', value: 'KH' },\n    { text: 'Cameroon', value: 'CM' },\n    { text: 'Canada', value: 'CA' },\n    { text: 'Cape Verde', value: 'CV' },\n    { text: 'Cayman Islands', value: 'KY' },\n    { text: 'Central African Republic', value: 'CF' },\n    { text: 'Chad', value: 'TD' },\n    { text: 'Chile', value: 'CL' },\n    { text: 'China', value: 'CN' },\n    { text: 'Christmas Island', value: 'CX' },\n    { text: 'Cocos (Keeling) Islands', value: 'CC' },\n    { text: 'Colombia', value: 'CO' },\n    { text: 'Comoros', value: 'KM' },\n    { text: 'Congo', value: 'CG' },\n    { text: 'Congo, The Democratic Republic of the', value: 'CD' },\n    { text: 'Cook Islands', value: 'CK' },\n    { text: 'Costa Rica', value: 'CR' },\n    { text: \"Cote D'Ivoire\", value: 'CI' },\n    { text: 'Croatia', value: 'HR' },\n    { text: 'Cuba', value: 'CU' },\n    { text: 'Cyprus', value: 'CY' },\n    { text: 'Czech Republic', value: 'CZ' },\n    { text: 'Denmark', value: 'DK' },\n    { text: 'Djibouti', value: 'DJ' },\n    { text: 'Dominica', value: 'DM' },\n    { text: 'Dominican Republic', value: 'DO' },\n    { text: 'Ecuador', value: 'EC' },\n    { text: 'Egypt', value: 'EG' },\n    { text: 'El Salvador', value: 'SV' },\n    { text: 'Equatorial Guinea', value: 'GQ' },\n    { text: 'Eritrea', value: 'ER' },\n    { text: 'Estonia', value: 'EE' },\n    { text: 'Ethiopia', value: 'ET' },\n    { text: 'Falkland Islands (Malvinas)', value: 'FK' },\n    { text: 'Faroe Islands', value: 'FO' },\n    { text: 'Fiji', value: 'FJ' },\n    { text: 'France', value: 'FR' },\n    { text: 'French Guiana', value: 'GF' },\n    { text: 'French Polynesia', value: 'PF' },\n    { text: 'French Southern Territories', value: 'TF' },\n    { text: 'Gabon', value: 'GA' },\n    { text: 'Gambia', value: 'GM' },\n    { text: 'Georgia', value: 'GE' },\n    { text: 'Germany', value: 'DE' },\n    { text: 'Ghana', value: 'GH' },\n    { text: 'Gibraltar', value: 'GI' },\n    { text: 'Greece', value: 'GR' },\n    { text: 'Greenland', value: 'GL' },\n    { text: 'Grenada', value: 'GD' },\n    { text: 'Guadeloupe', value: 'GP' },\n    { text: 'Guam', value: 'GU' },\n    { text: 'Guatemala', value: 'GT' },\n    { text: 'Guernsey', value: 'GG' },\n    { text: 'Guinea', value: 'GN' },\n    { text: 'Guinea-Bissau', value: 'GW' },\n    { text: 'Guyana', value: 'GY' },\n    { text: 'Haiti', value: 'HT' },\n    { text: 'Heard Island and Mcdonald Islands', value: 'HM' },\n    { text: 'Holy See (Vatican City State)', value: 'VA' },\n    { text: 'Honduras', value: 'HN' },\n    { text: 'Hong Kong', value: 'HK' },\n    { text: 'Hungary', value: 'HU' },\n    { text: 'Iceland', value: 'IS' },\n    { text: 'India', value: 'IN' },\n    { text: 'Indonesia', value: 'ID' },\n    { text: 'Iran, Islamic Republic Of', value: 'IR' },\n    { text: 'Iraq', value: 'IQ' },\n    { text: 'Ireland', value: 'IE' },\n    { text: 'Isle of Man', value: 'IM' },\n    { text: 'Israel', value: 'IL' },\n    { text: 'Italy', value: 'IT' },\n    { text: 'Jamaica', value: 'JM' },\n    { text: 'Japan', value: 'JP' },\n    { text: 'Jersey', value: 'JE' },\n    { text: 'Jordan', value: 'JO' },\n    { text: 'Kazakhstan', value: 'KZ' },\n    { text: 'Kenya', value: 'KE' },\n    { text: 'Kiribati', value: 'KI' },\n    { text: \"Korea, Democratic People's Republic of\", value: 'KP' },\n    { text: 'Korea, Republic of', value: 'KR' },\n    { text: 'Kuwait', value: 'KW' },\n    { text: 'Kyrgyzstan', value: 'KG' },\n    { text: \"Lao People's Democratic Republic\", value: 'LA' },\n    { text: 'Latvia', value: 'LV' },\n    { text: 'Lebanon', value: 'LB' },\n    { text: 'Lesotho', value: 'LS' },\n    { text: 'Liberia', value: 'LR' },\n    { text: 'Libyan Arab Jamahiriya', value: 'LY' },\n    { text: 'Liechtenstein', value: 'LI' },\n    { text: 'Lithuania', value: 'LT' },\n    { text: 'Luxembourg', value: 'LU' },\n    { text: 'Macao', value: 'MO' },\n    { text: 'Macedonia, The Former Yugoslav Republic of', value: 'MK' },\n    { text: 'Madagascar', value: 'MG' },\n    { text: 'Malawi', value: 'MW' },\n    { text: 'Malaysia', value: 'MY' },\n    { text: 'Maldives', value: 'MV' },\n    { text: 'Mali', value: 'ML' },\n    { text: 'Malta', value: 'MT' },\n    { text: 'Marshall Islands', value: 'MH' },\n    { text: 'Martinique', value: 'MQ' },\n    { text: 'Mauritania', value: 'MR' },\n    { text: 'Mauritius', value: 'MU' },\n    { text: 'Mayotte', value: 'YT' },\n    { text: 'Mexico', value: 'MX' },\n    { text: 'Micronesia, Federated States of', value: 'FM' },\n    { text: 'Moldova, Republic of', value: 'MD' },\n    { text: 'Monaco', value: 'MC' },\n    { text: 'Mongolia', value: 'MN' },\n    { text: 'Montenegro', value: 'ME' },\n    { text: 'Montserrat', value: 'MS' },\n    { text: 'Morocco', value: 'MA' },\n    { text: 'Mozambique', value: 'MZ' },\n    { text: 'Myanmar', value: 'MM' },\n    { text: 'Namibia', value: 'NA' },\n    { text: 'Nauru', value: 'NR' },\n    { text: 'Nepal', value: 'NP' },\n    { text: 'Netherlands', value: 'NL' },\n    { text: 'Netherlands Antilles', value: 'AN' },\n    { text: 'New Caledonia', value: 'NC' },\n    { text: 'New Zealand', value: 'NZ' },\n    { text: 'Nicaragua', value: 'NI' },\n    { text: 'Niger', value: 'NE' },\n    { text: 'Nigeria', value: 'NG' },\n    { text: 'Niue', value: 'NU' },\n    { text: 'Norfolk Island', value: 'NF' },\n    { text: 'Northern Mariana Islands', value: 'MP' },\n    { text: 'Norway', value: 'NO' },\n    { text: 'Oman', value: 'OM' },\n    { text: 'Pakistan', value: 'PK' },\n    { text: 'Palau', value: 'PW' },\n    { text: 'Palestinian Territory, Occupied', value: 'PS' },\n    { text: 'Panama', value: 'PA' },\n    { text: 'Papua New Guinea', value: 'PG' },\n    { text: 'Paraguay', value: 'PY' },\n    { text: 'Peru', value: 'PE' },\n    { text: 'Philippines', value: 'PH' },\n    { text: 'Poland', value: 'PL' },\n    { text: 'Portugal', value: 'PT' },\n    { text: 'Puerto Rico', value: 'PR' },\n    { text: 'Qatar', value: 'QA' },\n    { text: 'Romania', value: 'RO' },\n    { text: 'Russian Federation', value: 'RU' },\n    { text: 'RWANDA', value: 'RW' },\n    { text: 'Saint Helena', value: 'SH' },\n    { text: 'Saint Kitts and Nevis', value: 'KN' },\n    { text: 'Saint Lucia', value: 'LC' },\n    { text: 'Saint Pierre and Miquelon', value: 'PM' },\n    { text: 'Saint Vincent and the Grenadines', value: 'VC' },\n    { text: 'Samoa', value: 'WS' },\n    { text: 'San Marino', value: 'SM' },\n    { text: 'Sao Tome and Principe', value: 'ST' },\n    { text: 'Saudi Arabia', value: 'SA' },\n    { text: 'Senegal', value: 'SN' },\n    { text: 'Serbia', value: 'RS' },\n    { text: 'Seychelles', value: 'SC' },\n    { text: 'Sierra Leone', value: 'SL' },\n    { text: 'Singapore', value: 'SG' },\n    { text: 'Slovakia', value: 'SK' },\n    { text: 'Slovenia', value: 'SI' },\n    { text: 'Solomon Islands', value: 'SB' },\n    { text: 'Somalia', value: 'SO' },\n    { text: 'South Africa', value: 'ZA' },\n    { text: 'South Georgia and the South Sandwich Islands', value: 'GS' },\n    { text: 'Spain', value: 'ES' },\n    { text: 'Sri Lanka', value: 'LK' },\n    { text: 'Sudan', value: 'SD' },\n    { text: 'Suriname', value: 'SR' },\n    { text: 'Svalbard and Jan Mayen', value: 'SJ' },\n    { text: 'Swaziland', value: 'SZ' },\n    { text: 'Sweden', value: 'SE' },\n    { text: 'Switzerland', value: 'CH' },\n    { text: 'Syrian Arab Republic', value: 'SY' },\n    { text: 'Taiwan, Province of China', value: 'TW' },\n    { text: 'Tajikistan', value: 'TJ' },\n    { text: 'Tanzania, United Republic of', value: 'TZ' },\n    { text: 'Thailand', value: 'TH' },\n    { text: 'Timor-Leste', value: 'TL' },\n    { text: 'Togo', value: 'TG' },\n    { text: 'Tokelau', value: 'TK' },\n    { text: 'Tonga', value: 'TO' },\n    { text: 'Trinidad and Tobago', value: 'TT' },\n    { text: 'Tunisia', value: 'TN' },\n    { text: 'Turkey', value: 'TR' },\n    { text: 'Turkmenistan', value: 'TM' },\n    { text: 'Turks and Caicos Islands', value: 'TC' },\n    { text: 'Tuvalu', value: 'TV' },\n    { text: 'Uganda', value: 'UG' },\n    { text: 'Ukraine', value: 'UA' },\n    { text: 'United Arab Emirates', value: 'AE' },\n    { text: 'United States Minor Outlying Islands', value: 'UM' },\n    { text: 'Uruguay', value: 'UY' },\n    { text: 'Uzbekistan', value: 'UZ' },\n    { text: 'Vanuatu', value: 'VU' },\n    { text: 'Venezuela', value: 'VE' },\n    { text: 'Viet Nam', value: 'VN' },\n    { text: 'Virgin Islands, British', value: 'VG' },\n    { text: 'Virgin Islands, U.S.', value: 'VI' },\n    { text: 'Wallis and Futuna', value: 'WF' },\n    { text: 'Western Sahara', value: 'EH' },\n    { text: 'Yemen', value: 'YE' },\n    { text: 'Zambia', value: 'ZM' },\n    { text: 'Zimbabwe', value: 'ZW' }\n  ];\n  const getRecordCountry = (event, { value }) => {\n    event.preventDefault();\n    setRecordCountry(value);\n  };\n  const handleOpen = () => {\n    setModalOpen(true);\n  };\n  const handleClose = () => {\n    setModalOpen(false);\n  };\n  const getDiscogs = () => {\n    const query = {\n      artist,\n      album\n    };\n    props.getCatIdFromDiscogs(query);\n  };\n  return (\n    <Modal\n      open={modalOpen}\n      closeIcon\n      trigger={\n        <Button color=\"blue\" onClick={handleOpen}>\n          Lisää uusi biisi\n        </Button>\n      }\n      onClose={handleClose}\n    >\n      <Header content=\"Lisää uusi biisi\" />\n      <Modal.Content>\n        <Form onSubmit={submitTrack}>\n          <Form.Field required>\n            <label>Artisti </label>\n            <Input\n              value={artist}\n              type=\"text\"\n              placeholder=\"Artisti...\"\n              onChange={e => setArtist(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field required>\n            <label>Albumi</label>\n            <Input\n              value={album}\n              type=\"text\"\n              placeholder=\"Albumi...\"\n              onChange={e => setAlbum(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field required>\n            <label>Biisi</label>\n            <Input\n              value={track}\n              type=\"text\"\n              placeholder=\"Biisi...\"\n              onChange={e => setTrack(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Group widths=\"equal\">\n            <Form.Field required>\n              <label>Kesto - minuutit</label>\n              <Input\n                maxLength={4}\n                value={min}\n                type=\"number\"\n                placeholder=\"Minuuttia...\"\n                onChange={e => setMin(e.target.value)}\n              />\n            </Form.Field>\n            <Form.Field required>\n              <label>Kesto - sekunnit</label>\n              <Input\n                value={sec}\n                maxLength={2}\n                type=\"number\"\n                placeholder=\"Sekuntia...\"\n                onChange={e => setSec(e.target.value)}\n              />\n            </Form.Field>\n          </Form.Group>\n          <Form.Group widths=\"equal\">\n            <Form.Field required>\n              <label>Levy#</label>\n              <Input\n                maxLength={2}\n                value={discNo}\n                type=\"number\"\n                placeholder=\"CD1=1, CD2=2, A1=1, A2=2...\"\n                onChange={e => setDiscNo(e.target.value)}\n              />\n            </Form.Field>\n            <Form.Field required>\n              <label>Biisi#</label>\n              <Input\n                value={trackNo}\n                maxLength={2}\n                type=\"number\"\n                placeholder=\"Biisi #...\"\n                onChange={e => setTrackNo(e.target.value)}\n              />\n            </Form.Field>\n          </Form.Group>\n          <Form.Field>\n            <label>Tekijät - max 5kpl, yksi per rivi, SUKUNIMI ETUNIMI</label>\n            <TextArea\n              onChange={e => setPeople(e.target.value)}\n              placeholder=\"Tekijät - max 5kpl\"\n            />\n          </Form.Field>\n          <Form.Group widths=\"equal\">\n            <Form.Field>\n              <label>\n                Säveltäjän kotimaa\n                <span style={{ color: 'red' }}>\n                  <strong>*</strong>\n                </span>\n              </label>\n              <Dropdown\n                placeholder=\"Suomi, muu, ei tietoa...\"\n                openOnFocus={false}\n                value={country}\n                selection\n                options={countryOptions}\n                onChange={getCountry}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Tallennusmaa</label>\n              <Dropdown\n                placeholder=\"Valitse tallennusmaa...\"\n                openOnFocus={false}\n                value={recordCountry}\n                selection\n                search\n                options={recordCountryOptions}\n                onChange={getRecordCountry}\n              />\n            </Form.Field>\n          </Form.Group>\n          <Form.Field>\n            <label>\n              Levymerkki\n              <span style={{ color: 'red' }}>\n                <strong>*</strong>\n              </span>\n            </label>\n            <Input\n              value={label}\n              type=\"text\"\n              placeholder=\"Levymerkki...\"\n              onChange={e => setLabel(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field required>\n            <label style={{ display: 'inline' }}>Levykoodi</label>\n            <Button\n              onClick={e => getDiscogs(e.preventDefault())}\n              size=\"mini\"\n              floated=\"right\"\n              style={{ marginBottom: '0.3rem' }}\n            >\n              Hae levykoodi Discogsista\n            </Button>\n            <Input\n              value={catId}\n              type=\"text\"\n              placeholder=\"Levykoodi...\"\n              onChange={e => setCatId(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>ISRC</label>\n            <Input\n              value={isrc}\n              maxLength={12}\n              type=\"text\"\n              placeholder=\"ISRC...\"\n              onChange={e => setIsrc(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>\n              Vuosi\n              <span style={{ color: 'red' }}>\n                <strong>*</strong>\n              </span>\n            </label>\n            <Input\n              value={year}\n              maxLength={4}\n              type=\"number\"\n              placeholder=\"Vuosi...\"\n              onChange={e => setYear(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Lisätietoa</label>\n            <TextArea\n              onChange={e => setComment(e.target.value)}\n              placeholder=\"Lisätietoa...\"\n            />\n          </Form.Field>\n          <Button\n            disabled={\n              !artist ||\n              !album ||\n              !track ||\n              !trackNo ||\n              !discNo ||\n              !min ||\n              !sec ||\n              !label ||\n              !catId ||\n              !year\n            }\n            color=\"green\"\n            type=\"submit\"\n          >\n            Tallenna ja lisää raporttiin\n          </Button>\n        </Form>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    report: state.report,\n    reportsList: state.reportsList,\n    login: state.login,\n    search: state.search\n  };\n};\nconst connectedAddTrackModal = connect(\n  mapStateToProps,\n  { setNotification, addNewTrack, getCatIdFromDiscogs, clearDiscogsCatId }\n)(AddTrackModal);\n\nexport default connectedAddTrackModal;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Input, Button, Dropdown, Grid } from 'semantic-ui-react';\nimport { advancedSearch } from '../../actions/searchActions';\nimport AddTrackModal from '../track/AddTrackModal';\n\nconst SearchForm = props => {\n  const [searchString, setSearchString] = useState('');\n  const [searchTarget, setSearchTarget] = useState('ar');\n  const [sortBy, setSortBy] = useState('track_title');\n\n  const searchTargetOptions = [\n    {\n      key: 1,\n      text: 'Biisi',\n      value: 'tr'\n    },\n    {\n      key: 2,\n      text: 'Artisti',\n      value: 'ar'\n    },\n    {\n      key: 3,\n      text: 'Album',\n      value: 'al'\n    }\n  ];\n  const getSearchTarget = (e, { value }) => {\n    e.preventDefault();\n    setSearchTarget(value);\n  };\n  const sortOptions = [\n    {\n      key: 1,\n      text: 'Biisin nimen mukaan',\n      value: 'track_title'\n    },\n    {\n      key: 2,\n      text: 'Artistin mukaan',\n      value: 'artist_name'\n    },\n    {\n      key: 3,\n      text: 'Luontipäivän mukaan',\n      value: 'created_at'\n    },\n    {\n      key: 4,\n      text: 'Muokkauspäivän mukaan',\n      value: 'updated_at'\n    }\n  ];\n  const getSortOptions = (e, { value }) => {\n    e.preventDefault();\n    setSortBy(value);\n  };\n\n  const handleSearch = () => {\n    const searchParams = {\n      query: searchString,\n      kind: searchTarget\n    };\n    console.log(searchParams);\n    props.advancedSearch(searchParams);\n  };\n  return (\n    <Grid columns={2}>\n      <Grid.Column>\n        <Form>\n          <Form.Field>\n            <label>Hakusana</label>\n            <Input\n              placeholder=\"Hakusana...\"\n              type=\"text\"\n              value={searchString}\n              onChange={e => setSearchString(e.target.value)}\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Biisi / Artisti / Albumi</label>\n            <Dropdown\n              openOnFocus\n              selection\n              defaultValue={searchTarget}\n              options={searchTargetOptions}\n              onChange={getSearchTarget}\n            />{' '}\n          </Form.Field>\n\n          <Form.Field>\n            <label>Järjestä tulokset</label>\n            <Dropdown\n              openOnFocus\n              selection\n              defaultValue={sortBy}\n              options={sortOptions}\n              onChange={getSortOptions}\n            />{' '}\n          </Form.Field>\n          <Button color=\"blue\" onClick={handleSearch}>\n            HAE\n          </Button>\n        </Form>\n      </Grid.Column>\n      <Grid.Column>\n        <span style={{ float: 'right' }}>\n          <AddTrackModal />\n        </span>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nconst connectedSearchForm = connect(\n  null,\n  { advancedSearch }\n)(SearchForm);\n\nexport default connectedSearchForm;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, Header, Form, Button, Dropdown } from 'semantic-ui-react';\nimport { mergeArtistFunction } from '../../actions/artistActions';\nconst MergeArtists = props => {\n  console.log('merge album tracks modal props', props);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [artistToMerge, setArtistToMerge] = useState(null);\n  const handleOpen = () => {\n    setModalOpen(true);\n  };\n  const handleClose = () => {\n    setModalOpen(false);\n  };\n  if (!modalOpen) {\n    return (\n      <button className=\"link-btn\" onClick={handleOpen}>\n        {props.artist_id}\n      </button>\n    );\n  } else {\n    const onSubmit = () => {\n      const mergeInto = props.artist_id;\n      console.log('merging', artistToMerge, 'into', mergeInto);\n      const mergeParams = {\n        type: 'artist',\n        mergeTo: props.artist_id,\n        merge: artistToMerge\n      };\n      props.mergeArtistFunction(mergeParams);\n      console.log(mergeParams);\n    };\n\n    const mergeOptions = Array.from(\n      new Set(props.search.advancedResults.map(r => r.artist_id))\n    ).map(artist_id => {\n      return {\n        key: artist_id,\n        text: `${artist_id}: ${\n          props.search.advancedResults.find(r => r.artist_id === artist_id)\n            .artist_name\n        }`,\n        value: artist_id\n      };\n    });\n    const getArtistToMerge = (e, { value }) => {\n      e.preventDefault();\n      setArtistToMerge(value);\n    };\n    return (\n      <Modal\n        open={modalOpen}\n        closeIcon\n        onClose={handleClose}\n        trigger={\n          <button className=\"link-btn\" onClick={handleOpen}>\n            {props.artist_id}\n          </button>\n        }\n      >\n        <Header>\n          Yhdistä artistiin {props.artist_id} - {props.artist_name} tiedot\n        </Header>\n        <Modal.Content>\n          <Form onSubmit={onSubmit}>\n            <Form.Field>\n              <Dropdown\n                onChange={getArtistToMerge}\n                selection\n                search\n                options={mergeOptions}\n              />\n            </Form.Field>\n            <Form.Field>\n              <Button type=\"submit\">Yhdistä</Button>\n            </Form.Field>\n          </Form>\n        </Modal.Content>\n      </Modal>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  console.log('MergeArtists state', state);\n  return {\n    search: state.search\n  };\n};\n\nconst connectedMergeArtists = connect(\n  mapStateToProps,\n  { mergeArtistFunction }\n)(MergeArtists);\n\nexport default connectedMergeArtists;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, Header, Form, Button, Dropdown } from 'semantic-ui-react';\nimport { mergeAlbumFunction } from '../../actions/albumActions';\nconst MergeAlbums = props => {\n  console.log('merge album tracks modal props', props);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [albumToMerge, setAlbumToMerge] = useState(null);\n  const handleOpen = () => {\n    setModalOpen(true);\n  };\n  const handleClose = () => {\n    setModalOpen(false);\n  };\n  if (!modalOpen) {\n    return (\n      <button className=\"link-btn\" onClick={handleOpen}>\n        {props.album_id}\n      </button>\n    );\n  } else {\n    const onSubmit = () => {\n      const mergeParams = {\n        type: 'album',\n        merge: albumToMerge,\n        mergeTo: props.album_id\n      };\n      console.log(mergeParams);\n      props.mergeAlbumFunction(mergeParams);\n    };\n\n    const mergeOptions = Array.from(\n      new Set(props.search.advancedResults.map(r => r.album_id))\n    ).map(album_id => {\n      return {\n        key: album_id,\n        text: `${album_id}: ${\n          props.search.advancedResults.find(r => r.album_id === album_id)\n            .album_name\n        }`,\n        value: album_id\n      };\n    });\n    const getalbumToMerge = (e, { value }) => {\n      e.preventDefault();\n      setAlbumToMerge(value);\n    };\n    return (\n      <Modal\n        open={modalOpen}\n        closeIcon\n        onClose={handleClose}\n        trigger={\n          <button className=\"link-btn\" onClick={handleOpen}>\n            {props.album_id}\n          </button>\n        }\n      >\n        <Header>\n          Yhdistä albumiin {props.album_id} - {props.album_name} tiedot\n        </Header>\n        <Modal.Content>\n          <Form onSubmit={onSubmit}>\n            <Form.Field>\n              <Dropdown\n                onChange={getalbumToMerge}\n                selection\n                search\n                options={mergeOptions}\n              />\n            </Form.Field>\n            <Form.Field>\n              <Button type=\"submit\">Yhdistä</Button>\n            </Form.Field>\n          </Form>\n        </Modal.Content>\n      </Modal>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  console.log('MergeAlbums state', state);\n  return {\n    search: state.search\n  };\n};\n\nconst connectedMergeAlbums = connect(\n  mapStateToProps,\n  { mergeAlbumFunction }\n)(MergeAlbums);\n\nexport default connectedMergeAlbums;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Modal, Header, Form, Button, Dropdown } from 'semantic-ui-react';\nimport { mergeTrackFunction } from '../../actions/trackActions';\n\nconst MergeTracks = props => {\n  console.log('merge track tracks modal props', props);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [trackToMerge, setTrackToMerge] = useState(null);\n  const handleOpen = () => {\n    setModalOpen(true);\n  };\n  const handleClose = () => {\n    setModalOpen(false);\n  };\n  if (!modalOpen) {\n    return (\n      <button className=\"link-btn\" onClick={handleOpen}>\n        {props.track_id}\n      </button>\n    );\n  } else {\n    const onSubmit = () => {\n      const mergeParams = {\n        type: 'track',\n        merge: trackToMerge,\n        mergeTo: props.track_id\n      };\n      console.log(mergeParams);\n      props.mergeTrackFunction(mergeParams);\n    };\n\n    const mergeOptions = props.search.advancedResults.map(track => ({\n      key: track.track_id,\n      text: `${track.track_id} - ${track.track_title}`,\n      value: track.track_id\n    }));\n    const getTrackToMerge = (e, { value }) => {\n      e.preventDefault();\n      setTrackToMerge(value);\n    };\n    return (\n      <Modal\n        open={modalOpen}\n        closeIcon\n        onClose={handleClose}\n        trigger={\n          <button className=\"link-btn\" onClick={handleOpen}>\n            {props.track_id}\n          </button>\n        }\n      >\n        <Header>\n          Yhdistä biisiin {props.track_id} - {props.track_title} tiedot:\n        </Header>\n        <Modal.Content>\n          <Form onSubmit={onSubmit}>\n            <Form.Field>\n              <Dropdown\n                onChange={getTrackToMerge}\n                selection\n                search\n                options={mergeOptions}\n              />\n            </Form.Field>\n            <Form.Field>\n              <Button type=\"submit\">Yhdistä</Button>\n            </Form.Field>\n          </Form>\n        </Modal.Content>\n      </Modal>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  console.log('MergeTracks state', state);\n  return {\n    search: state.search\n  };\n};\n\nconst connectedMergeTracks = connect(\n  mapStateToProps,\n  { mergeTrackFunction }\n)(MergeTracks);\n\nexport default connectedMergeTracks;\n","import React from 'react';\nimport { Table } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport MergeArtists from './MergeArtists';\nimport MergeAlbums from './MergeAlbums';\nimport MergeTracks from './MergeTracks';\n\nconst SearchResultItem = props => {\n  if (props.result === null) {\n    return null;\n  }\n  return (\n    <Table.Row>\n      <Table.Cell>\n        <Link to={`../artist/${props.result.artist_id}`}>\n          {props.result.artist_name}\n        </Link>\n        <MergeArtists\n          artist_id={props.result.artist_id}\n          artist_name={props.result.artist_name}\n        />\n      </Table.Cell>\n      <Table.Cell>\n        <Link to={`../album/${props.result.album_id}`}>\n          {props.result.album_name}\n        </Link>\n        <MergeAlbums\n          album_id={props.result.album_id}\n          album_name={props.result.album_name}\n        />\n      </Table.Cell>\n      <Table.Cell>\n        <Link to={`../track/${props.result.track_id}`}>\n          {props.result.track_title}\n        </Link>\n        <MergeTracks\n          track_id={props.result.track_id}\n          track_title={props.result.track_title}\n        />\n      </Table.Cell>\n      <Table.Cell>\n        <Link to={`../reports/${props.result.report_id}`}>\n          {props.result.program_date}\n        </Link>\n      </Table.Cell>\n    </Table.Row>\n  );\n};\n\nexport default SearchResultItem;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Table, Loader, Dimmer } from 'semantic-ui-react';\nimport SearchResultItem from './SearchResultItem';\n\nconst SearchResults = props => {\n  console.log('search result props', props);\n  if (props.search.advancedResults === null) {\n    return null;\n  }\n  if (props.search.loading === true) {\n    return (\n      <Dimmer active>\n        <Loader>ladataan...</Loader>\n      </Dimmer>\n    );\n  }\n  return (\n    <Table striped>\n      <Table.Header>\n        <Table.Row>\n          <Table.Cell>Esittäjä</Table.Cell>\n          <Table.Cell>Albumi</Table.Cell>\n          <Table.Cell>Biisi</Table.Cell>\n          <Table.Cell>Soinut viimeksi</Table.Cell>\n          <Table.Cell></Table.Cell>\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>\n        {props.search.advancedResults.map(result => (\n          <SearchResultItem key={result.track_id} result={result} />\n        ))}\n      </Table.Body>\n    </Table>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('search results state', state);\n  return {\n    search: state.search\n  };\n};\n\nconst connectedSearchResults = connect(\n  mapStateToProps,\n  null\n)(SearchResults);\n\nexport default connectedSearchResults;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Container } from 'semantic-ui-react';\nimport SearchForm from './SearchForm';\nimport SearchResults from './SearchResults';\nconst Search = props => {\n  return (\n    <Container>\n      <h1>Haku</h1>\n      <SearchForm />\n      <SearchResults />\n    </Container>\n  );\n};\n\nconst connectedSearch = connect(\n  null,\n  null\n)(Search);\n\nexport default connectedSearch;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { getTop100 } from '../../actions/searchActions';\nimport { Form, Button, Dropdown } from 'semantic-ui-react';\nimport DatePicker from 'react-datepicker';\nimport moment from 'moment';\n\nconst Top100SearchForm = props => {\n  const [startDate, setStartDate] = useState(Date.now() - 7 * 24 * 3600 * 1000);\n  const [endDate, setEndDate] = useState(new Date());\n  const [list, setList] = useState('artist_id');\n  // useEffect(() => {\n  //   const query = {\n  //     list,\n  //     start_date: moment()\n  //       .subtract(7, 'd')\n  //       .format('YYYY-MM-DD'),\n  //     end_date: moment(endDate).format('YYYY-MM-DD')\n  //   };\n  //   console.log(query);\n  //   props.getTop100(query);\n  //   // eslint-disable-next-line\n  // }, []);\n  console.log('start date', startDate);\n\n  const handleSearch = () => {\n    const query = {\n      list,\n      start_date: moment(startDate).format('YYYY-MM-DD'),\n      end_date: moment(endDate).format('YYYY-MM-DD')\n    };\n    console.log('klikd search', query);\n    props.getTop100(query);\n  };\n\n  const listOptions = [\n    {\n      key: 1,\n      value: 'artist_id',\n      text: 'Artistit'\n    },\n    {\n      key: 2,\n      value: 'track_id',\n      text: 'Biisit'\n    },\n    {\n      key: 3,\n      value: 'album_id',\n      text: 'Albumit'\n    }\n  ];\n\n  const getListOptions = (e, { value }) => {\n    e.preventDefault();\n    setList(value);\n  };\n  return (\n    <Form>\n      <Form.Group widths=\"equal\">\n        <Form.Field>\n          <label>Hae</label>\n          <Dropdown\n            openOnFocus\n            selection\n            defaultValue={list}\n            options={listOptions}\n            onChange={getListOptions}\n          />{' '}\n        </Form.Field>\n        <Form.Field>\n          <label>Alkaen</label>\n          <DatePicker\n            selected={startDate}\n            disabledKeyboardNavigation={true}\n            dateFormat=\"yyyy-MM-dd\"\n            onChange={date => setStartDate(date)}\n          />\n        </Form.Field>\n        <Form.Field>\n          <label>Päättyen</label>\n          <DatePicker\n            selected={endDate}\n            disabledKeyboardNavigation={true}\n            dateFormat=\"yyyy-MM-dd\"\n            onChange={date => setEndDate(date)}\n          />\n        </Form.Field>\n        <Form.Field></Form.Field>\n        <Form.Field></Form.Field>\n        <Form.Field></Form.Field>\n      </Form.Group>\n      <Button color=\"blue\" onClick={handleSearch}>\n        Hae\n      </Button>{' '}\n    </Form>\n  );\n};\n\nconst connectedTop100SearchForm = connect(\n  null,\n  { getTop100 }\n)(Top100SearchForm);\n\nexport default connectedTop100SearchForm;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Table, Container } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport Top100SearchForm from './Top100SearchForm';\n\nconst Top100List = props => {\n  if (props.search.top100Query === null) {\n    return (\n      <Container>\n        <h1>Top 100</h1>\n        <Top100SearchForm />\n      </Container>\n    );\n  }\n  if (props.search.loading) {\n    return (\n      <Container>\n        <h1>Top 100</h1>\n        <Top100SearchForm />\n        <div>Loading</div>\n      </Container>\n    );\n  }\n  if (props.search.top100Query.list === 'artist_id')\n    return (\n      <Container>\n        <h1>Top 100</h1>\n        <p>\n          Hae eniten soitettuja biisejä, artisteja tai albumeita tietyllä\n          aikavälillä.\n        </p>\n        <Top100SearchForm />\n        <Table striped>\n          <Table.Header>\n            <Table.Row>\n              <Table.Cell>Artisti</Table.Cell>\n              <Table.Cell>Soittokerrat</Table.Cell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {props.search.top100.map(t => (\n              <Table.Row key={t.track_id}>\n                <Table.Cell>\n                  <Link to={`/artist/${t.artist_id}`}>{t.artist}</Link>\n                </Table.Cell>\n                <Table.Cell>{t.count}</Table.Cell>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </Container>\n    );\n  if (props.search.top100Query.list === 'album_id')\n    return (\n      <Container>\n        <h1>Top 100</h1>\n        <Top100SearchForm />\n        <Table striped>\n          <Table.Header>\n            <Table.Row>\n              <Table.Cell>Artisti</Table.Cell>\n              <Table.Cell>Albumi</Table.Cell>\n              <Table.Cell>Soittokerrat</Table.Cell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {props.search.top100.map(t => (\n              <Table.Row key={t.track_id}>\n                <Table.Cell>\n                  <Link to={`/artist/${t.artist_id}`}>{t.artist}</Link>\n                </Table.Cell>\n                <Table.Cell>\n                  <Link to={`/album/${t.album_id}`}>{t.album}</Link>\n                </Table.Cell>\n                <Table.Cell>{t.count}</Table.Cell>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </Container>\n    );\n  if (props.search.top100Query.list === 'track_id')\n    return (\n      <Container>\n        <h1>Top 100</h1>\n        <Top100SearchForm />\n        <Table striped>\n          <Table.Header>\n            <Table.Row>\n              <Table.Cell>Artisti</Table.Cell>\n              <Table.Cell>Albumi</Table.Cell>\n              <Table.Cell>Biisi</Table.Cell>\n              <Table.Cell>Soittokerrat</Table.Cell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {props.search.top100.map(t => (\n              <Table.Row key={t.track_id}>\n                <Table.Cell>\n                  <Link to={`/artist/${t.artist_id}`}>{t.artist}</Link>\n                </Table.Cell>\n                <Table.Cell>\n                  <Link to={`/album/${t.album_id}`}>{t.album}</Link>\n                </Table.Cell>\n                <Table.Cell>\n                  <Link to={`/track/${t.track_id}`}>{t.track_title}</Link>\n                </Table.Cell>\n                <Table.Cell>{t.count}</Table.Cell>\n              </Table.Row>\n            ))}\n          </Table.Body>\n        </Table>\n      </Container>\n    );\n};\n\nconst mapStateToProps = state => {\n  console.log('top100', state);\n  return {\n    search: state.search\n  };\n};\n\nconst connectedTop100List = connect(\n  mapStateToProps,\n  null\n)(Top100List);\n\nexport default connectedTop100List;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  getOneTrack,\n  removeCurrentTrack,\n  updateTrack\n} from '../../actions/trackActions';\nimport {\n  getCatIdFromDiscogs,\n  clearDiscogsCatId\n} from '../../actions/searchActions';\nimport { setNotification } from '../../reducers/notificationReducer';\nimport {\n  Modal,\n  Header,\n  Form,\n  Button,\n  Input,\n  TextArea,\n  Dropdown,\n  Icon\n} from 'semantic-ui-react';\n\nconst EditTrackModal = props => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [artist, setArtist] = useState(props.track.artist_name);\n  const [album, setAlbum] = useState(props.track.album_name);\n  const [track, setTrack] = useState(props.track.track_title);\n  const [min, setMin] = useState(Math.floor(props.track.length / 60));\n  const [sec, setSec] = useState(props.track.length % 60);\n  const [country, setCountry] = useState(props.track.country);\n  const [recordCountry, setRecordCountry] = useState(\n    props.track.record_country\n  );\n  const [people, setPeople] = useState(props.track.people);\n  const [discNo, setDiscNo] = useState(props.track.disc_no);\n  const [trackNo, setTrackNo] = useState(props.track.track_no);\n  const [year, setYear] = useState(parseInt(props.track.year));\n  const [label, setLabel] = useState(props.track.label);\n  const [catId, setCatId] = useState(props.track.cat_id);\n  console.log(props.track.cat_id);\n  console.log(catId);\n  const [isrc, setIsrc] = useState(props.track.isrc);\n  const [comment, setComment] = useState(props.track.comment);\n  useEffect(() => {\n    if (props.track.year === null) {\n      setYear(null);\n    } else {\n      setYear(parseInt(props.track.year));\n    }\n  }, [props.track.year]);\n\n  useEffect(() => {\n    if (props.track.people === null) {\n      setPeople(null);\n    } else {\n      // let removePipes = props.track.people.substring(\n      //   2,\n      //   props.track.people.length - 2\n      // );\n      // console.log(removePipes);\n      // removePipes = removePipes.replace(/\\|/g, '\\n');\n      // console.log(removePipes);\n      setPeople(\n        props.track.people\n          .replace(/\\| /, '')\n          .replace(/\\| /g, '\\n')\n          .replace(/ \\|/, '')\n      );\n    }\n  }, [props.track.people]);\n\n  // useEffect(() => {\n  //   if (props.report.currentTrack !== null) {\n  //     let minutes = Math.floor(props.report.currentTrack[0].length / 60);\n  //     let seconds = props.report.currentTrack[0].length % 60;\n  //     setArtist(props.report.currentTrack[0].artist);\n  //     setAlbum(props.report.currentTrack[0].album);\n  //     setTrack(props.report.currentTrack[0].track_title);\n  //     setMin(minutes);\n  //     setSec(seconds);\n  //     setCountry(props.report.currentTrack[0].country);\n  //     setRecordCountry(props.report.currentTrack[0].record_country);\n  //     setDiscNo(props.report.currentTrack[0].disc_no);\n  //     setTrackNo(props.report.currentTrack[0].track_no);\n  //     setYear(props.report.currentTrack[0].year);\n  //     setLabel(props.report.currentTrack[0].label);\n  //     setCatId(props.report.currentTrack[0].cat_id);\n  //     setIsrc(props.report.currentTrack[0].isrc);\n  //     setComment(props.report.currentTrack[0].comment);\n  //     setPeople(props.report.currentTrack[0].people);\n  //   }\n  //   // eslint-disable-next-line\n  // }, [props.report.currentTrack]);\n\n  //\n\n  useEffect(() => {\n    if (catId === null) {\n      setCatId(props.search.discogsCatId);\n    }\n    // eslint-disable-next-line\n  }, [props.search.discogsCatId]);\n\n  const handleOpen = () => {\n    // props.getOneTrack(props.id);\n    setModalOpen(true);\n    console.log(modalOpen);\n  };\n\n  const handleClose = () => {\n    // props.removeCurrentTrack();\n    props.clearDiscogsCatId();\n    setModalOpen(false);\n  };\n\n  // if (props.report.currentTrack === null) {\n  //   return (\n  //     <Icon\n  //       style={{ cursor: 'pointer' }}\n  //       color=\"blue\"\n  //       onClick={handleOpen}\n  //       name=\"edit\"\n  //     />\n  //   );\n  // }\n\n  if (props.report.loading || !modalOpen) {\n    return (\n      <Modal\n        open={modalOpen}\n        closeIcon\n        trigger={\n          <Icon\n            style={{ cursor: 'pointer' }}\n            color=\"blue\"\n            onClick={handleOpen}\n            name=\"edit\"\n          />\n        }\n        onClose={handleClose}\n      >\n        <Header content=\"Muokkaa biisin tietoja\" />\n        <Modal.Content>ladataan</Modal.Content>\n      </Modal>\n    );\n  } else {\n    const submitTrack = () => {\n      console.log('klikd submit track');\n      // artist name validation\n      if (artist === null) {\n        props.setNotification('Artisti on pakollinen tieto', 'fail');\n      }\n      let length = parseInt(min) * 60 + parseInt(sec);\n      const trackToEdit = {\n        artist_name: artist,\n        album_name: album,\n        track_title: track,\n        length,\n        country,\n        record_country: recordCountry,\n        people: `| ${people.replace(/\\n/g, ' | ')} |`,\n        disc_no: discNo,\n        track_no: trackNo,\n        year,\n        label,\n        cat_id: catId,\n        isrc,\n        comment,\n        user_id: props.login.id,\n        artist_id: props.track.artist_id,\n        album_id: props.track.album_id,\n        track_id: props.track.track_id,\n        sortable_rank: props.sortable_rank,\n        report_track_id: props.report_track_id\n      };\n      console.log('updating track', trackToEdit);\n      props.updateTrack(trackToEdit);\n      handleClose();\n    };\n\n    const countryOptions = [\n      {\n        key: 1,\n        text: 'Suomi',\n        value: 1\n      },\n      {\n        key: 2,\n        text: 'Muu',\n        value: 2\n      },\n      {\n        key: null,\n        text: 'Ei tietoa',\n        value: null\n      }\n    ];\n    const getCountry = (event, { value }) => {\n      event.preventDefault();\n      setCountry(value);\n    };\n    const recordCountryOptions = [\n      { text: 'Finland', value: 'FI' },\n      { text: 'United Kingdom', value: 'GB' },\n      { text: 'United States', value: 'US' },\n      { text: 'Afghanistan', value: 'AF' },\n      { text: 'Åland Islands', value: 'AX' },\n      { text: 'Albania', value: 'AL' },\n      { text: 'Algeria', value: 'DZ' },\n      { text: 'American Samoa', value: 'AS' },\n      { text: 'AndorrA', value: 'AD' },\n      { text: 'Angola', value: 'AO' },\n      { text: 'Anguilla', value: 'AI' },\n      { text: 'Antarctica', value: 'AQ' },\n      { text: 'Antigua and Barbuda', value: 'AG' },\n      { text: 'Argentina', value: 'AR' },\n      { text: 'Armenia', value: 'AM' },\n      { text: 'Aruba', value: 'AW' },\n      { text: 'Australia', value: 'AU' },\n      { text: 'Austria', value: 'AT' },\n      { text: 'Azerbaijan', value: 'AZ' },\n      { text: 'Bahamas', value: 'BS' },\n      { text: 'Bahrain', value: 'BH' },\n      { text: 'Bangladesh', value: 'BD' },\n      { text: 'Barbados', value: 'BB' },\n      { text: 'Belarus', value: 'BY' },\n      { text: 'Belgium', value: 'BE' },\n      { text: 'Belize', value: 'BZ' },\n      { text: 'Benin', value: 'BJ' },\n      { text: 'Bermuda', value: 'BM' },\n      { text: 'Bhutan', value: 'BT' },\n      { text: 'Bolivia', value: 'BO' },\n      { text: 'Bosnia and Herzegovina', value: 'BA' },\n      { text: 'Botswana', value: 'BW' },\n      { text: 'Bouvet Island', value: 'BV' },\n      { text: 'Brazil', value: 'BR' },\n      { text: 'British Indian Ocean Territory', value: 'IO' },\n      { text: 'Brunei Darussalam', value: 'BN' },\n      { text: 'Bulgaria', value: 'BG' },\n      { text: 'Burkina Faso', value: 'BF' },\n      { text: 'Burundi', value: 'BI' },\n      { text: 'Cambodia', value: 'KH' },\n      { text: 'Cameroon', value: 'CM' },\n      { text: 'Canada', value: 'CA' },\n      { text: 'Cape Verde', value: 'CV' },\n      { text: 'Cayman Islands', value: 'KY' },\n      { text: 'Central African Republic', value: 'CF' },\n      { text: 'Chad', value: 'TD' },\n      { text: 'Chile', value: 'CL' },\n      { text: 'China', value: 'CN' },\n      { text: 'Christmas Island', value: 'CX' },\n      { text: 'Cocos (Keeling) Islands', value: 'CC' },\n      { text: 'Colombia', value: 'CO' },\n      { text: 'Comoros', value: 'KM' },\n      { text: 'Congo', value: 'CG' },\n      { text: 'Congo, The Democratic Republic of the', value: 'CD' },\n      { text: 'Cook Islands', value: 'CK' },\n      { text: 'Costa Rica', value: 'CR' },\n      { text: \"Cote D'Ivoire\", value: 'CI' },\n      { text: 'Croatia', value: 'HR' },\n      { text: 'Cuba', value: 'CU' },\n      { text: 'Cyprus', value: 'CY' },\n      { text: 'Czech Republic', value: 'CZ' },\n      { text: 'Denmark', value: 'DK' },\n      { text: 'Djibouti', value: 'DJ' },\n      { text: 'Dominica', value: 'DM' },\n      { text: 'Dominican Republic', value: 'DO' },\n      { text: 'Ecuador', value: 'EC' },\n      { text: 'Egypt', value: 'EG' },\n      { text: 'El Salvador', value: 'SV' },\n      { text: 'Equatorial Guinea', value: 'GQ' },\n      { text: 'Eritrea', value: 'ER' },\n      { text: 'Estonia', value: 'EE' },\n      { text: 'Ethiopia', value: 'ET' },\n      { text: 'Falkland Islands (Malvinas)', value: 'FK' },\n      { text: 'Faroe Islands', value: 'FO' },\n      { text: 'Fiji', value: 'FJ' },\n      { text: 'France', value: 'FR' },\n      { text: 'French Guiana', value: 'GF' },\n      { text: 'French Polynesia', value: 'PF' },\n      { text: 'French Southern Territories', value: 'TF' },\n      { text: 'Gabon', value: 'GA' },\n      { text: 'Gambia', value: 'GM' },\n      { text: 'Georgia', value: 'GE' },\n      { text: 'Germany', value: 'DE' },\n      { text: 'Ghana', value: 'GH' },\n      { text: 'Gibraltar', value: 'GI' },\n      { text: 'Greece', value: 'GR' },\n      { text: 'Greenland', value: 'GL' },\n      { text: 'Grenada', value: 'GD' },\n      { text: 'Guadeloupe', value: 'GP' },\n      { text: 'Guam', value: 'GU' },\n      { text: 'Guatemala', value: 'GT' },\n      { text: 'Guernsey', value: 'GG' },\n      { text: 'Guinea', value: 'GN' },\n      { text: 'Guinea-Bissau', value: 'GW' },\n      { text: 'Guyana', value: 'GY' },\n      { text: 'Haiti', value: 'HT' },\n      { text: 'Heard Island and Mcdonald Islands', value: 'HM' },\n      { text: 'Holy See (Vatican City State)', value: 'VA' },\n      { text: 'Honduras', value: 'HN' },\n      { text: 'Hong Kong', value: 'HK' },\n      { text: 'Hungary', value: 'HU' },\n      { text: 'Iceland', value: 'IS' },\n      { text: 'India', value: 'IN' },\n      { text: 'Indonesia', value: 'ID' },\n      { text: 'Iran, Islamic Republic Of', value: 'IR' },\n      { text: 'Iraq', value: 'IQ' },\n      { text: 'Ireland', value: 'IE' },\n      { text: 'Isle of Man', value: 'IM' },\n      { text: 'Israel', value: 'IL' },\n      { text: 'Italy', value: 'IT' },\n      { text: 'Jamaica', value: 'JM' },\n      { text: 'Japan', value: 'JP' },\n      { text: 'Jersey', value: 'JE' },\n      { text: 'Jordan', value: 'JO' },\n      { text: 'Kazakhstan', value: 'KZ' },\n      { text: 'Kenya', value: 'KE' },\n      { text: 'Kiribati', value: 'KI' },\n      { text: \"Korea, Democratic People's Republic of\", value: 'KP' },\n      { text: 'Korea, Republic of', value: 'KR' },\n      { text: 'Kuwait', value: 'KW' },\n      { text: 'Kyrgyzstan', value: 'KG' },\n      { text: \"Lao People's Democratic Republic\", value: 'LA' },\n      { text: 'Latvia', value: 'LV' },\n      { text: 'Lebanon', value: 'LB' },\n      { text: 'Lesotho', value: 'LS' },\n      { text: 'Liberia', value: 'LR' },\n      { text: 'Libyan Arab Jamahiriya', value: 'LY' },\n      { text: 'Liechtenstein', value: 'LI' },\n      { text: 'Lithuania', value: 'LT' },\n      { text: 'Luxembourg', value: 'LU' },\n      { text: 'Macao', value: 'MO' },\n      { text: 'Macedonia, The Former Yugoslav Republic of', value: 'MK' },\n      { text: 'Madagascar', value: 'MG' },\n      { text: 'Malawi', value: 'MW' },\n      { text: 'Malaysia', value: 'MY' },\n      { text: 'Maldives', value: 'MV' },\n      { text: 'Mali', value: 'ML' },\n      { text: 'Malta', value: 'MT' },\n      { text: 'Marshall Islands', value: 'MH' },\n      { text: 'Martinique', value: 'MQ' },\n      { text: 'Mauritania', value: 'MR' },\n      { text: 'Mauritius', value: 'MU' },\n      { text: 'Mayotte', value: 'YT' },\n      { text: 'Mexico', value: 'MX' },\n      { text: 'Micronesia, Federated States of', value: 'FM' },\n      { text: 'Moldova, Republic of', value: 'MD' },\n      { text: 'Monaco', value: 'MC' },\n      { text: 'Mongolia', value: 'MN' },\n      { text: 'Montenegro', value: 'ME' },\n      { text: 'Montserrat', value: 'MS' },\n      { text: 'Morocco', value: 'MA' },\n      { text: 'Mozambique', value: 'MZ' },\n      { text: 'Myanmar', value: 'MM' },\n      { text: 'Namibia', value: 'NA' },\n      { text: 'Nauru', value: 'NR' },\n      { text: 'Nepal', value: 'NP' },\n      { text: 'Netherlands', value: 'NL' },\n      { text: 'Netherlands Antilles', value: 'AN' },\n      { text: 'New Caledonia', value: 'NC' },\n      { text: 'New Zealand', value: 'NZ' },\n      { text: 'Nicaragua', value: 'NI' },\n      { text: 'Niger', value: 'NE' },\n      { text: 'Nigeria', value: 'NG' },\n      { text: 'Niue', value: 'NU' },\n      { text: 'Norfolk Island', value: 'NF' },\n      { text: 'Northern Mariana Islands', value: 'MP' },\n      { text: 'Norway', value: 'NO' },\n      { text: 'Oman', value: 'OM' },\n      { text: 'Pakistan', value: 'PK' },\n      { text: 'Palau', value: 'PW' },\n      { text: 'Palestinian Territory, Occupied', value: 'PS' },\n      { text: 'Panama', value: 'PA' },\n      { text: 'Papua New Guinea', value: 'PG' },\n      { text: 'Paraguay', value: 'PY' },\n      { text: 'Peru', value: 'PE' },\n      { text: 'Philippines', value: 'PH' },\n      { text: 'Poland', value: 'PL' },\n      { text: 'Portugal', value: 'PT' },\n      { text: 'Puerto Rico', value: 'PR' },\n      { text: 'Qatar', value: 'QA' },\n      { text: 'Romania', value: 'RO' },\n      { text: 'Russian Federation', value: 'RU' },\n      { text: 'RWANDA', value: 'RW' },\n      { text: 'Saint Helena', value: 'SH' },\n      { text: 'Saint Kitts and Nevis', value: 'KN' },\n      { text: 'Saint Lucia', value: 'LC' },\n      { text: 'Saint Pierre and Miquelon', value: 'PM' },\n      { text: 'Saint Vincent and the Grenadines', value: 'VC' },\n      { text: 'Samoa', value: 'WS' },\n      { text: 'San Marino', value: 'SM' },\n      { text: 'Sao Tome and Principe', value: 'ST' },\n      { text: 'Saudi Arabia', value: 'SA' },\n      { text: 'Senegal', value: 'SN' },\n      { text: 'Serbia', value: 'RS' },\n      { text: 'Seychelles', value: 'SC' },\n      { text: 'Sierra Leone', value: 'SL' },\n      { text: 'Singapore', value: 'SG' },\n      { text: 'Slovakia', value: 'SK' },\n      { text: 'Slovenia', value: 'SI' },\n      { text: 'Solomon Islands', value: 'SB' },\n      { text: 'Somalia', value: 'SO' },\n      { text: 'South Africa', value: 'ZA' },\n      { text: 'South Georgia and the South Sandwich Islands', value: 'GS' },\n      { text: 'Spain', value: 'ES' },\n      { text: 'Sri Lanka', value: 'LK' },\n      { text: 'Sudan', value: 'SD' },\n      { text: 'Suriname', value: 'SR' },\n      { text: 'Svalbard and Jan Mayen', value: 'SJ' },\n      { text: 'Swaziland', value: 'SZ' },\n      { text: 'Sweden', value: 'SE' },\n      { text: 'Switzerland', value: 'CH' },\n      { text: 'Syrian Arab Republic', value: 'SY' },\n      { text: 'Taiwan, Province of China', value: 'TW' },\n      { text: 'Tajikistan', value: 'TJ' },\n      { text: 'Tanzania, United Republic of', value: 'TZ' },\n      { text: 'Thailand', value: 'TH' },\n      { text: 'Timor-Leste', value: 'TL' },\n      { text: 'Togo', value: 'TG' },\n      { text: 'Tokelau', value: 'TK' },\n      { text: 'Tonga', value: 'TO' },\n      { text: 'Trinidad and Tobago', value: 'TT' },\n      { text: 'Tunisia', value: 'TN' },\n      { text: 'Turkey', value: 'TR' },\n      { text: 'Turkmenistan', value: 'TM' },\n      { text: 'Turks and Caicos Islands', value: 'TC' },\n      { text: 'Tuvalu', value: 'TV' },\n      { text: 'Uganda', value: 'UG' },\n      { text: 'Ukraine', value: 'UA' },\n      { text: 'United Arab Emirates', value: 'AE' },\n      { text: 'United States Minor Outlying Islands', value: 'UM' },\n      { text: 'Uruguay', value: 'UY' },\n      { text: 'Uzbekistan', value: 'UZ' },\n      { text: 'Vanuatu', value: 'VU' },\n      { text: 'Venezuela', value: 'VE' },\n      { text: 'Viet Nam', value: 'VN' },\n      { text: 'Virgin Islands, British', value: 'VG' },\n      { text: 'Virgin Islands, U.S.', value: 'VI' },\n      { text: 'Wallis and Futuna', value: 'WF' },\n      { text: 'Western Sahara', value: 'EH' },\n      { text: 'Yemen', value: 'YE' },\n      { text: 'Zambia', value: 'ZM' },\n      { text: 'Zimbabwe', value: 'ZW' }\n    ];\n    const getRecordCountry = (event, { value }) => {\n      event.preventDefault();\n      setRecordCountry(value);\n    };\n\n    const getDiscogs = async () => {\n      const query = {\n        artist,\n        album\n      };\n      await props.getCatIdFromDiscogs(query);\n      setCatId(props.search.discogsCatId);\n    };\n\n    // let minutes = Math.floor(props.report.currentTrack[0].length / 60);\n    // let seconds = props.report.currentTrack[0].length % 60;\n\n    return (\n      <Modal\n        open={modalOpen}\n        closeIcon\n        trigger={\n          <Icon\n            style={{ cursor: 'pointer' }}\n            color=\"blue\"\n            onClick={handleOpen}\n            name=\"edit\"\n          />\n        }\n        onClose={handleClose}\n      >\n        <Header content=\"Muokkaa biisin tietoja\" />\n        <Modal.Content>\n          <Form onSubmit={submitTrack}>\n            <Form.Field required>\n              <label>Artisti</label>\n              <Input\n                defaultValue={artist}\n                // value={artist}\n                type=\"text\"\n                placeholder={artist}\n                onChange={e => setArtist(e.target.value)}\n              />\n            </Form.Field>\n            <Form.Field required>\n              <label>Albumi</label>\n              <Input\n                defaultValue={album}\n                type=\"text\"\n                placeholder=\"Albumi...\"\n                onChange={e => setAlbum(e.target.value)}\n              />\n            </Form.Field>\n            <Form.Field required>\n              <label>Biisi</label>\n              <Input\n                defaultValue={track}\n                type=\"text\"\n                placeholder=\"Biisi...\"\n                onChange={e => setTrack(e.target.value)}\n              />\n            </Form.Field>\n            <Form.Group widths=\"equal\">\n              <Form.Field required>\n                <label>Kesto - minuutit</label>\n                <Input\n                  maxLength={4}\n                  defaultValue={min}\n                  type=\"number\"\n                  placeholder=\"Minuuttia...\"\n                  onChange={e => setMin(e.target.value)}\n                />\n              </Form.Field>\n              <Form.Field required>\n                <label>Kesto - sekunnit</label>\n                <Input\n                  defaultValue={sec}\n                  maxLength={2}\n                  type=\"number\"\n                  placeholder=\"Sekuntia...\"\n                  onChange={e => setSec(e.target.value)}\n                />\n              </Form.Field>\n            </Form.Group>\n            <Form.Group widths=\"equal\">\n              <Form.Field required>\n                <label>Levy#</label>\n                <Input\n                  maxLength={2}\n                  defaultValue={discNo}\n                  type=\"number\"\n                  placeholder=\"CD1=1, CD2=2, A1=1, A2=2...\"\n                  onChange={e => setDiscNo(e.target.value)}\n                />\n              </Form.Field>\n              <Form.Field required>\n                <label>Biisi#</label>\n                <Input\n                  defaultValue={trackNo}\n                  maxLength={2}\n                  type=\"number\"\n                  placeholder=\"Biisi #...\"\n                  onChange={e => setTrackNo(e.target.value)}\n                />\n              </Form.Field>\n            </Form.Group>\n            <Form.Field>\n              <label>Tekijät - max 5kpl, yksi per rivi, SUKUNIMI ETUNIMI</label>\n              <TextArea\n                defaultValue={people}\n                onChange={e => setPeople(e.target.value)}\n                placeholder=\"Tekijät - max 5kpl\"\n              />\n            </Form.Field>\n            <Form.Group widths=\"equal\">\n              <Form.Field required>\n                <label>Säveltäjän kotimaa</label>\n                <Dropdown\n                  placeholder=\"Suomi, muu, ei tietoa...\"\n                  openOnFocus={false}\n                  defaultValue={country}\n                  selection\n                  options={countryOptions}\n                  onChange={getCountry}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Tallennusmaa</label>\n                <Dropdown\n                  placeholder=\"Valitse tallennusmaa...\"\n                  openOnFocus={false}\n                  defaultValue={recordCountry}\n                  selection\n                  search\n                  options={recordCountryOptions}\n                  onChange={getRecordCountry}\n                />\n              </Form.Field>\n            </Form.Group>\n            <Form.Field required>\n              <label>Levymerkki</label>\n              <Input\n                defaultValue={label}\n                type=\"text\"\n                placeholder=\"Levymerkki...\"\n                onChange={e => setLabel(e.target.value)}\n              />\n            </Form.Field>\n            <Form.Field required>\n              <label style={{ display: 'inline' }}>Levykoodi</label>\n              <Button\n                onClick={e => getDiscogs(e.preventDefault())}\n                size=\"mini\"\n                floated=\"right\"\n                style={{ marginBottom: '0.3rem' }}\n              >\n                Hae levykoodi Discogsista\n              </Button>\n              <Input\n                defaultValue={catId}\n                type=\"text\"\n                placeholder=\"Levykoodi...\"\n                onChange={e => setCatId(e.target.value)}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>ISRC</label>\n              <Input\n                defaultValue={isrc}\n                maxLength={12}\n                type=\"text\"\n                placeholder=\"ISRC...\"\n                onChange={e => setIsrc(e.target.value)}\n              />\n            </Form.Field>\n            <Form.Field required>\n              <label>Vuosi</label>\n              <Input\n                defaultValue={year}\n                maxLength={4}\n                type=\"number\"\n                placeholder=\"Vuosi...\"\n                onChange={e => setYear(e.target.value)}\n              />\n            </Form.Field>\n            <Form.Field>\n              <label>Lisätietoa</label>\n              <TextArea\n                defaultValue={comment}\n                onChange={e => setComment(e.target.value)}\n                placeholder=\"Lisätietoa...\"\n              />\n            </Form.Field>\n            <Button\n              // disabled={\n              //   !artist ||\n              //   !album ||\n              //   !track ||\n              //   !trackNo ||\n              //   !discNo ||\n              //   !min ||\n              //   !sec ||\n              //   !label ||\n              //   !catId ||\n              //   !year\n              // }\n              color=\"green\"\n              type=\"submit\"\n            >\n              Tallenna tiedot\n            </Button>\n          </Form>\n        </Modal.Content>\n      </Modal>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    report: state.report,\n    reportsList: state.reportsList,\n    login: state.login,\n    search: state.search\n  };\n};\nconst connectedEditTrackModal = connect(\n  mapStateToProps,\n  {\n    setNotification,\n    getOneTrack,\n    removeCurrentTrack,\n    updateTrack,\n    getCatIdFromDiscogs,\n    clearDiscogsCatId\n  }\n)(EditTrackModal);\n\nexport default connectedEditTrackModal;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Table, Icon, Checkbox } from 'semantic-ui-react';\nimport EditTrackModal from '../track/EditTrackModal';\nimport {\n  deleteTrackFromReport,\n  checkForDelete,\n  unCheckForDelete\n} from '../../actions/reportActions';\n\nconst ReportWithTracksItem = props => {\n  console.log('track to modal', props.track);\n  const [checked, setChecked] = useState(false);\n  // console.log('report with tracks item props', props);\n  const onDelete = () => {\n    const remainingTracks = props.report.report.filter(\n      t => t.report_track_id !== props.track.report_track_id\n    );\n    const params = {\n      report_track_id: props.track.report_track_id,\n      report_id: props.report.reportDetails.id,\n      remainingTracks\n    };\n    console.log(params);\n    props.deleteTrackFromReport(params);\n    console.log('klikd delete');\n  };\n  const onEdit = () => {\n    console.log('klikd edit');\n  };\n\n  const checkedClick = () => {\n    setChecked(!checked);\n    if (checked === true) {\n      console.log('removing id from delete array', props.track.report_track_id);\n      props.unCheckForDelete(props.track.report_track_id);\n    } else {\n      console.log('checked for delete id', props.track.report_track_id);\n      props.checkForDelete(props.track.report_track_id);\n    }\n  };\n  let minutes = Math.floor(props.track.length / 60);\n  minutes = minutes.toString();\n  let seconds = props.track.length - minutes * 60;\n  if (seconds.toString().length === 1) {\n    seconds = '0' + seconds.toString();\n  }\n  seconds = seconds.toString();\n\n  return (\n    <Table.Row>\n      <Table.Cell>\n        <Checkbox onChange={checkedClick} checked={checked} />\n        <Icon\n          style={{ marginLeft: '1.5rem', cursor: 'pointer' }}\n          onClick={onEdit}\n          name=\"arrows alternate\"\n        />\n      </Table.Cell>\n      <Table.Cell>{props.track.sortable_rank}</Table.Cell>\n      <Table.Cell>{props.track.artist_name}</Table.Cell>\n      <Table.Cell>{props.track.track_title}</Table.Cell>\n      <Table.Cell>\n        {minutes}:{seconds}\n      </Table.Cell>\n      <Table.Cell>\n        <Icon\n          style={{ cursor: 'pointer' }}\n          color=\"red\"\n          onClick={onDelete}\n          name=\"delete\"\n        />\n      </Table.Cell>\n      <Table.Cell>\n        {/* <Icon\n          style={{ cursor: 'pointer' }}\n          color=\"blue\"\n          onClick={onEdit}\n          name=\"edit\"\n        /> */}\n        <EditTrackModal\n          id={props.track.track_id}\n          sortable_rank={props.track.sortable_rank}\n          report_track_id={props.track.report_track_id}\n          track={props.track}\n        />\n      </Table.Cell>\n    </Table.Row>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    report: state.report,\n    reportsList: state.reportsList,\n    notification: state.notification\n  };\n};\n\nconst connectedReportWithTracksItem = connect(\n  mapStateToProps,\n  { deleteTrackFromReport, checkForDelete, unCheckForDelete }\n)(ReportWithTracksItem);\n\nexport default connectedReportWithTracksItem;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Search, Button, Grid, Header } from 'semantic-ui-react';\nimport { getAutocompleteResults } from '../../actions/searchActions';\nimport { addTrackToReport } from '../../actions/reportActions';\nimport { setNotification } from '../../reducers/notificationReducer';\nimport AddTrackModal from './AddTrackModal';\nimport { useSearchTracksHook } from '../../hooks/searchTracksHook';\n\nconst SearchTrack = ({ report, addTrackToReport, setNotification }) => {\n  const [trackToSave, setTrackToSave] = useState(null);\n  const { setInputText, search } = useSearchTracksHook();\n\n  const handleResultSelect = (e, { result }) => {\n    const trackToSave = {\n      track_id: result.value,\n      report_id: report.reportDetails.id,\n      length: result.length,\n      sortable_rank: report.report.length + 1\n    };\n    console.log('handling result select', trackToSave);\n    setTrackToSave(trackToSave);\n  };\n\n  const saveClick = () => {\n    if (!trackToSave) {\n      setNotification('Valitse biisi!', 'fail');\n    } else {\n      console.log('klikd save', trackToSave);\n      addTrackToReport(trackToSave);\n      setTrackToSave(null);\n    }\n  };\n\n  // const onSearchChange = (e, { value }) => {\n  //   setInputText(value);\n  // };\n  let results;\n  if (search.result === undefined) {\n    results = [];\n  } else {\n    results = search.result.map(result => ({\n      key: result.track_id,\n      title: result.track_title,\n      description: `${result.artist}:\n                    ${result.album}`,\n      length: result.length,\n      value: result.track_id\n    }));\n  }\n\n  return (\n    <div style={{ marginLeft: '1rem', marginBottom: '1rem' }}>\n      <Grid divided=\"vertically\">\n        <Grid.Row columns=\"2\">\n          <Form>\n            <Header>Hae</Header>\n            <Form.Group widths=\"equal\">\n              <Form.Field>\n                <Search\n                  loading={search.loading}\n                  onResultSelect={handleResultSelect}\n                  onSearchChange={e => setInputText(e.target.value)}\n                  onSelectionChange={handleResultSelect}\n                  results={results}\n                  style={{ cursor: 'pointer' }}\n                />\n              </Form.Field>\n              <Form.Field>\n                <Button color=\"green\" onClick={saveClick}>\n                  Lisää biisi raporttiin\n                </Button>\n              </Form.Field>\n            </Form.Group>\n            <Form.Group widths=\"equal\">\n              <Form.Field>\n                {' '}\n                <Button color=\"blue\">Tarkennettu haku</Button>\n              </Form.Field>\n              <Form.Field>\n                {' '}\n                <AddTrackModal />\n              </Form.Field>\n            </Form.Group>\n          </Form>\n        </Grid.Row>\n      </Grid>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('search track state to props', state);\n  return {\n    search: state.search,\n    report: state.report\n  };\n};\nconst connectedSearchTrack = connect(\n  mapStateToProps,\n  { getAutocompleteResults, addTrackToReport, setNotification }\n)(SearchTrack);\n\nexport default connectedSearchTrack;\n","import { useState } from 'react';\nimport AwesomeDebouncePromise from 'awesome-debounce-promise';\nimport useConstant from 'use-constant';\nimport { useAsync } from 'react-async-hook';\nimport searchService from '../services/search';\n\nexport const useSearchTracksHook = () => {\n  const [inputText, setInputText] = useState('');\n\n  // Debounce the original search async function\n  const debouncedSearchTrack = useConstant(() =>\n    AwesomeDebouncePromise(searchService.getTracksForSearch, 400)\n  );\n  const search = useAsync(\n    async () => {\n      if (inputText.length === 0) {\n        return [];\n      } else {\n        return debouncedSearchTrack(inputText);\n      }\n    },\n    // Ensure a new request is made everytime the text changes (even if it's debounced)\n    [inputText]\n  );\n  return {\n    inputText,\n    setInputText,\n    search\n  };\n};\n","import React, { useState } from 'react';\nimport { getDjonlineTracks } from '../../actions/trackActions';\nimport { connect } from 'react-redux';\nimport { Form, Button, Dropdown, Grid, Header } from 'semantic-ui-react';\nimport DatePicker from 'react-datepicker';\nimport moment from 'moment';\n\nconst GetDjOnlineTracks = props => {\n  const [date, setDate] = useState(new Date());\n  const [studioId, setStudioId] = useState('928');\n  const [startTime, setStartTime] = useState('');\n  const [endTime, setEndTime] = useState('');\n\n  console.log(endTime);\n  const getStudioId = (e, { value }) => {\n    e.preventDefault();\n    setStudioId(value);\n  };\n\n  const studioOptions = [\n    {\n      key: '928',\n      text: 'Studio 1',\n      value: '928'\n    },\n    {\n      key: '1047',\n      text: 'Studio 2',\n      value: '1047'\n    }\n  ];\n\n  // list of program start time options\n  const startTimeOptions = [\n    {\n      key: '00:00',\n      text: '00:00',\n      value: '00'\n    },\n    {\n      key: '01:00',\n      text: '01:00',\n      value: '01'\n    },\n    {\n      key: '02:00',\n      text: '02:00',\n      value: '02'\n    },\n    {\n      key: '03:00',\n      text: '03:00',\n      value: '03'\n    },\n    {\n      key: '04:00',\n      text: '04:00',\n      value: '04'\n    },\n    {\n      key: '05:00',\n      text: '05:00',\n      value: '05'\n    },\n    {\n      key: '06:00',\n      text: '06:00',\n      value: '06'\n    },\n    {\n      key: '07:00',\n      text: '07:00',\n      value: '07'\n    },\n    {\n      key: '08:00',\n      text: '08:00',\n      value: '08'\n    },\n    {\n      key: '09:00',\n      text: '09:00',\n      value: '09'\n    },\n    {\n      key: '10:00',\n      text: '10:00',\n      value: '10'\n    },\n    {\n      key: '11:00',\n      text: '11:00',\n      value: '11'\n    },\n    {\n      key: '12:00',\n      text: '12:00',\n      value: '12'\n    },\n    {\n      key: '13:00',\n      text: '13:00',\n      value: '13'\n    },\n    {\n      key: '14:00',\n      text: '14:00',\n      value: '14'\n    },\n    {\n      key: '15:00',\n      text: '15:00',\n      value: '15'\n    },\n    {\n      key: '16:00',\n      text: '16:00',\n      value: '16'\n    },\n    {\n      key: '17:00',\n      text: '17:00',\n      value: '17'\n    },\n    {\n      key: '18:00',\n      text: '18:00',\n      value: '18'\n    },\n    {\n      key: '19:00',\n      text: '19:00',\n      value: '19'\n    },\n    {\n      key: '20:00',\n      text: '20:00',\n      value: '20'\n    },\n    {\n      key: '21:00',\n      text: '21:00',\n      value: '21'\n    },\n    {\n      key: '22:00',\n      text: '22:00',\n      value: '22'\n    },\n    {\n      key: '23:00',\n      text: '23:00',\n      value: '23'\n    }\n  ];\n  const getStartTime = (event, { value }) => {\n    event.preventDefault();\n    setStartTime(value);\n  };\n\n  // list of program end time options\n  const endTimeOptions = [\n    {\n      key: '01:00',\n      text: '01:00',\n      value: '01'\n    },\n    {\n      key: '02:00',\n      text: '02:00',\n      value: '02'\n    },\n    {\n      key: '03:00',\n      text: '03:00',\n      value: '03'\n    },\n    {\n      key: '04:00',\n      text: '04:00',\n      value: '04'\n    },\n    {\n      key: '05:00',\n      text: '05:00',\n      value: '05'\n    },\n    {\n      key: '06:00',\n      text: '06:00',\n      value: '06'\n    },\n    {\n      key: '07:00',\n      text: '07:00',\n      value: '07'\n    },\n    {\n      key: '08:00',\n      text: '08:00',\n      value: '08'\n    },\n    {\n      key: '09:00',\n      text: '09:00',\n      value: '09'\n    },\n    {\n      key: '10:00',\n      text: '10:00',\n      value: '10'\n    },\n    {\n      key: '11:00',\n      text: '11:00',\n      value: '11'\n    },\n    {\n      key: '12:00',\n      text: '12:00',\n      value: '12'\n    },\n    {\n      key: '13:00',\n      text: '13:00',\n      value: '13'\n    },\n    {\n      key: '14:00',\n      text: '14:00',\n      value: '14'\n    },\n    {\n      key: '15:00',\n      text: '15:00',\n      value: '15'\n    },\n    {\n      key: '16:00',\n      text: '16:00',\n      value: '16'\n    },\n    {\n      key: '17:00',\n      text: '17:00',\n      value: '17'\n    },\n    {\n      key: '18:00',\n      text: '18:00',\n      value: '18'\n    },\n    {\n      key: '19:00',\n      text: '19:00',\n      value: '19'\n    },\n    {\n      key: '20:00',\n      text: '20:00',\n      value: '20'\n    },\n    {\n      key: '21:00',\n      text: '21:00',\n      value: '21'\n    },\n    {\n      key: '22:00',\n      text: '22:00',\n      value: '22'\n    },\n    {\n      key: '23:00',\n      text: '23:00',\n      value: '23'\n    },\n    {\n      key: '24:00',\n      text: '24:00',\n      value: '24'\n    }\n  ];\n  const getEndTime = (event, { value }) => {\n    event.preventDefault();\n    setEndTime(value);\n  };\n\n  const GetTracksFromApi = () => {\n    const searchParams = {\n      studioId,\n      date: moment(date).format('YYYY-MM-DD'),\n      startTime,\n      endTime,\n      report_id: props.report.reportDetails.id,\n      sortable_rank_start: props.report.report.length\n    };\n    props.getDjonlineTracks(searchParams);\n  };\n\n  return (\n    <div style={{ marginLeft: '1rem', marginBottom: '1rem' }}>\n      <Grid divided=\"vertically\">\n        <Grid.Row columns={2}>\n          <Form>\n            <Header>Hae biisit DJOnlinesta</Header>\n            <Form.Group widths=\"equal\">\n              <Form.Field>\n                <label>Valitse päivä</label>\n                <DatePicker\n                  selected={date}\n                  dateFormat=\"yyyy-MM-dd\"\n                  onChange={date => setDate(date)}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Valitse studio</label>\n                <Dropdown\n                  placeholder=\"Studio 1\"\n                  openOnFocus\n                  selection\n                  options={studioOptions}\n                  onChange={getStudioId}\n                />{' '}\n              </Form.Field>\n            </Form.Group>\n            <Form.Group widths=\"equal\">\n              <Form.Field>\n                <label>Alkaen kello</label>\n                <Dropdown\n                  placeholder=\"Alkaen HH:MM\"\n                  openOnFocus\n                  selection\n                  search\n                  options={startTimeOptions}\n                  onChange={getStartTime}\n                />{' '}\n              </Form.Field>\n              <Form.Field>\n                <label>Päättyen kello</label>\n                <Dropdown\n                  placeholder=\"Päättyen HH:MM\"\n                  openOnFocus\n                  selection\n                  search\n                  options={endTimeOptions}\n                  onChange={getEndTime}\n                />{' '}\n              </Form.Field>\n            </Form.Group>\n            <Button color=\"green\" onClick={GetTracksFromApi}>\n              Hae\n            </Button>\n          </Form>\n        </Grid.Row>\n      </Grid>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('getdjonlinetracks state to props', state);\n  return {\n    report: state.report,\n    reportsList: state.reportsList,\n    programs: state.programs,\n    notification: state.notification,\n    users: state.users,\n    login: state.login\n  };\n};\n\nconst connectedGetDjOnlineTracks = connect(\n  mapStateToProps,\n  { getDjonlineTracks }\n)(GetDjOnlineTracks);\n\nexport default connectedGetDjOnlineTracks;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Header,\n  Form,\n  Button,\n  Dropdown,\n  Segment,\n  Grid,\n  Dimmer,\n  Loader\n} from 'semantic-ui-react';\nimport DatePicker from 'react-datepicker';\nimport moment from 'moment';\nimport SearchTrack from '../track/SearchTrack';\nimport GetDjOnlineTracks from '../track/GetDjOnlineTracks';\nimport Togglable from '../layout/Togglable';\nimport { updateReport } from '../../actions/reportActions';\nimport { copyReport } from '../../actions/reportActions';\nimport { setNotification } from '../../reducers/notificationReducer';\n\nconst ReportDetails = props => {\n  const [programId, setProgramId] = useState('');\n  const [programNumber, setProgramNumber] = useState('');\n  const [dj, setDj] = useState('');\n  const [programDate, setProgramDate] = useState('');\n  const [programStartTime, setProgramStartTime] = useState('');\n  const [programEndTime, setProgramEndTime] = useState('');\n  const [status, setStatus] = useState('');\n  const [userId, setUserId] = useState('');\n  const [rerun, setRerun] = useState(null);\n\n  console.log('report detauls props', props);\n  useEffect(() => {\n    if (props.report.reportDetails !== null) {\n      setUserId(props.report.reportDetails.user_id);\n      setProgramId(props.report.reportDetails.program_id);\n      setDj(props.report.reportDetails.program_dj);\n      setProgramNumber(props.report.reportDetails.program_no);\n      setProgramDate(new Date(props.report.reportDetails.program_date));\n      setProgramStartTime(props.report.reportDetails.program_start_time);\n      setProgramEndTime(props.report.reportDetails.program_end_time);\n      setStatus(props.report.reportDetails.status);\n      setRerun(props.report.reportDetails.rerun);\n    }\n  }, [props.report.reportDetails]);\n\n  if (props.report.reportDetails === null || props.users.users === null) {\n    return (\n      <Segment>\n        <Dimmer active inverted>\n          <Loader inverted content=\"Ladataan...\" />\n        </Dimmer>\n      </Segment>\n    );\n  }\n\n  let programOptions = props.programs.activePrograms.map(program => ({\n    key: program.id,\n    text: program.name,\n    value: program.id\n  }));\n  let userOptions = props.users.users.map(user => ({\n    key: user.id,\n    text: `${user.first_name} ${user.last_name}`,\n    value: user.id\n  }));\n  const getProgram = (event, { value }) => {\n    event.preventDefault();\n    setProgramId(value);\n  };\n  const getUser = (event, { value }) => {\n    event.preventDefault();\n    setUserId(value);\n  };\n  // list of program start time options\n  const startTimeOptions = [\n    {\n      key: '00:00',\n      text: '00:00',\n      value: '00:00'\n    },\n    {\n      key: '01:00',\n      text: '01:00',\n      value: '01:00'\n    },\n    {\n      key: '02:00',\n      text: '02:00',\n      value: '02:00'\n    },\n    {\n      key: '03:00',\n      text: '03:00',\n      value: '03:00'\n    },\n    {\n      key: '04:00',\n      text: '04:00',\n      value: '04:00'\n    },\n    {\n      key: '05:00',\n      text: '05:00',\n      value: '05:00'\n    },\n    {\n      key: '06:00',\n      text: '06:00',\n      value: '06:00'\n    },\n    {\n      key: '07:00',\n      text: '07:00',\n      value: '07:00'\n    },\n    {\n      key: '08:00',\n      text: '08:00',\n      value: '08:00'\n    },\n    {\n      key: '09:00',\n      text: '09:00',\n      value: '09:00'\n    },\n    {\n      key: '10:00',\n      text: '10:00',\n      value: '10:00'\n    },\n    {\n      key: '11:00',\n      text: '11:00',\n      value: '11:00'\n    },\n    {\n      key: '12:00',\n      text: '12:00',\n      value: '12:00'\n    },\n    {\n      key: '13:00',\n      text: '13:00',\n      value: '13:00'\n    },\n    {\n      key: '14:00',\n      text: '14:00',\n      value: '14:00'\n    },\n    {\n      key: '15:00',\n      text: '15:00',\n      value: '15:00'\n    },\n    {\n      key: '16:00',\n      text: '16:00',\n      value: '16:00'\n    },\n    {\n      key: '17:00',\n      text: '17:00',\n      value: '17:00'\n    },\n    {\n      key: '18:00',\n      text: '18:00',\n      value: '18:00'\n    },\n    {\n      key: '19:00',\n      text: '19:00',\n      value: '19:00'\n    },\n    {\n      key: '20:00',\n      text: '20:00',\n      value: '20:00'\n    },\n    {\n      key: '21:00',\n      text: '21:00',\n      value: '21:00'\n    },\n    {\n      key: '22:00',\n      text: '22:00',\n      value: '22:00'\n    },\n    {\n      key: '23:00',\n      text: '23:00',\n      value: '23:00'\n    }\n  ];\n  const getStartTime = (event, { value }) => {\n    event.preventDefault();\n    setProgramStartTime(value);\n  };\n\n  // list of program end time options\n  const endTimeOptions = [\n    {\n      key: '01:00',\n      text: '01:00',\n      value: '01:00'\n    },\n    {\n      key: '02:00',\n      text: '02:00',\n      value: '02:00'\n    },\n    {\n      key: '03:00',\n      text: '03:00',\n      value: '03:00'\n    },\n    {\n      key: '04:00',\n      text: '04:00',\n      value: '04:00'\n    },\n    {\n      key: '05:00',\n      text: '05:00',\n      value: '05:00'\n    },\n    {\n      key: '06:00',\n      text: '06:00',\n      value: '06:00'\n    },\n    {\n      key: '07:00',\n      text: '07:00',\n      value: '07:00'\n    },\n    {\n      key: '08:00',\n      text: '08:00',\n      value: '08:00'\n    },\n    {\n      key: '09:00',\n      text: '09:00',\n      value: '09:00'\n    },\n    {\n      key: '10:00',\n      text: '10:00',\n      value: '10:00'\n    },\n    {\n      key: '11:00',\n      text: '11:00',\n      value: '11:00'\n    },\n    {\n      key: '12:00',\n      text: '12:00',\n      value: '12:00'\n    },\n    {\n      key: '13:00',\n      text: '13:00',\n      value: '13:00'\n    },\n    {\n      key: '14:00',\n      text: '14:00',\n      value: '14:00'\n    },\n    {\n      key: '15:00',\n      text: '15:00',\n      value: '15:00'\n    },\n    {\n      key: '16:00',\n      text: '16:00',\n      value: '16:00'\n    },\n    {\n      key: '17:00',\n      text: '17:00',\n      value: '17:00'\n    },\n    {\n      key: '18:00',\n      text: '18:00',\n      value: '18:00'\n    },\n    {\n      key: '19:00',\n      text: '19:00',\n      value: '19:00'\n    },\n    {\n      key: '20:00',\n      text: '20:00',\n      value: '20:00'\n    },\n    {\n      key: '21:00',\n      text: '21:00',\n      value: '21:00'\n    },\n    {\n      key: '22:00',\n      text: '22:00',\n      value: '22:00'\n    },\n    {\n      key: '23:00',\n      text: '23:00',\n      value: '23:00'\n    },\n    {\n      key: '23:59',\n      text: '23:59',\n      value: '23:59'\n    }\n  ];\n  const getEndTime = (event, { value }) => {\n    event.preventDefault();\n    setProgramEndTime(value);\n  };\n\n  // list of program status options\n  const statusOptions = [\n    {\n      key: '0',\n      text: 'Keskeneräinen',\n      value: '0'\n    },\n    {\n      key: '1',\n      text: 'Valmis',\n      value: '1'\n    },\n    {\n      key: '9',\n      text: 'Poistettu',\n      value: '9'\n    }\n  ];\n  const getStatus = (event, { value }) => {\n    event.preventDefault();\n    setStatus(value);\n  };\n\n  // status placeholder\n  let statusPlaceholder;\n  if (status === 0) {\n    statusPlaceholder = 'Keskeneräinen';\n  } else if (status === 1) {\n    statusPlaceholder = 'Valmis';\n  } else if (statusPlaceholder === 9) {\n    statusPlaceholder = 'Poistettu';\n  }\n\n  const getRerun = () => {\n    console.log('getting rerun');\n    if (rerun === null) {\n      setRerun(1);\n    } else {\n      setRerun(null);\n    }\n  };\n\n  // save changes to db\n  const saveChanges = e => {\n    e.preventDefault();\n    const updatedReportDetails = {\n      id: props.report.reportDetails.id,\n      user_id: userId,\n      program_id: programId,\n      program_date: moment(programDate).format('YYYY-MM-DD'),\n      program_start_time: programStartTime,\n      program_end_time: programEndTime,\n      program_no: programNumber,\n      program_dj: dj,\n      status: status,\n      rerun: rerun\n    };\n    console.log('saving changes...', updatedReportDetails);\n    props.updateReport(updatedReportDetails);\n  };\n\n  // copy report for rerun\n  const copyReport = e => {\n    e.preventDefault();\n    console.log('klikd copy');\n    const reportDetailsToCopy = {\n      user_id: userId,\n      program_id: programId,\n      program_date: moment(programDate).format('YYYY-MM-DD'),\n      program_start_time: programStartTime,\n      program_end_time: programEndTime,\n      program_no: programNumber,\n      program_dj: dj,\n      status: status,\n      rerun: rerun\n    };\n    const reportTracksToCopy = props.report.report;\n    console.log(reportDetailsToCopy);\n    console.log(reportTracksToCopy);\n    props.copyReport(reportDetailsToCopy, reportTracksToCopy);\n    props.setNotification(\n      `Raportti monistettu ajankohtaan ${moment(programDate).format(\n        'YYYY-MM-DD'\n      )}`,\n      'success'\n    );\n  };\n  return (\n    <div>\n      <Header>Lisää biisi raporttiin:</Header>\n      <Segment.Group horizontal>\n        <Segment>\n          <Togglable color=\"blue\" buttonLabel=\"Pikahaku\">\n            <SearchTrack />\n          </Togglable>\n        </Segment>\n        <Segment>\n          <Togglable color=\"blue\" buttonLabel=\"Hae biisit DJonlinesta\">\n            <GetDjOnlineTracks />\n          </Togglable>\n        </Segment>\n      </Segment.Group>\n\n      <Grid divided=\"vertically\">\n        <Grid.Row columns={2}>\n          <Grid.Column>\n            <Header>Raportin tiedot:</Header>\n            <Form>\n              <Form.Field>\n                <label>Ohjelma</label>\n                <Dropdown\n                  placeholder=\"Ohjelma\"\n                  openOnFocus\n                  selection\n                  value={programId}\n                  search\n                  options={programOptions}\n                  onChange={getProgram}\n                />{' '}\n              </Form.Field>\n              <Form.Field>\n                <label>Ohjelmanumero</label>\n                <Form.Input\n                  defaultValue={programNumber}\n                  onChange={e => setProgramNumber(e.target.value)}\n                />{' '}\n              </Form.Field>\n              <Form.Field>\n                <label>DJ</label>\n                <Form.Input\n                  value={dj}\n                  onChange={e => setDj(e.target.value)}\n                />{' '}\n              </Form.Field>\n\n              <Form.Group widths=\"equal\">\n                <Form.Field>\n                  <label>Ohjelman päivä</label>\n\n                  <DatePicker\n                    selected={programDate}\n                    disabledKeyboardNavigation={true}\n                    dateFormat=\"yyyy-MM-dd\"\n                    onChange={date => setProgramDate(date)}\n                  />\n                </Form.Field>\n\n                <Form.Field>\n                  <label>Alkaa kello</label>\n                  <Dropdown\n                    placeholder={programStartTime}\n                    openOnFocus\n                    selection\n                    search\n                    options={startTimeOptions}\n                    onChange={getStartTime}\n                  />{' '}\n                </Form.Field>\n\n                <Form.Field>\n                  <label>Päättyy kello</label>\n                  <Dropdown\n                    placeholder={programEndTime}\n                    openOnFocus\n                    selection\n                    search\n                    options={endTimeOptions}\n                    onChange={getEndTime}\n                  />{' '}\n                </Form.Field>\n              </Form.Group>\n              <Form.Field>\n                <label>Raportin tila</label>\n                <Dropdown\n                  placeholder={statusPlaceholder}\n                  openOnFocus\n                  selection\n                  options={statusOptions}\n                  onChange={getStatus}\n                  defaultValue={status}\n                />{' '}\n              </Form.Field>\n              <Form.Field>\n                <label>Käyttäjä</label>\n                <Dropdown\n                  placeholder=\"Käyttäjä\"\n                  openOnFocus={false}\n                  value={userId}\n                  selection\n                  search\n                  options={userOptions}\n                  onChange={getUser}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Uusinta</label>\n                <Form.Checkbox\n                  name=\"rerun\"\n                  onChange={getRerun}\n                  checked={rerun ? true : false}\n                />\n              </Form.Field>\n              <Form.Group widths=\"equal\">\n                <Button color=\"green\" onClick={saveChanges}>\n                  Tallenna\n                </Button>\n                <Button onClick={copyReport}>Monista</Button>\n              </Form.Group>\n            </Form>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('report details state to props', state);\n  return {\n    report: state.report,\n    reportsList: state.reportsList,\n    programs: state.programs,\n    notification: state.notification,\n    users: state.users,\n    login: state.login\n  };\n};\n\nconst connectedReportDetails = connect(\n  mapStateToProps,\n  { updateReport, copyReport, setNotification }\n)(ReportDetails);\n\nexport default connectedReportDetails;\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport ReactDragListView from 'react-drag-listview/lib/index.js';\nimport {\n  Container,\n  Table,\n  Dimmer,\n  Loader,\n  Button,\n  Header\n} from 'semantic-ui-react';\nimport {\n  getOneReport,\n  getReportDetails,\n  deleteChecked,\n  updateSortableRank\n} from '../../actions/reportActions';\nimport { getOneTrack } from '../../actions/trackActions';\nimport ReportWithTracksItem from './ReportWithTracksItem';\nimport ReportDetails from './ReportDetails';\n\nconst ReportWithTracks = props => {\n  const [dragState, setDragState] = useState(null);\n  console.log(dragState);\n  // get report tracks by report id\n  useEffect(() => {\n    setTimeout(() => {\n      if (props.id === undefined) {\n        props.getOneReport(props.report.reportDetails.id);\n      } else {\n        props.getOneReport(props.id);\n      }\n    }, 1000);\n    // tää efekti uusiks sit kun hakutuloksista lisää biisin listaan\n    // eslint-disable-next-line\n  }, [props.report.djonline]);\n  // get report details by report id\n  useEffect(() => {\n    if (props.id === undefined) {\n      props.getReportDetails(props.report.reportDetails.id);\n    } else {\n      console.log('get details of report ', props.id);\n      props.getReportDetails(props.id);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  // fetch tracks after sorting changes\n  useEffect(() => {\n    console.log('array state changed', dragState);\n    props.updateSortableRank(dragState, props.id);\n    // eslint-disable-next-line\n  }, [dragState]);\n\n  // get track details after edit click\n  // useEffect(() => {\n  //   props.getOneTrack(props.report.editTrackId);\n  // }, [props.report.editTrackId]);\n\n  const array = props.report.report;\n  console.log('array', array);\n\n  const deleteChecked = () => {\n    console.log('klikd delete checkd');\n\n    let remainingTracks = props.report.report.filter(function(e) {\n      return this.indexOf(e.report_track_id) < 0;\n    }, props.report.checkedForDelete);\n    console.log(remainingTracks);\n    props.deleteChecked(\n      props.report.checkedForDelete,\n      props.id,\n      remainingTracks\n    );\n  };\n\n  const dragProps = {\n    onDragEnd(fromIndex, toIndex) {\n      console.log(dragState);\n      const item = array.splice(fromIndex, 1)[0];\n      console.log(item);\n      console.log(dragState);\n      array.splice(toIndex, 0, item);\n      setDragState(array);\n    },\n    nodeSelector: 'tr',\n    handleSelector: 'i.arrows'\n  };\n\n  console.log('report with tracks props', props);\n\n  if (props.report.report === null || props.report.reportDetails === null) {\n    return (\n      <Dimmer active inverted>\n        <Loader inverted content=\"Ladataan...\" />\n      </Dimmer>\n    );\n  }\n  if (props.report.loading) {\n    return (\n      <Dimmer active inverted>\n        <Loader inverted content=\"Ladataan...\" />\n      </Dimmer>\n    );\n  }\n  if (props.report.report.length === 0) {\n    return (\n      <Container>\n        <Header>Ei lisättyjä kappaleita. Lisää biisit alta</Header>\n        <ReportDetails report={props.report.reportDetails} />\n      </Container>\n    );\n  }\n\n  return (\n    <Container>\n      <h3>Raportti</h3>\n      <ReactDragListView {...dragProps}>\n        <Table striped>\n          <Table.Header>\n            <Table.Row>\n              <Table.Cell></Table.Cell>\n              <Table.Cell>#</Table.Cell>\n              <Table.Cell>Artisti</Table.Cell>\n              <Table.Cell>Biisi</Table.Cell>\n              <Table.Cell>Kesto</Table.Cell>\n              <Table.Cell></Table.Cell>\n              <Table.Cell></Table.Cell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {props.report.report.map(track => (\n              <ReportWithTracksItem key={track.report_track_id} track={track} />\n            ))}\n          </Table.Body>\n          <Table.Footer>\n            <Table.Row></Table.Row>\n          </Table.Footer>\n        </Table>\n      </ReactDragListView>\n\n      <Button\n        color=\"red\"\n        onClick={deleteChecked}\n        style={{ marginLeft: '1rem', marginBottom: '1rem' }}\n      >\n        Poista valitut\n      </Button>\n      <ReportDetails report={props.report.reportDetails} />\n    </Container>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('reportwithtracks state', state);\n  return {\n    report: state.report,\n    reportsList: state.reportsList\n  };\n};\n\nconst connectedReportWithTracks = connect(\n  mapStateToProps,\n  {\n    getOneReport,\n    getReportDetails,\n    getOneTrack,\n    deleteChecked,\n    updateSortableRank\n  }\n)(ReportWithTracks);\n\nexport default connectedReportWithTracks;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './App.css';\nimport Navbar from './components/layout/Navbar';\nimport Footer from './components/layout/Footer';\nimport Home from './components/layout/Home';\nimport UserList from './components/user/UserList';\nimport ReportList from './components/report/ReportList';\nimport ProgramList from './components/program/ProgramList';\nimport ArtistDetails from './components/artist/ArtistDetails';\nimport AlbumDetails from './components/album/AlbumDetails';\nimport TrackDetails from './components/track/TrackDetails';\nimport LoginForm from './components/login/LoginForm';\nimport ReportTransferList from './components/report/ReportTransferList';\nimport Search from './components/search/Search';\nimport Top100List from './components/top100/Top100List';\nimport ReportWithTracks from './components/report/ReportWithTracks';\nimport Notification from './components/layout/Notification';\nimport { Container } from 'semantic-ui-react';\nimport { initializeUser, logout } from './actions/loginActions';\nimport { initializeUsers } from './actions/userActions';\nimport { initializePrograms } from './actions/programActions';\n\nconst App = props => {\n  // initial logged in user, programs list, users list\n  useEffect(() => {\n    props.initializeUser();\n    props.initializePrograms();\n    props.initializeUsers();\n    // eslint-disable-next-line\n  }, [props.login.token]);\n\n  // handle logout redux\n  // const handleLogout = () => {\n  //   props.logout();\n  // };\n\n  console.log('app 74', props);\n  if (props.login.user === null) {\n    return (\n      <Container>\n        <LoginForm />\n      </Container>\n    );\n  }\n  if (props.login.status === null) {\n    return (\n      <Container>\n        <div>Tunnukset hyllyllä. Ota yhteys ylläpitoon.</div>\n        <LoginForm />\n      </Container>\n    );\n  }\n\n  // return dj\n\n  // return toimitus\n\n  // return admin\n  return (\n    <Router>\n      <div>\n        {/* Logged in as {props.login.username}\n        <button onClick={handleLogout}>logout</button> */}\n        <Navbar\n          first_name={props.login.first_name}\n          last_name={props.login.last_name}\n        />\n      </div>\n      <div>\n        <Notification />\n      </div>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/reports\" component={ReportList} />\n        <Route exact path=\"/transfer\" component={ReportTransferList} />\n        <Route\n          path=\"/reports/:id\"\n          render={({ match }) => {\n            console.log('*');\n            return <ReportWithTracks id={match.params.id} />;\n          }}\n        />\n        <Route\n          path=\"/artist/:id\"\n          render={({ match }) => {\n            console.log('*');\n            return <ArtistDetails id={match.params.id} />;\n          }}\n        />\n        <Route\n          path=\"/album/:id\"\n          render={({ match }) => {\n            console.log('*');\n            return <AlbumDetails id={match.params.id} />;\n          }}\n        />\n        <Route\n          path=\"/track/:id\"\n          render={({ match }) => {\n            console.log('*');\n            return <TrackDetails id={match.params.id} />;\n          }}\n        />\n        <Route exact path=\"/programs\" component={ProgramList} />\n        <Route exact path=\"/search\" component={Search} />\n        <Route exact path=\"/top100\" component={Top100List} />\n        <Route exact path=\"/users\" component={UserList} />\n      </Switch>\n      <div>\n        <Footer />\n      </div>\n    </Router>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('app state', state);\n  return {\n    report: state.report,\n    reportsList: state.reportsList,\n    login: state.login,\n    users: state.users,\n    programs: state.programs\n  };\n};\n\nconst mapDispatchToProps = {\n  initializeUser,\n  logout,\n  initializePrograms,\n  initializeUsers\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import {\n  GET_ONE_ARTIST,\n  GET_ALBUM_LIST_BY_ARTIST,\n  CLEAR_CURRENT_ARTIST,\n  SET_LOADING\n} from '../actions/types';\n\nconst initialState = {\n  currentArtist: null,\n  albumList: null,\n  loading: false\n};\n\nconst artistReducer = (state = initialState, action) => {\n  console.log('artistreducer state now: ', state);\n  console.log('artistreducer action', action);\n\n  switch (action.type) {\n    case GET_ONE_ARTIST:\n      return {\n        ...state,\n        currentArtist: action.data,\n        loading: false\n      };\n    case GET_ALBUM_LIST_BY_ARTIST:\n      return {\n        ...state,\n        albumList: action.data,\n        loading: false\n      };\n    case CLEAR_CURRENT_ARTIST:\n      return {\n        ...state,\n        currentArtist: null\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n};\n\nexport default artistReducer;\n","import {\n  GET_ONE_ALBUM,\n  GET_TRACKLIST_OF_ALBUM,\n  CLEAR_CURRENT_ALBUM,\n  SET_LOADING\n} from '../actions/types';\n\nconst initialState = {\n  currentAlbum: null,\n  tracklist: null,\n  loading: false\n};\n\nconst albumReducer = (state = initialState, action) => {\n  console.log('albumReducer state now: ', state);\n  console.log('albumReducer action', action);\n\n  switch (action.type) {\n    case GET_ONE_ALBUM:\n      return {\n        ...state,\n        currentAlbum: action.data,\n        loading: false\n      };\n    case GET_TRACKLIST_OF_ALBUM:\n      return {\n        ...state,\n        tracklist: action.data,\n        loading: false\n      };\n    case CLEAR_CURRENT_ALBUM:\n      return {\n        ...state,\n        currentAlbum: null,\n        tracklist: null,\n        loading: false\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n};\n\nexport default albumReducer;\n","import {\n  GET_ONE_TRACK,\n  GET_ONE_TRACK_HISTORY,\n  CLEAR_CURRENT_TRACK,\n  SET_LOADING,\n  CHANGE_ALBUM,\n  CHANGE_ARTIST\n} from '../actions/types';\n\nconst initialState = {\n  currentTrack: null,\n  playhistory: null,\n  loading: false\n};\n\nconst trackReducer = (state = initialState, action) => {\n  console.log('trackreducer state now: ', state);\n  console.log('trackreducer action', action);\n\n  switch (action.type) {\n    case GET_ONE_TRACK:\n      return {\n        ...state,\n        currentTrack: action.data,\n        loading: false\n      };\n    case GET_ONE_TRACK_HISTORY:\n      return {\n        ...state,\n        playhistory: action.data,\n        loading: false\n      };\n    case CLEAR_CURRENT_TRACK:\n      return {\n        ...state,\n        playhistory: null,\n        currentTrack: null\n      };\n    case CHANGE_ALBUM:\n      return {\n        ...state,\n        currentTrack: [\n          {\n            ...state.currentTrack[0],\n            album_id: action.data.album_id,\n            album: action.data.album_name\n          }\n        ],\n        loading: false\n      };\n    case CHANGE_ARTIST:\n      return {\n        ...state,\n        currentTrack: [\n          {\n            ...state.currentTrack[0],\n            artist_id: action.data.artist_id,\n            artist: action.data.artist_name\n          }\n        ],\n        loading: false\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n};\n\nexport default trackReducer;\n","import {\n  INIT_USER,\n  LOGIN,\n  LOGOUT,\n  LOGIN_ERROR,\n  UPDATE_CURRENT_USER,\n  SET_LOADING\n} from '../actions/types';\n\nconst initialState = {\n  user: null,\n  loading: false,\n  error: null\n};\n\nconst loginReducer = (state = initialState, action) => {\n  // console.log('loginreducer state', state);\n  // console.log('loginreducer action', action);\n\n  switch (action.type) {\n    case INIT_USER:\n      return action.data;\n\n    case LOGOUT:\n      return initialState;\n\n    case LOGIN:\n      return action.data;\n\n    case LOGIN_ERROR:\n      console.error(action.payload);\n      return {\n        ...state,\n        error: action.payload\n      };\n    case UPDATE_CURRENT_USER:\n      return {\n        ...state,\n        first_name: action.data.first_name,\n        last_name: action.data.last_name,\n        email: action.data.email\n      };\n\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default loginReducer;\n","import {\n  GET_ONE_REPORT,\n  GET_REPORT_DETAILS,\n  GET_DJONLINE_TRACKS,\n  ADD_NEW_TRACK,\n  UPDATE_TRACK,\n  SET_EDIT_TRACK_ID,\n  GET_ONE_TRACK,\n  REMOVE_CURRENT_TRACK,\n  DELETE_TRACK_FROM_REPORT,\n  CHECK_FOR_DELETE,\n  UNCHECK_FOR_DELETE,\n  CREATE_REPORT,\n  UPDATE_REPORT,\n  CLEAR_CURRENT_REPORT,\n  SET_LOADING,\n  REPORT_ERROR\n} from '../actions/types';\n\nconst initialState = {\n  report: [],\n  djonline: null,\n  editTrackId: null,\n  reportDetails: null,\n  newReport: null,\n  loading: false,\n  checkedForDelete: [],\n  currentTrack: null,\n  error: null\n};\n\nconst reportReducer = (state = initialState, action) => {\n  console.log('reportreducer state now: ', state);\n  console.log('reportreducer action', action);\n  console.log(action.type);\n\n  switch (action.type) {\n    case GET_ONE_REPORT:\n      return {\n        ...state,\n        report: action.data,\n        loading: false\n      };\n    case GET_DJONLINE_TRACKS:\n      return {\n        ...state,\n        report: [...state.report, action.data.map(track => track)],\n        djonline: action.data,\n        loading: false\n      };\n    case ADD_NEW_TRACK:\n      return {\n        ...state,\n        report: [...state.report, action.data],\n        loading: false\n      };\n    case UPDATE_TRACK:\n      return {\n        ...state,\n        report: state.report.map(track =>\n          track.track_id === action.data.track_id ? action.data : track\n        ),\n        loading: false\n      };\n    case SET_EDIT_TRACK_ID:\n      return {\n        ...state,\n        editTrackId: action.data\n      };\n    case GET_ONE_TRACK:\n      return {\n        ...state,\n        currentTrack: action.data,\n        loading: false\n      };\n    case REMOVE_CURRENT_TRACK:\n      return {\n        ...state,\n        currentTrack: null\n      };\n    case GET_REPORT_DETAILS:\n      return {\n        ...state,\n        reportDetails: action.data,\n        newReport: null\n        // loading: false\n      };\n    case CREATE_REPORT: {\n      return {\n        ...state,\n        newReport: action.data,\n        loading: false\n      };\n    }\n    case UPDATE_REPORT:\n      return {\n        ...state,\n        reportDetails: action.data,\n        newReport: null,\n        loading: false\n      };\n\n    case DELETE_TRACK_FROM_REPORT:\n      return {\n        ...state,\n        report: state.report.filter(\n          track => track.report_track_id !== action.id\n        )\n      };\n    case CHECK_FOR_DELETE:\n      return {\n        ...state,\n        checkedForDelete: [action.data, ...state.checkedForDelete]\n      };\n    case UNCHECK_FOR_DELETE:\n      console.log(action.data);\n      console.log(typeof state.checkedForDelete);\n      console.log(state.checkedForDelete);\n      return {\n        ...state,\n        checkedForDelete: state.checkedForDelete.filter(\n          id => id !== action.data\n        )\n      };\n    case CLEAR_CURRENT_REPORT:\n      return {\n        ...state,\n        report: []\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    case REPORT_ERROR:\n      console.error(action.payload);\n      return {\n        ...state,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reportReducer;\n","import {\n  INIT_USERS_LIST,\n  SET_LOADING,\n  SET_CURRENT,\n  CREATE_USER,\n  UPDATE_USER\n} from '../actions/types';\n\nconst initialState = {\n  users: null,\n  current: null,\n  loading: false\n};\nconst userReducer = (state = initialState, action) => {\n  // console.log('userreducer state now: ', state);\n  // console.log('userreducer action', action.data);\n\n  switch (action.type) {\n    case INIT_USERS_LIST:\n      return {\n        ...state,\n        users: action.data,\n        loading: false\n      };\n\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: false\n      };\n    case SET_CURRENT:\n      return {\n        ...state,\n        current: action.payload,\n        loading: false\n      };\n    case CREATE_USER:\n      return {\n        ...state,\n        users: [...state.users, action.data],\n        loading: false\n      };\n    case UPDATE_USER:\n      return {\n        ...state,\n        users: action.data,\n        loading: false\n      };\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import {\n  GET_ALL_REPORTS_BY_DATE,\n  GET_ALL_IN_PROGRESS,\n  GET_ALL_REPORT_TRANSFERS,\n  GENERATE_REPORT_TRANSFER,\n  FILTER_BY_USER_ID,\n  FILTER_BY_STATUS,\n  FILTER_BY_TEXT,\n  DELETE_REPORT,\n  SET_LOADING,\n  REPORT_ERROR\n} from '../actions/types';\n\nconst initialState = {\n  inProgress: null,\n  reportsList: null,\n  reportListDate: null,\n  reportTransferList: null,\n  lastTransfer: null,\n  loading: false,\n  filterStatusValue: null,\n  filterUserValue: null,\n  filterByText: '',\n  error: null\n};\n\nconst reportListReducer = (state = initialState, action) => {\n  console.log('report list reducer state now: ', state);\n  console.log('report list reducer action', action);\n  console.log(action.type);\n\n  switch (action.type) {\n    // date is YYYY-MM\n    case GET_ALL_REPORTS_BY_DATE:\n      return {\n        ...state,\n        reportsList: action.data,\n        reportListDate: action.date,\n        loading: false\n      };\n    case GET_ALL_IN_PROGRESS:\n      return {\n        ...state,\n        inProgress: action.data,\n        loading: false\n      };\n    case GET_ALL_REPORT_TRANSFERS:\n      return {\n        ...state,\n        reportTransferList: action.data,\n        loading: false\n      };\n    case GENERATE_REPORT_TRANSFER:\n      return {\n        ...state,\n        lastTransfer: action.data,\n        loading: false\n      };\n    case DELETE_REPORT:\n      return {\n        ...state,\n        reportsList: state.reportsList.filter(\n          report => report.id !== action.data\n        ),\n        loading: false\n      };\n    case FILTER_BY_USER_ID:\n      console.log('action id', action.data);\n      console.log('report list reducer state after FILTER by id action', state);\n      return {\n        ...state,\n        filterUserValue: action.data\n      };\n    case FILTER_BY_STATUS:\n      console.log('action id', action.data);\n      console.log('report list reducer state after FILTER by id action', state);\n      return {\n        ...state,\n        filterStatusValue: action.data\n      };\n    case FILTER_BY_TEXT:\n      return {\n        ...state,\n        // reportsToShow:\n        //   action.data.length === 0\n        //     ? state.reportsList\n        //     : state.reportsList.filter(r =>\n        //         r.name.toLowerCase().includes(action.data.toLowerCase())\n        //       ),\n\n        filterByText: action.data\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    case REPORT_ERROR:\n      console.error(action.payload);\n      return {\n        ...state,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reportListReducer;\n","import {\n  GET_ONE_PROGRAM,\n  GET_ALL_PROGRAMS,\n  GET_ALL_ACTIVE_PROGRAMS,\n  CREATE_NEW_PROGRAM,\n  UPDATE_PROGRAM\n} from '../actions/types';\n\nconst initialState = {\n  allPrograms: null,\n  activePrograms: null,\n  program: null,\n  loading: false\n};\n\nconst programReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_ALL_PROGRAMS:\n      return {\n        ...state,\n        allPrograms: action.data,\n        loading: false\n      };\n    case GET_ALL_ACTIVE_PROGRAMS:\n      return {\n        ...state,\n        activePrograms: action.data,\n        loading: false\n      };\n    case GET_ONE_PROGRAM:\n      return {\n        ...state,\n        program: action.data,\n        loading: false\n      };\n    case CREATE_NEW_PROGRAM:\n      return {\n        ...state,\n        allPrograms: [...state.allPrograms, action.data],\n        loading: false\n      };\n    case UPDATE_PROGRAM:\n      return {\n        ...state,\n        allPrograms: state.allPrograms.map(program =>\n          program.id === action.data.id ? action.data : program\n        ),\n        loading: false\n      };\n    default:\n      return state;\n  }\n};\n\nexport default programReducer;\n","import {\n  AUTOCOMPLETE_RESULTS,\n  ADVANCED_RESULTS,\n  GET_DISCOGS_CATID,\n  CLEAR_DISCOGS_CATID,\n  TOP_100,\n  SET_SEARCH_LOADING,\n  GET_CHANGE_ALBUM_OPTIONS,\n  GET_CHANGE_ARTIST_OPTIONS,\n  RESET_CHANGE_ALBUM_OPTIONS,\n  RESET_CHANGE_ARTIST_OPTIONS\n} from '../actions/types';\n\nconst initialState = {\n  searchResults: [],\n  top100: null,\n  top100Query: null,\n  advancedResults: null,\n  changeArtistOptions: null,\n  changeAlbumOptions: null,\n  loading: false,\n  discogsCatId: null,\n  error: null\n};\n\nconst searchReducer = (state = initialState, action) => {\n  console.log('searchReducer state now: ', state);\n  console.log('searchReducer action', action);\n  console.log('searchReducer action.type', action.type);\n\n  switch (action.type) {\n    case AUTOCOMPLETE_RESULTS:\n      return {\n        ...state,\n        searchResults: action.data,\n        loading: false\n      };\n    case ADVANCED_RESULTS:\n      return {\n        ...state,\n        advancedResults: action.data,\n        loading: false\n      };\n    case SET_SEARCH_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    case TOP_100:\n      return {\n        ...state,\n        top100: action.data,\n        top100Query: action.query,\n        loading: false\n      };\n    case GET_DISCOGS_CATID:\n      return {\n        ...state,\n        discogsCatId: action.data\n      };\n    case CLEAR_DISCOGS_CATID:\n      return {\n        ...state,\n        discogsCatId: null\n      };\n    case GET_CHANGE_ALBUM_OPTIONS:\n      return {\n        ...state,\n        changeAlbumOptions: action.data,\n        loading: false\n      };\n    case GET_CHANGE_ARTIST_OPTIONS:\n      return {\n        ...state,\n        changeArtistOptions: action.data,\n        loading: false\n      };\n    case RESET_CHANGE_ALBUM_OPTIONS:\n      return {\n        ...state,\n        changeAlbumOptions: null\n      };\n    case RESET_CHANGE_ARTIST_OPTIONS:\n      return {\n        ...state,\n        changeArtistOptions: null\n      };\n    default:\n      return state;\n  }\n};\n\nexport default searchReducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport artistReducer from './reducers/artistReducer';\nimport albumReducer from './reducers/albumReducer';\nimport trackReducer from './reducers/trackReducer';\nimport loginReducer from './reducers/loginReducer';\nimport notificationReducer from './reducers/notificationReducer';\nimport reportReducer from './reducers/reportReducer';\nimport userReducer from './reducers/userReducer';\nimport reportsListReducer from './reducers/reportsListReducer';\nimport programReducer from './reducers/programReducer';\nimport searchReducer from './reducers/searchReducer';\n\nconst reducer = combineReducers({\n  artist: artistReducer,\n  album: albumReducer,\n  track: trackReducer,\n  login: loginReducer,\n  notification: notificationReducer,\n  report: reportReducer,\n  reportsList: reportsListReducer,\n  programs: programReducer,\n  search: searchReducer,\n  users: userReducer\n});\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}