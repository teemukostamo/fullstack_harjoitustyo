{"version":3,"sources":["components/layout/Home.js","services/users.js","actions/userActions.js","actions/types.js","components/user/User.js","reducers/notificationReducer.js","components/user/UserList.js","services/reports.js","actions/reportActions.js","components/report/ReportFilterForm.js","actions/reportsListActions.js","components/report/ReportListItem.js","components/report/ReportList.js","services/login.js","actions/loginActions.js","components/login/LoginForm.js","components/report/ReportWithTracksItem.js","components/report/ReportDetails.js","components/report/ReportWithTracks.js","App.js","reducers/loginReducer.js","reducers/reportReducer.js","reducers/userReducer.js","reducers/reportsListReducer.js","store.js","index.js"],"names":["Home","Container","token","getAll","a","config","headers","Authorization","axios","get","req","console","log","date","data","setToken","newToken","setLoading","type","mapDispatchToProps","setCurrent","user","payload","connectedUser","connect","props","useState","password","setPassword","confirmPassword","setConfirmPassword","first_name","firstName","setFirstName","last_name","lastName","setLastName","email","setEmail","level","setLevel","Table","Row","Cell","Modal","trigger","href","onClick","username","closeIcon","Header","content","Content","Form","onSubmit","e","preventDefault","id","Field","Input","value","placeholder","disabled","focus","onChange","target","label","control","Button","format","last_seen","Icon","name","initialState","message","setNotification","dispatch","clearNotification","nextNotificationId","showNotificationWithTimeout","text","duration","setTimeout","notificationReducer","state","action","initializeUsers","userService","users","connectedUserList","login","useEffect","Dimmer","active","inverted","Loader","size","striped","Body","map","key","getAllByDate","request","getOne","getReportDetails","getOneReport","reportService","report","getAllReportsByDate","reports","connectedReportFilterForm","reportsList","notification","friendOptions","reportMonth","setReportMonth","reportYear","setReportYear","Fragment","getReportsByMonth","Dropdown","openOnFocus","selection","options","className","connectedReportListItem","program_no","to","program_date","program_start_time","program_end_time","status","connectedReportList","length","r","credentials","post","res","newLogin","errorNotification","loginService","newUser","window","localStorage","setItem","JSON","stringify","setUsername","handleLogin","event","ReportWithTracksItem","minutes","Math","floor","track","seconds","sortable_rank","artist_name","track_title","ReportDetails","program_name","connectedReportWithTracks","reportDetails","initializeUser","loggedUserJSON","getItem","parse","err","response","statusText","logout","removeItem","Menu","Item","link","exact","path","component","ReportList","render","match","params","UserList","loading","error","loginReducer","reportReducer","current","userReducer","reportListReducer","reducer","combineReducers","reportsListReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.71c61753.chunk.js","sourcesContent":["import React from 'react';\nimport { Container } from 'semantic-ui-react';\n\nconst Home = () => (\n  <Container>\n    <h2>Radio Helsinki teostoraportointi</h2>\n  </Container>\n);\n\nexport default Home;\n","import axios from 'axios';\nconst baseUrl = '/api/users';\n\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = async () => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const req = await axios.get(baseUrl, config);\n  console.log(typeof req.date);\n  return req.data;\n};\n\nexport default { getAll, setToken };\n","import {\n  INIT_USERS_LIST,\n  USER_ERROR,\n  SET_LOADING,\n  SET_CURRENT\n} from '../actions/types';\nimport userService from '../services/users';\n\nexport const initializeUsers = () => async dispatch => {\n  try {\n    setLoading();\n    const users = await userService.getAll();\n    dispatch({\n      type: INIT_USERS_LIST,\n      data: users\n    });\n  } catch (err) {\n    dispatch({\n      type: USER_ERROR,\n      payload: err\n    });\n  }\n};\n\n// Set loading to true\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n};\n\n// Set current user for editing\nexport const setCurrent = user => {\n  return {\n    type: SET_CURRENT,\n    payload: user\n  };\n};\n","// Login actions:\nexport const INIT_USER = 'INIT_USER';\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\n\n// user actions\nexport const INIT_USERS_LIST = 'INIT_USERS_LIST';\nexport const USER_ERROR = 'USER_ERROR';\nexport const SET_CURRENT = 'SET_CURRENT';\n\n// report actions\nexport const GET_ONE_REPORT = 'GET_ONE_REPORT';\nexport const GET_REPORT_DETAILS = 'GET_REPORT_DETAILS';\nexport const GET_ALL_REPORTS_BY_DATE = 'GET_ALL_REPORTS_BY_DATE';\n\n// preloader actions\nexport const SET_LOADING = 'SET_LOADING';\n","import React, { useState } from 'react';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport {\n  Table,\n  Modal,\n  Header,\n  Form,\n  Button,\n  Input,\n  Icon\n} from 'semantic-ui-react';\nimport { setCurrent } from '../../actions/userActions';\n\nconst User = props => {\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [firstName, setFirstName] = useState(props.user.first_name);\n  const [lastName, setLastName] = useState(props.user.last_name);\n  const [email, setEmail] = useState(props.user.email);\n  const [level, setLevel] = useState(props.user.level);\n\n  const onDelete = () => {\n    console.log(`klikd delete on user ${props.user.id}`);\n  };\n\n  const updateUserClick = e => {\n    e.preventDefault();\n    console.log(\n      'updating info',\n      password,\n      confirmPassword,\n      firstName,\n      lastName,\n      email,\n      level\n    );\n    console.log('for user', props.user.id);\n  };\n\n  return (\n    <Table.Row>\n      <Table.Cell>\n        <Modal\n          trigger={\n            <a href=\"#!\" onClick={() => props.setCurrent(props.user)}>\n              {props.user.username}\n            </a>\n          }\n          closeIcon\n        >\n          <Header content=\"Muokkaa käyttäjän tietoja\" />\n          <Modal.Content>\n            <Form onSubmit={updateUserClick}>\n              <Form.Field>\n                <label>Käyttäjätunnus</label>\n                <Input\n                  value={props.user.username}\n                  type=\"text\"\n                  placeholder=\"Käyttäjätunnus...\"\n                  disabled\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Salasana - syötä vaihtaaksesi</label>\n                <Input\n                  focus\n                  type=\"password\"\n                  placeholder=\"Salasana...\"\n                  onChange={e => setPassword(e.target.value)}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Salasana uudelleen</label>\n                <Input\n                  focus\n                  type=\"password\"\n                  placeholder=\"Vahvista salasana...\"\n                  onChange={e => setConfirmPassword(e.target.value)}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Etunimi</label>\n                <Input\n                  focus\n                  value={firstName}\n                  type=\"text\"\n                  placeholder=\"Etunimi...\"\n                  onChange={e => setFirstName(e.target.value)}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Sukunimi</label>\n                <Input\n                  focus\n                  value={lastName}\n                  type=\"text\"\n                  placeholder=\"Sukunimi...\"\n                  onChange={e => setLastName(e.target.value)}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Email</label>\n                <Input\n                  focus\n                  value={email}\n                  type=\"text\"\n                  placeholder=\"Email...\"\n                  onChange={e => setEmail(e.target.value)}\n                />\n              </Form.Field>\n              <Form.Field\n                label=\"Taso\"\n                control=\"select\"\n                value={level}\n                onChange={e => setLevel(e.target.value)}\n              >\n                <option value=\"1\">DJ</option>\n                <option value=\"2\">Toimitus</option>\n                <option value=\"3\">Admin</option>\n              </Form.Field>\n              <Button type=\"submit\">Tallenna</Button>\n            </Form>\n          </Modal.Content>\n        </Modal>\n      </Table.Cell>\n      <Table.Cell>\n        {props.user.first_name} {props.user.last_name}\n      </Table.Cell>\n      <Table.Cell>\n        <Moment format=\"MMMM Do YYYY, h:mm:ss a\">{props.user.last_seen}</Moment>\n      </Table.Cell>\n      <Table.Cell>{props.user.level}</Table.Cell>\n      <Table.Cell>\n        <Icon user onClick={onDelete} name=\"delete\" />\n      </Table.Cell>\n    </Table.Row>\n  );\n};\n\nconst mapDispatchToProps = {\n  setCurrent\n};\n\nconst connectedUser = connect(\n  null,\n  mapDispatchToProps\n)(User);\n\nexport default connectedUser;\n","const initialState = {\n  message: null\n};\n\nconst notificationReducer = (state = initialState, action) => {\n  console.log('action', action);\n  switch (action.type) {\n    case 'NOTIFICATION':\n      return {\n        ...state,\n        message: action.message\n      };\n\n    case 'CLEAR':\n      return {\n        ...state,\n        message: null\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst setNotification = (id, message) => {\n  console.log(message);\n  return dispatch => {\n    dispatch({\n      type: 'NOTIFICATION',\n      id,\n      message\n    });\n  };\n};\n\nconst clearNotification = id => {\n  return {\n    type: 'CLEAR',\n    id\n  };\n};\n\nlet nextNotificationId = 0;\nexport function showNotificationWithTimeout(text, duration) {\n  duration = duration * 1000;\n  return function(dispatch) {\n    const id = nextNotificationId++;\n    dispatch(setNotification(id, text));\n\n    setTimeout(() => {\n      dispatch(clearNotification(id));\n    }, duration);\n  };\n}\n\nexport default notificationReducer;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport User from './User';\nimport { Container, Dimmer, Loader } from 'semantic-ui-react';\nimport { Table } from 'semantic-ui-react';\nimport { showNotificationWithTimeout } from '../../reducers/notificationReducer';\nimport { initializeUsers } from '../../actions/userActions';\n\nconst UserList = props => {\n  // initial users list\n  useEffect(() => {\n    props.initializeUsers();\n    // eslint-disable-next-line\n  }, []);\n\n  if (props.users.users === null) {\n    return (\n      <Container>\n        <Dimmer active inverted>\n          <Loader size=\"medium\">Haetaan käyttäjiä...</Loader>\n        </Dimmer>\n      </Container>\n    );\n  }\n\n  console.log('userlist props', props);\n  return (\n    <Container>\n      <h3>Käyttäjät</h3>\n      <Table striped>\n        <Table.Header>\n          <Table.Row>\n            <Table.Cell>Käyttäjätunnus</Table.Cell>\n            <Table.Cell>Nimi</Table.Cell>\n            <Table.Cell>Viimeisin kirjautuminen</Table.Cell>\n            <Table.Cell>Taso</Table.Cell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {props.users.users.map(user => (\n            <User user={user} key={user.id} />\n          ))}\n        </Table.Body>\n      </Table>\n    </Container>\n  );\n};\n\nconst mapDispatchToProps = {\n  showNotificationWithTimeout,\n  initializeUsers\n};\n\nconst mapStateToProps = state => ({\n  users: state.users,\n  login: state.login\n});\n\nconst connectedUserList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UserList);\n\nexport default connectedUserList;\n","import axios from 'axios';\nconst baseUrl = '/api/reports';\n\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\n// get a list of reports by date\nconst getAllByDate = async date => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  // notice baseurl is different here!\n  console.log('getting reports from', date);\n\n  const request = await axios.get(`/api/reportslist/${date}`, config);\n  console.log('reportservice get one report-track data', request.data);\n  return request.data;\n};\n\n// get a list of reports by user_id, date\n\n// get one report with tracks\nconst getOne = async id => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  console.log('report req id', id);\n  const request = await axios.get(`${baseUrl}/${id}`, config);\n  console.log('reportservice get one report-track data', request.data);\n  return request.data;\n};\n\nconst getReportDetails = async id => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  console.log('reportdetails req id ', id);\n  const request = await axios.get(`/api/reportdetails/${id}`, config);\n  console.log('reportservice get report details res data', request.data);\n  return request.data;\n};\n\nexport default { setToken, getOne, getAllByDate, getReportDetails };\n","import {\n  GET_ONE_REPORT,\n  GET_REPORT_DETAILS,\n  SET_LOADING\n} from '../actions/types';\nimport reportService from '../services/reports';\n\n// get one report with tracks by report id\nexport const getOneReport = id => async dispatch => {\n  setLoading();\n  const report = await reportService.getOne(id);\n  // console.log('reportreducer', report);\n  dispatch({\n    type: GET_ONE_REPORT,\n    data: report,\n    id\n  });\n};\n\n// get report details by report id\nexport const getReportDetails = id => async dispatch => {\n  setLoading();\n  const report = await reportService.getReportDetails(id);\n  dispatch({\n    type: GET_REPORT_DETAILS,\n    data: report,\n    id\n  });\n};\n\n// Set loading to true\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n};\n","import React, { useState } from 'react';\n// import Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport { getOneReport } from '../../actions/reportActions';\nimport { getAllReportsByDate } from '../../actions/reportsListActions';\nimport { Dropdown, Button } from 'semantic-ui-react';\n// import moment from 'moment';\n\nconst ReportFilterForm = props => {\n  const friendOptions = [\n    {\n      key: 'Jenny Hess',\n      text: 'Jenny Hess',\n      value: 'Jenny Hess'\n    },\n    {\n      key: 'Elliot Fu',\n      text: 'Elliot Fu',\n      value: 'Elliot Fu'\n    },\n    {\n      key: 'Stevie Feliciano',\n      text: 'Stevie Feliciano',\n      value: 'Stevie Feliciano'\n    },\n    {\n      key: 'Christian',\n      text: 'Christian',\n      value: 'Christian'\n    },\n    {\n      key: 'Matt',\n      text: 'Matt',\n      value: 'Matt'\n    },\n    {\n      key: 'Justen Kitsune',\n      text: 'Justen Kitsune',\n      value: 'Justen Kitsune'\n    }\n  ];\n  const [reportMonth, setReportMonth] = useState('');\n  const [reportYear, setReportYear] = useState('');\n\n  // // initial reports list\n  // useEffect(() => {\n  //   props.getAllReportsByDate(moment().format('YYYY-MM'));\n  // }, []);\n\n  console.log(reportMonth);\n  console.log(reportYear);\n\n  const getReportsByMonth = () => {\n    const date = reportYear + '-' + reportMonth;\n    console.log(date);\n    console.log('klik');\n    props.getAllReportsByDate(date);\n  };\n\n  return (\n    <div>\n      <React.Fragment>\n        <Button onClick={() => getReportsByMonth()}>\n          Hae raportit ajalta:\n        </Button>\n        <Dropdown\n          placeholder=\"Vuosi\"\n          openOnFocus\n          selection\n          options={friendOptions}\n        />{' '}\n        <Dropdown\n          placeholder=\"Kuukausi\"\n          openOnFocus={false}\n          selection\n          options={friendOptions}\n        />\n      </React.Fragment>\n      <div className=\"row\">\n        <div className=\"input-field col s5\">\n          <select\n            name=\"month\"\n            id=\"\"\n            onChange={e => setReportMonth(e.target.value)}\n          >\n            Valitse kuukausi\n            <option value=\"01\">Tammikuu</option>\n            <option value=\"02\">Helmikuu</option>\n            <option value=\"03\">Maaliskuu</option>\n          </select>\n        </div>\n        <div className=\"input-field col s5\">\n          <select\n            name=\"year\"\n            id=\"\"\n            onChange={e => setReportYear(e.target.value)}\n          >\n            Valitse Vuosi\n            <option value=\"2018\">2018</option>\n            <option value=\"2017\">2017</option>\n            <option value=\"2016\">2016</option>\n          </select>\n        </div>\n        <div className=\"input-field col s2\"></div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('reportfilterform state to props', state);\n  return {\n    report: state.report,\n    reportsList: state.reportsList,\n    notification: state.notification,\n    users: state.users,\n    login: state.login\n  };\n};\n\nconst mapDispatchToProps = {\n  getOneReport,\n  getAllReportsByDate\n};\n\nconst connectedReportFilterForm = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ReportFilterForm);\n\nexport default connectedReportFilterForm;\n","import { GET_ALL_REPORTS_BY_DATE } from './types';\nimport reportService from '../services/reports';\n\n// get a list of reports by user_id, date\n\n// get a list of reports by date\nexport const getAllReportsByDate = date => async dispatch => {\n  const reports = await reportService.getAllByDate(date);\n  // console.log('reportreducer', report);\n  dispatch({\n    type: GET_ALL_REPORTS_BY_DATE,\n    data: reports,\n    date\n  });\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Table } from 'semantic-ui-react';\nimport { getOneReport } from '../../actions/reportActions';\n\nconst ReportListItem = props => {\n  return (\n    <React.Fragment>\n      <Table.Row>\n        <Table.Cell>{props.report.program_no}</Table.Cell>\n        <Table.Cell>\n          <Link to={`reports/${props.report.id}`}>{props.report.name}</Link>\n        </Table.Cell>\n        <Table.Cell>\n          {props.report.program_date} {props.report.program_start_time} -{' '}\n          {props.report.program_end_time}\n        </Table.Cell>\n        <Table.Cell>{props.report.status}</Table.Cell>\n      </Table.Row>\n    </React.Fragment>\n  );\n};\n\n// const mapStateToProps = state => ({\n//   report: state.report\n// });\n\nconst connectedReportListItem = connect(\n  null,\n  { getOneReport }\n)(ReportListItem);\n\nexport default connectedReportListItem;\n","import React from 'react';\nimport { connect } from 'react-redux';\n// import Moment from 'react-moment';\nimport { showNotificationWithTimeout } from '../../reducers/notificationReducer';\nimport { getOneReport } from '../../actions/reportActions';\nimport ReportFilterForm from './ReportFilterForm';\nimport ReportListItem from './ReportListItem';\n// import moment from 'moment';\nimport { Container, Table } from 'semantic-ui-react';\n\nconst ReportList = props => {\n  console.log('Reportlist props', props);\n\n  if (props.reportsList.length === 0) {\n    return (\n      <Container>\n        <h2>Ei raportteja valittuna ajankohtana. Valitse vuosi ja kuukausi</h2>\n        <ReportFilterForm />\n      </Container>\n    );\n  }\n\n  return (\n    <Container>\n      <ReportFilterForm />\n\n      <Table striped>\n        <Table.Header>\n          <Table.Row>\n            <Table.Cell>Ohjelmanro</Table.Cell>\n            <Table.Cell>Nimi</Table.Cell>\n            <Table.Cell>Aika</Table.Cell>\n            <Table.Cell>Tila</Table.Cell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {props.reportsList.map(r => (\n            <ReportListItem key={r.id} report={r} />\n          ))}\n        </Table.Body>\n      </Table>\n    </Container>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('report list state to props', state);\n  return {\n    report: state.report,\n    reportsList: state.reportsList,\n    notification: state.notification,\n    login: state.login\n  };\n};\n\nconst mapDispatchToProps = {\n  showNotificationWithTimeout,\n  getOneReport\n};\n\nconst connectedReportList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ReportList);\n\nexport default connectedReportList;\n","import axios from 'axios';\nconst baseUrl = '/api/login';\n\nconst login = async credentials => {\n  const res = await axios.post(baseUrl, credentials);\n  return res.data;\n};\n\nexport default { login };\n","import loginService from '../services/login';\nimport reportService from '../services/reports';\nimport userService from '../services/users';\nimport {\n  INIT_USER,\n  LOGIN,\n  LOGOUT,\n  LOGIN_ERROR,\n  SET_LOADING\n} from '../actions/types';\n\nexport const initializeUser = () => async dispatch => {\n  try {\n    setLoading();\n    const loggedUserJSON = window.localStorage.getItem('loggedUser');\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      // set token for logged in user\n      userService.setToken(user.token);\n      reportService.setToken(user.token);\n      dispatch({\n        type: INIT_USER,\n        data: user\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: LOGIN_ERROR,\n      payload: err.response.statusText\n    });\n  }\n};\n\nexport const newLogin = (user, errorNotification) => async dispatch => {\n  try {\n    setLoading();\n    const newUser = await loginService.login(user);\n    window.localStorage.setItem('loggedUser', JSON.stringify(newUser));\n    // set token for logged in user\n    // blogService.setToken(newUser.token);\n    dispatch({\n      type: LOGIN,\n      data: newUser\n    });\n  } catch (exception) {\n    errorNotification(`väärä käyttäjätunnus tai salasana`, 4);\n  }\n};\n\nexport const logout = () => async dispatch => {\n  window.localStorage.removeItem('loggedUser');\n  dispatch({\n    type: LOGOUT\n  });\n};\n\n// Set loading to true\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Button } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { newLogin } from '../../actions/loginActions';\nimport { showNotificationWithTimeout } from '../../reducers/notificationReducer';\n\nconst LoginForm = ({ newLogin }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  // handle login redux\n  const handleLogin = async event => {\n    event.preventDefault();\n    const user = {\n      username,\n      password\n    };\n    console.log(user);\n\n    const errorNotification = showNotificationWithTimeout;\n    newLogin(user, errorNotification);\n  };\n  return (\n    <Form onSubmit={handleLogin}>\n      <Form.Field>\n        <label>Käyttäjätunnus</label>\n        <input\n          type=\"text\"\n          placeholder=\"Käyttäjätunnus...\"\n          onChange={e => setUsername(e.target.value)}\n        />\n      </Form.Field>\n      <Form.Field>\n        <label>Salasana</label>\n        <input\n          type=\"password\"\n          placeholder=\"Salasana...\"\n          onChange={e => setPassword(e.target.value)}\n        />\n      </Form.Field>\n      <Button type=\"submit\">Kirjaudu</Button>\n    </Form>\n  );\n};\n\nLoginForm.propTypes = {\n  newLogin: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { newLogin, showNotificationWithTimeout }\n)(LoginForm);\n","import React from 'react';\nimport { Table, Icon } from 'semantic-ui-react';\n\nconst ReportWithTracksItem = props => {\n  const onDelete = () => {\n    console.log('klikd delete');\n  };\n  const onEdit = () => {\n    console.log('klikd edit');\n  };\n  const minutes = Math.floor(props.track.length / 60);\n  const seconds = props.track.length - minutes * 60;\n\n  return (\n    <Table.Row>\n      <Table.Cell>{props.track.sortable_rank}</Table.Cell>\n      <Table.Cell>{props.track.artist_name}</Table.Cell>\n      <Table.Cell>{props.track.track_title}</Table.Cell>\n      <Table.Cell>\n        {minutes}:{seconds}\n      </Table.Cell>\n      <Table.Cell>\n        <Icon onClick={onDelete} name=\"delete\" />\n      </Table.Cell>\n      <Table.Cell>\n        <Icon onClick={onEdit} name=\"edit\" />\n      </Table.Cell>\n    </Table.Row>\n  );\n};\n\nexport default ReportWithTracksItem;\n","import React from 'react';\n\nconst ReportDetails = props => {\n  console.log('report detauls props', props);\n  if (props.report === null) {\n    return <div>loading...</div>;\n  }\n  return (\n    <div>\n      <h3>Raportin tiedot:</h3>\n      <h2>{props.report[0].program_name}</h2>\n    </div>\n  );\n};\n\nexport default ReportDetails;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Table } from 'semantic-ui-react';\nimport { getOneReport, getReportDetails } from '../../actions/reportActions';\nimport ReportWithTracksItem from './ReportWithTracksItem';\nimport ReportDetails from './ReportDetails';\n\nconst ReportWithTracks = props => {\n  // get report tracks by report id\n  useEffect(() => {\n    props.getOneReport(props.id);\n    // eslint-disable-next-line\n  }, []);\n  // get report details by report id\n  useEffect(() => {\n    console.log('get details of report ', props.id);\n    props.getReportDetails(props.id);\n    // eslint-disable-next-line\n  }, []);\n\n  if (props.report.report === null) {\n    return <Container>loading</Container>;\n  }\n\n  return (\n    <Container>\n      <h3>Raportti</h3>\n      <Table striped>\n        <Table.Header>\n          <Table.Row>\n            <Table.Cell>#</Table.Cell>\n            <Table.Cell>Artisti</Table.Cell>\n            <Table.Cell>Biisi</Table.Cell>\n            <Table.Cell>Kesto</Table.Cell>\n            <Table.Cell></Table.Cell>\n            <Table.Cell></Table.Cell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {props.report.report.map(track => (\n            <ReportWithTracksItem key={track.sortable_rank} track={track} />\n          ))}\n        </Table.Body>\n      </Table>\n      <ReportDetails report={props.report.reportDetails} />\n    </Container>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('reportwithtracks state', state);\n  return {\n    report: state.report,\n    reportsList: state.reportsList\n  };\n};\n\nconst connectedReportWithTracks = connect(\n  mapStateToProps,\n  { getOneReport, getReportDetails }\n)(ReportWithTracks);\n\nexport default connectedReportWithTracks;\n","import React, { useEffect } from 'react';\n// import 'materialize-css/dist/css/materialize.min.css';\n// import M from 'materialize-css/dist/js/materialize.min.js';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\n// import './App.css';\n\nimport Home from './components/layout/Home';\nimport UserList from './components/user/UserList';\nimport ReportList from './components/report/ReportList';\nimport LoginForm from './components/login/LoginForm';\nimport { Container, Menu } from 'semantic-ui-react';\n\nimport { initializeUser, logout } from './actions/loginActions';\nimport ReportWithTracks from './components/report/ReportWithTracks';\n\nconst App = props => {\n  // initial logged in user\n  useEffect(() => {\n    props.initializeUser();\n    // eslint-disable-next-line\n  }, []);\n\n  // handle logout redux\n  const handleLogout = () => {\n    props.logout();\n  };\n\n  console.log('app 74', props);\n  if (props.login.user === null) {\n    return (\n      <Container>\n        <LoginForm />\n      </Container>\n    );\n  }\n  return (\n    <Router>\n      <div>\n        Logged in as {props.login.username}\n        <button onClick={handleLogout}>logout</button>\n        <Menu inverted>\n          <Menu.Item link>\n            <Link to=\"/\">Etusivu</Link>\n          </Menu.Item>\n          <Menu.Item link>\n            <Link to=\"/reports\">Raportit</Link>\n          </Menu.Item>\n          <Menu.Item link>\n            <Link to=\"/\">Top 100</Link>\n          </Menu.Item>\n          <Menu.Item link>\n            <Link to=\"/\">Haku</Link>\n          </Menu.Item>\n          <Menu.Item link>\n            <Link to=\"/users\">Käyttäjät</Link>\n          </Menu.Item>\n          <Menu.Item link>\n            <Link to=\"/\">Ohjelmat</Link>\n          </Menu.Item>\n          <Menu.Item link>\n            <Link to=\"/\">Omat tiedot</Link>\n          </Menu.Item>\n        </Menu>\n      </div>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/reports\" component={ReportList} />\n        <Route\n          path=\"/reports/:id\"\n          render={({ match }) => {\n            console.log('*');\n            return <ReportWithTracks id={match.params.id} />;\n          }}\n        />\n        <Route exact path=\"/users\" component={UserList} />\n      </Switch>\n    </Router>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('app state', state);\n  return {\n    reportsList: state.reportsList,\n    login: state.login,\n    users: state.users\n  };\n};\n\nconst mapDispatchToProps = {\n  initializeUser,\n  logout\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import {\n  INIT_USER,\n  LOGIN,\n  LOGOUT,\n  LOGIN_ERROR,\n  SET_LOADING\n} from '../actions/types';\n\nconst initialState = {\n  user: null,\n  loading: false,\n  error: null\n};\n\nconst loginReducer = (state = initialState, action) => {\n  // console.log('loginreducer state', state);\n  // console.log('loginreducer action', action);\n\n  switch (action.type) {\n    case INIT_USER:\n      return action.data;\n\n    case LOGOUT:\n      return initialState;\n\n    case LOGIN:\n      return action.data;\n\n    case LOGIN_ERROR:\n      console.error(action.payload);\n      return {\n        ...state,\n        error: action.payload\n      };\n\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default loginReducer;\n","import {\n  GET_ONE_REPORT,\n  GET_REPORT_DETAILS,\n  SET_LOADING\n} from '../actions/types';\n\nconst initialState = {\n  report: null,\n  reportDetails: null,\n  loading: false\n};\n\nconst reportReducer = (state = initialState, action) => {\n  console.log('reportreducer state now: ', state);\n  console.log('reportreducer action', action);\n  console.log(action.type);\n\n  switch (action.type) {\n    case GET_ONE_REPORT:\n      return {\n        ...state,\n        report: action.data,\n        loading: false\n      };\n    case GET_REPORT_DETAILS:\n      return {\n        ...state,\n        reportDetails: action.data,\n        loading: false\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reportReducer;\n","import {\n  INIT_USERS_LIST,\n  SET_LOADING,\n  SET_CURRENT,\n  USER_ERROR\n} from '../actions/types';\n\nconst initialState = {\n  users: null,\n  current: null,\n  loading: false,\n  error: null\n};\nconst userReducer = (state = initialState, action) => {\n  // console.log('userreducer state now: ', state);\n  // console.log('userreducer action', action.data);\n\n  switch (action.type) {\n    case INIT_USERS_LIST:\n      return {\n        ...state,\n        users: action.data\n      };\n\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    case SET_CURRENT:\n      return {\n        ...state,\n        current: action.payload\n      };\n    case USER_ERROR:\n      console.error(action.payload);\n      return {\n        ...state,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","export const GET_ALL_REPORTS_BY_DATE = 'GET_ALL_REPORTS_BY_DATE';\n\nconst reportListReducer = (state = [], action) => {\n  console.log('report list reducer state now: ', state);\n  console.log('report list reducer action', action);\n  console.log(action.type);\n\n  switch (action.type) {\n    // date is YYYY-MM\n    case GET_ALL_REPORTS_BY_DATE:\n      return action.data;\n\n    default:\n      return state;\n  }\n};\n\nexport default reportListReducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport loginReducer from './reducers/loginReducer';\nimport notificationReducer from './reducers/notificationReducer';\nimport reportReducer from './reducers/reportReducer';\nimport userReducer from './reducers/userReducer';\nimport reportsListReducer from './reducers/reportsListReducer';\n\nconst reducer = combineReducers({\n  login: loginReducer,\n  notification: notificationReducer,\n  report: reportReducer,\n  reportsList: reportsListReducer,\n  users: userReducer\n});\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}