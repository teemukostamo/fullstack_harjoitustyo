{"version":3,"sources":["actions/types.js","services/reports.js","actions/reportActions.js","components/report/CreateNewReportForm.js","components/layout/Home.js","services/users.js","components/user/User.js","actions/userActions.js","reducers/notificationReducer.js","components/user/UserList.js","actions/reportsListActions.js","components/report/ReportFilterForm.js","components/report/ReportListItem.js","components/report/ReportList.js","services/login.js","services/programs.js","services/search.js","services/tracks.js","components/login/LoginForm.js","actions/loginActions.js","components/report/ReportTransferOptions.js","components/report/ReportTransferListItem.js","components/report/ReportTransferList.js","actions/reportTransferActions.js","components/report/ReportWithTracksItem.js","components/track/SearchTrack.js","actions/searchActions.js","components/track/GetDjOnlineTracks.js","actions/trackActions.js","components/layout/Togglable.js","components/report/ReportDetails.js","components/report/ReportWithTracks.js","App.js","actions/programActions.js","reducers/loginReducer.js","reducers/reportReducer.js","reducers/userReducer.js","reducers/reportsListReducer.js","reducers/programReducer.js","reducers/searchReducer.js","store.js","index.js"],"names":["SET_LOADING","download","require","token","getAllByDate","date","a","config","headers","Authorization","console","log","axios","get","request","data","getOne","id","getAllTransfers","addTrackToReport","trackToAdd","post","deleteTrackFromReport","delete","getReportDetails","createReport","newReport","response","updateReport","updatedReport","put","downloadReport","filename","responseType","setToken","newToken","getOneReport","dispatch","type","reportService","report","connectedCreateNewReportForm","connect","state","reportsList","programs","notification","users","login","props","useState","programId","setProgramId","programNumber","setProgramNumber","first_name","last_name","dj","setDj","Date","programDate","setProgramDate","programStartTime","setProgramStartTime","programEndTime","setProgramEndTime","redirect","setRedirect","allPrograms","programOptions","map","program","key","text","name","value","to","Fragment","Grid","divided","Row","columns","Column","Container","Header","Form","Field","Dropdown","placeholder","openOnFocus","selection","search","options","onChange","event","preventDefault","Input","e","target","Group","widths","selected","dateFormat","Button","onClick","user_id","program_id","program_date","moment","format","program_start_time","program_end_time","program_no","program_dj","status","rerun","reportDetails","Home","getAll","req","mapDispatchToProps","setCurrent","user","payload","connectedUser","userLevelOutPrint","password","setPassword","confirmPassword","setConfirmPassword","firstName","setFirstName","lastName","setLastName","email","setEmail","level","setLevel","Table","Cell","Modal","trigger","href","username","closeIcon","content","Content","onSubmit","disabled","focus","label","control","last_seen","Icon","initialState","message","setNotification","clearNotification","nextNotificationId","showNotificationWithTimeout","duration","setTimeout","notificationReducer","action","connectedUserList","loading","Dimmer","active","inverted","Loader","size","striped","Body","getAllReportsByDate","reports","sortByUserId","connectedReportFilterForm","reportMonth","setReportMonth","reportYear","setReportYear","userId","setUserId","setStatus","filterText","setFilterText","getFullYear","years","i","push","yearOptions","option","reverse","userOptions","addAllToUserOptions","getReportsByMonth","connectedReportListItem","reportStatusOutPrint","connectedReportList","useEffect","Segment","length","r","credentials","res","getTracksForSearch","query","checkDjonlineTracks","searchParams","process","studioId","prop","tracks","arr","newArr","forEach","track","index","hours","charAt","parseInt","split","seconds","startTime","endTime","album_name","album","artist_name","artist","cat_id","matrix","disc_no","side","track_no","tracknumber","isrc","record_country","recording_country","country","play_time","djonline_id","track_title","song","year","report_id","newerArr","sortable_rank","sortable_rank_start","returnArr","newLogin","errorNotification","loginService","newUser","window","localStorage","setItem","JSON","stringify","setUsername","handleLogin","connectedReportTransferOptions","pickerDate","setPickerDate","showMonthYearPicker","connectedReportTransferListItem","item","created_at","period","connectedReportTransferList","reportTransferList","connectedReportWithTracksItem","params","report_track_id","deletedTrack","minutes","Math","floor","connectedSearchTrack","getAutocompleteResults","searchService","results","searchQuery","setSearchQuery","trackToSave","setTrackToSave","timeout","clearTimeout","handleResultSelect","result","track_id","searchResults","title","style","marginLeft","marginBottom","Search","onResultSelect","onSearchChange","onSelectionChange","connectedGetDjOnlineTracks","getDjonlineTracks","trackService","setDate","setStudioId","setStartTime","setEndTime","Togglable","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","buttonLabel","children","connectedReportDetails","setRerun","statusPlaceholder","horizontal","Checkbox","checked","updatedReportDetails","connectedReportWithTracks","undefined","djonline","initializeUser","loggedUserJSON","getItem","parse","userService","programService","err","statusText","logout","removeItem","initializePrograms","initializeUsers","Menu","Item","link","exact","path","component","ReportList","ReportTransferList","render","match","UserList","error","loginReducer","reportReducer","filter","current","userReducer","reportListReducer","programReducer","trackResults","artistResults","albumResults","searchReducer","reducer","combineReducers","reportsListReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,UAuNSkB,SApNC,SAACC,EAAD,GAAuB,IAAbnB,EAAY,EAAZA,MAC7BmB,EAAMC,iBACNhC,EAAoBY,GACpBjE,QAAQC,IAAImD,MAkNO,KAEL,kBAACuB,EAAA,EAAKC,MAAN,KACE,sDACA,kBAACC,EAAA,EAAD,CACEC,YAAY,QACZC,aAAW,EACXC,WAAS,EACTC,QAAM,EACNC,QAvNG,CACrB,CACEpB,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,UAiGSkB,SA9FD,SAACC,EAAD,GAAuB,IAAbnB,EAAY,EAAZA,MAC3BmB,EAAMC,iBACN9B,EAAkBU,GAClBjE,QAAQC,IAAIqD,MA4FO,MAGP,kBAACqB,EAAA,EAAKc,MAAN,CAAYC,OAAO,SACjB,kBAACG,EAAA,EAAD,CAAQC,QA7FH,WACnB,IAAM9E,EAAY,CAChB+E,QAASxD,EAAMD,MAAM/B,GACrByF,WAAYvD,EACZwD,aAAcC,IAAOhD,GAAaiD,OAAO,cACzCC,mBAAoBhD,EACpBiD,iBAAkB/C,EAClBgD,WAAY3D,EACZ4D,WAAYxD,EACZyD,OAAQ,EACRC,MAAO,MAETlE,EAAMxB,aAAaC,GACnBhB,QAAQC,IAAI,kCAAmCsC,EAAMT,OAAO4E,eAC5D1G,QAAQC,IAAI,mBAAoBe,GAChCyC,GAAY,KA8EE,aAKR,kBAACW,EAAA,EAAKI,OAAN,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,uCACA,0xBCzYCiC,EAPF,kBACX,kBAAClC,EAAA,EAAD,KACE,gEACA,kBAAC,EAAD,Q,4CCJAhF,EAAQ,KAeG,GAAEmH,OATL,uCAAG,8BAAAhH,EAAA,6DACPC,EAAS,CACbC,QAAS,CAAEC,cAAeN,IAFf,SAIKS,IAAMC,IAZV,aAYuBN,GAJxB,cAIPgH,EAJO,OAKb7G,QAAQC,WAAW4G,EAAIlH,MALV,kBAMNkH,EAAIxG,MANE,2CAAH,qDASamB,SAbR,SAAAC,GACfhC,EAAK,iBAAagC,KCgJdqF,EAAqB,CACzBC,WC5HwB,SAAAC,GACxB,MAAO,CACLpF,KPpBuB,cOqBvBqF,QAASD,KDiIEE,EALOlF,YACpB,KACA8E,EAFoB9E,EA5IT,SAAAO,GAAU,IA0BjB4E,EA1BgB,EACY3E,mBAAS,IADrB,mBACb4E,EADa,KACHC,EADG,OAE0B7E,mBAAS,IAFnC,mBAEb8E,EAFa,KAEIC,EAFJ,OAGc/E,mBAASD,EAAMyE,KAAKnE,YAHlC,mBAGb2E,EAHa,KAGFC,EAHE,OAIYjF,mBAASD,EAAMyE,KAAKlE,WAJhC,mBAIb4E,EAJa,KAIHC,EAJG,OAKMnF,mBAASD,EAAMyE,KAAKY,OAL1B,mBAKbA,EALa,KAKNC,EALM,OAMMrF,mBAASD,EAAMyE,KAAKc,OAN1B,mBAMbA,EANa,KAMNC,EANM,KAoCpB,OAPEZ,EADY,IAAVW,EACkB,KACD,IAAVA,EACW,WAEA,QAIpB,kBAACE,EAAA,EAAM1D,IAAP,KACE,kBAAC0D,EAAA,EAAMC,KAAP,KACE,kBAACC,EAAA,EAAD,CACEC,QACE,uBAAGC,KAAK,KAAKtC,QAAS,kBAAMvD,EAAMwE,WAAWxE,EAAMyE,QAChDzE,EAAMyE,KAAKqB,UAGhBC,WAAS,GAET,kBAAC5D,EAAA,EAAD,CAAQ6D,QAAQ,uCAChB,kBAACL,EAAA,EAAMM,QAAP,KACE,kBAAC7D,EAAA,EAAD,CAAM8D,SArCQ,SAAAlD,GACtBA,EAAEF,iBACFrF,QAAQC,IACN,gBACAmH,EACAE,EACAE,EACAE,EACAE,EACAE,GAEF9H,QAAQC,IAAI,WAAYsC,EAAMyE,KAAKzG,MA2BzB,kBAACoE,EAAA,EAAKC,MAAN,KACE,0DACA,kBAACU,EAAA,EAAD,CACErB,MAAO1B,EAAMyE,KAAKqB,SAClBzG,KAAK,OACLkD,YAAY,6BACZ4D,UAAQ,KAGZ,kBAAC/D,EAAA,EAAKC,MAAN,KACE,sEACA,kBAACU,EAAA,EAAD,CACEqD,OAAK,EACL/G,KAAK,WACLkD,YAAY,cACZK,SAAU,SAAAI,GAAC,OAAI8B,EAAY9B,EAAEC,OAAOvB,WAGxC,kBAACU,EAAA,EAAKC,MAAN,KACE,qDACA,kBAACU,EAAA,EAAD,CACEqD,OAAK,EACL/G,KAAK,WACLkD,YAAY,uBACZK,SAAU,SAAAI,GAAC,OAAIgC,EAAmBhC,EAAEC,OAAOvB,WAG/C,kBAACU,EAAA,EAAKC,MAAN,KACE,0CACA,kBAACU,EAAA,EAAD,CACEqD,OAAK,EACL1E,MAAOuD,EACP5F,KAAK,OACLkD,YAAY,aACZK,SAAU,SAAAI,GAAC,OAAIkC,EAAalC,EAAEC,OAAOvB,WAGzC,kBAACU,EAAA,EAAKC,MAAN,KACE,2CACA,kBAACU,EAAA,EAAD,CACEqD,OAAK,EACL1E,MAAOyD,EACP9F,KAAK,OACLkD,YAAY,cACZK,SAAU,SAAAI,GAAC,OAAIoC,EAAYpC,EAAEC,OAAOvB,WAGxC,kBAACU,EAAA,EAAKC,MAAN,KACE,wCACA,kBAACU,EAAA,EAAD,CACEqD,OAAK,EACL1E,MAAO2D,EACPhG,KAAK,OACLkD,YAAY,WACZK,SAAU,SAAAI,GAAC,OAAIsC,EAAStC,EAAEC,OAAOvB,WAGrC,kBAACU,EAAA,EAAKC,MAAN,CACEgE,MAAM,OACNC,QAAQ,SACR5E,MAAO6D,EACP3C,SAAU,SAAAI,GAAC,OAAIwC,EAASxC,EAAEC,OAAOvB,SAEjC,4BAAQA,MAAM,KAAd,MACA,4BAAQA,MAAM,KAAd,YACA,4BAAQA,MAAM,KAAd,UAEF,kBAAC4B,EAAA,EAAD,CAAQjE,KAAK,UAAb,gBAKR,kBAACoG,EAAA,EAAMC,KAAP,KACG1F,EAAMyE,KAAKnE,WADd,IAC2BN,EAAMyE,KAAKlE,WAEtC,kBAACkF,EAAA,EAAMC,KAAP,KACE,kBAAC,IAAD,CAAQ9B,OAAO,2BAA2B5D,EAAMyE,KAAK8B,YAEvD,kBAACd,EAAA,EAAMC,KAAP,KAAad,GACb,kBAACa,EAAA,EAAMC,KAAP,KACE,kBAACc,EAAA,EAAD,CAAMjD,QA1HK,WACf9F,QAAQC,IAAR,+BAAoCsC,EAAMyE,KAAKzG,MAyHlByD,KAAK,gB,ylBEhJtC,IAAMgF,GAAe,CACnBC,QAAS,MAuBLC,GAAkB,SAAC3I,EAAI0I,GAE3B,OADAjJ,QAAQC,IAAIgJ,GACL,SAAAtH,GACLA,EAAS,CACPC,KAAM,eACNrB,KACA0I,cAKAE,GAAoB,SAAA5I,GACxB,MAAO,CACLqB,KAAM,QACNrB,OAIA6I,GAAqB,EAClB,SAASC,GAA4BtF,EAAMuF,GAEhD,OADAA,GAAsB,IACf,SAAS3H,GACd,IAAMpB,EAAK6I,KACXzH,EAASuH,GAAgB3I,EAAIwD,IAE7BwF,YAAW,WACT5H,EAASwH,GAAkB5I,MAC1B+I,IAIQE,OAnDa,WAAmC,IAAlCvH,EAAiC,uDAAzB+G,GAAcS,EAAW,uCAE5D,OADAzJ,QAAQC,IAAI,SAAUwJ,GACdA,EAAO7H,MACb,IAAK,eACH,OAAO,GAAP,GACKK,EADL,CAEEgH,QAASQ,EAAOR,UAGpB,IAAK,QACH,OAAO,GAAP,GACKhH,EADL,CAEEgH,QAAS,OAGb,QACE,OAAOhH,ICsBP6E,GAAqB,CACzBuC,gCAaaK,GALW1H,aALF,SAAAC,GAAK,MAAK,CAChCI,MAAOJ,EAAMI,MACbC,MAAOL,EAAMK,SAKbwE,GAFwB9E,EA5CT,SAAAO,GACf,OAA0B,OAAtBA,EAAMF,MAAMA,QAA0C,IAAxBE,EAAMF,MAAMsH,QAE1C,kBAAClF,EAAA,EAAD,KACE,kBAACmF,EAAA,EAAD,CAAQC,QAAM,EAACC,UAAQ,GACrB,kBAACC,EAAA,EAAD,CAAQC,KAAK,UAAb,oCAMRhK,QAAQC,IAAI,iBAAkBsC,GAE5B,kBAACkC,EAAA,EAAD,KACE,kDACA,kBAACuD,EAAA,EAAD,CAAOiC,SAAO,GACZ,kBAACjC,EAAA,EAAMtD,OAAP,KACE,kBAACsD,EAAA,EAAM1D,IAAP,KACE,kBAAC0D,EAAA,EAAMC,KAAP,gCACA,kBAACD,EAAA,EAAMC,KAAP,aACA,kBAACD,EAAA,EAAMC,KAAP,gCACA,kBAACD,EAAA,EAAMC,KAAP,eAIJ,kBAACD,EAAA,EAAMkC,KAAP,KACG3H,EAAMF,MAAMA,MAAMuB,KAAI,SAAAoD,GAAI,OACzB,kBAAC,EAAD,CAAMA,KAAMA,EAAMlD,IAAKkD,EAAKzG,eCxB3B4J,GAAsB,SAAAxK,GAAI,8CAAI,WAAMgC,GAAN,eAAA/B,EAAA,sEAEvC+B,EAAS,CACPC,KAAMtC,IAERqC,EAAS,CACPC,KVI8B,yBUVO,SAQjBC,EAAcnC,aAAaC,GARV,OAQjCyK,EARiC,OAUvCzI,EAAS,CACPC,KVPiC,0BUQjCvB,KAAM+J,EACNzK,SAbqC,gDAgBvCK,QAAQC,IAAR,MAhBuC,yDAAJ,uD,UCyOjC6G,GAAqB,CACzBpF,eACAyI,uBACAE,aDxN0B,SAAA9J,GAAE,8CAAI,WAAMoB,GAAN,SAAA/B,EAAA,sDAChCI,QAAQC,IAAI,eAAgBM,GAC5BoB,EAAS,CACPC,KVV2B,kBUW3BvB,KAAME,IAJwB,2CAAJ,wDCgOf+J,GALmBtI,aAjBV,SAAAC,GAEtB,OADAjC,QAAQC,IAAI,kCAAmCgC,GACxC,CACLH,OAAQG,EAAMH,OACdI,YAAaD,EAAMC,YACnBE,aAAcH,EAAMG,aACpBC,MAAOJ,EAAMI,MACbC,MAAOL,EAAMK,SAYfwE,GAFgC9E,EAhPT,SAAAO,GAAS,MAEMC,mBAAS,IAFf,mBAEzB+H,EAFyB,KAEZC,EAFY,OAGIhI,mBAAS,IAHb,mBAGzBiI,EAHyB,KAGbC,EAHa,OAIJlI,mBAAS,IAJL,mBAIzBmI,EAJyB,KAIjBC,EAJiB,OAKJpI,mBAAS,IALL,mBAKzBgE,EALyB,KAKjBqE,EALiB,OAMIrI,mBAAS,IANb,mBAMzBsI,EANyB,KAMbC,EANa,KAShC,GAFA/K,QAAQC,IAAI6K,GAEc,OAAtBvI,EAAMF,MAAMA,MACd,OAAO,wCAoET,IAjEA,IA+DM1C,GAAO,IAAIsD,MAAO+H,cAAgB,EAClCC,EAAQ,GACLC,EAAI,KAAMA,GAAKvL,EAAMuL,IAC5BD,EAAME,KAAKD,GAEb,IAAIE,EAAcH,EAAMrH,KAAI,SAAAyH,GAAM,MAAK,CACrCvH,IAAKuH,EACLtH,KAAMsH,EACNpH,MAAOoH,MAETD,EAAcA,EAAYE,UAC1B,IAAMC,EAAchJ,EAAMF,MAAMA,MAAMuB,KAAI,SAAAoD,GAAI,MAAK,CACjDlD,IAAKkD,EAAKzG,GACVwD,KAAK,GAAD,OAAKiD,EAAKnE,WAAV,YAAwBmE,EAAKlE,WACjCmB,MAAO+C,EAAKzG,OAERiL,EAAmB,CACvB,CACE1H,IAAK,EACLC,KAAM,SACNE,MAAO,IAJc,oBAMpBsH,IA0BLvL,QAAQC,IAAIuL,GACZxL,QAAQC,IAAIsK,GACZvK,QAAQC,IAAIwK,GAgCZ,OACE,kBAAC,IAAMtG,SAAP,KACE,kBAACQ,EAAA,EAAD,KACE,oDAEA,kBAACA,EAAA,EAAKc,MAAN,CAAYC,OAAO,SACjB,kBAACf,EAAA,EAAKC,MAAN,KACE,kBAACC,EAAA,EAAD,CACEC,YAAY,WACZC,aAAa,EACbC,WAAS,EACTE,QA5JS,CACnB,CACEpB,IAAK,KACLC,KAAM,WACNE,MAAO,MAET,CACEH,IAAK,KACLC,KAAM,WACNE,MAAO,MAET,CACEH,IAAK,KACLC,KAAM,YACNE,MAAO,MAET,CACEH,IAAK,KACLC,KAAM,WACNE,MAAO,MAET,CACEH,IAAK,KACLC,KAAM,WACNE,MAAO,MAET,CACEH,IAAK,KACLC,KAAM,aACNE,MAAO,MAET,CACEH,IAAK,KACLC,KAAM,cACNE,MAAO,MAET,CACEH,IAAK,KACLC,KAAM,SACNE,MAAO,MAET,CACEH,IAAK,KACLC,KAAM,UACNE,MAAO,MAET,CACEH,IAAK,KACLC,KAAM,UACNE,MAAO,MAET,CACEH,IAAK,KACLC,KAAM,YACNE,MAAO,MAET,CACEH,IAAK,KACLC,KAAM,WACNE,MAAO,OAkGCkB,SAlCK,SAACC,EAAD,GAAuB,IAAbnB,EAAY,EAAZA,MACzBmB,EAAMC,iBACNmF,EAAevG,OAmCT,kBAACU,EAAA,EAAKC,MAAN,KACE,kBAACC,EAAA,EAAD,CACEC,YAAY,QACZC,aAAW,EACXC,WAAS,EACTE,QAASkG,EACTjG,SArCI,SAACC,EAAD,GAAuB,IAAbnB,EAAY,EAAZA,MACxBmB,EAAMC,iBACNqF,EAAczG,MAoCH,MAIP,kBAACU,EAAA,EAAKC,MAAN,KACE,kBAACiB,EAAA,EAAD,CAAQC,QAAS,kBAzDC,WACxB,IAAMnG,EAAO8K,EAAa,IAAMF,EAChCvK,QAAQC,IAAIN,GACZK,QAAQC,IAAI,QACZsC,EAAM4H,oBAAoBxK,GAqDG8L,KAAvB,QAEF,wCAEA,kBAAC9G,EAAA,EAAKc,MAAN,CAAYC,OAAO,SACjB,kBAACf,EAAA,EAAKC,MAAN,KACE,kBAACC,EAAA,EAAD,CACEC,YAAY,oBACZC,aAAa,EACbE,QAAM,EACND,WAAS,EACTE,QAASsG,EACTrG,SAnDI,SAACC,EAAD,GAAuB,IAAbnB,EAAY,EAAZA,MACxBmB,EAAMC,iBACNuF,EAAU3G,GACVjE,QAAQC,IAAI,UAAW0K,GACvBpI,EAAM8H,aAAaM,OAkDb,kBAAChG,EAAA,EAAKC,MAAN,KACE,kBAACC,EAAA,EAAD,CACEC,YAAY,OACZC,aAAW,EACXC,WAAS,EACTC,QAAM,EACNC,QAzGU,CACpB,CACEpB,IAAK,IACLC,KAAM,SACNE,MAAO,KAET,CACEH,IAAK,IACLC,KAAM,mBACNE,MAAO,KAET,CACEH,IAAK,IACLC,KAAM,SACNE,MAAO,KAET,CACEH,IAAK,IACLC,KAAM,YACNE,MAAO,MAuFCkB,SAvDM,SAACC,EAAD,GAAuB,IAAbnB,EAAY,EAAZA,MAC1BmB,EAAMC,iBACNwF,EAAU5G,GAEVjE,QAAQC,IAAI,OAAQuG,MAoDT,KAEL,kBAAC7B,EAAA,EAAKC,MAAN,KACE,kBAACU,EAAA,EAAD,CACE1D,KAAK,OACLkD,YAAY,iBACZK,SAAU,SAAAI,GAAC,OAAIwF,EAAcxF,EAAEC,OAAOvB,iBCnLrCyH,GALiB1J,YAC9B,KACA,CAAEN,gBAF4BM,EAjCT,SAAAO,GACrB,IAAIoJ,EAEJ,GAA4B,IAAxBpJ,EAAMT,OAAO0E,OACfmF,EAAuB,cAClB,GAA4B,IAAxBpJ,EAAMT,OAAO0E,OACtBmF,EAAuB,wBAClB,GAA4B,IAAxBpJ,EAAMT,OAAO0E,OAEtB,OADAmF,EAAuB,YAChB,KAET,OACE,kBAAC,IAAMxH,SAAP,KACE,kBAAC6D,EAAA,EAAM1D,IAAP,KACE,kBAAC0D,EAAA,EAAMC,KAAP,KAAa1F,EAAMT,OAAOwE,YAC1B,kBAAC0B,EAAA,EAAMC,KAAP,KACE,kBAAC,IAAD,CAAM/D,GAAE,kBAAa3B,EAAMT,OAAOvB,KAAOgC,EAAMT,OAAOkC,OAExD,kBAACgE,EAAA,EAAMC,KAAP,KACG1F,EAAMT,OAAOmE,aADhB,IAC+B1D,EAAMT,OAAOsE,mBAD5C,KACkE,IAC/D7D,EAAMT,OAAOuE,kBAEhB,kBAAC2B,EAAA,EAAMC,KAAP,KAAa0D,GACb,kBAAC3D,EAAA,EAAMC,KAAP,W,UC6CFnB,GAAqB,CACzBuC,+BACAc,uBACAzI,gBAQakK,GALa5J,aAhBJ,SAAAC,GAEtB,OADAjC,QAAQC,IAAI,6BAA8BgC,GACnC,CACLH,OAAQG,EAAMH,OACdI,YAAaD,EAAMC,YACnBE,aAAcH,EAAMG,aACpBE,MAAOL,EAAMK,SAYfwE,GAF0B9E,EArET,SAAAO,GAQjB,OANAsJ,qBAAU,WACRtJ,EAAM4H,oBAAoBjE,MAASC,OAAO,cAEzC,IACHnG,QAAQC,IAAI,mBAAoBsC,GAEM,OAAlCA,EAAML,YAAYA,aAAwBK,EAAML,YAAYyH,QAE5D,kBAACmC,GAAA,EAAD,KACE,kBAAClC,EAAA,EAAD,CAAQC,QAAM,EAACC,UAAQ,GACrB,kBAACC,EAAA,EAAD,CAAQD,UAAQ,EAACvB,QAAQ,kBAMY,IAAzChG,EAAML,YAAYA,YAAY6J,OAE9B,kBAACtH,EAAA,EAAD,KACE,iHAIA,kBAAC,GAAD,OAMJ,kBAACA,EAAA,EAAD,KACE,kBAAC,GAAD,MACA,kBAACuD,EAAA,EAAD,CAAOiC,SAAO,GACZ,kBAACjC,EAAA,EAAMtD,OAAP,KACE,kBAACsD,EAAA,EAAM1D,IAAP,KACE,kBAAC0D,EAAA,EAAMC,KAAP,mBACA,kBAACD,EAAA,EAAMC,KAAP,aACA,kBAACD,EAAA,EAAMC,KAAP,aACA,kBAACD,EAAA,EAAMC,KAAP,aACA,kBAACD,EAAA,EAAMC,KAAP,QAGJ,kBAACD,EAAA,EAAMkC,KAAP,KACG3H,EAAML,YAAYA,YAAY0B,KAAI,SAAAoI,GAAC,OAClC,kBAAC,GAAD,CAAgBlI,IAAKkI,EAAEzL,GAAIuB,OAAQkK,aChDhC,IAAE1J,MALN,uCAAG,WAAM2J,GAAN,eAAArM,EAAA,sEACMM,IAAMS,KAHV,aAGwBsL,GAD1B,cACNC,EADM,yBAELA,EAAI7L,MAFC,2CAAH,uDCAPZ,GAAQ,KA0BG,IAAEmH,OAnBL,uCAAG,8BAAAhH,EAAA,6DACPC,EAAS,CACbC,QAAS,CAAEC,cAAeN,KAFf,SAIKS,IAAMC,IAbV,gBAauBN,GAJxB,cAIPgH,EAJO,yBAKNA,EAAIxG,MALE,2CAAH,qDAmBaC,OAVb,uCAAG,WAAMC,GAAN,iBAAAX,EAAA,6DACPC,EAAS,CACbC,QAAS,CAAEC,cAAeN,KAE5BO,QAAQC,IAAI,iBAAkBM,GAJjB,SAKSL,IAAMC,IAAN,UAvBR,gBAuBQ,YAAwBI,GAAMV,GALvC,cAKPO,EALO,OAMbJ,QAAQC,IAAI,sCAAuCG,EAAQC,MAN9C,kBAOND,EAAQC,MAPF,2CAAH,sDAUqBmB,SAxBhB,SAAAC,GACfhC,GAAK,iBAAagC,KCHhBhC,GAAQ,KAiBG,IAAE+B,SAfA,SAAAC,GACfhC,GAAK,iBAAagC,IAcO0K,mBAXH,uCAAG,WAAMC,GAAN,iBAAAxM,EAAA,6DACnBC,EAAS,CACbC,QAAS,CAAEC,cAAeN,KAG5BO,QAAQC,IAAI,4BAA6BmM,GALhB,SAMHlM,IAAMC,IAAN,UAdR,cAcQ,mBAA+BiM,GAASvM,GANrC,cAMnBO,EANmB,OAOzBJ,QAAQC,IAAI,kDAAmDG,EAAQC,MAP9C,kBAQlBD,EAAQC,MARU,2CAAH,uD,8jBCRxB,IAEIZ,GAAQ,KAqEG,IAAE+B,SAnEA,SAAAC,GACfhC,GAAK,iBAAagC,IAkEO4K,oBA/DF,uCAAG,WAAMC,GAAN,2BAAA1M,EAAA,sEAELM,IAAMC,IAAN,UAChBoM,8CADgB,eACwBD,EAAaE,SADrC,iBACsDF,EAAa3M,OAH9D,OAM1B,IAAW8M,KAJLC,EAFoB,OAKtBC,EAAM,GACSD,EAAOrM,KACxBsM,EAAIxB,KAAKuB,EAAOrM,KAAKoM,IAPG,OAS1BE,EAAMA,EAAIrB,UACNsB,EAAS,GACbD,EAAIE,SAAQ,SAACC,EAAOC,GAClB,IAAIC,EAAQF,EAAMnN,KAAKsN,OAAO,IAAMH,EAAMnN,KAAKsN,OAAO,IACtDD,EAAQE,SAASF,GACjB,IAAIpN,EAAIkN,EAAMf,OAAOoB,MAAM,KACvBC,EAA2B,GAAjBF,SAAStN,EAAE,IAAWsN,SAAStN,EAAE,IAG7CoN,EAAQE,SAASZ,EAAae,YAC9BL,GAASE,SAASZ,EAAagB,UAIjCV,EAAOzB,KAAK,CACVoC,WAAYT,EAAMU,MAClBC,YAAaX,EAAMY,OACnBC,OAAQb,EAAMc,OACdC,QAASf,EAAMgB,KACfC,SAAUjB,EAAMkB,YAChBC,KAAMnB,EAAMmB,KACZC,eAAgBpB,EAAMqB,kBACtBC,QAAS,KACTC,UAAWvB,EAAMnN,KACjB2O,YAAaxB,EAAMvM,GACnBqI,MAAOkE,EAAMlE,MACbmD,OAAQqB,EACRmB,YAAazB,EAAM0B,KACnBC,KAAM3B,EAAM2B,KAEZC,UAAWpC,EAAaoC,eAGtB7O,EAAS,CACbC,QAAS,CAAEC,cAAeN,KAE5BO,QAAQC,IAAI,mCAAoC2M,GAC1C+B,EAAW,GACjB/B,EAAOC,SAAQ,SAACC,EAAOC,GACrB4B,EAASxD,KAAT,MACK2B,EADL,CAEE8B,cAAetC,EAAauC,oBAAsB9B,EAAQ,QAG1D+B,EAAY,GAChB9O,QAAQC,IAAI,yCAA0C0O,GACtDA,EAAS9B,QAAT,uCAAiB,WAAMC,GAAN,eAAAlN,EAAA,sEACOM,IAAMS,KAAN,UAhEV,cAgEU,aAAkCmM,EAAOjN,GADhD,OACTO,EADS,OAEf0O,EAAU3D,KAAK/K,EAAQC,MAFR,2CAAjB,uDAIAL,QAAQC,IAAI,8BAA+B6O,GA3DjB,kBA4DnBA,GA5DmB,4CAAH,uDCyCV9M,eACb,KACA,CAAE+M,SCXoB,SAAC/H,EAAMgI,GAAP,8CAA6B,WAAMrN,GAAN,eAAA/B,EAAA,sEAEjD+B,EAAS,CACPC,KAAMtC,IAHyC,SAK3B2P,GAAa3M,MAAM0E,GALQ,OAK3CkI,EAL2C,OAMjDC,OAAOC,aAAaC,QAAQ,aAAcC,KAAKC,UAAUL,IAGzDvN,EAAS,CACPC,KnBjDe,QmBkDfvB,KAAM6O,IAXyC,gDAcjDF,EAAkB,sDAAqC,GAdN,yDAA7B,uDDWV3F,gCAFCrH,EA3CG,SAAC,GAAkB,IAAhB+M,EAAe,EAAfA,SAAe,EACFvM,mBAAS,IADP,mBAC3B6F,EAD2B,KACjBmH,EADiB,OAEFhN,mBAAS,IAFP,mBAE3B4E,EAF2B,KAEjBC,EAFiB,KAK5BoI,EAAW,uCAAG,WAAMrK,GAAN,eAAAxF,EAAA,sDAClBwF,EAAMC,iBACA2B,EAAO,CACXqB,WACAjB,YAEFpH,QAAQC,IAAI+G,GAGZ+H,EAAS/H,EADiBqC,IARR,2CAAH,sDAWjB,OACE,kBAAC1E,EAAA,EAAD,CAAM8D,SAAUgH,GACd,kBAAC9K,EAAA,EAAKC,MAAN,KACE,0DACA,2BACEhD,KAAK,OACLkD,YAAY,6BACZK,SAAU,SAAAI,GAAC,OAAIiK,EAAYjK,EAAEC,OAAOvB,WAGxC,kBAACU,EAAA,EAAKC,MAAN,KACE,2CACA,2BACEhD,KAAK,WACLkD,YAAY,cACZK,SAAU,SAAAI,GAAC,OAAI8B,EAAY9B,EAAEC,OAAOvB,WAGxC,kBAAC4B,EAAA,EAAD,CAAQjE,KAAK,UAAb,gBEuBS8N,GALwB1N,aARf,SAAAC,GAEtB,OADAjC,QAAQC,IAAI,yCAA0CgC,GAC/C,CACLC,YAAaD,EAAMC,YACnBE,aAAcH,EAAMG,gBAMtB,CAAE+H,wBAFmCnI,EApDT,SAAAO,GAC5BvC,QAAQC,IAAI,gCAAiCsC,GADR,MAEDC,mBAAS,IAAIS,MAFZ,mBAE9B0M,EAF8B,KAElBC,EAFkB,KAIrC/D,qBAAU,WACRtJ,EAAM4H,oBAAoBjE,IAAOyJ,GAAYxJ,OAAO,cAEnD,CAACwJ,IAQJ,OAAsC,OAAlCpN,EAAML,YAAYA,YACb,wCAIP,6BACE,kBAACwC,EAAA,EAAD,mCACA,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKc,MAAN,CAAYC,OAAO,SACjB,kBAACf,EAAA,EAAKC,MAAN,KACE,kBAAC,IAAD,CACEe,SAAUgK,EACV/J,WAAW,YACXT,SAAU,SAAAxF,GAAI,OAAIiQ,EAAcjQ,IAChCkQ,qBAAmB,KAGvB,kBAAClL,EAAA,EAAKC,MAAN,MAGA,kBAACD,EAAA,EAAKC,MAAN,KACE,kBAACiB,EAAA,EAAD,CAAQC,QA5BM,WACtB9F,QAAQC,IACN,0BACAiG,IAAOyJ,GAAYxJ,OAAO,cAyBpB,cCZG2J,GALyB9N,YACtC,KACA,CAAEX,kBAFoCW,EApBT,SAAAO,GAI7B,OACE,kBAACyF,EAAA,EAAM1D,IAAP,KACE,kBAAC0D,EAAA,EAAMC,KAAP,KAAa1F,EAAMwN,KAAKC,YACxB,kBAAChI,EAAA,EAAMC,KAAP,KACG1F,EAAMwN,KAAKlN,WADd,IAC2BN,EAAMwN,KAAKjN,WAEtC,kBAACkF,EAAA,EAAMC,KAAP,KAAa1F,EAAMwN,KAAKE,QACxB,kBAACjI,EAAA,EAAMC,KAAP,KACE,kBAAC,IAAD,CAAM/D,GAAG,IAAI4B,QAAS,kBAXHxE,EAW0BiB,EAAMwN,KAAKzO,cAV5DD,EAAeC,GADQ,IAAAA,IAYhBiB,EAAMwN,KAAKzO,eCgChBwF,GAAqB,CACzBtG,gBChD6B,yDAAM,WAAMmB,GAAN,eAAA/B,EAAA,sEAEjC+B,EAAS,CACPC,KAAMtC,IAHyB,SAKXuC,EAAcrB,kBALH,OAK3B4J,EAL2B,OAOjCzI,EAAS,CACPC,KvBGkC,2BuBFlCvB,KAAM+J,IATyB,gDAYjCpK,QAAQC,IAAR,MAZiC,yDAAN,wDDwDhBiQ,GALqBlO,aAdZ,SAAAC,GAEtB,OADAjC,QAAQC,IAAI,6BAA8BgC,GACnC,CACLH,OAAQG,EAAMH,OACdI,YAAaD,EAAMC,YACnBE,aAAcH,EAAMG,aACpBE,MAAOL,EAAMK,SAUfwE,GAFkC9E,EAhDT,SAAAO,GAOzB,OANAvC,QAAQC,IAAI,6BAA8BsC,GAC1CsJ,qBAAU,WACRtJ,EAAM/B,oBAEL,IAE0C,OAAzC+B,EAAML,YAAYiO,mBACb,wCAIP,kBAAC1L,EAAA,EAAD,KACE,+CACA,kBAAC,GAAD,MACA,kBAACuD,EAAA,EAAD,KACE,kBAACA,EAAA,EAAMtD,OAAP,KACE,kBAACsD,EAAA,EAAM1D,IAAP,KACE,kBAAC0D,EAAA,EAAMC,KAAP,wCACA,kBAACD,EAAA,EAAMC,KAAP,0BACA,kBAACD,EAAA,EAAMC,KAAP,2BACA,kBAACD,EAAA,EAAMC,KAAP,yBAGJ,kBAACD,EAAA,EAAMkC,KAAP,KACG3H,EAAML,YAAYiO,mBAAmBvM,KAAI,SAAAmM,GAAI,OAC5C,kBAAC,GAAD,CAAwBjM,IAAKiM,EAAKxP,GAAIwP,KAAMA,a,UEmBzCK,GALuBpO,aARd,SAAAC,GACtB,MAAO,CACLH,OAAQG,EAAMH,OACdI,YAAaD,EAAMC,YACnBE,aAAcH,EAAMG,gBAMtB,CAAExB,sBtBEiC,SAAAyP,GAAM,8CAAI,WAAM1O,GAAN,iBAAA/B,EAAA,sEAE3C+B,EAAS,CACPC,KAAMtC,IAHmC,SAKlBuC,EAAcjB,sBACrCyP,EAAOC,iBANkC,cAKvCC,EALuC,OAQ3CvQ,QAAQC,IAAIsQ,GAR+B,SAStB1O,EAAcvB,OAAO+P,EAAO3B,WATN,OASrC5M,EATqC,OAU3C9B,QAAQC,IAAI,gBAAiB6B,GAC7BH,EAAS,CACPC,KFnDwB,iBEoDxBvB,KAAMyB,IAbmC,kDAgB3C9B,QAAQC,IAAR,MAhB2C,0DAAJ,wDsBJL+B,EA1CT,SAAAO,GAC3B,IAYMiO,EAAUC,KAAKC,MAAMnO,EAAMuK,MAAMf,OAAS,IAC1CqB,EAAU7K,EAAMuK,MAAMf,OAAmB,GAAVyE,EAErC,OACE,kBAACxI,EAAA,EAAM1D,IAAP,KACE,kBAAC0D,EAAA,EAAMC,KAAP,KAAa1F,EAAMuK,MAAM8B,eACzB,kBAAC5G,EAAA,EAAMC,KAAP,KAAa1F,EAAMuK,MAAMW,aACzB,kBAACzF,EAAA,EAAMC,KAAP,KAAa1F,EAAMuK,MAAMyB,aACzB,kBAACvG,EAAA,EAAMC,KAAP,KACGuI,EADH,IACapD,GAEb,kBAACpF,EAAA,EAAMC,KAAP,KACE,kBAACc,EAAA,EAAD,CAAMjD,QAxBK,WACf,IAAMuK,EAAS,CACbC,gBAAiB/N,EAAMuK,MAAMwD,gBAC7B5B,UAAWnM,EAAMT,OAAO4E,cAAcnG,IAExCP,QAAQC,IAAIoQ,GACZ9N,EAAM3B,sBAAsByP,GAC5BrQ,QAAQC,IAAI,iBAiBiB+D,KAAK,YAEhC,kBAACgE,EAAA,EAAMC,KAAP,KACE,kBAACc,EAAA,EAAD,CAAMjD,QAlBG,WACb9F,QAAQC,IAAI,eAiBe+D,KAAK,c,UCiFrB2M,GALc3O,aAPL,SAAAC,GAEtB,OADAjC,QAAQC,IAAI,8BAA+BgC,GACpC,CACLgD,OAAQhD,EAAMgD,OACdnD,OAAQG,EAAMH,UAKhB,CAAE8O,uBC5GkC,SAAAxE,GAAK,8CAAI,WAAMzK,GAAN,eAAA/B,EAAA,sEAE3C+B,EAAS,CACPC,K1ByB4B,uB0B5Ba,SAKrBiP,GAAc1E,mBAAmBC,GALZ,OAKrC0E,EALqC,OAM3C9Q,QAAQC,IAAI6Q,GACZnP,EAAS,CACPC,K1BmB8B,uB0BlB9BvB,KAAMyQ,IATmC,gDAY3C9Q,QAAQC,IAAR,MAZ2C,yDAAJ,uDD4GfQ,iBvB/EI,SAAAC,GAAU,8CAAI,WAAMiB,GAAN,iBAAA/B,EAAA,sEAE1C+B,EAAS,CACPC,KAAMtC,IAHkC,SAKxBuC,EAAcpB,iBAAiBC,GALP,cAKtCoM,EALsC,OAM1C9M,QAAQC,IAAI,4BAA6B6M,GANC,SAOrBjL,EAAcvB,OAAOwM,EAAM4B,WAPN,OAOpC5M,EAPoC,OAQ1C9B,QAAQC,IAAI,gBAAiB6B,GAC7BH,EAAS,CACPC,KF9BwB,iBE+BxBvB,KAAMyB,IAXkC,kDAc1C9B,QAAQC,IAAR,MAd0C,0DAAJ,wDuB6Eb+B,EAvGT,SAAC,GAKd,IAJLiD,EAII,EAJJA,OACAnD,EAGI,EAHJA,OACA8O,EAEI,EAFJA,uBACAnQ,EACI,EADJA,iBAEAT,QAAQC,IAAI,qBAAsBgF,GAD9B,MAEkCzC,mBAAS,IAF3C,mBAEGuO,EAFH,KAEgBC,EAFhB,OAGkCxO,mBAAS,MAH3C,mBAGGyO,EAHH,KAGgBC,EAHhB,KAKJrF,qBAAU,WACR,IAAIsF,EAAU,KACdnR,QAAQC,IAAI,4BAA6B8Q,GACzCK,aAAaD,GACbA,EAAU5H,YAAW,WACfwH,EAAYhF,QAAU,GACxB6E,EAAuBG,KAExB,OAGF,CAACA,IAEJ,IAAMM,EAAqB,SAAC9L,EAAD,GAAoB,IAAd+L,EAAa,EAAbA,OACzBL,EAAc,CAClBM,SAAUD,EAAOrN,MACjByK,UAAW5M,EAAO4E,cAAcnG,GAChCwL,OAAQuF,EAAOvF,OACf6C,cAAe9M,EAAOA,OAAOiK,OAAS,GAExC/L,QAAQC,IAAI,yBAA0BgR,GACtCC,EAAeD,IAmBbH,EAAU7L,EAAOuM,cAAc5N,KAAI,SAAA0N,GAAM,MAAK,CAChDxN,IAAKwN,EAAOC,SACZE,MAAOH,EAAO/C,YAAc,IAAM+C,EAAO5D,OACzC3B,OAAQuF,EAAOvF,OACf9H,MAAOqN,EAAOC,aAGhB,OACE,yBAAKG,MAAO,CAAEC,WAAY,OAAQC,aAAc,SAC9C,kBAACxN,EAAA,EAAD,CAAMC,QAAQ,cACZ,kBAACD,EAAA,EAAKE,IAAN,CAAUC,QAAQ,KAChB,kBAACI,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,YACA,kBAACC,EAAA,EAAKc,MAAN,CAAYC,OAAO,SACjB,kBAACf,EAAA,EAAKC,MAAN,KACE,kBAACiN,GAAA,EAAD,CACElI,QAAS1E,EAAO0E,QAChBmI,eAAgBT,EAChBU,eA3BO,SAACxM,EAAD,GAAmB,IAAbtB,EAAY,EAAZA,MAC3B+M,EAAe/M,GACX8M,EAAYhF,QAAU,GACxBxC,YAAW,WACTqH,EAAuBG,KACtB,MAuBSiB,kBAAmBX,EACnBP,QAASA,KAKb,kBAACnM,EAAA,EAAKC,MAAN,KACE,kBAACiB,EAAA,EAAD,CAAQC,QA1CJ,WAChB9F,QAAQC,IAAI,aAAcgR,GAC1BxQ,EAAiBwQ,GACjBD,EAAe,IACfE,EAAe,QAsCH,kCAGJ,kBAACvM,EAAA,EAAKc,MAAN,CAAYC,OAAO,SACjB,kBAACf,EAAA,EAAKC,MAAN,KACG,IACD,kBAACiB,EAAA,EAAD,0BAEF,kBAAClB,EAAA,EAAKC,MAAN,KACG,IACD,kBAACiB,EAAA,EAAD,wCE0RDoM,GALoBjQ,aAZX,SAAAC,GAEtB,OADAjC,QAAQC,IAAI,mCAAoCgC,GACzC,CACLH,OAAQG,EAAMH,OACdI,YAAaD,EAAMC,YACnBC,SAAUF,EAAME,SAChBC,aAAcH,EAAMG,aACpBC,MAAOJ,EAAMI,MACbC,MAAOL,EAAMK,SAMf,CAAE4P,kBChX6B,SAAA5F,GAAY,8CAAI,WAAM3K,GAAN,eAAA/B,EAAA,sEAE7C+B,EAAS,CACPC,KAAMtC,IAHqC,SAKxB6S,GAAa9F,oBAAoBC,GALT,OAKvCI,EALuC,OAM7C/K,EAAS,CACPC,K5BQ6B,sB4BP7BvB,KAAMqM,IARqC,gDAW7C1M,QAAQC,IAAR,MAX6C,yDAAJ,wDD8WV+B,EA1WT,SAAAO,GAAU,IAAD,EACTC,mBAAS,IAAIS,MADJ,mBAC1BtD,EAD0B,KACpByS,EADoB,OAED5P,mBAAS,OAFR,mBAE1BgK,EAF0B,KAEhB6F,EAFgB,OAGC7P,mBAAS,IAHV,mBAG1B6K,EAH0B,KAGfiF,EAHe,OAIH9P,mBAAS,IAJN,mBAI1B8K,EAJ0B,KAIjBiF,EAJiB,KAoSjC,OACE,yBAAKb,MAAO,CAAEC,WAAY,OAAQC,aAAc,SAC9C,kBAACxN,EAAA,EAAD,CAAMC,QAAQ,cACZ,kBAACD,EAAA,EAAKE,IAAN,CAAUC,QAAS,GACjB,kBAACI,EAAA,EAAD,KACE,kBAACD,EAAA,EAAD,+BACA,kBAACC,EAAA,EAAKc,MAAN,CAAYC,OAAO,SACjB,kBAACf,EAAA,EAAKC,MAAN,KACE,sDACA,kBAAC,IAAD,CACEe,SAAUhG,EACViG,WAAW,aACXT,SAAU,SAAAxF,GAAI,OAAIyS,EAAQzS,OAG9B,kBAACgF,EAAA,EAAKC,MAAN,KACE,iDACA,kBAACC,EAAA,EAAD,CACEC,YAAY,WACZC,aAAW,EACXC,WAAS,EACTE,QA9SM,CACpB,CACEpB,IAAK,MACLC,KAAM,WACNE,MAAO,OAET,CACEH,IAAK,OACLC,KAAM,WACNE,MAAO,SAsSKkB,SApTI,SAACI,EAAD,GAAmB,IAAbtB,EAAY,EAAZA,MACxBsB,EAAEF,iBACFgN,EAAYpO,MAmTG,MAGP,kBAACU,EAAA,EAAKc,MAAN,CAAYC,OAAO,SACjB,kBAACf,EAAA,EAAKC,MAAN,KACE,+CACA,kBAACC,EAAA,EAAD,CACEC,YAAY,eACZC,aAAW,EACXC,WAAS,EACTC,QAAM,EACNC,QA7SS,CACvB,CACEpB,IAAK,QACLC,KAAM,QACNE,MAAO,MAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,MAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,MAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,MAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,MAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,MAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,MAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,MAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,MAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,MAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,MAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,MAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,MAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,MAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,MAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,MAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,MAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,MAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,MAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,MAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,MAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,MAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,MAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,OAuLKkB,SApLK,SAACC,EAAD,GAAuB,IAAbnB,EAAY,EAAZA,MAC7BmB,EAAMC,iBACNiN,EAAarO,MAmLE,KAEL,kBAACU,EAAA,EAAKC,MAAN,KACE,uDACA,kBAACC,EAAA,EAAD,CACEC,YAAY,uBACZC,aAAW,EACXC,WAAS,EACTC,QAAM,EACNC,QAxLO,CACrB,CACEpB,IAAK,QACLC,KAAM,QACNE,MAAO,MAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,MAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,MAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,MAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,MAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,MAET,CACEH,IAAK,QACLC,KAAM,QACNE,MA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,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,UA6QOkB,SA1QG,SAACC,EAAD,GAAuB,IAAbnB,EAAY,EAAZA,MAC7BmB,EAAMC,iBACNhC,EAAoBY,MAyQH,KAGL,kBAACU,EAAA,EAAKC,MAAN,KACE,sDACA,kBAACC,EAAA,EAAD,CACEC,YAAaxB,EACbyB,aAAW,EACXC,WAAS,EACTC,QAAM,EACNC,QA/QK,CACrB,CACEpB,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM,QACNE,MAAO,SAET,CACEH,IAAK,QACLC,KAAM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","file":"static/js/main.8c94279d.chunk.js","sourcesContent":["// Login actions:\nexport const INIT_USER = 'INIT_USER';\nexport const LOGIN = 'LOGIN';\nexport const LOGOUT = 'LOGOUT';\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\n\n// user actions\nexport const INIT_USERS_LIST = 'INIT_USERS_LIST';\nexport const USER_ERROR = 'USER_ERROR';\nexport const SET_CURRENT = 'SET_CURRENT';\n\n// report actions\nexport const GET_ONE_REPORT = 'GET_ONE_REPORT';\nexport const GET_REPORT_DETAILS = 'GET_REPORT_DETAILS';\nexport const GET_ALL_REPORTS_BY_DATE = 'GET_ALL_REPORTS_BY_DATE';\nexport const GET_ALL_REPORT_TRANSFERS = 'GET_ALL_REPORT_TRANSFERS';\nexport const CREATE_REPORT = 'CREATE_REPORT';\nexport const UPDATE_REPORT = 'UPDATE_REPORT';\nexport const GET_DJONLINE_TRACKS = 'GET_DJONLINE_TRACKS';\nexport const REPORT_ERROR = 'REPORT_ERROR';\nexport const CLEAR_CURRENT_REPORT = 'CLEAR_CURRENT_REPORT';\nexport const DELETE_TRACK_FROM_REPORT = 'DELETE_TRACK_FROM_REPORT';\nexport const DOWNLOAD_REPORT = 'DOWNLOAD_REPORT';\nexport const SORT_BY_USER_ID = 'SORT_BY_USER_ID';\n\n// program actions\nexport const GET_ALL_PROGRAMS = 'GET_ALL_PROGRAMS';\nexport const GET_ONE_PROGRAM = 'GET_ONE_PROGRAM';\n\n// search actions\nexport const AUTOCOMPLETE_RESULTS = 'AUTOCOMPLETE_RESULTS';\nexport const SET_SEARCH_LOADING = 'SET_SEARCH_LOADING';\n\n// track actions\n\n// preloader actions\nexport const SET_LOADING = 'SET_LOADING';\n","import axios from 'axios';\nconst baseUrl = '/api/reports';\nconst download = require('downloadjs');\n\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\n// get a list of reports by date\nconst getAllByDate = async date => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  // notice baseurl is different here!\n  console.log('getting reports from', date);\n\n  const request = await axios.get(`/api/reportslist/${date}`, config);\n  console.log('reportservice get one report-track data', request.data);\n  return request.data;\n};\n\n// get a list of reports by user_id, date\n\n// get one report with tracks\nconst getOne = async id => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  console.log('report req id', id);\n  const request = await axios.get(`${baseUrl}/${id}`, config);\n  console.log('reportservice get one report-track data', request.data);\n  return request.data;\n};\n\nconst getAllTransfers = async () => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const request = await axios.get('/api/reporttransfer', config);\n  console.log('reportservice get all transfers data', request.data);\n  return request.data;\n};\n\nconst addTrackToReport = async trackToAdd => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const request = await axios.post(`${baseUrl}`, trackToAdd, config);\n  console.log('reportservice add track to report', request.data);\n  return request.data;\n};\n\nconst deleteTrackFromReport = async id => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const request = await axios.delete(`${baseUrl}/${id}`, config);\n  return request.data;\n};\n\nconst getReportDetails = async id => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  console.log('reportdetails req id ', id);\n  const request = await axios.get(`/api/reportdetails/${id}`, config);\n  console.log('reportservice get report details res data', request.data);\n  return request.data;\n};\n\n// create new report\nconst createReport = async newReport => {\n  const config = {\n    headers: { Authorization: token }\n  };\n\n  const response = await axios.post('/api/reportdetails', newReport, config);\n  console.log(response.data);\n  return response.data;\n};\n\n// update existing report details\nconst updateReport = async updatedReport => {\n  const config = {\n    headers: { Authorization: token }\n  };\n\n  console.log('reportservice report to update', updatedReport);\n  const request = axios.put(\n    `/api/reportdetails/${updatedReport.id}`,\n    updatedReport,\n    config\n  );\n  console.log(request.data);\n  return updatedReport;\n};\n\n// download report\nexport const downloadReport = async filename => {\n  try {\n    const config = {\n      headers: { Authorization: token, responseType: 'blob' }\n    };\n    const response = await axios.get(`/api/reporttransfer/${filename}`, config);\n    download(response.data, filename);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default {\n  setToken,\n  addTrackToReport,\n  deleteTrackFromReport,\n  getOne,\n  getAllByDate,\n  getAllTransfers,\n  getReportDetails,\n  createReport,\n  updateReport,\n  downloadReport\n};\n","import {\n  GET_ONE_REPORT,\n  GET_REPORT_DETAILS,\n  CREATE_REPORT,\n  UPDATE_REPORT,\n  SET_LOADING\n} from '../actions/types';\nimport reportService from '../services/reports';\n\n// get one report with tracks by report id\nexport const getOneReport = id => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const report = await reportService.getOne(id);\n    // console.log('reportreducer', report);\n    dispatch({\n      type: GET_ONE_REPORT,\n      data: report,\n      id\n    });\n  } catch (error) {\n    console.log(error);\n    // dispatch({\n    //   type: REPORT_ERROR,\n    //   payload: error.response.data\n    // });\n  }\n};\n\n// add track to a report\nexport const addTrackToReport = trackToAdd => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    let track = await reportService.addTrackToReport(trackToAdd);\n    console.log('add track to report track', track);\n    const report = await reportService.getOne(track.report_id);\n    console.log('reportactions', report);\n    dispatch({\n      type: GET_ONE_REPORT,\n      data: report\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// delete track from report¨\nexport const deleteTrackFromReport = params => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    let deletedTrack = await reportService.deleteTrackFromReport(\n      params.report_track_id\n    );\n    console.log(deletedTrack);\n    const report = await reportService.getOne(params.report_id);\n    console.log('reportactions', report);\n    dispatch({\n      type: GET_ONE_REPORT,\n      data: report\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// get report details by report id\nexport const getReportDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    let report = await reportService.getReportDetails(id);\n    report = report[0];\n    console.log('report actions report', report);\n    dispatch({\n      type: GET_REPORT_DETAILS,\n      data: report,\n      id\n    });\n  } catch (error) {\n    console.log(error);\n    // dispatch({\n    //   type: REPORT_ERROR,\n    //   payload: error.response.data\n    // });\n  }\n};\n\n// create new report\nexport const createReport = newReport => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const report = await reportService.createReport(newReport);\n    dispatch({\n      type: CREATE_REPORT,\n      data: report\n    });\n  } catch (error) {\n    console.log(error);\n    // dispatch({\n    //   type: REPORT_ERROR,\n    //   payload: error.response.data\n    // });\n  }\n};\n\nexport const updateReport = updatedReport => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const report = await reportService.updateReport(updatedReport);\n    dispatch({\n      type: UPDATE_REPORT,\n      data: report\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport {\n  Header,\n  Form,\n  Button,\n  Input,\n  Dropdown,\n  Container,\n  Grid\n} from 'semantic-ui-react';\nimport DatePicker from 'react-datepicker';\nimport { createReport } from '../../actions/reportActions';\nimport moment from 'moment';\n\nconst CreateNewReportForm = props => {\n  const [programId, setProgramId] = useState('');\n  const [programNumber, setProgramNumber] = useState('');\n  const [dj, setDj] = useState(\n    `${props.login.first_name} ${props.login.last_name}`\n  );\n  const [programDate, setProgramDate] = useState(new Date());\n  const [programStartTime, setProgramStartTime] = useState('');\n  const [programEndTime, setProgramEndTime] = useState('');\n  const [redirect, setRedirect] = useState(false);\n\n  if (props.programs.allPrograms === null) {\n    return <div>loafing</div>;\n  }\n\n  console.log('create new report form props', props);\n\n  // list of programoptions for select\n  let programOptions = props.programs.allPrograms.map(program => ({\n    key: program.id,\n    text: program.name,\n    value: program.id\n  }));\n  const getProgram = (event, { value }) => {\n    event.preventDefault();\n    setProgramId(value);\n    console.log(programId);\n  };\n\n  // list of program start time options\n  const startTimeOptions = [\n    {\n      key: '00:00',\n      text: '00:00',\n      value: '00:00'\n    },\n    {\n      key: '01:00',\n      text: '01:00',\n      value: '01:00'\n    },\n    {\n      key: '02:00',\n      text: '02:00',\n      value: '02:00'\n    },\n    {\n      key: '03:00',\n      text: '03:00',\n      value: '03:00'\n    },\n    {\n      key: '04:00',\n      text: '04:00',\n      value: '04:00'\n    },\n    {\n      key: '05:00',\n      text: '05:00',\n      value: '05:00'\n    },\n    {\n      key: '06:00',\n      text: '06:00',\n      value: '06:00'\n    },\n    {\n      key: '07:00',\n      text: '07:00',\n      value: '07:00'\n    },\n    {\n      key: '08:00',\n      text: '08:00',\n      value: '08:00'\n    },\n    {\n      key: '09:00',\n      text: '09:00',\n      value: '09:00'\n    },\n    {\n      key: '10:00',\n      text: '10:00',\n      value: '10:00'\n    },\n    {\n      key: '11:00',\n      text: '11:00',\n      value: '11:00'\n    },\n    {\n      key: '12:00',\n      text: '12:00',\n      value: '12:00'\n    },\n    {\n      key: '13:00',\n      text: '13:00',\n      value: '13:00'\n    },\n    {\n      key: '14:00',\n      text: '14:00',\n      value: '14:00'\n    },\n    {\n      key: '15:00',\n      text: '15:00',\n      value: '15:00'\n    },\n    {\n      key: '16:00',\n      text: '16:00',\n      value: '16:00'\n    },\n    {\n      key: '17:00',\n      text: '17:00',\n      value: '17:00'\n    },\n    {\n      key: '18:00',\n      text: '18:00',\n      value: '18:00'\n    },\n    {\n      key: '19:00',\n      text: '19:00',\n      value: '19:00'\n    },\n    {\n      key: '20:00',\n      text: '20:00',\n      value: '20:00'\n    },\n    {\n      key: '21:00',\n      text: '21:00',\n      value: '21:00'\n    },\n    {\n      key: '22:00',\n      text: '22:00',\n      value: '22:00'\n    },\n    {\n      key: '23:00',\n      text: '23:00',\n      value: '23:00'\n    }\n  ];\n  const getStartTime = (event, { value }) => {\n    event.preventDefault();\n    setProgramStartTime(value);\n    console.log(programStartTime);\n  };\n\n  // list of program end time options\n  const endTimeOptions = [\n    {\n      key: '01:00',\n      text: '01:00',\n      value: '01:00'\n    },\n    {\n      key: '02:00',\n      text: '02:00',\n      value: '02:00'\n    },\n    {\n      key: '03:00',\n      text: '03:00',\n      value: '03:00'\n    },\n    {\n      key: '04:00',\n      text: '04:00',\n      value: '04:00'\n    },\n    {\n      key: '05:00',\n      text: '05:00',\n      value: '05:00'\n    },\n    {\n      key: '06:00',\n      text: '06:00',\n      value: '06:00'\n    },\n    {\n      key: '07:00',\n      text: '07:00',\n      value: '07:00'\n    },\n    {\n      key: '08:00',\n      text: '08:00',\n      value: '08:00'\n    },\n    {\n      key: '09:00',\n      text: '09:00',\n      value: '09:00'\n    },\n    {\n      key: '10:00',\n      text: '10:00',\n      value: '10:00'\n    },\n    {\n      key: '11:00',\n      text: '11:00',\n      value: '11:00'\n    },\n    {\n      key: '12:00',\n      text: '12:00',\n      value: '12:00'\n    },\n    {\n      key: '13:00',\n      text: '13:00',\n      value: '13:00'\n    },\n    {\n      key: '14:00',\n      text: '14:00',\n      value: '14:00'\n    },\n    {\n      key: '15:00',\n      text: '15:00',\n      value: '15:00'\n    },\n    {\n      key: '16:00',\n      text: '16:00',\n      value: '16:00'\n    },\n    {\n      key: '17:00',\n      text: '17:00',\n      value: '17:00'\n    },\n    {\n      key: '18:00',\n      text: '18:00',\n      value: '18:00'\n    },\n    {\n      key: '19:00',\n      text: '19:00',\n      value: '19:00'\n    },\n    {\n      key: '20:00',\n      text: '20:00',\n      value: '20:00'\n    },\n    {\n      key: '21:00',\n      text: '21:00',\n      value: '21:00'\n    },\n    {\n      key: '22:00',\n      text: '22:00',\n      value: '22:00'\n    },\n    {\n      key: '23:00',\n      text: '23:00',\n      value: '23:00'\n    },\n    {\n      key: '23:59',\n      text: '23:59',\n      value: '23:59'\n    }\n  ];\n  const getEndTime = (event, { value }) => {\n    event.preventDefault();\n    setProgramEndTime(value);\n    console.log(programEndTime);\n  };\n\n  const createReport = () => {\n    const newReport = {\n      user_id: props.login.id,\n      program_id: programId,\n      program_date: moment(programDate).format('YYYY-MM-DD'),\n      program_start_time: programStartTime,\n      program_end_time: programEndTime,\n      program_no: programNumber,\n      program_dj: dj,\n      status: 0,\n      rerun: null\n    };\n    props.createReport(newReport);\n    console.log('create report button click pros', props.report.reportDetails);\n    console.log('creating report:', newReport);\n    setRedirect(true);\n  };\n\n  if (redirect && props.report.newReport !== null) {\n    console.log('create new report for after submit props', props);\n    console.log('redirecting to id', props.report.newReport.id);\n    return <Redirect to={`reports/${props.report.newReport.id}`} />;\n  }\n\n  return (\n    <React.Fragment>\n      <Grid divided=\"vertically\">\n        <Grid.Row columns={2}>\n          <Grid.Column>\n            <Container>\n              <Header>Luo uusi raportti</Header>\n              <Form>\n                <Form.Field>\n                  <label>Ohjelma</label>\n                  <Dropdown\n                    placeholder=\"Valitse ohjelma\"\n                    openOnFocus\n                    selection\n                    search\n                    options={programOptions}\n                    onChange={getProgram}\n                  />{' '}\n                </Form.Field>\n                <Form.Field>\n                  <label>Ohjelmanumero</label>\n                  <Input\n                    type=\"number\"\n                    value={programNumber}\n                    onChange={e => setProgramNumber(e.target.value)}\n                  />{' '}\n                </Form.Field>\n                <Form.Field>\n                  <label>DJ</label>\n                  <Input\n                    type=\"text\"\n                    value={dj}\n                    onChange={e => setDj(e.target.value)}\n                  />{' '}\n                </Form.Field>\n\n                <Form.Group widths=\"equal\">\n                  <Form.Field>\n                    <label>Ohjelman päivä</label>\n                    <DatePicker\n                      selected={programDate}\n                      dateFormat=\"yyyy-MM-dd\"\n                      onChange={date => setProgramDate(date)}\n                    />\n                  </Form.Field>\n                  <Form.Field>\n                    <label>Alkaa kello</label>\n                    <Dropdown\n                      placeholder=\"hh:mm\"\n                      openOnFocus\n                      selection\n                      search\n                      options={startTimeOptions}\n                      onChange={getStartTime}\n                    />{' '}\n                  </Form.Field>\n                  <Form.Field>\n                    <label>Päättyy kello</label>\n                    <Dropdown\n                      placeholder=\"hh:mm\"\n                      openOnFocus\n                      selection\n                      search\n                      options={endTimeOptions}\n                      onChange={getEndTime}\n                    />{' '}\n                  </Form.Field>\n                </Form.Group>\n                <Form.Group widths=\"equal\">\n                  <Button onClick={createReport}>Jatka</Button>\n                </Form.Group>\n              </Form>\n            </Container>\n          </Grid.Column>\n          <Grid.Column>\n            <Container>\n              <Header>Omat keskeneräiset raportit</Header>\n              <p>\n                Lorem ipsum dolor sit amet, consectetur adipisicing elit. Totam\n                explicabo delectus sint quisquam minima, fugit ut magni\n                voluptates ullam maiores quo, sit iure earum, iusto aut\n                dignissimos odit accusantium quam deleniti laborum numquam\n                mollitia. Laboriosam soluta asperiores maiores eum, culpa\n                temporibus iste modi ut in esse excepturi beatae repudiandae\n                alias cupiditate enim corrupti error repellendus accusantium\n                perferendis facilis optio. Odio repellat sed sequi similique\n                labore, necessitatibus repudiandae ratione voluptatibus autem\n                alias iure ipsam. Fugiat sunt quam sapiente dolore asperiores\n                sequi inventore, reiciendis, ullam magnam doloremque voluptas\n                quod esse, a qui fuga itaque sit nesciunt aspernatur tenetur\n                veritatis. Est, praesentium sit.\n              </p>\n            </Container>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('report details state to props', state);\n  return {\n    report: state.report,\n    reportsList: state.reportsList,\n    programs: state.programs,\n    notification: state.notification,\n    users: state.users,\n    login: state.login\n  };\n};\n\nconst connectedCreateNewReportForm = connect(\n  mapStateToProps,\n  { createReport }\n)(CreateNewReportForm);\n\nexport default connectedCreateNewReportForm;\n","import React from 'react';\nimport { Container } from 'semantic-ui-react';\nimport CreateNewReportForm from '../report/CreateNewReportForm';\n\nconst Home = () => (\n  <Container>\n    <h2>Radio Helsinki teostoraportointi</h2>\n    <CreateNewReportForm />\n  </Container>\n);\n\nexport default Home;\n","import axios from 'axios';\nconst baseUrl = '/api/users';\n\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = async () => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const req = await axios.get(baseUrl, config);\n  console.log(typeof req.date);\n  return req.data;\n};\n\nexport default { getAll, setToken };\n","import React, { useState } from 'react';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport {\n  Table,\n  Modal,\n  Header,\n  Form,\n  Button,\n  Input,\n  Icon\n} from 'semantic-ui-react';\nimport { setCurrent } from '../../actions/userActions';\n\nconst User = props => {\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [firstName, setFirstName] = useState(props.user.first_name);\n  const [lastName, setLastName] = useState(props.user.last_name);\n  const [email, setEmail] = useState(props.user.email);\n  const [level, setLevel] = useState(props.user.level);\n\n  const onDelete = () => {\n    console.log(`klikd delete on user ${props.user.id}`);\n  };\n\n  const updateUserClick = e => {\n    e.preventDefault();\n    console.log(\n      'updating info',\n      password,\n      confirmPassword,\n      firstName,\n      lastName,\n      email,\n      level\n    );\n    console.log('for user', props.user.id);\n  };\n\n  let userLevelOutPrint;\n\n  if (level === 1) {\n    userLevelOutPrint = 'DJ';\n  } else if (level === 2) {\n    userLevelOutPrint = 'Toimitus';\n  } else {\n    userLevelOutPrint = 'Admin';\n  }\n\n  return (\n    <Table.Row>\n      <Table.Cell>\n        <Modal\n          trigger={\n            <a href=\"#!\" onClick={() => props.setCurrent(props.user)}>\n              {props.user.username}\n            </a>\n          }\n          closeIcon\n        >\n          <Header content=\"Muokkaa käyttäjän tietoja\" />\n          <Modal.Content>\n            <Form onSubmit={updateUserClick}>\n              <Form.Field>\n                <label>Käyttäjätunnus</label>\n                <Input\n                  value={props.user.username}\n                  type=\"text\"\n                  placeholder=\"Käyttäjätunnus...\"\n                  disabled\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Salasana - syötä vaihtaaksesi</label>\n                <Input\n                  focus\n                  type=\"password\"\n                  placeholder=\"Salasana...\"\n                  onChange={e => setPassword(e.target.value)}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Salasana uudelleen</label>\n                <Input\n                  focus\n                  type=\"password\"\n                  placeholder=\"Vahvista salasana...\"\n                  onChange={e => setConfirmPassword(e.target.value)}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Etunimi</label>\n                <Input\n                  focus\n                  value={firstName}\n                  type=\"text\"\n                  placeholder=\"Etunimi...\"\n                  onChange={e => setFirstName(e.target.value)}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Sukunimi</label>\n                <Input\n                  focus\n                  value={lastName}\n                  type=\"text\"\n                  placeholder=\"Sukunimi...\"\n                  onChange={e => setLastName(e.target.value)}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Email</label>\n                <Input\n                  focus\n                  value={email}\n                  type=\"text\"\n                  placeholder=\"Email...\"\n                  onChange={e => setEmail(e.target.value)}\n                />\n              </Form.Field>\n              <Form.Field\n                label=\"Taso\"\n                control=\"select\"\n                value={level}\n                onChange={e => setLevel(e.target.value)}\n              >\n                <option value=\"1\">DJ</option>\n                <option value=\"2\">Toimitus</option>\n                <option value=\"3\">Admin</option>\n              </Form.Field>\n              <Button type=\"submit\">Tallenna</Button>\n            </Form>\n          </Modal.Content>\n        </Modal>\n      </Table.Cell>\n      <Table.Cell>\n        {props.user.first_name} {props.user.last_name}\n      </Table.Cell>\n      <Table.Cell>\n        <Moment format=\"MMMM Do YYYY, h:mm:ss a\">{props.user.last_seen}</Moment>\n      </Table.Cell>\n      <Table.Cell>{userLevelOutPrint}</Table.Cell>\n      <Table.Cell>\n        <Icon onClick={onDelete} name=\"delete\" />\n      </Table.Cell>\n    </Table.Row>\n  );\n};\n\nconst mapDispatchToProps = {\n  setCurrent\n};\n\nconst connectedUser = connect(\n  null,\n  mapDispatchToProps\n)(User);\n\nexport default connectedUser;\n","import {\n  INIT_USERS_LIST,\n  USER_ERROR,\n  SET_LOADING,\n  SET_CURRENT\n} from '../actions/types';\nimport userService from '../services/users';\n\nexport const initializeUsers = () => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const users = await userService.getAll();\n    dispatch({\n      type: INIT_USERS_LIST,\n      data: users\n    });\n  } catch (err) {\n    dispatch({\n      type: USER_ERROR,\n      payload: err\n    });\n  }\n};\n\n// Set current user for editing\nexport const setCurrent = user => {\n  return {\n    type: SET_CURRENT,\n    payload: user\n  };\n};\n","const initialState = {\n  message: null\n};\n\nconst notificationReducer = (state = initialState, action) => {\n  console.log('action', action);\n  switch (action.type) {\n    case 'NOTIFICATION':\n      return {\n        ...state,\n        message: action.message\n      };\n\n    case 'CLEAR':\n      return {\n        ...state,\n        message: null\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst setNotification = (id, message) => {\n  console.log(message);\n  return dispatch => {\n    dispatch({\n      type: 'NOTIFICATION',\n      id,\n      message\n    });\n  };\n};\n\nconst clearNotification = id => {\n  return {\n    type: 'CLEAR',\n    id\n  };\n};\n\nlet nextNotificationId = 0;\nexport function showNotificationWithTimeout(text, duration) {\n  duration = duration * 1000;\n  return function(dispatch) {\n    const id = nextNotificationId++;\n    dispatch(setNotification(id, text));\n\n    setTimeout(() => {\n      dispatch(clearNotification(id));\n    }, duration);\n  };\n}\n\nexport default notificationReducer;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport User from './User';\nimport { Container, Dimmer, Loader } from 'semantic-ui-react';\nimport { Table } from 'semantic-ui-react';\nimport { showNotificationWithTimeout } from '../../reducers/notificationReducer';\n\nconst UserList = props => {\n  if (props.users.users === null || props.users.loading === true) {\n    return (\n      <Container>\n        <Dimmer active inverted>\n          <Loader size=\"medium\">Haetaan käyttäjiä...</Loader>\n        </Dimmer>\n      </Container>\n    );\n  }\n\n  console.log('userlist props', props);\n  return (\n    <Container>\n      <h3>Käyttäjät</h3>\n      <Table striped>\n        <Table.Header>\n          <Table.Row>\n            <Table.Cell>Käyttäjätunnus</Table.Cell>\n            <Table.Cell>Nimi</Table.Cell>\n            <Table.Cell>Viimeisin kirjautuminen</Table.Cell>\n            <Table.Cell>Taso</Table.Cell>\n          </Table.Row>\n        </Table.Header>\n\n        <Table.Body>\n          {props.users.users.map(user => (\n            <User user={user} key={user.id} />\n          ))}\n        </Table.Body>\n      </Table>\n    </Container>\n  );\n};\n\nconst mapDispatchToProps = {\n  showNotificationWithTimeout\n};\n\nconst mapStateToProps = state => ({\n  users: state.users,\n  login: state.login\n});\n\nconst connectedUserList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UserList);\n\nexport default connectedUserList;\n","import {\n  GET_ALL_REPORTS_BY_DATE,\n  SET_LOADING,\n  CLEAR_CURRENT_REPORT,\n  SORT_BY_USER_ID\n} from './types';\nimport reportService from '../services/reports';\n// get a list of reports by user_id, date\n\n// get a list of reports by date\nexport const getAllReportsByDate = date => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    dispatch({\n      type: CLEAR_CURRENT_REPORT\n    });\n    const reports = await reportService.getAllByDate(date);\n    // console.log('reportreducer', report);\n    dispatch({\n      type: GET_ALL_REPORTS_BY_DATE,\n      data: reports,\n      date\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const sortByUserId = id => async dispatch => {\n  console.log('id to filter', id);\n  dispatch({\n    type: SORT_BY_USER_ID,\n    data: id\n  });\n};\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { getOneReport } from '../../actions/reportActions';\nimport {\n  getAllReportsByDate,\n  sortByUserId\n} from '../../actions/reportsListActions';\nimport { Dropdown, Button, Form, Input } from 'semantic-ui-react';\n\nconst ReportFilterForm = props => {\n  // const [startDate, setStartDate] = useState(new Date());\n  const [reportMonth, setReportMonth] = useState('');\n  const [reportYear, setReportYear] = useState('');\n  const [userId, setUserId] = useState('');\n  const [status, setStatus] = useState('');\n  const [filterText, setFilterText] = useState('');\n  console.log(filterText);\n\n  if (props.users.users === null) {\n    return <div>loading</div>;\n  }\n  // month options\n  const monthOptions = [\n    {\n      key: '01',\n      text: 'Tammikuu',\n      value: '01'\n    },\n    {\n      key: '02',\n      text: 'Helmikuu',\n      value: '02'\n    },\n    {\n      key: '03',\n      text: 'Maaliskuu',\n      value: '03'\n    },\n    {\n      key: '04',\n      text: 'Huhtikuu',\n      value: '04'\n    },\n    {\n      key: '05',\n      text: 'Toukokuu',\n      value: '05'\n    },\n    {\n      key: '06',\n      text: 'Kesäkuu',\n      value: '06'\n    },\n    {\n      key: '07',\n      text: 'Heinäkuu',\n      value: '07'\n    },\n    {\n      key: '08',\n      text: 'Elokuu',\n      value: '08'\n    },\n    {\n      key: '09',\n      text: 'Syyskuu',\n      value: '09'\n    },\n    {\n      key: '10',\n      text: 'Lokakuu',\n      value: '10'\n    },\n    {\n      key: '11',\n      text: 'Marraskuu',\n      value: '11'\n    },\n    {\n      key: '12',\n      text: 'Joulukuu',\n      value: '12'\n    }\n  ];\n  // year options\n  const date = new Date().getFullYear() + 1;\n  const years = [];\n  for (var i = 2001; i <= date; i++) {\n    years.push(i);\n  }\n  let yearOptions = years.map(option => ({\n    key: option,\n    text: option,\n    value: option\n  }));\n  yearOptions = yearOptions.reverse();\n  const userOptions = props.users.users.map(user => ({\n    key: user.id,\n    text: `${user.first_name} ${user.last_name}`,\n    value: user.id\n  }));\n  const addAllToUserOptions = [\n    {\n      key: 0,\n      text: 'Kaikki',\n      value: 0\n    },\n    ...userOptions\n  ];\n  // status options\n  const statusOptions = [\n    {\n      key: '2',\n      text: 'Kaikki',\n      value: '2'\n    },\n    {\n      key: '0',\n      text: 'Keskeneräinen',\n      value: '0'\n    },\n    {\n      key: '1',\n      text: 'Valmis',\n      value: '1'\n    },\n    {\n      key: '9',\n      text: 'Poistettu',\n      value: '9'\n    }\n  ];\n\n  console.log(addAllToUserOptions);\n  console.log(reportMonth);\n  console.log(reportYear);\n\n  const getReportsByMonth = () => {\n    const date = reportYear + '-' + reportMonth;\n    console.log(date);\n    console.log('klik');\n    props.getAllReportsByDate(date);\n  };\n\n  // get month from dropdown\n  const getMonth = (event, { value }) => {\n    event.preventDefault();\n    setReportMonth(value);\n  };\n\n  // get year from dropdown\n  const getYear = (event, { value }) => {\n    event.preventDefault();\n    setReportYear(value);\n  };\n  const getUser = (event, { value }) => {\n    event.preventDefault();\n    setUserId(value);\n    console.log('user id', userId);\n    props.sortByUserId(userId);\n  };\n  const getStatus = (event, { value }) => {\n    event.preventDefault();\n    setStatus(value);\n\n    console.log('tila', status);\n  };\n  return (\n    <React.Fragment>\n      <Form>\n        <h2>Hae raportit ajalta:</h2>\n\n        <Form.Group widths=\"equal\">\n          <Form.Field>\n            <Dropdown\n              placeholder=\"Kuukausi\"\n              openOnFocus={false}\n              selection\n              options={monthOptions}\n              onChange={getMonth}\n            />\n          </Form.Field>\n          <Form.Field>\n            <Dropdown\n              placeholder=\"Vuosi\"\n              openOnFocus\n              selection\n              options={yearOptions}\n              onChange={getYear}\n            />{' '}\n          </Form.Field>\n        </Form.Group>\n\n        <Form.Field>\n          <Button onClick={() => getReportsByMonth()}>HAE</Button>\n        </Form.Field>\n        <h4>Suodata:</h4>\n\n        <Form.Group widths=\"equal\">\n          <Form.Field>\n            <Dropdown\n              placeholder=\"Käyttäjä\"\n              openOnFocus={false}\n              search\n              selection\n              options={addAllToUserOptions}\n              onChange={getUser}\n            />\n          </Form.Field>\n          <Form.Field>\n            <Dropdown\n              placeholder=\"Tila\"\n              openOnFocus\n              selection\n              search\n              options={statusOptions}\n              onChange={getStatus}\n            />{' '}\n          </Form.Field>\n          <Form.Field>\n            <Input\n              type=\"text\"\n              placeholder=\"Tekstisuodatus\"\n              onChange={e => setFilterText(e.target.value)}\n            />\n          </Form.Field>\n        </Form.Group>\n      </Form>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('reportfilterform state to props', state);\n  return {\n    report: state.report,\n    reportsList: state.reportsList,\n    notification: state.notification,\n    users: state.users,\n    login: state.login\n  };\n};\n\nconst mapDispatchToProps = {\n  getOneReport,\n  getAllReportsByDate,\n  sortByUserId\n};\n\nconst connectedReportFilterForm = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ReportFilterForm);\n\nexport default connectedReportFilterForm;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Table } from 'semantic-ui-react';\nimport { getOneReport } from '../../actions/reportActions';\n\nconst ReportListItem = props => {\n  let reportStatusOutPrint;\n\n  if (props.report.status === 1) {\n    reportStatusOutPrint = 'Valmis';\n  } else if (props.report.status === 0) {\n    reportStatusOutPrint = 'Keskeneräinen';\n  } else if (props.report.status === 9) {\n    reportStatusOutPrint = 'Poistettu';\n    return null;\n  }\n  return (\n    <React.Fragment>\n      <Table.Row>\n        <Table.Cell>{props.report.program_no}</Table.Cell>\n        <Table.Cell>\n          <Link to={`reports/${props.report.id}`}>{props.report.name}</Link>\n        </Table.Cell>\n        <Table.Cell>\n          {props.report.program_date} {props.report.program_start_time} -{' '}\n          {props.report.program_end_time}\n        </Table.Cell>\n        <Table.Cell>{reportStatusOutPrint}</Table.Cell>\n        <Table.Cell></Table.Cell>\n      </Table.Row>\n    </React.Fragment>\n  );\n};\n\n// const mapStateToProps = state => ({\n//   report: state.report\n// });\n\nconst connectedReportListItem = connect(\n  null,\n  { getOneReport }\n)(ReportListItem);\n\nexport default connectedReportListItem;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n// import Moment from 'react-moment';\nimport { showNotificationWithTimeout } from '../../reducers/notificationReducer';\nimport { getOneReport } from '../../actions/reportActions';\nimport { getAllReportsByDate } from '../../actions/reportsListActions';\nimport ReportFilterForm from './ReportFilterForm';\nimport ReportListItem from './ReportListItem';\nimport moment from 'moment';\nimport { Container, Table, Dimmer, Segment, Loader } from 'semantic-ui-react';\n\nconst ReportList = props => {\n  // initial reports list\n  useEffect(() => {\n    props.getAllReportsByDate(moment().format('YYYY-MM'));\n    // eslint-disable-next-line\n  }, []);\n  console.log('Reportlist props', props);\n\n  if (props.reportsList.reportsList === null || props.reportsList.loading) {\n    return (\n      <Segment>\n        <Dimmer active inverted>\n          <Loader inverted content=\"Ladataan...\" />\n        </Dimmer>\n      </Segment>\n    );\n  }\n\n  if (props.reportsList.reportsList.length === 0) {\n    return (\n      <Container>\n        <h2>\n          Ei raportteja valittuna ajankohtana. Valitse vuosi, kuukausi ja\n          käyttäjä\n        </h2>\n        <ReportFilterForm />\n      </Container>\n    );\n  }\n\n  return (\n    <Container>\n      <ReportFilterForm />\n      <Table striped>\n        <Table.Header>\n          <Table.Row>\n            <Table.Cell>Ohjelmanro</Table.Cell>\n            <Table.Cell>Nimi</Table.Cell>\n            <Table.Cell>Aika</Table.Cell>\n            <Table.Cell>Tila</Table.Cell>\n            <Table.Cell></Table.Cell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {props.reportsList.reportsList.map(r => (\n            <ReportListItem key={r.id} report={r} />\n          ))}\n        </Table.Body>\n      </Table>\n    </Container>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('report list state to props', state);\n  return {\n    report: state.report,\n    reportsList: state.reportsList,\n    notification: state.notification,\n    login: state.login\n  };\n};\n\nconst mapDispatchToProps = {\n  showNotificationWithTimeout,\n  getAllReportsByDate,\n  getOneReport\n};\n\nconst connectedReportList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ReportList);\n\nexport default connectedReportList;\n","import axios from 'axios';\nconst baseUrl = '/api/login';\n\nconst login = async credentials => {\n  const res = await axios.post(baseUrl, credentials);\n  return res.data;\n};\n\nexport default { login };\n","import axios from 'axios';\nconst baseUrl = '/api/programs';\n\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\n// get all programs\nconst getAll = async () => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  const req = await axios.get(baseUrl, config);\n  return req.data;\n};\n\n// get one program\nconst getOne = async id => {\n  const config = {\n    headers: { Authorization: token }\n  };\n  console.log('program req id', id);\n  const request = await axios.get(`${baseUrl}/${id}`, config);\n  console.log('programservice get one program data', request.data);\n  return request.data;\n};\n\nexport default { getAll, getOne, setToken };\n","import axios from 'axios';\nconst baseUrl = '/api/search';\n\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\nconst getTracksForSearch = async query => {\n  const config = {\n    headers: { Authorization: token }\n  };\n\n  console.log('autocomplete search query', query);\n  const request = await axios.get(`${baseUrl}/tracks/${query}`, config);\n  console.log('search service get autocomplete tracks req data', request.data);\n  return request.data;\n};\n\nexport default { setToken, getTracksForSearch };\n","import axios from 'axios';\nconst baseUrl = '/api/tracks';\n\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\nconst checkDjonlineTracks = async searchParams => {\n  // TODO - Handle sortable_rank\n  const tracks = await axios.get(\n    `${process.env.REACT_APP_PLAYLOG_URL}?id=${searchParams.studioId}&date=${searchParams.date}`\n  );\n  let arr = [];\n  for (const prop in tracks.data) {\n    arr.push(tracks.data[prop]);\n  }\n  arr = arr.reverse();\n  let newArr = [];\n  arr.forEach((track, index) => {\n    let hours = track.date.charAt(11) + track.date.charAt(12);\n    hours = parseInt(hours);\n    let a = track.length.split(':');\n    let seconds = parseInt(a[0]) * 60 + parseInt(a[1]);\n    // make loop skip the songs not matching the start time - end time -window\n    if (\n      hours < parseInt(searchParams.startTime) ||\n      hours >= parseInt(searchParams.endTime)\n    ) {\n      return;\n    }\n    newArr.push({\n      album_name: track.album,\n      artist_name: track.artist,\n      cat_id: track.matrix,\n      disc_no: track.side,\n      track_no: track.tracknumber,\n      isrc: track.isrc,\n      record_country: track.recording_country,\n      country: null,\n      play_time: track.date,\n      djonline_id: track.id,\n      label: track.label,\n      length: seconds,\n      track_title: track.song,\n      year: track.year,\n      // sortable_rank: searchParams.sortable_rank_start + index + 1,\n      report_id: searchParams.report_id\n    });\n  });\n  const config = {\n    headers: { Authorization: token }\n  };\n  console.log('array of tracks going to backend', newArr);\n  const newerArr = [];\n  newArr.forEach((track, index) => {\n    newerArr.push({\n      ...track,\n      sortable_rank: searchParams.sortable_rank_start + index + 1\n    });\n  });\n  let returnArr = [];\n  console.log('new arr to backend with sortable ranks', newerArr);\n  newerArr.forEach(async track => {\n    const request = await axios.post(`${baseUrl}/djonline`, track, config);\n    returnArr.push(request.data);\n  });\n  console.log('returned array from backend', returnArr);\n  return returnArr;\n};\n\nexport default { setToken, checkDjonlineTracks };\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Button } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { newLogin } from '../../actions/loginActions';\nimport { showNotificationWithTimeout } from '../../reducers/notificationReducer';\n\nconst LoginForm = ({ newLogin }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  // handle login redux\n  const handleLogin = async event => {\n    event.preventDefault();\n    const user = {\n      username,\n      password\n    };\n    console.log(user);\n\n    const errorNotification = showNotificationWithTimeout;\n    newLogin(user, errorNotification);\n  };\n  return (\n    <Form onSubmit={handleLogin}>\n      <Form.Field>\n        <label>Käyttäjätunnus</label>\n        <input\n          type=\"text\"\n          placeholder=\"Käyttäjätunnus...\"\n          onChange={e => setUsername(e.target.value)}\n        />\n      </Form.Field>\n      <Form.Field>\n        <label>Salasana</label>\n        <input\n          type=\"password\"\n          placeholder=\"Salasana...\"\n          onChange={e => setPassword(e.target.value)}\n        />\n      </Form.Field>\n      <Button type=\"submit\">Kirjaudu</Button>\n    </Form>\n  );\n};\n\nLoginForm.propTypes = {\n  newLogin: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { newLogin, showNotificationWithTimeout }\n)(LoginForm);\n","import loginService from '../services/login';\nimport programService from '../services/programs';\nimport reportService from '../services/reports';\nimport searchService from '../services/search';\nimport trackService from '../services/tracks';\nimport userService from '../services/users';\nimport {\n  INIT_USER,\n  LOGIN,\n  LOGOUT,\n  LOGIN_ERROR,\n  SET_LOADING\n} from '../actions/types';\n\nexport const initializeUser = () => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const loggedUserJSON = window.localStorage.getItem('loggedUser');\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      // set token for logged in user\n      userService.setToken(user.token);\n      reportService.setToken(user.token);\n      programService.setToken(user.token);\n      searchService.setToken(user.token);\n      trackService.setToken(user.token);\n      dispatch({\n        type: INIT_USER,\n        data: user\n      });\n    }\n  } catch (err) {\n    dispatch({\n      type: LOGIN_ERROR,\n      payload: err.response.statusText\n    });\n  }\n};\n\nexport const newLogin = (user, errorNotification) => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const newUser = await loginService.login(user);\n    window.localStorage.setItem('loggedUser', JSON.stringify(newUser));\n    // set token for logged in user\n    // blogService.setToken(newUser.token);\n    dispatch({\n      type: LOGIN,\n      data: newUser\n    });\n  } catch (exception) {\n    errorNotification(`väärä käyttäjätunnus tai salasana`, 4);\n  }\n};\n\nexport const logout = () => async dispatch => {\n  window.localStorage.removeItem('loggedUser');\n  dispatch({\n    type: LOGOUT\n  });\n};\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Form, Header } from 'semantic-ui-react';\nimport DatePicker from 'react-datepicker';\nimport { getAllReportsByDate } from '../../actions/reportsListActions';\nimport moment from 'moment';\n\nconst ReportTransferOptions = props => {\n  console.log('report transfer options props', props);\n  const [pickerDate, setPickerDate] = useState(new Date());\n  // initial reports list\n  useEffect(() => {\n    props.getAllReportsByDate(moment(pickerDate).format('YYYY-MM'));\n    // eslint-disable-next-line\n  }, [pickerDate]);\n  const getTransferFile = () => {\n    console.log(\n      'transferring file from ',\n      moment(pickerDate).format('YYYY-MM')\n    );\n  };\n\n  if (props.reportsList.reportsList === null) {\n    return <div>loading</div>;\n  }\n\n  return (\n    <div>\n      <Header>Hae siirtotiedosto ajalta:</Header>\n      <Form>\n        <Form.Group widths=\"equal\">\n          <Form.Field>\n            <DatePicker\n              selected={pickerDate}\n              dateFormat=\"MMMM yyyy\"\n              onChange={date => setPickerDate(date)}\n              showMonthYearPicker\n            />\n          </Form.Field>\n          <Form.Field>\n            {/* löytyi {props.reportsList.reportsList.length} raporttia */}\n          </Form.Field>\n          <Form.Field>\n            <Button onClick={getTransferFile}>HAE</Button>\n          </Form.Field>\n        </Form.Group>\n      </Form>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('report transfer options state to props', state);\n  return {\n    reportsList: state.reportsList,\n    notification: state.notification\n  };\n};\n\nconst connectedReportTransferOptions = connect(\n  mapStateToProps,\n  { getAllReportsByDate }\n)(ReportTransferOptions);\n\nexport default connectedReportTransferOptions;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Table } from 'semantic-ui-react';\nimport { downloadReport } from '../../services/reports';\n\nconst ReportTransferListItem = props => {\n  const downloadTransfer = filename => {\n    downloadReport(filename);\n  };\n  return (\n    <Table.Row>\n      <Table.Cell>{props.item.created_at}</Table.Cell>\n      <Table.Cell>\n        {props.item.first_name} {props.item.last_name}\n      </Table.Cell>\n      <Table.Cell>{props.item.period}</Table.Cell>\n      <Table.Cell>\n        <Link to=\"#\" onClick={() => downloadTransfer(props.item.filename)}>\n          {props.item.filename}\n        </Link>\n      </Table.Cell>\n    </Table.Row>\n  );\n};\n\nconst connectedReportTransferListItem = connect(\n  null,\n  { downloadReport }\n)(ReportTransferListItem);\n\nexport default connectedReportTransferListItem;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport ReportTransferOptions from './ReportTransferOptions';\nimport ReportTransferListItem from './ReportTransferListItem';\nimport { Container, Table } from 'semantic-ui-react';\nimport { getAllTransfers } from '../../actions/reportTransferActions';\n\nconst ReportTransferList = props => {\n  console.log('report transfer list props', props);\n  useEffect(() => {\n    props.getAllTransfers();\n    // eslint-disable-next-line\n  }, []);\n\n  if (props.reportsList.reportTransferList === null) {\n    return <div>loading</div>;\n  }\n\n  return (\n    <Container>\n      <h1>Siirtotiedostot</h1>\n      <ReportTransferOptions />\n      <Table>\n        <Table.Header>\n          <Table.Row>\n            <Table.Cell>Luontipäivämäärä</Table.Cell>\n            <Table.Cell>Käyttäjä</Table.Cell>\n            <Table.Cell>Raportin ajankohta</Table.Cell>\n            <Table.Cell>Siirtotiedosto</Table.Cell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {props.reportsList.reportTransferList.map(item => (\n            <ReportTransferListItem key={item.id} item={item} />\n          ))}\n        </Table.Body>\n      </Table>\n    </Container>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('report list state to props', state);\n  return {\n    report: state.report,\n    reportsList: state.reportsList,\n    notification: state.notification,\n    login: state.login\n  };\n};\n\nconst mapDispatchToProps = {\n  getAllTransfers\n};\n\nconst connectedReportTransferList = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ReportTransferList);\n\nexport default connectedReportTransferList;\n","import { GET_ALL_REPORT_TRANSFERS, SET_LOADING } from './types';\nimport reportService from '../services/reports';\n\n// get a list of reports by date\nexport const getAllTransfers = () => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const reports = await reportService.getAllTransfers();\n    // console.log('reportreducer', report);\n    dispatch({\n      type: GET_ALL_REPORT_TRANSFERS,\n      data: reports\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Table, Icon } from 'semantic-ui-react';\nimport { deleteTrackFromReport } from '../../actions/reportActions';\n\nconst ReportWithTracksItem = props => {\n  const onDelete = () => {\n    const params = {\n      report_track_id: props.track.report_track_id,\n      report_id: props.report.reportDetails.id\n    };\n    console.log(params);\n    props.deleteTrackFromReport(params);\n    console.log('klikd delete');\n  };\n  const onEdit = () => {\n    console.log('klikd edit');\n  };\n  const minutes = Math.floor(props.track.length / 60);\n  const seconds = props.track.length - minutes * 60;\n\n  return (\n    <Table.Row>\n      <Table.Cell>{props.track.sortable_rank}</Table.Cell>\n      <Table.Cell>{props.track.artist_name}</Table.Cell>\n      <Table.Cell>{props.track.track_title}</Table.Cell>\n      <Table.Cell>\n        {minutes}:{seconds}\n      </Table.Cell>\n      <Table.Cell>\n        <Icon onClick={onDelete} name=\"delete\" />\n      </Table.Cell>\n      <Table.Cell>\n        <Icon onClick={onEdit} name=\"edit\" />\n      </Table.Cell>\n    </Table.Row>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    report: state.report,\n    reportsList: state.reportsList,\n    notification: state.notification\n  };\n};\n\nconst connectedReportWithTracksItem = connect(\n  mapStateToProps,\n  { deleteTrackFromReport }\n)(ReportWithTracksItem);\n\nexport default connectedReportWithTracksItem;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Search, Button, Grid, Header } from 'semantic-ui-react';\nimport { getAutocompleteResults } from '../../actions/searchActions';\nimport { addTrackToReport } from '../../actions/reportActions';\n\nconst SearchTrack = ({\n  search,\n  report,\n  getAutocompleteResults,\n  addTrackToReport\n}) => {\n  console.log('search track props', search);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [trackToSave, setTrackToSave] = useState(null);\n\n  useEffect(() => {\n    let timeout = null;\n    console.log('fire when typed to search', searchQuery);\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      if (searchQuery.length >= 3) {\n        getAutocompleteResults(searchQuery);\n      }\n    }, 1000);\n\n    // eslint-disable-next-line\n  }, [searchQuery]);\n\n  const handleResultSelect = (e, { result }) => {\n    const trackToSave = {\n      track_id: result.value,\n      report_id: report.reportDetails.id,\n      length: result.length,\n      sortable_rank: report.report.length + 1\n    };\n    console.log('handling result select', trackToSave);\n    setTrackToSave(trackToSave);\n  };\n\n  const saveClick = () => {\n    console.log('klikd save', trackToSave);\n    addTrackToReport(trackToSave);\n    setSearchQuery('');\n    setTrackToSave(null);\n  };\n\n  const onSearchChange = (e, { value }) => {\n    setSearchQuery(value);\n    if (searchQuery.length >= 3) {\n      setTimeout(() => {\n        getAutocompleteResults(searchQuery);\n      }, 300);\n    }\n  };\n\n  let results = search.searchResults.map(result => ({\n    key: result.track_id,\n    title: result.track_title + ' ' + result.artist,\n    length: result.length,\n    value: result.track_id\n  }));\n\n  return (\n    <div style={{ marginLeft: '1rem', marginBottom: '1rem' }}>\n      <Grid divided=\"vertically\">\n        <Grid.Row columns=\"2\">\n          <Form>\n            <Header>Hae</Header>\n            <Form.Group widths=\"equal\">\n              <Form.Field>\n                <Search\n                  loading={search.loading}\n                  onResultSelect={handleResultSelect}\n                  onSearchChange={onSearchChange}\n                  onSelectionChange={handleResultSelect}\n                  results={results}\n\n                  // value={value}\n                />\n              </Form.Field>\n              <Form.Field>\n                <Button onClick={saveClick}>Lisää biisi raporttiin</Button>\n              </Form.Field>\n            </Form.Group>\n            <Form.Group widths=\"equal\">\n              <Form.Field>\n                {' '}\n                <Button>Tarkennettu haku</Button>\n              </Form.Field>\n              <Form.Field>\n                {' '}\n                <Button>Lisää uusi biisi</Button>\n              </Form.Field>\n            </Form.Group>\n          </Form>\n        </Grid.Row>\n      </Grid>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('search track state to props', state);\n  return {\n    search: state.search,\n    report: state.report\n  };\n};\nconst connectedSearchTrack = connect(\n  mapStateToProps,\n  { getAutocompleteResults, addTrackToReport }\n)(SearchTrack);\n\nexport default connectedSearchTrack;\n","import { AUTOCOMPLETE_RESULTS, SET_SEARCH_LOADING } from './types';\nimport searchService from '../services/search';\n\nexport const getAutocompleteResults = query => async dispatch => {\n  try {\n    dispatch({\n      type: SET_SEARCH_LOADING\n    });\n    const results = await searchService.getTracksForSearch(query);\n    console.log(results);\n    dispatch({\n      type: AUTOCOMPLETE_RESULTS,\n      data: results\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React, { useState } from 'react';\nimport { getDjonlineTracks } from '../../actions/trackActions';\nimport { connect } from 'react-redux';\nimport { Form, Button, Dropdown, Grid, Header } from 'semantic-ui-react';\nimport DatePicker from 'react-datepicker';\nimport moment from 'moment';\n\nconst GetDjOnlineTracks = props => {\n  const [date, setDate] = useState(new Date());\n  const [studioId, setStudioId] = useState('928');\n  const [startTime, setStartTime] = useState('');\n  const [endTime, setEndTime] = useState('');\n\n  const getStudioId = (e, { value }) => {\n    e.preventDefault();\n    setStudioId(value);\n  };\n\n  const studioOptions = [\n    {\n      key: '928',\n      text: 'Studio 1',\n      value: '928'\n    },\n    {\n      key: '1047',\n      text: 'Studio 2',\n      value: '1047'\n    }\n  ];\n\n  // list of program start time options\n  const startTimeOptions = [\n    {\n      key: '00:00',\n      text: '00:00',\n      value: '00'\n    },\n    {\n      key: '01:00',\n      text: '01:00',\n      value: '01'\n    },\n    {\n      key: '02:00',\n      text: '02:00',\n      value: '02'\n    },\n    {\n      key: '03:00',\n      text: '03:00',\n      value: '03'\n    },\n    {\n      key: '04:00',\n      text: '04:00',\n      value: '04'\n    },\n    {\n      key: '05:00',\n      text: '05:00',\n      value: '05'\n    },\n    {\n      key: '06:00',\n      text: '06:00',\n      value: '06'\n    },\n    {\n      key: '07:00',\n      text: '07:00',\n      value: '07'\n    },\n    {\n      key: '08:00',\n      text: '08:00',\n      value: '08'\n    },\n    {\n      key: '09:00',\n      text: '09:00',\n      value: '09'\n    },\n    {\n      key: '10:00',\n      text: '10:00',\n      value: '10'\n    },\n    {\n      key: '11:00',\n      text: '11:00',\n      value: '11'\n    },\n    {\n      key: '12:00',\n      text: '12:00',\n      value: '12'\n    },\n    {\n      key: '13:00',\n      text: '13:00',\n      value: '13'\n    },\n    {\n      key: '14:00',\n      text: '14:00',\n      value: '14'\n    },\n    {\n      key: '15:00',\n      text: '15:00',\n      value: '15'\n    },\n    {\n      key: '16:00',\n      text: '16:00',\n      value: '16'\n    },\n    {\n      key: '17:00',\n      text: '17:00',\n      value: '17'\n    },\n    {\n      key: '18:00',\n      text: '18:00',\n      value: '18'\n    },\n    {\n      key: '19:00',\n      text: '19:00',\n      value: '19'\n    },\n    {\n      key: '20:00',\n      text: '20:00',\n      value: '20'\n    },\n    {\n      key: '21:00',\n      text: '21:00',\n      value: '21'\n    },\n    {\n      key: '22:00',\n      text: '22:00',\n      value: '22'\n    },\n    {\n      key: '23:00',\n      text: '23:00',\n      value: '23'\n    }\n  ];\n  const getStartTime = (event, { value }) => {\n    event.preventDefault();\n    setStartTime(value);\n  };\n\n  // list of program end time options\n  const endTimeOptions = [\n    {\n      key: '01:00',\n      text: '01:00',\n      value: '01'\n    },\n    {\n      key: '02:00',\n      text: '02:00',\n      value: '02'\n    },\n    {\n      key: '03:00',\n      text: '03:00',\n      value: '03'\n    },\n    {\n      key: '04:00',\n      text: '04:00',\n      value: '04'\n    },\n    {\n      key: '05:00',\n      text: '05:00',\n      value: '05'\n    },\n    {\n      key: '06:00',\n      text: '06:00',\n      value: '06'\n    },\n    {\n      key: '07:00',\n      text: '07:00',\n      value: '07'\n    },\n    {\n      key: '08:00',\n      text: '08:00',\n      value: '08'\n    },\n    {\n      key: '09:00',\n      text: '09:00',\n      value: '09'\n    },\n    {\n      key: '10:00',\n      text: '10:00',\n      value: '10'\n    },\n    {\n      key: '11:00',\n      text: '11:00',\n      value: '11'\n    },\n    {\n      key: '12:00',\n      text: '12:00',\n      value: '12'\n    },\n    {\n      key: '13:00',\n      text: '13:00',\n      value: '13'\n    },\n    {\n      key: '14:00',\n      text: '14:00',\n      value: '14'\n    },\n    {\n      key: '15:00',\n      text: '15:00',\n      value: '15'\n    },\n    {\n      key: '16:00',\n      text: '16:00',\n      value: '16'\n    },\n    {\n      key: '17:00',\n      text: '17:00',\n      value: '17'\n    },\n    {\n      key: '18:00',\n      text: '18:00',\n      value: '18'\n    },\n    {\n      key: '19:00',\n      text: '19:00',\n      value: '19'\n    },\n    {\n      key: '20:00',\n      text: '20:00',\n      value: '20'\n    },\n    {\n      key: '21:00',\n      text: '21:00',\n      value: '21'\n    },\n    {\n      key: '22:00',\n      text: '22:00',\n      value: '22'\n    },\n    {\n      key: '23:00',\n      text: '23:00',\n      value: '23'\n    },\n    {\n      key: '24:00',\n      text: '24:00',\n      value: '24'\n    }\n  ];\n  const getEndTime = (event, { value }) => {\n    event.preventDefault();\n    setEndTime(value);\n  };\n\n  const GetTracksFromApi = () => {\n    const searchParams = {\n      studioId,\n      date: moment(date).format('YYYY-MM-DD'),\n      startTime,\n      endTime,\n      report_id: props.report.reportDetails.id,\n      sortable_rank_start: props.report.report.length\n    };\n    props.getDjonlineTracks(searchParams);\n  };\n\n  return (\n    <div style={{ marginLeft: '1rem', marginBottom: '1rem' }}>\n      <Grid divided=\"vertically\">\n        <Grid.Row columns={2}>\n          <Form>\n            <Header>Hae biisit DJOnlinesta</Header>\n            <Form.Group widths=\"equal\">\n              <Form.Field>\n                <label>Valitse päivä</label>\n                <DatePicker\n                  selected={date}\n                  dateFormat=\"yyyy-MM-dd\"\n                  onChange={date => setDate(date)}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Valitse studio</label>\n                <Dropdown\n                  placeholder=\"Studio 1\"\n                  openOnFocus\n                  selection\n                  options={studioOptions}\n                  onChange={getStudioId}\n                />{' '}\n              </Form.Field>\n            </Form.Group>\n            <Form.Group widths=\"equal\">\n              <Form.Field>\n                <label>Alkaen kello</label>\n                <Dropdown\n                  placeholder=\"Alkaen HH:MM\"\n                  openOnFocus\n                  selection\n                  search\n                  options={startTimeOptions}\n                  onChange={getStartTime}\n                />{' '}\n              </Form.Field>\n              <Form.Field>\n                <label>Päättyen kello</label>\n                <Dropdown\n                  placeholder=\"Päättyen HH:MM\"\n                  openOnFocus\n                  selection\n                  search\n                  options={endTimeOptions}\n                  onChange={getEndTime}\n                />{' '}\n              </Form.Field>\n            </Form.Group>\n            <Button onClick={GetTracksFromApi}>Hae</Button>\n          </Form>\n        </Grid.Row>\n      </Grid>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('getdjonlinetracks state to props', state);\n  return {\n    report: state.report,\n    reportsList: state.reportsList,\n    programs: state.programs,\n    notification: state.notification,\n    users: state.users,\n    login: state.login\n  };\n};\n\nconst connectedGetDjOnlineTracks = connect(\n  mapStateToProps,\n  { getDjonlineTracks }\n)(GetDjOnlineTracks);\n\nexport default connectedGetDjOnlineTracks;\n","import { GET_DJONLINE_TRACKS, SET_LOADING } from './types';\nimport trackService from '../services/tracks';\n\nexport const getDjonlineTracks = searchParams => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const tracks = await trackService.checkDjonlineTracks(searchParams);\n    dispatch({\n      type: GET_DJONLINE_TRACKS,\n      data: tracks\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React, { useState } from 'react';\nimport { Button } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nconst Togglable = props => {\n  const [visible, setVisible] = useState(false);\n\n  const hideWhenVisible = { display: visible ? 'none' : '' };\n  const showWhenVisible = { display: visible ? '' : 'none' };\n\n  const toggleVisibility = () => {\n    setVisible(!visible);\n  };\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <Button onClick={toggleVisibility}>{props.buttonLabel}</Button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <Button onClick={toggleVisibility}>Piilota</Button>\n      </div>\n    </div>\n  );\n};\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n};\n\nexport default Togglable;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Header,\n  Form,\n  Button,\n  Dropdown,\n  Segment,\n  Grid,\n  Dimmer,\n  Loader\n} from 'semantic-ui-react';\nimport DatePicker from 'react-datepicker';\nimport moment from 'moment';\nimport SearchTrack from '../track/SearchTrack';\nimport GetDjOnlineTracks from '../track/GetDjOnlineTracks';\nimport Togglable from '../layout/Togglable';\nimport { updateReport } from '../../actions/reportActions';\n\nconst ReportDetails = props => {\n  const [programId, setProgramId] = useState('');\n  const [programNumber, setProgramNumber] = useState('');\n  const [dj, setDj] = useState('');\n  const [programDate, setProgramDate] = useState('');\n  const [programStartTime, setProgramStartTime] = useState('');\n  const [programEndTime, setProgramEndTime] = useState('');\n  const [status, setStatus] = useState('');\n  const [userId, setUserId] = useState('');\n  const [rerun, setRerun] = useState(null);\n\n  console.log('report detauls props', props);\n  useEffect(() => {\n    if (props.report.reportDetails !== null) {\n      setUserId(props.report.reportDetails.user_id);\n      setProgramId(props.report.reportDetails.program_id);\n      setDj(props.report.reportDetails.program_dj);\n      setProgramNumber(props.report.reportDetails.program_no);\n      setProgramDate(new Date(props.report.reportDetails.program_date));\n      setProgramStartTime(props.report.reportDetails.program_start_time);\n      setProgramEndTime(props.report.reportDetails.program_end_time);\n      setStatus(props.report.reportDetails.status);\n      setRerun(props.report.reportDetails.rerun);\n    }\n  }, [props.report.reportDetails]);\n\n  if (props.report.reportDetails === null || props.users.users === null) {\n    return (\n      <Segment>\n        <Dimmer active inverted>\n          <Loader inverted content=\"Ladataan...\" />\n        </Dimmer>\n      </Segment>\n    );\n  }\n\n  let programOptions = props.programs.allPrograms.map(program => ({\n    key: program.id,\n    text: program.name,\n    value: program.id\n  }));\n  let userOptions = props.users.users.map(user => ({\n    key: user.id,\n    text: `${user.first_name} ${user.last_name}`,\n    value: user.id\n  }));\n  const getProgram = (event, { value }) => {\n    event.preventDefault();\n    setProgramId(value);\n  };\n  const getUser = (event, { value }) => {\n    event.preventDefault();\n    setUserId(value);\n  };\n  // list of program start time options\n  const startTimeOptions = [\n    {\n      key: '00:00',\n      text: '00:00',\n      value: '00:00'\n    },\n    {\n      key: '01:00',\n      text: '01:00',\n      value: '01:00'\n    },\n    {\n      key: '02:00',\n      text: '02:00',\n      value: '02:00'\n    },\n    {\n      key: '03:00',\n      text: '03:00',\n      value: '03:00'\n    },\n    {\n      key: '04:00',\n      text: '04:00',\n      value: '04:00'\n    },\n    {\n      key: '05:00',\n      text: '05:00',\n      value: '05:00'\n    },\n    {\n      key: '06:00',\n      text: '06:00',\n      value: '06:00'\n    },\n    {\n      key: '07:00',\n      text: '07:00',\n      value: '07:00'\n    },\n    {\n      key: '08:00',\n      text: '08:00',\n      value: '08:00'\n    },\n    {\n      key: '09:00',\n      text: '09:00',\n      value: '09:00'\n    },\n    {\n      key: '10:00',\n      text: '10:00',\n      value: '10:00'\n    },\n    {\n      key: '11:00',\n      text: '11:00',\n      value: '11:00'\n    },\n    {\n      key: '12:00',\n      text: '12:00',\n      value: '12:00'\n    },\n    {\n      key: '13:00',\n      text: '13:00',\n      value: '13:00'\n    },\n    {\n      key: '14:00',\n      text: '14:00',\n      value: '14:00'\n    },\n    {\n      key: '15:00',\n      text: '15:00',\n      value: '15:00'\n    },\n    {\n      key: '16:00',\n      text: '16:00',\n      value: '16:00'\n    },\n    {\n      key: '17:00',\n      text: '17:00',\n      value: '17:00'\n    },\n    {\n      key: '18:00',\n      text: '18:00',\n      value: '18:00'\n    },\n    {\n      key: '19:00',\n      text: '19:00',\n      value: '19:00'\n    },\n    {\n      key: '20:00',\n      text: '20:00',\n      value: '20:00'\n    },\n    {\n      key: '21:00',\n      text: '21:00',\n      value: '21:00'\n    },\n    {\n      key: '22:00',\n      text: '22:00',\n      value: '22:00'\n    },\n    {\n      key: '23:00',\n      text: '23:00',\n      value: '23:00'\n    }\n  ];\n  const getStartTime = (event, { value }) => {\n    event.preventDefault();\n    setProgramStartTime(value);\n  };\n\n  // list of program end time options\n  const endTimeOptions = [\n    {\n      key: '01:00',\n      text: '01:00',\n      value: '01:00'\n    },\n    {\n      key: '02:00',\n      text: '02:00',\n      value: '02:00'\n    },\n    {\n      key: '03:00',\n      text: '03:00',\n      value: '03:00'\n    },\n    {\n      key: '04:00',\n      text: '04:00',\n      value: '04:00'\n    },\n    {\n      key: '05:00',\n      text: '05:00',\n      value: '05:00'\n    },\n    {\n      key: '06:00',\n      text: '06:00',\n      value: '06:00'\n    },\n    {\n      key: '07:00',\n      text: '07:00',\n      value: '07:00'\n    },\n    {\n      key: '08:00',\n      text: '08:00',\n      value: '08:00'\n    },\n    {\n      key: '09:00',\n      text: '09:00',\n      value: '09:00'\n    },\n    {\n      key: '10:00',\n      text: '10:00',\n      value: '10:00'\n    },\n    {\n      key: '11:00',\n      text: '11:00',\n      value: '11:00'\n    },\n    {\n      key: '12:00',\n      text: '12:00',\n      value: '12:00'\n    },\n    {\n      key: '13:00',\n      text: '13:00',\n      value: '13:00'\n    },\n    {\n      key: '14:00',\n      text: '14:00',\n      value: '14:00'\n    },\n    {\n      key: '15:00',\n      text: '15:00',\n      value: '15:00'\n    },\n    {\n      key: '16:00',\n      text: '16:00',\n      value: '16:00'\n    },\n    {\n      key: '17:00',\n      text: '17:00',\n      value: '17:00'\n    },\n    {\n      key: '18:00',\n      text: '18:00',\n      value: '18:00'\n    },\n    {\n      key: '19:00',\n      text: '19:00',\n      value: '19:00'\n    },\n    {\n      key: '20:00',\n      text: '20:00',\n      value: '20:00'\n    },\n    {\n      key: '21:00',\n      text: '21:00',\n      value: '21:00'\n    },\n    {\n      key: '22:00',\n      text: '22:00',\n      value: '22:00'\n    },\n    {\n      key: '23:00',\n      text: '23:00',\n      value: '23:00'\n    },\n    {\n      key: '23:59',\n      text: '23:59',\n      value: '23:59'\n    }\n  ];\n  const getEndTime = (event, { value }) => {\n    event.preventDefault();\n    setProgramEndTime(value);\n  };\n\n  // list of program status options\n  const statusOptions = [\n    {\n      key: '0',\n      text: 'Keskeneräinen',\n      value: '0'\n    },\n    {\n      key: '1',\n      text: 'Valmis',\n      value: '1'\n    },\n    {\n      key: '9',\n      text: 'Poistettu',\n      value: '9'\n    }\n  ];\n  const getStatus = (event, { value }) => {\n    event.preventDefault();\n    setStatus(value);\n  };\n\n  // status placeholder\n  let statusPlaceholder;\n  if (status === 0) {\n    statusPlaceholder = 'Keskeneräinen';\n  } else if (status === 1) {\n    statusPlaceholder = 'Valmis';\n  } else if (statusPlaceholder === 9) {\n    statusPlaceholder = 'Poistettu';\n  }\n\n  const getRerun = () => {\n    console.log('getting rerun');\n    if (rerun === null) {\n      setRerun(1);\n    } else {\n      setRerun(null);\n    }\n  };\n\n  // save changes to db\n  const saveChanges = e => {\n    e.preventDefault();\n    const updatedReportDetails = {\n      id: props.report.reportDetails.id,\n      user_id: userId,\n      program_id: programId,\n      program_date: moment(programDate).format('YYYY-MM-DD'),\n      program_start_time: programStartTime,\n      program_end_time: programEndTime,\n      program_no: programNumber,\n      program_dj: dj,\n      status: status,\n      rerun: rerun\n    };\n    console.log('saving changes...', updatedReportDetails);\n    props.updateReport(updatedReportDetails);\n  };\n\n  // copy report for rerun\n  const copyReport = e => {\n    e.preventDefault();\n    console.log('klikd copy');\n  };\n  return (\n    <div>\n      <Header>Lisää biisi raporttiin:</Header>\n      <Segment.Group horizontal>\n        <Segment>\n          <Togglable buttonLabel=\"Pikahaku\">\n            <SearchTrack />\n          </Togglable>\n        </Segment>\n        <Segment>\n          <Togglable buttonLabel=\"Hae biisit DJonlinesta\">\n            <GetDjOnlineTracks />\n          </Togglable>\n        </Segment>\n      </Segment.Group>\n\n      <Grid divided=\"vertically\">\n        <Grid.Row columns={2}>\n          <Grid.Column>\n            <Header>Raportin tiedot:</Header>\n            <Form>\n              <Form.Field>\n                <label>Ohjelma</label>\n                <Dropdown\n                  placeholder=\"Ohjelma\"\n                  openOnFocus\n                  selection\n                  value={programId}\n                  search\n                  options={programOptions}\n                  onChange={getProgram}\n                />{' '}\n              </Form.Field>\n              <Form.Field>\n                <label>Ohjelmanumero</label>\n                <Form.Input\n                  value={programNumber}\n                  onChange={e => setProgramNumber(e.target.value)}\n                />{' '}\n              </Form.Field>\n              <Form.Field>\n                <label>DJ</label>\n                <Form.Input\n                  value={dj}\n                  onChange={e => setDj(e.target.value)}\n                />{' '}\n              </Form.Field>\n\n              <Form.Group widths=\"equal\">\n                <Form.Field>\n                  <label>Ohjelman päivä</label>\n\n                  <DatePicker\n                    selected={programDate}\n                    dateFormat=\"yyyy-MM-dd\"\n                    onChange={date => setProgramDate(date)}\n                  />\n                </Form.Field>\n\n                <Form.Field>\n                  <label>Alkaa kello</label>\n                  <Dropdown\n                    placeholder={programStartTime}\n                    openOnFocus\n                    selection\n                    search\n                    options={startTimeOptions}\n                    onChange={getStartTime}\n                  />{' '}\n                </Form.Field>\n\n                <Form.Field>\n                  <label>Päättyy kello</label>\n                  <Dropdown\n                    placeholder={programEndTime}\n                    openOnFocus\n                    selection\n                    search\n                    options={endTimeOptions}\n                    onChange={getEndTime}\n                  />{' '}\n                </Form.Field>\n              </Form.Group>\n              <Form.Field>\n                <label>Raportin tila</label>\n                <Dropdown\n                  placeholder={statusPlaceholder}\n                  openOnFocus\n                  selection\n                  options={statusOptions}\n                  onChange={getStatus}\n                  value={status}\n                />{' '}\n              </Form.Field>\n              <Form.Field>\n                <label>Käyttäjä</label>\n                <Dropdown\n                  placeholder=\"Käyttäjä\"\n                  openOnFocus={false}\n                  value={userId}\n                  selection\n                  search\n                  options={userOptions}\n                  onChange={getUser}\n                />\n              </Form.Field>\n              <Form.Field>\n                <label>Uusinta</label>\n                <Form.Checkbox\n                  name=\"rerun\"\n                  onChange={getRerun}\n                  checked={rerun ? true : false}\n                />\n              </Form.Field>\n              <Form.Group widths=\"equal\">\n                <Button onClick={saveChanges}>Tallenna</Button>\n                <Button onClick={copyReport}>Monista</Button>\n              </Form.Group>\n            </Form>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('report details state to props', state);\n  return {\n    report: state.report,\n    reportsList: state.reportsList,\n    programs: state.programs,\n    notification: state.notification,\n    users: state.users,\n    login: state.login\n  };\n};\n\nconst connectedReportDetails = connect(\n  mapStateToProps,\n  { updateReport }\n)(ReportDetails);\n\nexport default connectedReportDetails;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Table, Segment, Dimmer, Loader } from 'semantic-ui-react';\nimport { getOneReport, getReportDetails } from '../../actions/reportActions';\nimport ReportWithTracksItem from './ReportWithTracksItem';\nimport ReportDetails from './ReportDetails';\n\nconst ReportWithTracks = props => {\n  // get report tracks by report id\n  useEffect(() => {\n    setTimeout(() => {\n      if (props.id === undefined) {\n        props.getOneReport(props.report.reportDetails.id);\n      } else {\n        props.getOneReport(props.id);\n      }\n    }, 1000);\n    // tää efekti uusiks sit kun hakutuloksista lisää biisin listaan\n    // eslint-disable-next-line\n  }, [props.report.djonline]);\n  // get report details by report id\n  useEffect(() => {\n    if (props.id === undefined) {\n      props.getReportDetails(props.report.reportDetails.id);\n    } else {\n      console.log('get details of report ', props.id);\n      props.getReportDetails(props.id);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  console.log('report with tracks props', props);\n\n  if (props.report.report === null) {\n    return (\n      <Segment>\n        <Dimmer active inverted>\n          <Loader inverted content=\"Ladataan...\" />\n        </Dimmer>\n      </Segment>\n    );\n  }\n\n  return (\n    <Container>\n      <h3>Raportti</h3>\n      <Table striped>\n        <Table.Header>\n          <Table.Row>\n            <Table.Cell>#</Table.Cell>\n            <Table.Cell>Artisti</Table.Cell>\n            <Table.Cell>Biisi</Table.Cell>\n            <Table.Cell>Kesto</Table.Cell>\n            <Table.Cell></Table.Cell>\n            <Table.Cell></Table.Cell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {props.report.report.map(track => (\n            <ReportWithTracksItem key={track.report_track_id} track={track} />\n          ))}\n        </Table.Body>\n      </Table>\n      <ReportDetails report={props.report.reportDetails} />\n    </Container>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('reportwithtracks state', state);\n  return {\n    report: state.report,\n    reportsList: state.reportsList\n  };\n};\n\nconst connectedReportWithTracks = connect(\n  mapStateToProps,\n  { getOneReport, getReportDetails }\n)(ReportWithTracks);\n\nexport default connectedReportWithTracks;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\nimport 'react-datepicker/dist/react-datepicker.css';\n// import './App.css';\n\nimport Home from './components/layout/Home';\nimport UserList from './components/user/UserList';\nimport ReportList from './components/report/ReportList';\nimport LoginForm from './components/login/LoginForm';\nimport ReportTransferList from './components/report/ReportTransferList';\nimport { Container, Menu } from 'semantic-ui-react';\n\nimport { initializeUser, logout } from './actions/loginActions';\nimport { initializeUsers } from './actions/userActions';\nimport { initializePrograms } from './actions/programActions';\nimport ReportWithTracks from './components/report/ReportWithTracks';\n\nconst App = props => {\n  // initial logged in user, programs list, users list\n  useEffect(() => {\n    props.initializeUser();\n    props.initializePrograms();\n    props.initializeUsers();\n    // eslint-disable-next-line\n  }, []);\n\n  // handle logout redux\n  const handleLogout = () => {\n    props.logout();\n  };\n\n  console.log('app 74', props);\n  if (props.login.user === null) {\n    return (\n      <Container>\n        <LoginForm />\n      </Container>\n    );\n  }\n  return (\n    <Router>\n      <div>\n        Logged in as {props.login.username}\n        <button onClick={handleLogout}>logout</button>\n        <Menu inverted>\n          <Menu.Item link>\n            <Link to=\"/\">Etusivu</Link>\n          </Menu.Item>\n          <Menu.Item link>\n            <Link to=\"/reports\">Raportit</Link>\n          </Menu.Item>\n          <Menu.Item link>\n            <Link to=\"/\">Top 100</Link>\n          </Menu.Item>\n          <Menu.Item link>\n            <Link to=\"/\">Haku</Link>\n          </Menu.Item>\n          <Menu.Item link>\n            <Link to=\"/transfer\">Siirtotiedostot</Link>\n          </Menu.Item>\n          <Menu.Item link>\n            <Link to=\"/users\">Käyttäjät</Link>\n          </Menu.Item>\n          <Menu.Item link>\n            <Link to=\"/\">Ohjelmat</Link>\n          </Menu.Item>\n          <Menu.Item link>\n            <Link to=\"/\">Omat tiedot</Link>\n          </Menu.Item>\n        </Menu>\n      </div>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/reports\" component={ReportList} />\n        <Route exact path=\"/transfer\" component={ReportTransferList} />\n        <Route\n          path=\"/reports/:id\"\n          render={({ match }) => {\n            console.log('*');\n            return <ReportWithTracks id={match.params.id} />;\n          }}\n        />\n        <Route exact path=\"/users\" component={UserList} />\n      </Switch>\n    </Router>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('app state', state);\n  return {\n    reportsList: state.reportsList,\n    login: state.login,\n    users: state.users,\n    programs: state.programs\n  };\n};\n\nconst mapDispatchToProps = {\n  initializeUser,\n  logout,\n  initializePrograms,\n  initializeUsers\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import {\n  GET_ALL_PROGRAMS,\n  GET_ONE_PROGRAM,\n  SET_LOADING\n} from '../actions/types';\nimport programService from '../services/programs';\n\n// get all programs\nexport const initializePrograms = () => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const programs = await programService.getAll();\n    dispatch({\n      type: GET_ALL_PROGRAMS,\n      data: programs\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n// get one program by id\nexport const getOneProgram = id => async dispatch => {\n  try {\n    dispatch({\n      type: SET_LOADING\n    });\n    const program = await programService.getOne(id);\n    dispatch({\n      type: GET_ONE_PROGRAM,\n      data: program,\n      id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import {\n  INIT_USER,\n  LOGIN,\n  LOGOUT,\n  LOGIN_ERROR,\n  SET_LOADING\n} from '../actions/types';\n\nconst initialState = {\n  user: null,\n  loading: false,\n  error: null\n};\n\nconst loginReducer = (state = initialState, action) => {\n  // console.log('loginreducer state', state);\n  // console.log('loginreducer action', action);\n\n  switch (action.type) {\n    case INIT_USER:\n      return action.data;\n\n    case LOGOUT:\n      return initialState;\n\n    case LOGIN:\n      return action.data;\n\n    case LOGIN_ERROR:\n      console.error(action.payload);\n      return {\n        ...state,\n        error: action.payload\n      };\n\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default loginReducer;\n","import {\n  GET_ONE_REPORT,\n  GET_REPORT_DETAILS,\n  GET_DJONLINE_TRACKS,\n  DELETE_TRACK_FROM_REPORT,\n  CREATE_REPORT,\n  UPDATE_REPORT,\n  CLEAR_CURRENT_REPORT,\n  SET_LOADING,\n  REPORT_ERROR\n} from '../actions/types';\n\nconst initialState = {\n  report: [],\n  djonline: null,\n  reportDetails: null,\n  newReport: null,\n  loading: false,\n  error: null\n};\n\nconst reportReducer = (state = initialState, action) => {\n  console.log('reportreducer state now: ', state);\n  console.log('reportreducer action', action);\n  console.log(action.type);\n\n  switch (action.type) {\n    case GET_ONE_REPORT:\n      return {\n        ...state,\n        report: action.data,\n        loading: false\n      };\n    case GET_DJONLINE_TRACKS:\n      return {\n        ...state,\n        report: [...state.report, action.data.map(track => track)],\n        djonline: action.data,\n        loading: false\n      };\n    case GET_REPORT_DETAILS:\n      return {\n        ...state,\n        reportDetails: action.data,\n        newReport: null\n        // loading: false\n      };\n    case CREATE_REPORT: {\n      return {\n        ...state,\n        newReport: action.data,\n        loading: false\n      };\n    }\n    case UPDATE_REPORT:\n      return {\n        ...state,\n        reportDetails: action.data,\n        newReport: null,\n        loading: false\n      };\n\n    case DELETE_TRACK_FROM_REPORT:\n      return {\n        ...state,\n        report: state.report.filter(\n          track => track.report_track_id !== action.id\n        )\n      };\n    case CLEAR_CURRENT_REPORT:\n      return {\n        ...state,\n        report: []\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    case REPORT_ERROR:\n      console.error(action.payload);\n      return {\n        ...state,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reportReducer;\n","import {\n  INIT_USERS_LIST,\n  SET_LOADING,\n  SET_CURRENT,\n  USER_ERROR\n} from '../actions/types';\n\nconst initialState = {\n  users: null,\n  current: null,\n  loading: false,\n  error: null\n};\nconst userReducer = (state = initialState, action) => {\n  // console.log('userreducer state now: ', state);\n  // console.log('userreducer action', action.data);\n\n  switch (action.type) {\n    case INIT_USERS_LIST:\n      return {\n        ...state,\n        users: action.data,\n        loading: false\n      };\n\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: false\n      };\n    case SET_CURRENT:\n      return {\n        ...state,\n        current: action.payload\n      };\n    case USER_ERROR:\n      console.error(action.payload);\n      return {\n        ...state,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","import {\n  GET_ALL_REPORTS_BY_DATE,\n  GET_ALL_REPORT_TRANSFERS,\n  SORT_BY_USER_ID,\n  SET_LOADING,\n  REPORT_ERROR\n} from '../actions/types';\n\nconst initialState = {\n  reportsList: null,\n  reportTransferList: null,\n  loading: false,\n  error: null\n};\n\nconst reportListReducer = (state = initialState, action) => {\n  console.log('report list reducer state now: ', state);\n  console.log('report list reducer action', action);\n  console.log(action.type);\n\n  switch (action.type) {\n    // date is YYYY-MM\n    case GET_ALL_REPORTS_BY_DATE:\n      return {\n        ...state,\n        reportsList: action.data,\n        loading: false\n      };\n    case GET_ALL_REPORT_TRANSFERS:\n      return {\n        ...state,\n        reportTransferList: action.data,\n        loading: false\n      };\n    case SORT_BY_USER_ID:\n      console.log('action id', action.id);\n      return {\n        ...state,\n        reportsList: state.reportsList.filter(r => r.user_id === action.id)\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    case REPORT_ERROR:\n      console.error(action.payload);\n      return {\n        ...state,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reportListReducer;\n","import { GET_ONE_PROGRAM, GET_ALL_PROGRAMS } from '../actions/types';\n\nconst initialState = {\n  allPrograms: null,\n  program: null,\n  loading: false\n};\n\nconst programReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_ALL_PROGRAMS:\n      return {\n        ...state,\n        allPrograms: action.data,\n        loading: false\n      };\n    case GET_ONE_PROGRAM:\n      return {\n        ...state,\n        program: action.data,\n        loading: false\n      };\n    default:\n      return state;\n  }\n};\n\nexport default programReducer;\n","import { AUTOCOMPLETE_RESULTS, SET_SEARCH_LOADING } from '../actions/types';\n\nconst initialState = {\n  searchResults: [],\n  trackResults: null,\n  artistResults: null,\n  albumResults: null,\n  loading: false,\n  error: null\n};\n\nconst searchReducer = (state = initialState, action) => {\n  console.log('searchReducer state now: ', state);\n  console.log('searchReducer action', action);\n  console.log('searchReducer action.type', action.type);\n\n  switch (action.type) {\n    case AUTOCOMPLETE_RESULTS:\n      return {\n        ...state,\n        searchResults: action.data,\n        loading: false\n      };\n    case SET_SEARCH_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n};\n\nexport default searchReducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport loginReducer from './reducers/loginReducer';\nimport notificationReducer from './reducers/notificationReducer';\nimport reportReducer from './reducers/reportReducer';\nimport userReducer from './reducers/userReducer';\nimport reportsListReducer from './reducers/reportsListReducer';\nimport programReducer from './reducers/programReducer';\nimport searchReducer from './reducers/searchReducer';\n\nconst reducer = combineReducers({\n  login: loginReducer,\n  notification: notificationReducer,\n  report: reportReducer,\n  reportsList: reportsListReducer,\n  programs: programReducer,\n  search: searchReducer,\n  users: userReducer\n});\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}